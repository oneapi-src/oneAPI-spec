============
Status Codes
============

The SDK functions are organized into categories for easy reference. The categories
include :term:`ENCODE` (encoding functions), :term:`DECODE` (decoding functions),
and :term:`VPP` (video processing functions).

``Init``, ``Reset``, and ``Close`` are member functions within the ENCODE,
DECODE, and VPP classes that initialize, restart, and deinitialize
specific operations defined for the class. Call all other member functions
within a given class, except ``Query`` and ``QueryIOSurf``, within the
**Init** **-** **Reset** **-** **Close** sequence (Reset functions are optional
within the sequence).

The Init and Reset member functions set up necessary internal
structures for media processing. Init functions allocate memory and Reset
functions only reuse allocated internal memory. Therefore, Reset can fail if
the SDK needs to allocate additional memory. Reset functions can also
fine-tune ENCODE and VPP parameters during those processes or reposition
a bitstream during DECODE.

All SDK functions return status codes to indicate if an operation succeeded
or failed. See the :cpp:enum:`mfxStatus` enumerator for all defined status codes.
The status code :cpp:enumerator:`mfxStatus::MFX_ERR_NONE` indicates that the
function successfully completed its operation. Error status codes are less than
:cpp:enumerator:`mfxStatus::MFX_ERR_NONE` and warning status codes are greater
than :cpp:enumerator:`mfxStatus::MFX_ERR_NONE`.

If an SDK function returns a warning, it has sufficiently completed its operation,
although the output of the function might not be strictly reliable. The
application must check the validity of the output generated by the function.

If an SDK function returns an error (except :cpp:enumerator:`mfxStatus::MFX_ERR_MORE_DATA`,
:cpp:enumerator:`mfxStatus::MFX_ERR_MORE_SURFACE`, or
:cpp:enumerator:`mfxStatus::MFX_ERR_MORE_BITSTREAM`), the function aborts the
operation. The application must call either the Reset function to reset the
class back to a clean state or the Close function to terminate the operation.
The behavior is undefined if the application continues to call any class member
functions without a Reset or Close. To avoid memory leaks, always call the Close
function after Init.
