Search.setIndex({"docnames": ["architecture", "elements/element_list", "elements/l0/source/index", "elements/oneCCL/source/definitions", "elements/oneCCL/source/index", "elements/oneCCL/source/introduction", "elements/oneCCL/source/namespaces", "elements/oneCCL/source/programming_model", "elements/oneCCL/source/spec/collective_operations", "elements/oneCCL/source/spec/datatypes", "elements/oneCCL/source/spec/error_handling", "elements/oneCCL/source/spec/generic_workflow", "elements/oneCCL/source/spec/main_objects", "elements/oneCCL/source/spec/operation_attributes", "elements/oneCCL/source/spec/operation_progress", "elements/oneCCL/source/spec/operations", "elements/oneCCL/source/spec/reductions", "elements/oneCCL/source/spec_version", "elements/oneDAL/source/algorithms/clustering/index", "elements/oneDAL/source/algorithms/clustering/kmeans", "elements/oneDAL/source/algorithms/clustering/kmeans_init", "elements/oneDAL/source/algorithms/decomposition/index", "elements/oneDAL/source/algorithms/decomposition/pca", "elements/oneDAL/source/algorithms/index", "elements/oneDAL/source/algorithms/nearest_neighbors/index", "elements/oneDAL/source/algorithms/nearest_neighbors/knn_classification", "elements/oneDAL/source/appendix/index", "elements/oneDAL/source/appendix/kd_tree", "elements/oneDAL/source/bibliography", "elements/oneDAL/source/common_interface/common_type_definitions", "elements/oneDAL/source/common_interface/error_handling", "elements/oneDAL/source/common_interface/header_files_and_namespaces", "elements/oneDAL/source/common_interface/index", "elements/oneDAL/source/common_interface/spec_version", "elements/oneDAL/source/data_management/accessor/column", "elements/oneDAL/source/data_management/accessor/row", "elements/oneDAL/source/data_management/accessors", "elements/oneDAL/source/data_management/array", "elements/oneDAL/source/data_management/csv_data_source", "elements/oneDAL/source/data_management/data_sources", "elements/oneDAL/source/data_management/index", "elements/oneDAL/source/data_management/table/homogen", "elements/oneDAL/source/data_management/tables", "elements/oneDAL/source/glossary", "elements/oneDAL/source/index", "elements/oneDAL/source/introduction", "elements/oneDAL/source/notations", "elements/oneDAL/source/programming_model/computational_modes", "elements/oneDAL/source/programming_model/descriptors", "elements/oneDAL/source/programming_model/end_to_end_example", "elements/oneDAL/source/programming_model/index", "elements/oneDAL/source/programming_model/operations/index", "elements/oneDAL/source/programming_model/operations/support", "elements/oneDNN/source/conventions", "elements/oneDNN/source/data_model/data_types/bfloat16", "elements/oneDNN/source/data_model/data_types/index", "elements/oneDNN/source/data_model/data_types/int8", "elements/oneDNN/source/data_model/index", "elements/oneDNN/source/data_model/memory/formats", "elements/oneDNN/source/data_model/memory/index", "elements/oneDNN/source/data_model/memory/objects", "elements/oneDNN/source/execution_model/index", "elements/oneDNN/source/graph/data_model", "elements/oneDNN/source/graph/general", "elements/oneDNN/source/graph/index", "elements/oneDNN/source/graph/ops/Abs", "elements/oneDNN/source/graph/ops/AbsBackward", "elements/oneDNN/source/graph/ops/Add", "elements/oneDNN/source/graph/ops/AvgPool", "elements/oneDNN/source/graph/ops/AvgPoolBackward", "elements/oneDNN/source/graph/ops/BatchNormForwardTraining", "elements/oneDNN/source/graph/ops/BatchNormInference", "elements/oneDNN/source/graph/ops/BatchNormTrainingBackward", "elements/oneDNN/source/graph/ops/BiasAdd", "elements/oneDNN/source/graph/ops/BiasAddBackward", "elements/oneDNN/source/graph/ops/Clamp", "elements/oneDNN/source/graph/ops/ClampBackward", "elements/oneDNN/source/graph/ops/Concat", "elements/oneDNN/source/graph/ops/ConvTranspose", "elements/oneDNN/source/graph/ops/ConvTransposeBackwardData", "elements/oneDNN/source/graph/ops/ConvTransposeBackwardWeights", "elements/oneDNN/source/graph/ops/Convolution", "elements/oneDNN/source/graph/ops/ConvolutionBackwardData", "elements/oneDNN/source/graph/ops/ConvolutionBackwardWeights", "elements/oneDNN/source/graph/ops/Dequantize", "elements/oneDNN/source/graph/ops/Divide", "elements/oneDNN/source/graph/ops/DynamicDequantize", "elements/oneDNN/source/graph/ops/DynamicQuantize", "elements/oneDNN/source/graph/ops/Elu", "elements/oneDNN/source/graph/ops/EluBackward", "elements/oneDNN/source/graph/ops/End", "elements/oneDNN/source/graph/ops/Exp", "elements/oneDNN/source/graph/ops/GELU", "elements/oneDNN/source/graph/ops/GELUBackward", "elements/oneDNN/source/graph/ops/HardSigmoid", "elements/oneDNN/source/graph/ops/HardSigmoidBackward", "elements/oneDNN/source/graph/ops/HardSwish", "elements/oneDNN/source/graph/ops/HardSwishBackward", "elements/oneDNN/source/graph/ops/Interpolate", "elements/oneDNN/source/graph/ops/InterpolateBackward", "elements/oneDNN/source/graph/ops/LayerNorm", "elements/oneDNN/source/graph/ops/LayerNormBackward", "elements/oneDNN/source/graph/ops/LeakyReLU", "elements/oneDNN/source/graph/ops/Log", "elements/oneDNN/source/graph/ops/LogSoftmax", "elements/oneDNN/source/graph/ops/LogSoftmaxBackward", "elements/oneDNN/source/graph/ops/MatMul", "elements/oneDNN/source/graph/ops/MaxPool", "elements/oneDNN/source/graph/ops/MaxPoolBackward", "elements/oneDNN/source/graph/ops/Maximum", "elements/oneDNN/source/graph/ops/Minimum", "elements/oneDNN/source/graph/ops/Mish", "elements/oneDNN/source/graph/ops/MishBackward", "elements/oneDNN/source/graph/ops/Multiply", "elements/oneDNN/source/graph/ops/PReLU", "elements/oneDNN/source/graph/ops/PReLUBackward", "elements/oneDNN/source/graph/ops/Pow", "elements/oneDNN/source/graph/ops/Quantize", "elements/oneDNN/source/graph/ops/ReLU", "elements/oneDNN/source/graph/ops/ReLUBackward", "elements/oneDNN/source/graph/ops/Reciprocal", "elements/oneDNN/source/graph/ops/ReduceL1", "elements/oneDNN/source/graph/ops/ReduceL2", "elements/oneDNN/source/graph/ops/ReduceMax", "elements/oneDNN/source/graph/ops/ReduceMean", "elements/oneDNN/source/graph/ops/ReduceMin", "elements/oneDNN/source/graph/ops/ReduceProd", "elements/oneDNN/source/graph/ops/ReduceSum", "elements/oneDNN/source/graph/ops/Reorder", "elements/oneDNN/source/graph/ops/Round", "elements/oneDNN/source/graph/ops/Select", "elements/oneDNN/source/graph/ops/Sigmoid", "elements/oneDNN/source/graph/ops/SigmoidBackward", "elements/oneDNN/source/graph/ops/SoftPlus", "elements/oneDNN/source/graph/ops/SoftPlusBackward", "elements/oneDNN/source/graph/ops/Softmax", "elements/oneDNN/source/graph/ops/SoftmaxBackward", "elements/oneDNN/source/graph/ops/Sqrt", "elements/oneDNN/source/graph/ops/SqrtBackward", "elements/oneDNN/source/graph/ops/Square", "elements/oneDNN/source/graph/ops/SquaredDifference", "elements/oneDNN/source/graph/ops/StaticReshape", "elements/oneDNN/source/graph/ops/StaticTranspose", "elements/oneDNN/source/graph/ops/Subtract", "elements/oneDNN/source/graph/ops/Tanh", "elements/oneDNN/source/graph/ops/TanhBackward", "elements/oneDNN/source/graph/ops/TypeCast", "elements/oneDNN/source/graph/ops/Wildcard", "elements/oneDNN/source/graph/ops/index", "elements/oneDNN/source/graph/programming_model", "elements/oneDNN/source/index", "elements/oneDNN/source/introduction", "elements/oneDNN/source/primitives/attributes/index", "elements/oneDNN/source/primitives/attributes/post-ops", "elements/oneDNN/source/primitives/batch_normalization", "elements/oneDNN/source/primitives/binary", "elements/oneDNN/source/primitives/concat", "elements/oneDNN/source/primitives/convolution", "elements/oneDNN/source/primitives/eltwise", "elements/oneDNN/source/primitives/general", "elements/oneDNN/source/primitives/index", "elements/oneDNN/source/primitives/inner-product", "elements/oneDNN/source/primitives/layer_normalization", "elements/oneDNN/source/primitives/lrn", "elements/oneDNN/source/primitives/matmul", "elements/oneDNN/source/primitives/pooling", "elements/oneDNN/source/primitives/prelu", "elements/oneDNN/source/primitives/reduction", "elements/oneDNN/source/primitives/reorder", "elements/oneDNN/source/primitives/resampling", "elements/oneDNN/source/primitives/rnn", "elements/oneDNN/source/primitives/shuffle", "elements/oneDNN/source/primitives/softmax", "elements/oneDNN/source/primitives/sum", "elements/oneDPL/source/common", "elements/oneDPL/source/index", "elements/oneDPL/source/parallel_api", "elements/oneDPL/source/sycl_kernels_api", "elements/oneMKL/source/appendix/appendix", "elements/oneMKL/source/architecture/architecture", "elements/oneMKL/source/domains/blas/asum", "elements/oneMKL/source/domains/blas/axpby", "elements/oneMKL/source/domains/blas/axpy", "elements/oneMKL/source/domains/blas/axpy_batch", "elements/oneMKL/source/domains/blas/blas", "elements/oneMKL/source/domains/blas/blas-level-1-routines", "elements/oneMKL/source/domains/blas/blas-level-2-routines", "elements/oneMKL/source/domains/blas/blas-level-3-routines", "elements/oneMKL/source/domains/blas/blas-like-extensions", "elements/oneMKL/source/domains/blas/copy", "elements/oneMKL/source/domains/blas/copy_batch", "elements/oneMKL/source/domains/blas/dgmm_batch", "elements/oneMKL/source/domains/blas/dot", "elements/oneMKL/source/domains/blas/dotc", "elements/oneMKL/source/domains/blas/dotu", "elements/oneMKL/source/domains/blas/gbmv", "elements/oneMKL/source/domains/blas/gemm", "elements/oneMKL/source/domains/blas/gemm_batch", "elements/oneMKL/source/domains/blas/gemm_bias", "elements/oneMKL/source/domains/blas/gemmt", "elements/oneMKL/source/domains/blas/gemv", "elements/oneMKL/source/domains/blas/gemv_batch", "elements/oneMKL/source/domains/blas/ger", "elements/oneMKL/source/domains/blas/gerc", "elements/oneMKL/source/domains/blas/geru", "elements/oneMKL/source/domains/blas/hbmv", "elements/oneMKL/source/domains/blas/hemm", "elements/oneMKL/source/domains/blas/hemv", "elements/oneMKL/source/domains/blas/her", "elements/oneMKL/source/domains/blas/her2", "elements/oneMKL/source/domains/blas/her2k", "elements/oneMKL/source/domains/blas/herk", "elements/oneMKL/source/domains/blas/hpmv", "elements/oneMKL/source/domains/blas/hpr", "elements/oneMKL/source/domains/blas/hpr2", "elements/oneMKL/source/domains/blas/iamax", "elements/oneMKL/source/domains/blas/iamin", "elements/oneMKL/source/domains/blas/imatcopy", "elements/oneMKL/source/domains/blas/imatcopy_batch", "elements/oneMKL/source/domains/blas/nrm2", "elements/oneMKL/source/domains/blas/omatadd", "elements/oneMKL/source/domains/blas/omatadd_batch", "elements/oneMKL/source/domains/blas/omatcopy", "elements/oneMKL/source/domains/blas/omatcopy2", "elements/oneMKL/source/domains/blas/omatcopy_batch", "elements/oneMKL/source/domains/blas/rot", "elements/oneMKL/source/domains/blas/rotg", "elements/oneMKL/source/domains/blas/rotm", "elements/oneMKL/source/domains/blas/rotmg", "elements/oneMKL/source/domains/blas/sbmv", "elements/oneMKL/source/domains/blas/scal", "elements/oneMKL/source/domains/blas/sdsdot", "elements/oneMKL/source/domains/blas/spmv", "elements/oneMKL/source/domains/blas/spr", "elements/oneMKL/source/domains/blas/spr2", "elements/oneMKL/source/domains/blas/swap", "elements/oneMKL/source/domains/blas/symm", "elements/oneMKL/source/domains/blas/symv", "elements/oneMKL/source/domains/blas/syr", "elements/oneMKL/source/domains/blas/syr2", "elements/oneMKL/source/domains/blas/syr2k", "elements/oneMKL/source/domains/blas/syrk", "elements/oneMKL/source/domains/blas/syrk_batch", "elements/oneMKL/source/domains/blas/tbmv", "elements/oneMKL/source/domains/blas/tbsv", "elements/oneMKL/source/domains/blas/tpmv", "elements/oneMKL/source/domains/blas/tpsv", "elements/oneMKL/source/domains/blas/trmm", "elements/oneMKL/source/domains/blas/trmv", "elements/oneMKL/source/domains/blas/trsm", "elements/oneMKL/source/domains/blas/trsm_batch", "elements/oneMKL/source/domains/blas/trsv", "elements/oneMKL/source/domains/dft/compute_backward", "elements/oneMKL/source/domains/dft/compute_forward", "elements/oneMKL/source/domains/dft/config_params/data_layouts", "elements/oneMKL/source/domains/dft/config_params/storage_formats", "elements/oneMKL/source/domains/dft/config_params/workspace_placement", "elements/oneMKL/source/domains/dft/descriptor", "elements/oneMKL/source/domains/dft/dft", "elements/oneMKL/source/domains/dft/enums_and_config_params", "elements/oneMKL/source/domains/domains", "elements/oneMKL/source/domains/lapack/gebrd", "elements/oneMKL/source/domains/lapack/gebrd_scratchpad_size", "elements/oneMKL/source/domains/lapack/geqrf", "elements/oneMKL/source/domains/lapack/geqrf_batch", "elements/oneMKL/source/domains/lapack/geqrf_batch_scratchpad_size", "elements/oneMKL/source/domains/lapack/geqrf_scratchpad_size", "elements/oneMKL/source/domains/lapack/gerqf", "elements/oneMKL/source/domains/lapack/gerqf_scratchpad_size", "elements/oneMKL/source/domains/lapack/gesvd", "elements/oneMKL/source/domains/lapack/gesvd_scratchpad_size", "elements/oneMKL/source/domains/lapack/getrf", "elements/oneMKL/source/domains/lapack/getrf_batch", "elements/oneMKL/source/domains/lapack/getrf_batch_scratchpad_size", "elements/oneMKL/source/domains/lapack/getrf_scratchpad_size", "elements/oneMKL/source/domains/lapack/getri", "elements/oneMKL/source/domains/lapack/getri_batch", "elements/oneMKL/source/domains/lapack/getri_batch_scratchpad_size", "elements/oneMKL/source/domains/lapack/getri_scratchpad_size", "elements/oneMKL/source/domains/lapack/getrs", "elements/oneMKL/source/domains/lapack/getrs_batch", "elements/oneMKL/source/domains/lapack/getrs_batch_scratchpad_size", "elements/oneMKL/source/domains/lapack/getrs_scratchpad_size", "elements/oneMKL/source/domains/lapack/heevd", "elements/oneMKL/source/domains/lapack/heevd_scratchpad_size", "elements/oneMKL/source/domains/lapack/hegvd", "elements/oneMKL/source/domains/lapack/hegvd_scratchpad_size", "elements/oneMKL/source/domains/lapack/hetrd", "elements/oneMKL/source/domains/lapack/hetrd_scratchpad_size", "elements/oneMKL/source/domains/lapack/hetrf", "elements/oneMKL/source/domains/lapack/hetrf_scratchpad_size", "elements/oneMKL/source/domains/lapack/lapack", "elements/oneMKL/source/domains/lapack/orgbr", "elements/oneMKL/source/domains/lapack/orgbr_scratchpad_size", "elements/oneMKL/source/domains/lapack/orgqr", "elements/oneMKL/source/domains/lapack/orgqr_batch", "elements/oneMKL/source/domains/lapack/orgqr_batch_scratchpad_size", "elements/oneMKL/source/domains/lapack/orgqr_scratchpad_size", "elements/oneMKL/source/domains/lapack/orgtr", "elements/oneMKL/source/domains/lapack/orgtr_scratchpad_size", "elements/oneMKL/source/domains/lapack/ormqr", "elements/oneMKL/source/domains/lapack/ormqr_scratchpad_size", "elements/oneMKL/source/domains/lapack/ormrq", "elements/oneMKL/source/domains/lapack/ormrq_scratchpad_size", "elements/oneMKL/source/domains/lapack/ormtr", "elements/oneMKL/source/domains/lapack/ormtr_scratchpad_size", "elements/oneMKL/source/domains/lapack/potrf", "elements/oneMKL/source/domains/lapack/potrf_batch", "elements/oneMKL/source/domains/lapack/potrf_batch_scratchpad_size", "elements/oneMKL/source/domains/lapack/potrf_scratchpad_size", "elements/oneMKL/source/domains/lapack/potri", "elements/oneMKL/source/domains/lapack/potri_scratchpad_size", "elements/oneMKL/source/domains/lapack/potrs", "elements/oneMKL/source/domains/lapack/potrs_batch", "elements/oneMKL/source/domains/lapack/potrs_batch_scratchpad_size", "elements/oneMKL/source/domains/lapack/potrs_scratchpad_size", "elements/oneMKL/source/domains/lapack/syevd", "elements/oneMKL/source/domains/lapack/syevd_scratchpad_size", "elements/oneMKL/source/domains/lapack/sygvd", "elements/oneMKL/source/domains/lapack/sygvd_scratchpad_size", "elements/oneMKL/source/domains/lapack/sytrd", "elements/oneMKL/source/domains/lapack/sytrd_scratchpad_size", "elements/oneMKL/source/domains/lapack/sytrf", "elements/oneMKL/source/domains/lapack/sytrf_scratchpad_size", "elements/oneMKL/source/domains/lapack/trtrs", "elements/oneMKL/source/domains/lapack/trtrs_scratchpad_size", "elements/oneMKL/source/domains/lapack/ungbr", "elements/oneMKL/source/domains/lapack/ungbr_scratchpad_size", "elements/oneMKL/source/domains/lapack/ungqr", "elements/oneMKL/source/domains/lapack/ungqr_batch", "elements/oneMKL/source/domains/lapack/ungqr_batch_scratchpad_size", "elements/oneMKL/source/domains/lapack/ungqr_scratchpad_size", "elements/oneMKL/source/domains/lapack/ungtr", "elements/oneMKL/source/domains/lapack/ungtr_scratchpad_size", "elements/oneMKL/source/domains/lapack/unmqr", "elements/oneMKL/source/domains/lapack/unmqr_scratchpad_size", "elements/oneMKL/source/domains/lapack/unmrq", "elements/oneMKL/source/domains/lapack/unmrq_scratchpad_size", "elements/oneMKL/source/domains/lapack/unmtr", "elements/oneMKL/source/domains/lapack/unmtr_scratchpad_size", "elements/oneMKL/source/domains/matrix-storage", "elements/oneMKL/source/domains/rng/bibliography", "elements/oneMKL/source/domains/rng/device_api/device-distributions", "elements/oneMKL/source/domains/rng/device_api/device-distributions-template-parameter-method", "elements/oneMKL/source/domains/rng/device_api/device-engines", "elements/oneMKL/source/domains/rng/device_api/device-rng-bernoulli", "elements/oneMKL/source/domains/rng/device_api/device-rng-bits", "elements/oneMKL/source/domains/rng/device_api/device-rng-exponential", "elements/oneMKL/source/domains/rng/device_api/device-rng-gaussian", "elements/oneMKL/source/domains/rng/device_api/device-rng-generate", "elements/oneMKL/source/domains/rng/device_api/device-rng-generate-routines", "elements/oneMKL/source/domains/rng/device_api/device-rng-lognormal", "elements/oneMKL/source/domains/rng/device_api/device-rng-mcg31m1", "elements/oneMKL/source/domains/rng/device_api/device-rng-mcg59", "elements/oneMKL/source/domains/rng/device_api/device-rng-mrg32k3a", "elements/oneMKL/source/domains/rng/device_api/device-rng-philox4x32x10", "elements/oneMKL/source/domains/rng/device_api/device-rng-poisson", "elements/oneMKL/source/domains/rng/device_api/device-rng-skip-ahead", "elements/oneMKL/source/domains/rng/device_api/device-rng-uniform-bits", "elements/oneMKL/source/domains/rng/device_api/device-rng-uniform-continuous", "elements/oneMKL/source/domains/rng/device_api/device-rng-uniform-discrete", "elements/oneMKL/source/domains/rng/device_api/device-rng-usage-model", "elements/oneMKL/source/domains/rng/device_api/device-routines", "elements/oneMKL/source/domains/rng/device_api/device-service-routines", "elements/oneMKL/source/domains/rng/host_api/distributions", "elements/oneMKL/source/domains/rng/host_api/distributions-template-parameter-mkl-rng-method-values", "elements/oneMKL/source/domains/rng/host_api/engines-basic-random-number-generators", "elements/oneMKL/source/domains/rng/host_api/generate-routine", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-ars5", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-bernoulli", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-beta", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-binomial", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-bits", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-cauchy", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-chi_square", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-default_engine", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-exponential", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-gamma", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-gaussian", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-gaussian_mv", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-generate", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-geometric", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-gumbel", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-hypergeometric", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-laplace", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-leapfrog", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-lognormal", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-mcg31m1", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-mcg59", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-mrg32k3a", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-mt19937", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-mt2203", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-multinomial", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-negbinomial", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-niederreiter", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-nondeterministic", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-philox4x32x10", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-poisson", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-poisson_v", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-r250", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-rayleigh", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-sfmt19937", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-skip_ahead", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-sobol", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-uniform-continuous", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-uniform-discrete", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-uniform_bits", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-weibull", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-wichmann_hill", "elements/oneMKL/source/domains/rng/host_api/onemkl-rng-usage-model", "elements/oneMKL/source/domains/rng/host_api/rng-host-routines", "elements/oneMKL/source/domains/rng/host_api/service-routines", "elements/oneMKL/source/domains/rng/onemkl-rng-overview", "elements/oneMKL/source/domains/spblas/data_types/data_handles", "elements/oneMKL/source/domains/spblas/data_types/format-descriptions", "elements/oneMKL/source/domains/spblas/data_types/init_coo_matrix", "elements/oneMKL/source/domains/spblas/data_types/init_csr_matrix", "elements/oneMKL/source/domains/spblas/data_types/init_dense_matrix", "elements/oneMKL/source/domains/spblas/data_types/init_dense_vector", "elements/oneMKL/source/domains/spblas/data_types/release_dense_matrix", "elements/oneMKL/source/domains/spblas/data_types/release_dense_vector", "elements/oneMKL/source/domains/spblas/data_types/release_sparse_matrix", "elements/oneMKL/source/domains/spblas/data_types/set_coo_matrix_data", "elements/oneMKL/source/domains/spblas/data_types/set_csr_matrix_data", "elements/oneMKL/source/domains/spblas/data_types/set_dense_matrix_data", "elements/oneMKL/source/domains/spblas/data_types/set_dense_vector_data", "elements/oneMKL/source/domains/spblas/data_types/set_matrix_property", "elements/oneMKL/source/domains/spblas/matrix_view", "elements/oneMKL/source/domains/spblas/operations/spmm", "elements/oneMKL/source/domains/spblas/operations/spmv", "elements/oneMKL/source/domains/spblas/operations/spsv", "elements/oneMKL/source/domains/spblas/spblas", "elements/oneMKL/source/domains/spblas/supported-types", "elements/oneMKL/source/domains/stats/onemkl_stats_central_moment", "elements/oneMKL/source/domains/stats/onemkl_stats_central_moment_user_mean", "elements/oneMKL/source/domains/stats/onemkl_stats_central_sum", "elements/oneMKL/source/domains/stats/onemkl_stats_central_sum_user_mean", "elements/oneMKL/source/domains/stats/onemkl_stats_dataset", "elements/oneMKL/source/domains/stats/onemkl_stats_kurtosis", "elements/oneMKL/source/domains/stats/onemkl_stats_kurtosis_user_mean", "elements/oneMKL/source/domains/stats/onemkl_stats_make_dataset", "elements/oneMKL/source/domains/stats/onemkl_stats_max", "elements/oneMKL/source/domains/stats/onemkl_stats_mean", "elements/oneMKL/source/domains/stats/onemkl_stats_min", "elements/oneMKL/source/domains/stats/onemkl_stats_min_max", "elements/oneMKL/source/domains/stats/onemkl_stats_overview", "elements/oneMKL/source/domains/stats/onemkl_stats_raw_moment", "elements/oneMKL/source/domains/stats/onemkl_stats_raw_sum", "elements/oneMKL/source/domains/stats/onemkl_stats_routines", "elements/oneMKL/source/domains/stats/onemkl_stats_service_routines", "elements/oneMKL/source/domains/stats/onemkl_stats_skewness", "elements/oneMKL/source/domains/stats/onemkl_stats_skewness_user_mean", "elements/oneMKL/source/domains/stats/onemkl_stats_usage_model", "elements/oneMKL/source/domains/stats/onemkl_stats_variation", "elements/oneMKL/source/domains/stats/onemkl_stats_variation_user_mean", "elements/oneMKL/source/domains/value_or_pointer", "elements/oneMKL/source/domains/vm/abs", "elements/oneMKL/source/domains/vm/acos", "elements/oneMKL/source/domains/vm/acosh", "elements/oneMKL/source/domains/vm/acospi", "elements/oneMKL/source/domains/vm/add", "elements/oneMKL/source/domains/vm/arg", "elements/oneMKL/source/domains/vm/asin", "elements/oneMKL/source/domains/vm/asinh", "elements/oneMKL/source/domains/vm/asinpi", "elements/oneMKL/source/domains/vm/atan", "elements/oneMKL/source/domains/vm/atan2", "elements/oneMKL/source/domains/vm/atan2pi", "elements/oneMKL/source/domains/vm/atanh", "elements/oneMKL/source/domains/vm/atanpi", "elements/oneMKL/source/domains/vm/bibliography", "elements/oneMKL/source/domains/vm/cbrt", "elements/oneMKL/source/domains/vm/cdfnorm", "elements/oneMKL/source/domains/vm/cdfnorminv", "elements/oneMKL/source/domains/vm/ceil", "elements/oneMKL/source/domains/vm/cis", "elements/oneMKL/source/domains/vm/clear_status", "elements/oneMKL/source/domains/vm/conj", "elements/oneMKL/source/domains/vm/copysign", "elements/oneMKL/source/domains/vm/cos", "elements/oneMKL/source/domains/vm/cosd", "elements/oneMKL/source/domains/vm/cosh", "elements/oneMKL/source/domains/vm/cospi", "elements/oneMKL/source/domains/vm/create_error_handler", "elements/oneMKL/source/domains/vm/div", "elements/oneMKL/source/domains/vm/erf", "elements/oneMKL/source/domains/vm/erfc", "elements/oneMKL/source/domains/vm/erfcinv", "elements/oneMKL/source/domains/vm/erfinv", "elements/oneMKL/source/domains/vm/exp", "elements/oneMKL/source/domains/vm/exp10", "elements/oneMKL/source/domains/vm/exp2", "elements/oneMKL/source/domains/vm/expint1", "elements/oneMKL/source/domains/vm/expm1", "elements/oneMKL/source/domains/vm/fdim", "elements/oneMKL/source/domains/vm/floor", "elements/oneMKL/source/domains/vm/fmax", "elements/oneMKL/source/domains/vm/fmin", "elements/oneMKL/source/domains/vm/fmod", "elements/oneMKL/source/domains/vm/frac", "elements/oneMKL/source/domains/vm/get_mode", "elements/oneMKL/source/domains/vm/get_status", "elements/oneMKL/source/domains/vm/hypot", "elements/oneMKL/source/domains/vm/inv", "elements/oneMKL/source/domains/vm/invcbrt", "elements/oneMKL/source/domains/vm/invsqrt", "elements/oneMKL/source/domains/vm/lgamma", "elements/oneMKL/source/domains/vm/linearfrac", "elements/oneMKL/source/domains/vm/ln", "elements/oneMKL/source/domains/vm/log10", "elements/oneMKL/source/domains/vm/log1p", "elements/oneMKL/source/domains/vm/log2", "elements/oneMKL/source/domains/vm/logb", "elements/oneMKL/source/domains/vm/maxmag", "elements/oneMKL/source/domains/vm/minmag", "elements/oneMKL/source/domains/vm/modf", "elements/oneMKL/source/domains/vm/mul", "elements/oneMKL/source/domains/vm/mulbyconj", "elements/oneMKL/source/domains/vm/nearbyint", "elements/oneMKL/source/domains/vm/nextafter", "elements/oneMKL/source/domains/vm/pow", "elements/oneMKL/source/domains/vm/pow2o3", "elements/oneMKL/source/domains/vm/pow3o2", "elements/oneMKL/source/domains/vm/powr", "elements/oneMKL/source/domains/vm/powx", "elements/oneMKL/source/domains/vm/remainder", "elements/oneMKL/source/domains/vm/rint", "elements/oneMKL/source/domains/vm/round", "elements/oneMKL/source/domains/vm/set_status", "elements/oneMKL/source/domains/vm/setmode", "elements/oneMKL/source/domains/vm/sin", "elements/oneMKL/source/domains/vm/sincos", "elements/oneMKL/source/domains/vm/sind", "elements/oneMKL/source/domains/vm/sinh", "elements/oneMKL/source/domains/vm/sinpi", "elements/oneMKL/source/domains/vm/special-value-notations", "elements/oneMKL/source/domains/vm/sqr", "elements/oneMKL/source/domains/vm/sqrt", "elements/oneMKL/source/domains/vm/sub", "elements/oneMKL/source/domains/vm/tan", "elements/oneMKL/source/domains/vm/tand", "elements/oneMKL/source/domains/vm/tanh", "elements/oneMKL/source/domains/vm/tanpi", "elements/oneMKL/source/domains/vm/tgamma", "elements/oneMKL/source/domains/vm/trunc", "elements/oneMKL/source/domains/vm/vm", "elements/oneMKL/source/domains/vm/vm-exceptions", "elements/oneMKL/source/domains/vm/vm-mathematical-functions", "elements/oneMKL/source/domains/vm/vm-service-functions", "elements/oneMKL/source/index", "elements/oneTBB/source/algorithms", "elements/oneTBB/source/algorithms/blocked_ranges/blocked_range2d_cls", "elements/oneTBB/source/algorithms/blocked_ranges/blocked_range3d_cls", "elements/oneTBB/source/algorithms/blocked_ranges/blocked_range_cls", "elements/oneTBB/source/algorithms/functions/collaborative_call_once_func", "elements/oneTBB/source/algorithms/functions/collaborative_once_flag_cls", "elements/oneTBB/source/algorithms/functions/feeder", "elements/oneTBB/source/algorithms/functions/parallel_deterministic_reduce_func", "elements/oneTBB/source/algorithms/functions/parallel_for_each_func", "elements/oneTBB/source/algorithms/functions/parallel_for_func", "elements/oneTBB/source/algorithms/functions/parallel_invoke_func", "elements/oneTBB/source/algorithms/functions/parallel_pipeline_func", "elements/oneTBB/source/algorithms/functions/parallel_pipeline_func/filter_cls", "elements/oneTBB/source/algorithms/functions/parallel_pipeline_func/filter_mode_enum", "elements/oneTBB/source/algorithms/functions/parallel_pipeline_func/flow_control_cls", "elements/oneTBB/source/algorithms/functions/parallel_reduce_func", "elements/oneTBB/source/algorithms/functions/parallel_scan_func", "elements/oneTBB/source/algorithms/functions/parallel_sort_func", "elements/oneTBB/source/algorithms/functions/pre_scan_tag_and_final_scan_tag_clses", "elements/oneTBB/source/algorithms/partitioners/affinity_partitioner", "elements/oneTBB/source/algorithms/partitioners/auto_partitioner", "elements/oneTBB/source/algorithms/partitioners/simple_partitioner", "elements/oneTBB/source/algorithms/partitioners/static_partitioner", "elements/oneTBB/source/algorithms/split_tags/proportional_split_cls", "elements/oneTBB/source/algorithms/split_tags/split_cls", "elements/oneTBB/source/configuration", "elements/oneTBB/source/configuration/enabling_debugging_features", "elements/oneTBB/source/configuration/feature_macros", "elements/oneTBB/source/configuration/namespaces", "elements/oneTBB/source/configuration/version_information", "elements/oneTBB/source/containers", "elements/oneTBB/source/containers/auxiliary/node_handles_cls", "elements/oneTBB/source/containers/auxiliary/tbb_hash_compare_cls", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/construct_destroy_copy", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/iterators", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/safe_member_functions", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/unsafe_member_functions", "elements/oneTBB/source/containers/concurrent_hash_map_cls", "elements/oneTBB/source/containers/concurrent_hash_map_cls/accessors", "elements/oneTBB/source/containers/concurrent_hash_map_cls/construct_destroy_copy", "elements/oneTBB/source/containers/concurrent_hash_map_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_hash_map_cls/hash_policy", "elements/oneTBB/source/containers/concurrent_hash_map_cls/iterators", "elements/oneTBB/source/containers/concurrent_hash_map_cls/lookup", "elements/oneTBB/source/containers/concurrent_hash_map_cls/modifiers", "elements/oneTBB/source/containers/concurrent_hash_map_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_hash_map_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_hash_map_cls/parallel_iteration", "elements/oneTBB/source/containers/concurrent_hash_map_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_hash_map_cls/unsafe_modifiers", "elements/oneTBB/source/containers/concurrent_map_cls", "elements/oneTBB/source/containers/concurrent_map_cls/construction_destruction_copying", "elements/oneTBB/source/containers/concurrent_map_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_map_cls/element_access", "elements/oneTBB/source/containers/concurrent_map_cls/iterators", "elements/oneTBB/source/containers/concurrent_map_cls/lookup", "elements/oneTBB/source/containers/concurrent_map_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_map_cls/non_member_lexicographical_comparisons", "elements/oneTBB/source/containers/concurrent_map_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_map_cls/observers", "elements/oneTBB/source/containers/concurrent_map_cls/parallel_iteration", "elements/oneTBB/source/containers/concurrent_map_cls/safe_modifiers", "elements/oneTBB/source/containers/concurrent_map_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_map_cls/unsafe_modifiers", "elements/oneTBB/source/containers/concurrent_map_cls/value_compare_cls", "elements/oneTBB/source/containers/concurrent_multimap_cls", "elements/oneTBB/source/containers/concurrent_multimap_cls/construction_destruction_copying", "elements/oneTBB/source/containers/concurrent_multimap_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_multimap_cls/iterators", "elements/oneTBB/source/containers/concurrent_multimap_cls/lookup", "elements/oneTBB/source/containers/concurrent_multimap_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_multimap_cls/non_member_lexicographical_comparisons", "elements/oneTBB/source/containers/concurrent_multimap_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_multimap_cls/observers", "elements/oneTBB/source/containers/concurrent_multimap_cls/parallel_iteration", "elements/oneTBB/source/containers/concurrent_multimap_cls/safe_modifiers", "elements/oneTBB/source/containers/concurrent_multimap_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_multimap_cls/unsafe_modifiers", "elements/oneTBB/source/containers/concurrent_multimap_cls/value_compare_cls", "elements/oneTBB/source/containers/concurrent_multiset_cls", "elements/oneTBB/source/containers/concurrent_multiset_cls/construction_destruction_copying", "elements/oneTBB/source/containers/concurrent_multiset_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_multiset_cls/iterators", "elements/oneTBB/source/containers/concurrent_multiset_cls/lookup", "elements/oneTBB/source/containers/concurrent_multiset_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_multiset_cls/non_member_lexicographical_comparisons", "elements/oneTBB/source/containers/concurrent_multiset_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_multiset_cls/observers", "elements/oneTBB/source/containers/concurrent_multiset_cls/parallel_iteration", "elements/oneTBB/source/containers/concurrent_multiset_cls/safe_modifiers", "elements/oneTBB/source/containers/concurrent_multiset_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_multiset_cls/unsafe_modifiers", "elements/oneTBB/source/containers/concurrent_priority_queue_cls", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/construct_destroy_copy", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/safe_modifiers", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/unsafe_modifiers", "elements/oneTBB/source/containers/concurrent_queue_cls", "elements/oneTBB/source/containers/concurrent_queue_cls/construct_destroy_copy", "elements/oneTBB/source/containers/concurrent_queue_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_queue_cls/iterators", "elements/oneTBB/source/containers/concurrent_queue_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_queue_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_queue_cls/safe_member_functions", "elements/oneTBB/source/containers/concurrent_queue_cls/unsafe_member_functions", "elements/oneTBB/source/containers/concurrent_set_cls", "elements/oneTBB/source/containers/concurrent_set_cls/construction_destruction_copying", "elements/oneTBB/source/containers/concurrent_set_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_set_cls/iterators", "elements/oneTBB/source/containers/concurrent_set_cls/lookup", "elements/oneTBB/source/containers/concurrent_set_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_set_cls/non_member_lexicographical_comparisons", "elements/oneTBB/source/containers/concurrent_set_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_set_cls/observers", "elements/oneTBB/source/containers/concurrent_set_cls/parallel_iteration", "elements/oneTBB/source/containers/concurrent_set_cls/safe_modifiers", "elements/oneTBB/source/containers/concurrent_set_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_set_cls/unsafe_modifiers", "elements/oneTBB/source/containers/concurrent_unordered_map_cls", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/bucket_interface", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/construction_destruction_copying", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/element_access", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/hash_policy", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/iterators", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/lookup", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/observers", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/parallel_iteration", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/safe_modifiers", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/unsafe_modifiers", "elements/oneTBB/source/containers/concurrent_unordered_multimap", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/bucket_interface", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/construction_destruction_copying", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/hash_policy", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/iterators", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/lookup", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/observers", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/parallel_iteration", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/safe_modifiers", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/unsafe_modifiers", "elements/oneTBB/source/containers/concurrent_unordered_multiset", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/bucket_interface", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/construction_destruction_copying", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/hash_policy", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/iterators", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/lookup", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/observers", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/parallel_iteration", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/safe_modifiers", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/unsafe_modifiers", "elements/oneTBB/source/containers/concurrent_unordered_set_cls", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/bucket_interface", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/construction_destruction_copying", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/hash_policy", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/iterators", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/lookup", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/observers", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/parallel_iteration", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/safe_modifiers", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/unsafe_modifiers", "elements/oneTBB/source/containers/concurrent_vector_cls", "elements/oneTBB/source/containers/concurrent_vector_cls/concurrent_growth", "elements/oneTBB/source/containers/concurrent_vector_cls/construct_destroy_copy", "elements/oneTBB/source/containers/concurrent_vector_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_vector_cls/element_access", "elements/oneTBB/source/containers/concurrent_vector_cls/iterators", "elements/oneTBB/source/containers/concurrent_vector_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_vector_cls/non_member_lexicographical_comparisons", "elements/oneTBB/source/containers/concurrent_vector_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_vector_cls/parallel_iteration", "elements/oneTBB/source/containers/concurrent_vector_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_vector_cls/unsafe_operations", "elements/oneTBB/source/deprecated/task_arena_attach_tag", "elements/oneTBB/source/flow_graph", "elements/oneTBB/source/flow_graph/async_node_cls", "elements/oneTBB/source/flow_graph/broadcast_node_cls", "elements/oneTBB/source/flow_graph/buffer_node_cls", "elements/oneTBB/source/flow_graph/composite_node_cls", "elements/oneTBB/source/flow_graph/continue_msg_cls", "elements/oneTBB/source/flow_graph/continue_node_cls", "elements/oneTBB/source/flow_graph/copy_body_func", "elements/oneTBB/source/flow_graph/dependency_flow_graph_example", "elements/oneTBB/source/flow_graph/forwarding_and_buffering", "elements/oneTBB/source/flow_graph/func_node_cls", "elements/oneTBB/source/flow_graph/functional_node_policies", "elements/oneTBB/source/flow_graph/graph_cls", "elements/oneTBB/source/flow_graph/graph_node_cls", "elements/oneTBB/source/flow_graph/indexer_node_cls", "elements/oneTBB/source/flow_graph/input_node_cls", "elements/oneTBB/source/flow_graph/input_port_func", "elements/oneTBB/source/flow_graph/join_node_cls", "elements/oneTBB/source/flow_graph/join_node_policies", "elements/oneTBB/source/flow_graph/limiter_node_cls", "elements/oneTBB/source/flow_graph/make_edge_func", "elements/oneTBB/source/flow_graph/message_flow_graph_example", "elements/oneTBB/source/flow_graph/multifunc_node_cls", "elements/oneTBB/source/flow_graph/node_priorities", "elements/oneTBB/source/flow_graph/output_port_func", "elements/oneTBB/source/flow_graph/overwrite_node_cls", "elements/oneTBB/source/flow_graph/predefined_concurrency_limits", "elements/oneTBB/source/flow_graph/priority_queue_node_cls", "elements/oneTBB/source/flow_graph/queue_node_cls", "elements/oneTBB/source/flow_graph/receiver", "elements/oneTBB/source/flow_graph/remove_edge_func", "elements/oneTBB/source/flow_graph/reset_flags_enum", "elements/oneTBB/source/flow_graph/sender", "elements/oneTBB/source/flow_graph/sequencer_node_cls", "elements/oneTBB/source/flow_graph/split_node_cls", "elements/oneTBB/source/flow_graph/tagged_msg_cls", "elements/oneTBB/source/flow_graph/write_once_node_cls", "elements/oneTBB/source/identifiers", "elements/oneTBB/source/info_namespace", "elements/oneTBB/source/intro", "elements/oneTBB/source/memory_allocation", "elements/oneTBB/source/memory_allocation/c_interface_to_scalable_allocator", "elements/oneTBB/source/memory_allocation/cache_aligned_allocator_cls", "elements/oneTBB/source/memory_allocation/cache_aligned_resource_cls", "elements/oneTBB/source/memory_allocation/scalable_allocator_cls", "elements/oneTBB/source/memory_allocation/scalable_memory_resource_func", "elements/oneTBB/source/memory_allocation/tbb_allocator_cls", "elements/oneTBB/source/mutual_exclusion", "elements/oneTBB/source/mutual_exclusion/mutex_cls", "elements/oneTBB/source/mutual_exclusion/null_mutex_cls", "elements/oneTBB/source/mutual_exclusion/null_rw_mutex_cls", "elements/oneTBB/source/mutual_exclusion/queuing_mutex_cls", "elements/oneTBB/source/mutual_exclusion/queuing_rw_mutex_cls", "elements/oneTBB/source/mutual_exclusion/rw_mutex_cls", "elements/oneTBB/source/mutual_exclusion/speculative_spin_mutex_cls", "elements/oneTBB/source/mutual_exclusion/speculative_spin_rw_mutex_cls", "elements/oneTBB/source/mutual_exclusion/spin_mutex_cls", "elements/oneTBB/source/mutual_exclusion/spin_rw_mutex_cls", "elements/oneTBB/source/named_requirements", "elements/oneTBB/source/named_requirements/algorithms/blocked_range_val", "elements/oneTBB/source/named_requirements/algorithms/container_based_sequence", "elements/oneTBB/source/named_requirements/algorithms/filter_body", "elements/oneTBB/source/named_requirements/algorithms/par_for_body", "elements/oneTBB/source/named_requirements/algorithms/par_for_each_body", "elements/oneTBB/source/named_requirements/algorithms/par_for_func", "elements/oneTBB/source/named_requirements/algorithms/par_for_index", "elements/oneTBB/source/named_requirements/algorithms/par_reduce_body", "elements/oneTBB/source/named_requirements/algorithms/par_reduce_func", "elements/oneTBB/source/named_requirements/algorithms/par_reduce_reduction", "elements/oneTBB/source/named_requirements/algorithms/par_scan_body", "elements/oneTBB/source/named_requirements/algorithms/par_scan_combine", "elements/oneTBB/source/named_requirements/algorithms/par_scan_func", "elements/oneTBB/source/named_requirements/algorithms/range", "elements/oneTBB/source/named_requirements/algorithms/splittable", "elements/oneTBB/source/named_requirements/containers/container_range", "elements/oneTBB/source/named_requirements/containers/hash_compare", "elements/oneTBB/source/named_requirements/flow_graph/async_node_body", "elements/oneTBB/source/named_requirements/flow_graph/continue_node_body", "elements/oneTBB/source/named_requirements/flow_graph/function_node_body", "elements/oneTBB/source/named_requirements/flow_graph/gateway_type", "elements/oneTBB/source/named_requirements/flow_graph/input_node_body", "elements/oneTBB/source/named_requirements/flow_graph/join_node_func_obj", "elements/oneTBB/source/named_requirements/flow_graph/multifunction_node_body", "elements/oneTBB/source/named_requirements/flow_graph/sequencer", "elements/oneTBB/source/named_requirements/mutexes/mutex", "elements/oneTBB/source/named_requirements/mutexes/rw_mutex", "elements/oneTBB/source/named_requirements/task_scheduler/suspend_func", "elements/oneTBB/source/nested-aux-interfaces", "elements/oneTBB/source/nested-depr-interfaces", "elements/oneTBB/source/nested-gen-info", "elements/oneTBB/source/nested-index", "elements/oneTBB/source/nested-interfaces", "elements/oneTBB/source/notation", "elements/oneTBB/source/task_scheduler", "elements/oneTBB/source/task_scheduler/attach_tag_type", "elements/oneTBB/source/task_scheduler/scheduling_controls/global_control_cls", "elements/oneTBB/source/task_scheduler/scheduling_controls/resumable_tasks", "elements/oneTBB/source/task_scheduler/scheduling_controls/task_group_context_cls", "elements/oneTBB/source/task_scheduler/scheduling_controls/task_scheduler_handle_cls", "elements/oneTBB/source/task_scheduler/task_arena/task_arena_cls", "elements/oneTBB/source/task_scheduler/task_arena/task_scheduler_observer_cls", "elements/oneTBB/source/task_scheduler/task_arena/this_task_arena_ns", "elements/oneTBB/source/task_scheduler/task_group/task_group_cls", "elements/oneTBB/source/task_scheduler/task_group/task_group_status_enum", "elements/oneTBB/source/task_scheduler/task_group/task_handle", "elements/oneTBB/source/thread_local_storage", "elements/oneTBB/source/thread_local_storage/combinable_cls", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/combining", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/construct_destroy_copy", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/iteration", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/safe_modifiers", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/size_and_capacity", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/unsafe_modifiers", "elements/oneTBB/source/thread_local_storage/flattened2d_cls", "elements/oneTBB/source/thread_safety", "elements/oneTBB/source/timing", "elements/oneTBB/source/timing/tick_count_cls", "index", "introduction", "notices"], "filenames": ["architecture.rst", "elements/element_list.rst", "elements/l0/source/index.rst", "elements/oneCCL/source/definitions.rst", "elements/oneCCL/source/index.rst", "elements/oneCCL/source/introduction.rst", "elements/oneCCL/source/namespaces.rst", "elements/oneCCL/source/programming_model.rst", "elements/oneCCL/source/spec/collective_operations.rst", "elements/oneCCL/source/spec/datatypes.rst", "elements/oneCCL/source/spec/error_handling.rst", "elements/oneCCL/source/spec/generic_workflow.rst", "elements/oneCCL/source/spec/main_objects.rst", "elements/oneCCL/source/spec/operation_attributes.rst", "elements/oneCCL/source/spec/operation_progress.rst", "elements/oneCCL/source/spec/operations.rst", "elements/oneCCL/source/spec/reductions.rst", "elements/oneCCL/source/spec_version.rst", "elements/oneDAL/source/algorithms/clustering/index.rst", "elements/oneDAL/source/algorithms/clustering/kmeans.rst", "elements/oneDAL/source/algorithms/clustering/kmeans_init.rst", "elements/oneDAL/source/algorithms/decomposition/index.rst", "elements/oneDAL/source/algorithms/decomposition/pca.rst", "elements/oneDAL/source/algorithms/index.rst", "elements/oneDAL/source/algorithms/nearest_neighbors/index.rst", "elements/oneDAL/source/algorithms/nearest_neighbors/knn_classification.rst", "elements/oneDAL/source/appendix/index.rst", "elements/oneDAL/source/appendix/kd_tree.rst", "elements/oneDAL/source/bibliography.rst", "elements/oneDAL/source/common_interface/common_type_definitions.rst", "elements/oneDAL/source/common_interface/error_handling.rst", "elements/oneDAL/source/common_interface/header_files_and_namespaces.rst", "elements/oneDAL/source/common_interface/index.rst", "elements/oneDAL/source/common_interface/spec_version.rst", "elements/oneDAL/source/data_management/accessor/column.rst", "elements/oneDAL/source/data_management/accessor/row.rst", "elements/oneDAL/source/data_management/accessors.rst", "elements/oneDAL/source/data_management/array.rst", "elements/oneDAL/source/data_management/csv_data_source.rst", "elements/oneDAL/source/data_management/data_sources.rst", "elements/oneDAL/source/data_management/index.rst", "elements/oneDAL/source/data_management/table/homogen.rst", "elements/oneDAL/source/data_management/tables.rst", "elements/oneDAL/source/glossary.rst", "elements/oneDAL/source/index.rst", "elements/oneDAL/source/introduction.rst", "elements/oneDAL/source/notations.rst", "elements/oneDAL/source/programming_model/computational_modes.rst", "elements/oneDAL/source/programming_model/descriptors.rst", "elements/oneDAL/source/programming_model/end_to_end_example.rst", "elements/oneDAL/source/programming_model/index.rst", "elements/oneDAL/source/programming_model/operations/index.rst", "elements/oneDAL/source/programming_model/operations/support.rst", "elements/oneDNN/source/conventions.rst", "elements/oneDNN/source/data_model/data_types/bfloat16.rst", "elements/oneDNN/source/data_model/data_types/index.rst", "elements/oneDNN/source/data_model/data_types/int8.rst", "elements/oneDNN/source/data_model/index.rst", "elements/oneDNN/source/data_model/memory/formats.rst", "elements/oneDNN/source/data_model/memory/index.rst", "elements/oneDNN/source/data_model/memory/objects.rst", "elements/oneDNN/source/execution_model/index.rst", "elements/oneDNN/source/graph/data_model.rst", "elements/oneDNN/source/graph/general.rst", "elements/oneDNN/source/graph/index.rst", "elements/oneDNN/source/graph/ops/Abs.rst", "elements/oneDNN/source/graph/ops/AbsBackward.rst", "elements/oneDNN/source/graph/ops/Add.rst", "elements/oneDNN/source/graph/ops/AvgPool.rst", "elements/oneDNN/source/graph/ops/AvgPoolBackward.rst", "elements/oneDNN/source/graph/ops/BatchNormForwardTraining.rst", "elements/oneDNN/source/graph/ops/BatchNormInference.rst", "elements/oneDNN/source/graph/ops/BatchNormTrainingBackward.rst", "elements/oneDNN/source/graph/ops/BiasAdd.rst", "elements/oneDNN/source/graph/ops/BiasAddBackward.rst", "elements/oneDNN/source/graph/ops/Clamp.rst", "elements/oneDNN/source/graph/ops/ClampBackward.rst", "elements/oneDNN/source/graph/ops/Concat.rst", "elements/oneDNN/source/graph/ops/ConvTranspose.rst", "elements/oneDNN/source/graph/ops/ConvTransposeBackwardData.rst", "elements/oneDNN/source/graph/ops/ConvTransposeBackwardWeights.rst", "elements/oneDNN/source/graph/ops/Convolution.rst", "elements/oneDNN/source/graph/ops/ConvolutionBackwardData.rst", "elements/oneDNN/source/graph/ops/ConvolutionBackwardWeights.rst", "elements/oneDNN/source/graph/ops/Dequantize.rst", "elements/oneDNN/source/graph/ops/Divide.rst", "elements/oneDNN/source/graph/ops/DynamicDequantize.rst", "elements/oneDNN/source/graph/ops/DynamicQuantize.rst", "elements/oneDNN/source/graph/ops/Elu.rst", "elements/oneDNN/source/graph/ops/EluBackward.rst", "elements/oneDNN/source/graph/ops/End.rst", "elements/oneDNN/source/graph/ops/Exp.rst", "elements/oneDNN/source/graph/ops/GELU.rst", "elements/oneDNN/source/graph/ops/GELUBackward.rst", "elements/oneDNN/source/graph/ops/HardSigmoid.rst", "elements/oneDNN/source/graph/ops/HardSigmoidBackward.rst", "elements/oneDNN/source/graph/ops/HardSwish.rst", "elements/oneDNN/source/graph/ops/HardSwishBackward.rst", "elements/oneDNN/source/graph/ops/Interpolate.rst", "elements/oneDNN/source/graph/ops/InterpolateBackward.rst", "elements/oneDNN/source/graph/ops/LayerNorm.rst", "elements/oneDNN/source/graph/ops/LayerNormBackward.rst", "elements/oneDNN/source/graph/ops/LeakyReLU.rst", "elements/oneDNN/source/graph/ops/Log.rst", "elements/oneDNN/source/graph/ops/LogSoftmax.rst", "elements/oneDNN/source/graph/ops/LogSoftmaxBackward.rst", "elements/oneDNN/source/graph/ops/MatMul.rst", "elements/oneDNN/source/graph/ops/MaxPool.rst", "elements/oneDNN/source/graph/ops/MaxPoolBackward.rst", "elements/oneDNN/source/graph/ops/Maximum.rst", "elements/oneDNN/source/graph/ops/Minimum.rst", "elements/oneDNN/source/graph/ops/Mish.rst", "elements/oneDNN/source/graph/ops/MishBackward.rst", "elements/oneDNN/source/graph/ops/Multiply.rst", "elements/oneDNN/source/graph/ops/PReLU.rst", "elements/oneDNN/source/graph/ops/PReLUBackward.rst", "elements/oneDNN/source/graph/ops/Pow.rst", "elements/oneDNN/source/graph/ops/Quantize.rst", "elements/oneDNN/source/graph/ops/ReLU.rst", "elements/oneDNN/source/graph/ops/ReLUBackward.rst", "elements/oneDNN/source/graph/ops/Reciprocal.rst", "elements/oneDNN/source/graph/ops/ReduceL1.rst", "elements/oneDNN/source/graph/ops/ReduceL2.rst", "elements/oneDNN/source/graph/ops/ReduceMax.rst", "elements/oneDNN/source/graph/ops/ReduceMean.rst", "elements/oneDNN/source/graph/ops/ReduceMin.rst", "elements/oneDNN/source/graph/ops/ReduceProd.rst", "elements/oneDNN/source/graph/ops/ReduceSum.rst", "elements/oneDNN/source/graph/ops/Reorder.rst", "elements/oneDNN/source/graph/ops/Round.rst", "elements/oneDNN/source/graph/ops/Select.rst", "elements/oneDNN/source/graph/ops/Sigmoid.rst", "elements/oneDNN/source/graph/ops/SigmoidBackward.rst", "elements/oneDNN/source/graph/ops/SoftPlus.rst", "elements/oneDNN/source/graph/ops/SoftPlusBackward.rst", "elements/oneDNN/source/graph/ops/Softmax.rst", "elements/oneDNN/source/graph/ops/SoftmaxBackward.rst", "elements/oneDNN/source/graph/ops/Sqrt.rst", "elements/oneDNN/source/graph/ops/SqrtBackward.rst", "elements/oneDNN/source/graph/ops/Square.rst", "elements/oneDNN/source/graph/ops/SquaredDifference.rst", "elements/oneDNN/source/graph/ops/StaticReshape.rst", "elements/oneDNN/source/graph/ops/StaticTranspose.rst", "elements/oneDNN/source/graph/ops/Subtract.rst", "elements/oneDNN/source/graph/ops/Tanh.rst", "elements/oneDNN/source/graph/ops/TanhBackward.rst", "elements/oneDNN/source/graph/ops/TypeCast.rst", "elements/oneDNN/source/graph/ops/Wildcard.rst", "elements/oneDNN/source/graph/ops/index.rst", "elements/oneDNN/source/graph/programming_model.rst", "elements/oneDNN/source/index.rst", "elements/oneDNN/source/introduction.rst", "elements/oneDNN/source/primitives/attributes/index.rst", "elements/oneDNN/source/primitives/attributes/post-ops.rst", "elements/oneDNN/source/primitives/batch_normalization.rst", "elements/oneDNN/source/primitives/binary.rst", "elements/oneDNN/source/primitives/concat.rst", "elements/oneDNN/source/primitives/convolution.rst", "elements/oneDNN/source/primitives/eltwise.rst", "elements/oneDNN/source/primitives/general.rst", "elements/oneDNN/source/primitives/index.rst", "elements/oneDNN/source/primitives/inner-product.rst", "elements/oneDNN/source/primitives/layer_normalization.rst", "elements/oneDNN/source/primitives/lrn.rst", "elements/oneDNN/source/primitives/matmul.rst", "elements/oneDNN/source/primitives/pooling.rst", "elements/oneDNN/source/primitives/prelu.rst", "elements/oneDNN/source/primitives/reduction.rst", "elements/oneDNN/source/primitives/reorder.rst", "elements/oneDNN/source/primitives/resampling.rst", "elements/oneDNN/source/primitives/rnn.rst", "elements/oneDNN/source/primitives/shuffle.rst", "elements/oneDNN/source/primitives/softmax.rst", "elements/oneDNN/source/primitives/sum.rst", "elements/oneDPL/source/common.rst", "elements/oneDPL/source/index.rst", "elements/oneDPL/source/parallel_api.rst", "elements/oneDPL/source/sycl_kernels_api.rst", "elements/oneMKL/source/appendix/appendix.rst", "elements/oneMKL/source/architecture/architecture.rst", "elements/oneMKL/source/domains/blas/asum.rst", "elements/oneMKL/source/domains/blas/axpby.rst", "elements/oneMKL/source/domains/blas/axpy.rst", "elements/oneMKL/source/domains/blas/axpy_batch.rst", "elements/oneMKL/source/domains/blas/blas.rst", "elements/oneMKL/source/domains/blas/blas-level-1-routines.rst", "elements/oneMKL/source/domains/blas/blas-level-2-routines.rst", "elements/oneMKL/source/domains/blas/blas-level-3-routines.rst", "elements/oneMKL/source/domains/blas/blas-like-extensions.rst", "elements/oneMKL/source/domains/blas/copy.rst", "elements/oneMKL/source/domains/blas/copy_batch.rst", "elements/oneMKL/source/domains/blas/dgmm_batch.rst", "elements/oneMKL/source/domains/blas/dot.rst", "elements/oneMKL/source/domains/blas/dotc.rst", "elements/oneMKL/source/domains/blas/dotu.rst", "elements/oneMKL/source/domains/blas/gbmv.rst", "elements/oneMKL/source/domains/blas/gemm.rst", "elements/oneMKL/source/domains/blas/gemm_batch.rst", "elements/oneMKL/source/domains/blas/gemm_bias.rst", "elements/oneMKL/source/domains/blas/gemmt.rst", "elements/oneMKL/source/domains/blas/gemv.rst", "elements/oneMKL/source/domains/blas/gemv_batch.rst", "elements/oneMKL/source/domains/blas/ger.rst", "elements/oneMKL/source/domains/blas/gerc.rst", "elements/oneMKL/source/domains/blas/geru.rst", "elements/oneMKL/source/domains/blas/hbmv.rst", "elements/oneMKL/source/domains/blas/hemm.rst", "elements/oneMKL/source/domains/blas/hemv.rst", "elements/oneMKL/source/domains/blas/her.rst", "elements/oneMKL/source/domains/blas/her2.rst", "elements/oneMKL/source/domains/blas/her2k.rst", "elements/oneMKL/source/domains/blas/herk.rst", "elements/oneMKL/source/domains/blas/hpmv.rst", "elements/oneMKL/source/domains/blas/hpr.rst", "elements/oneMKL/source/domains/blas/hpr2.rst", "elements/oneMKL/source/domains/blas/iamax.rst", "elements/oneMKL/source/domains/blas/iamin.rst", "elements/oneMKL/source/domains/blas/imatcopy.rst", "elements/oneMKL/source/domains/blas/imatcopy_batch.rst", "elements/oneMKL/source/domains/blas/nrm2.rst", "elements/oneMKL/source/domains/blas/omatadd.rst", "elements/oneMKL/source/domains/blas/omatadd_batch.rst", "elements/oneMKL/source/domains/blas/omatcopy.rst", "elements/oneMKL/source/domains/blas/omatcopy2.rst", "elements/oneMKL/source/domains/blas/omatcopy_batch.rst", "elements/oneMKL/source/domains/blas/rot.rst", "elements/oneMKL/source/domains/blas/rotg.rst", "elements/oneMKL/source/domains/blas/rotm.rst", "elements/oneMKL/source/domains/blas/rotmg.rst", "elements/oneMKL/source/domains/blas/sbmv.rst", "elements/oneMKL/source/domains/blas/scal.rst", "elements/oneMKL/source/domains/blas/sdsdot.rst", "elements/oneMKL/source/domains/blas/spmv.rst", "elements/oneMKL/source/domains/blas/spr.rst", "elements/oneMKL/source/domains/blas/spr2.rst", "elements/oneMKL/source/domains/blas/swap.rst", "elements/oneMKL/source/domains/blas/symm.rst", "elements/oneMKL/source/domains/blas/symv.rst", "elements/oneMKL/source/domains/blas/syr.rst", "elements/oneMKL/source/domains/blas/syr2.rst", "elements/oneMKL/source/domains/blas/syr2k.rst", "elements/oneMKL/source/domains/blas/syrk.rst", "elements/oneMKL/source/domains/blas/syrk_batch.rst", "elements/oneMKL/source/domains/blas/tbmv.rst", "elements/oneMKL/source/domains/blas/tbsv.rst", "elements/oneMKL/source/domains/blas/tpmv.rst", "elements/oneMKL/source/domains/blas/tpsv.rst", "elements/oneMKL/source/domains/blas/trmm.rst", "elements/oneMKL/source/domains/blas/trmv.rst", "elements/oneMKL/source/domains/blas/trsm.rst", "elements/oneMKL/source/domains/blas/trsm_batch.rst", "elements/oneMKL/source/domains/blas/trsv.rst", "elements/oneMKL/source/domains/dft/compute_backward.rst", "elements/oneMKL/source/domains/dft/compute_forward.rst", "elements/oneMKL/source/domains/dft/config_params/data_layouts.rst", "elements/oneMKL/source/domains/dft/config_params/storage_formats.rst", "elements/oneMKL/source/domains/dft/config_params/workspace_placement.rst", "elements/oneMKL/source/domains/dft/descriptor.rst", "elements/oneMKL/source/domains/dft/dft.rst", "elements/oneMKL/source/domains/dft/enums_and_config_params.rst", "elements/oneMKL/source/domains/domains.rst", "elements/oneMKL/source/domains/lapack/gebrd.rst", "elements/oneMKL/source/domains/lapack/gebrd_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/geqrf.rst", "elements/oneMKL/source/domains/lapack/geqrf_batch.rst", "elements/oneMKL/source/domains/lapack/geqrf_batch_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/geqrf_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/gerqf.rst", "elements/oneMKL/source/domains/lapack/gerqf_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/gesvd.rst", "elements/oneMKL/source/domains/lapack/gesvd_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/getrf.rst", "elements/oneMKL/source/domains/lapack/getrf_batch.rst", "elements/oneMKL/source/domains/lapack/getrf_batch_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/getrf_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/getri.rst", "elements/oneMKL/source/domains/lapack/getri_batch.rst", "elements/oneMKL/source/domains/lapack/getri_batch_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/getri_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/getrs.rst", "elements/oneMKL/source/domains/lapack/getrs_batch.rst", "elements/oneMKL/source/domains/lapack/getrs_batch_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/getrs_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/heevd.rst", "elements/oneMKL/source/domains/lapack/heevd_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/hegvd.rst", "elements/oneMKL/source/domains/lapack/hegvd_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/hetrd.rst", "elements/oneMKL/source/domains/lapack/hetrd_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/hetrf.rst", "elements/oneMKL/source/domains/lapack/hetrf_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/lapack.rst", "elements/oneMKL/source/domains/lapack/orgbr.rst", "elements/oneMKL/source/domains/lapack/orgbr_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/orgqr.rst", "elements/oneMKL/source/domains/lapack/orgqr_batch.rst", "elements/oneMKL/source/domains/lapack/orgqr_batch_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/orgqr_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/orgtr.rst", "elements/oneMKL/source/domains/lapack/orgtr_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/ormqr.rst", "elements/oneMKL/source/domains/lapack/ormqr_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/ormrq.rst", "elements/oneMKL/source/domains/lapack/ormrq_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/ormtr.rst", "elements/oneMKL/source/domains/lapack/ormtr_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/potrf.rst", "elements/oneMKL/source/domains/lapack/potrf_batch.rst", "elements/oneMKL/source/domains/lapack/potrf_batch_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/potrf_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/potri.rst", "elements/oneMKL/source/domains/lapack/potri_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/potrs.rst", "elements/oneMKL/source/domains/lapack/potrs_batch.rst", "elements/oneMKL/source/domains/lapack/potrs_batch_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/potrs_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/syevd.rst", "elements/oneMKL/source/domains/lapack/syevd_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/sygvd.rst", "elements/oneMKL/source/domains/lapack/sygvd_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/sytrd.rst", "elements/oneMKL/source/domains/lapack/sytrd_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/sytrf.rst", "elements/oneMKL/source/domains/lapack/sytrf_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/trtrs.rst", "elements/oneMKL/source/domains/lapack/trtrs_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/ungbr.rst", "elements/oneMKL/source/domains/lapack/ungbr_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/ungqr.rst", "elements/oneMKL/source/domains/lapack/ungqr_batch.rst", "elements/oneMKL/source/domains/lapack/ungqr_batch_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/ungqr_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/ungtr.rst", "elements/oneMKL/source/domains/lapack/ungtr_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/unmqr.rst", "elements/oneMKL/source/domains/lapack/unmqr_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/unmrq.rst", "elements/oneMKL/source/domains/lapack/unmrq_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/unmtr.rst", "elements/oneMKL/source/domains/lapack/unmtr_scratchpad_size.rst", "elements/oneMKL/source/domains/matrix-storage.rst", "elements/oneMKL/source/domains/rng/bibliography.rst", "elements/oneMKL/source/domains/rng/device_api/device-distributions.rst", "elements/oneMKL/source/domains/rng/device_api/device-distributions-template-parameter-method.rst", "elements/oneMKL/source/domains/rng/device_api/device-engines.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-bernoulli.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-bits.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-exponential.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-gaussian.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-generate.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-generate-routines.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-lognormal.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-mcg31m1.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-mcg59.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-mrg32k3a.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-philox4x32x10.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-poisson.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-skip-ahead.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-uniform-bits.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-uniform-continuous.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-uniform-discrete.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-usage-model.rst", "elements/oneMKL/source/domains/rng/device_api/device-routines.rst", "elements/oneMKL/source/domains/rng/device_api/device-service-routines.rst", "elements/oneMKL/source/domains/rng/host_api/distributions.rst", "elements/oneMKL/source/domains/rng/host_api/distributions-template-parameter-mkl-rng-method-values.rst", "elements/oneMKL/source/domains/rng/host_api/engines-basic-random-number-generators.rst", "elements/oneMKL/source/domains/rng/host_api/generate-routine.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-ars5.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-bernoulli.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-beta.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-binomial.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-bits.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-cauchy.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-chi_square.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-default_engine.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-exponential.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-gamma.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-gaussian.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-gaussian_mv.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-generate.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-geometric.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-gumbel.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-hypergeometric.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-laplace.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-leapfrog.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-lognormal.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-mcg31m1.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-mcg59.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-mrg32k3a.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-mt19937.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-mt2203.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-multinomial.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-negbinomial.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-niederreiter.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-nondeterministic.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-philox4x32x10.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-poisson.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-poisson_v.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-r250.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-rayleigh.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-sfmt19937.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-skip_ahead.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-sobol.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-uniform-continuous.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-uniform-discrete.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-uniform_bits.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-weibull.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-wichmann_hill.rst", "elements/oneMKL/source/domains/rng/host_api/onemkl-rng-usage-model.rst", "elements/oneMKL/source/domains/rng/host_api/rng-host-routines.rst", "elements/oneMKL/source/domains/rng/host_api/service-routines.rst", "elements/oneMKL/source/domains/rng/onemkl-rng-overview.rst", "elements/oneMKL/source/domains/spblas/data_types/data_handles.rst", "elements/oneMKL/source/domains/spblas/data_types/format-descriptions.rst", "elements/oneMKL/source/domains/spblas/data_types/init_coo_matrix.rst", "elements/oneMKL/source/domains/spblas/data_types/init_csr_matrix.rst", "elements/oneMKL/source/domains/spblas/data_types/init_dense_matrix.rst", "elements/oneMKL/source/domains/spblas/data_types/init_dense_vector.rst", "elements/oneMKL/source/domains/spblas/data_types/release_dense_matrix.rst", "elements/oneMKL/source/domains/spblas/data_types/release_dense_vector.rst", "elements/oneMKL/source/domains/spblas/data_types/release_sparse_matrix.rst", "elements/oneMKL/source/domains/spblas/data_types/set_coo_matrix_data.rst", "elements/oneMKL/source/domains/spblas/data_types/set_csr_matrix_data.rst", "elements/oneMKL/source/domains/spblas/data_types/set_dense_matrix_data.rst", "elements/oneMKL/source/domains/spblas/data_types/set_dense_vector_data.rst", "elements/oneMKL/source/domains/spblas/data_types/set_matrix_property.rst", "elements/oneMKL/source/domains/spblas/matrix_view.rst", "elements/oneMKL/source/domains/spblas/operations/spmm.rst", "elements/oneMKL/source/domains/spblas/operations/spmv.rst", "elements/oneMKL/source/domains/spblas/operations/spsv.rst", "elements/oneMKL/source/domains/spblas/spblas.rst", "elements/oneMKL/source/domains/spblas/supported-types.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_central_moment.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_central_moment_user_mean.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_central_sum.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_central_sum_user_mean.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_dataset.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_kurtosis.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_kurtosis_user_mean.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_make_dataset.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_max.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_mean.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_min.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_min_max.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_overview.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_raw_moment.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_raw_sum.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_routines.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_service_routines.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_skewness.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_skewness_user_mean.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_usage_model.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_variation.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_variation_user_mean.rst", "elements/oneMKL/source/domains/value_or_pointer.rst", "elements/oneMKL/source/domains/vm/abs.rst", "elements/oneMKL/source/domains/vm/acos.rst", "elements/oneMKL/source/domains/vm/acosh.rst", "elements/oneMKL/source/domains/vm/acospi.rst", "elements/oneMKL/source/domains/vm/add.rst", "elements/oneMKL/source/domains/vm/arg.rst", "elements/oneMKL/source/domains/vm/asin.rst", "elements/oneMKL/source/domains/vm/asinh.rst", "elements/oneMKL/source/domains/vm/asinpi.rst", "elements/oneMKL/source/domains/vm/atan.rst", "elements/oneMKL/source/domains/vm/atan2.rst", "elements/oneMKL/source/domains/vm/atan2pi.rst", "elements/oneMKL/source/domains/vm/atanh.rst", "elements/oneMKL/source/domains/vm/atanpi.rst", "elements/oneMKL/source/domains/vm/bibliography.rst", "elements/oneMKL/source/domains/vm/cbrt.rst", "elements/oneMKL/source/domains/vm/cdfnorm.rst", "elements/oneMKL/source/domains/vm/cdfnorminv.rst", "elements/oneMKL/source/domains/vm/ceil.rst", "elements/oneMKL/source/domains/vm/cis.rst", "elements/oneMKL/source/domains/vm/clear_status.rst", "elements/oneMKL/source/domains/vm/conj.rst", "elements/oneMKL/source/domains/vm/copysign.rst", "elements/oneMKL/source/domains/vm/cos.rst", "elements/oneMKL/source/domains/vm/cosd.rst", "elements/oneMKL/source/domains/vm/cosh.rst", "elements/oneMKL/source/domains/vm/cospi.rst", "elements/oneMKL/source/domains/vm/create_error_handler.rst", "elements/oneMKL/source/domains/vm/div.rst", "elements/oneMKL/source/domains/vm/erf.rst", "elements/oneMKL/source/domains/vm/erfc.rst", "elements/oneMKL/source/domains/vm/erfcinv.rst", "elements/oneMKL/source/domains/vm/erfinv.rst", "elements/oneMKL/source/domains/vm/exp.rst", "elements/oneMKL/source/domains/vm/exp10.rst", "elements/oneMKL/source/domains/vm/exp2.rst", "elements/oneMKL/source/domains/vm/expint1.rst", "elements/oneMKL/source/domains/vm/expm1.rst", "elements/oneMKL/source/domains/vm/fdim.rst", "elements/oneMKL/source/domains/vm/floor.rst", "elements/oneMKL/source/domains/vm/fmax.rst", "elements/oneMKL/source/domains/vm/fmin.rst", "elements/oneMKL/source/domains/vm/fmod.rst", "elements/oneMKL/source/domains/vm/frac.rst", "elements/oneMKL/source/domains/vm/get_mode.rst", "elements/oneMKL/source/domains/vm/get_status.rst", "elements/oneMKL/source/domains/vm/hypot.rst", "elements/oneMKL/source/domains/vm/inv.rst", "elements/oneMKL/source/domains/vm/invcbrt.rst", "elements/oneMKL/source/domains/vm/invsqrt.rst", "elements/oneMKL/source/domains/vm/lgamma.rst", "elements/oneMKL/source/domains/vm/linearfrac.rst", "elements/oneMKL/source/domains/vm/ln.rst", "elements/oneMKL/source/domains/vm/log10.rst", "elements/oneMKL/source/domains/vm/log1p.rst", "elements/oneMKL/source/domains/vm/log2.rst", "elements/oneMKL/source/domains/vm/logb.rst", "elements/oneMKL/source/domains/vm/maxmag.rst", "elements/oneMKL/source/domains/vm/minmag.rst", "elements/oneMKL/source/domains/vm/modf.rst", "elements/oneMKL/source/domains/vm/mul.rst", "elements/oneMKL/source/domains/vm/mulbyconj.rst", "elements/oneMKL/source/domains/vm/nearbyint.rst", "elements/oneMKL/source/domains/vm/nextafter.rst", "elements/oneMKL/source/domains/vm/pow.rst", "elements/oneMKL/source/domains/vm/pow2o3.rst", "elements/oneMKL/source/domains/vm/pow3o2.rst", "elements/oneMKL/source/domains/vm/powr.rst", "elements/oneMKL/source/domains/vm/powx.rst", "elements/oneMKL/source/domains/vm/remainder.rst", "elements/oneMKL/source/domains/vm/rint.rst", "elements/oneMKL/source/domains/vm/round.rst", "elements/oneMKL/source/domains/vm/set_status.rst", "elements/oneMKL/source/domains/vm/setmode.rst", "elements/oneMKL/source/domains/vm/sin.rst", "elements/oneMKL/source/domains/vm/sincos.rst", "elements/oneMKL/source/domains/vm/sind.rst", "elements/oneMKL/source/domains/vm/sinh.rst", "elements/oneMKL/source/domains/vm/sinpi.rst", "elements/oneMKL/source/domains/vm/special-value-notations.rst", "elements/oneMKL/source/domains/vm/sqr.rst", "elements/oneMKL/source/domains/vm/sqrt.rst", "elements/oneMKL/source/domains/vm/sub.rst", "elements/oneMKL/source/domains/vm/tan.rst", "elements/oneMKL/source/domains/vm/tand.rst", "elements/oneMKL/source/domains/vm/tanh.rst", "elements/oneMKL/source/domains/vm/tanpi.rst", "elements/oneMKL/source/domains/vm/tgamma.rst", "elements/oneMKL/source/domains/vm/trunc.rst", "elements/oneMKL/source/domains/vm/vm.rst", "elements/oneMKL/source/domains/vm/vm-exceptions.rst", "elements/oneMKL/source/domains/vm/vm-mathematical-functions.rst", "elements/oneMKL/source/domains/vm/vm-service-functions.rst", "elements/oneMKL/source/index.rst", "elements/oneTBB/source/algorithms.rst", "elements/oneTBB/source/algorithms/blocked_ranges/blocked_range2d_cls.rst", "elements/oneTBB/source/algorithms/blocked_ranges/blocked_range3d_cls.rst", "elements/oneTBB/source/algorithms/blocked_ranges/blocked_range_cls.rst", "elements/oneTBB/source/algorithms/functions/collaborative_call_once_func.rst", "elements/oneTBB/source/algorithms/functions/collaborative_once_flag_cls.rst", "elements/oneTBB/source/algorithms/functions/feeder.rst", "elements/oneTBB/source/algorithms/functions/parallel_deterministic_reduce_func.rst", "elements/oneTBB/source/algorithms/functions/parallel_for_each_func.rst", "elements/oneTBB/source/algorithms/functions/parallel_for_func.rst", "elements/oneTBB/source/algorithms/functions/parallel_invoke_func.rst", "elements/oneTBB/source/algorithms/functions/parallel_pipeline_func.rst", "elements/oneTBB/source/algorithms/functions/parallel_pipeline_func/filter_cls.rst", "elements/oneTBB/source/algorithms/functions/parallel_pipeline_func/filter_mode_enum.rst", "elements/oneTBB/source/algorithms/functions/parallel_pipeline_func/flow_control_cls.rst", "elements/oneTBB/source/algorithms/functions/parallel_reduce_func.rst", "elements/oneTBB/source/algorithms/functions/parallel_scan_func.rst", "elements/oneTBB/source/algorithms/functions/parallel_sort_func.rst", "elements/oneTBB/source/algorithms/functions/pre_scan_tag_and_final_scan_tag_clses.rst", "elements/oneTBB/source/algorithms/partitioners/affinity_partitioner.rst", "elements/oneTBB/source/algorithms/partitioners/auto_partitioner.rst", "elements/oneTBB/source/algorithms/partitioners/simple_partitioner.rst", "elements/oneTBB/source/algorithms/partitioners/static_partitioner.rst", "elements/oneTBB/source/algorithms/split_tags/proportional_split_cls.rst", "elements/oneTBB/source/algorithms/split_tags/split_cls.rst", "elements/oneTBB/source/configuration.rst", "elements/oneTBB/source/configuration/enabling_debugging_features.rst", "elements/oneTBB/source/configuration/feature_macros.rst", "elements/oneTBB/source/configuration/namespaces.rst", "elements/oneTBB/source/configuration/version_information.rst", "elements/oneTBB/source/containers.rst", "elements/oneTBB/source/containers/auxiliary/node_handles_cls.rst", "elements/oneTBB/source/containers/auxiliary/tbb_hash_compare_cls.rst", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls.rst", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/construct_destroy_copy.rst", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/safe_member_functions.rst", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/unsafe_member_functions.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/accessors.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/construct_destroy_copy.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/hash_policy.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/lookup.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/modifiers.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/parallel_iteration.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/unsafe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_map_cls.rst", "elements/oneTBB/source/containers/concurrent_map_cls/construction_destruction_copying.rst", "elements/oneTBB/source/containers/concurrent_map_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_map_cls/element_access.rst", "elements/oneTBB/source/containers/concurrent_map_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_map_cls/lookup.rst", "elements/oneTBB/source/containers/concurrent_map_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_map_cls/non_member_lexicographical_comparisons.rst", "elements/oneTBB/source/containers/concurrent_map_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_map_cls/observers.rst", "elements/oneTBB/source/containers/concurrent_map_cls/parallel_iteration.rst", "elements/oneTBB/source/containers/concurrent_map_cls/safe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_map_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_map_cls/unsafe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_map_cls/value_compare_cls.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/construction_destruction_copying.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/lookup.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/non_member_lexicographical_comparisons.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/observers.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/parallel_iteration.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/safe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/unsafe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/value_compare_cls.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/construction_destruction_copying.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/lookup.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/non_member_lexicographical_comparisons.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/observers.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/parallel_iteration.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/safe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/unsafe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_priority_queue_cls.rst", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/construct_destroy_copy.rst", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/safe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/unsafe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_queue_cls.rst", "elements/oneTBB/source/containers/concurrent_queue_cls/construct_destroy_copy.rst", "elements/oneTBB/source/containers/concurrent_queue_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_queue_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_queue_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_queue_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_queue_cls/safe_member_functions.rst", "elements/oneTBB/source/containers/concurrent_queue_cls/unsafe_member_functions.rst", "elements/oneTBB/source/containers/concurrent_set_cls.rst", "elements/oneTBB/source/containers/concurrent_set_cls/construction_destruction_copying.rst", "elements/oneTBB/source/containers/concurrent_set_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_set_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_set_cls/lookup.rst", "elements/oneTBB/source/containers/concurrent_set_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_set_cls/non_member_lexicographical_comparisons.rst", "elements/oneTBB/source/containers/concurrent_set_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_set_cls/observers.rst", "elements/oneTBB/source/containers/concurrent_set_cls/parallel_iteration.rst", "elements/oneTBB/source/containers/concurrent_set_cls/safe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_set_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_set_cls/unsafe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/bucket_interface.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/construction_destruction_copying.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/element_access.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/hash_policy.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/lookup.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/observers.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/parallel_iteration.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/safe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/unsafe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/bucket_interface.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/construction_destruction_copying.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/hash_policy.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/lookup.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/observers.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/parallel_iteration.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/safe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/unsafe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/bucket_interface.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/construction_destruction_copying.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/hash_policy.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/lookup.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/observers.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/parallel_iteration.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/safe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/unsafe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/bucket_interface.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/construction_destruction_copying.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/hash_policy.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/lookup.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/observers.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/parallel_iteration.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/safe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/unsafe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_vector_cls.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/concurrent_growth.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/construct_destroy_copy.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/element_access.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/non_member_lexicographical_comparisons.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/parallel_iteration.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/unsafe_operations.rst", "elements/oneTBB/source/deprecated/task_arena_attach_tag.rst", "elements/oneTBB/source/flow_graph.rst", "elements/oneTBB/source/flow_graph/async_node_cls.rst", "elements/oneTBB/source/flow_graph/broadcast_node_cls.rst", "elements/oneTBB/source/flow_graph/buffer_node_cls.rst", "elements/oneTBB/source/flow_graph/composite_node_cls.rst", "elements/oneTBB/source/flow_graph/continue_msg_cls.rst", "elements/oneTBB/source/flow_graph/continue_node_cls.rst", "elements/oneTBB/source/flow_graph/copy_body_func.rst", "elements/oneTBB/source/flow_graph/dependency_flow_graph_example.rst", "elements/oneTBB/source/flow_graph/forwarding_and_buffering.rst", "elements/oneTBB/source/flow_graph/func_node_cls.rst", "elements/oneTBB/source/flow_graph/functional_node_policies.rst", "elements/oneTBB/source/flow_graph/graph_cls.rst", "elements/oneTBB/source/flow_graph/graph_node_cls.rst", "elements/oneTBB/source/flow_graph/indexer_node_cls.rst", "elements/oneTBB/source/flow_graph/input_node_cls.rst", "elements/oneTBB/source/flow_graph/input_port_func.rst", "elements/oneTBB/source/flow_graph/join_node_cls.rst", "elements/oneTBB/source/flow_graph/join_node_policies.rst", "elements/oneTBB/source/flow_graph/limiter_node_cls.rst", "elements/oneTBB/source/flow_graph/make_edge_func.rst", "elements/oneTBB/source/flow_graph/message_flow_graph_example.rst", "elements/oneTBB/source/flow_graph/multifunc_node_cls.rst", "elements/oneTBB/source/flow_graph/node_priorities.rst", "elements/oneTBB/source/flow_graph/output_port_func.rst", "elements/oneTBB/source/flow_graph/overwrite_node_cls.rst", "elements/oneTBB/source/flow_graph/predefined_concurrency_limits.rst", "elements/oneTBB/source/flow_graph/priority_queue_node_cls.rst", "elements/oneTBB/source/flow_graph/queue_node_cls.rst", "elements/oneTBB/source/flow_graph/receiver.rst", "elements/oneTBB/source/flow_graph/remove_edge_func.rst", "elements/oneTBB/source/flow_graph/reset_flags_enum.rst", "elements/oneTBB/source/flow_graph/sender.rst", "elements/oneTBB/source/flow_graph/sequencer_node_cls.rst", "elements/oneTBB/source/flow_graph/split_node_cls.rst", "elements/oneTBB/source/flow_graph/tagged_msg_cls.rst", "elements/oneTBB/source/flow_graph/write_once_node_cls.rst", "elements/oneTBB/source/identifiers.rst", "elements/oneTBB/source/info_namespace.rst", "elements/oneTBB/source/intro.rst", "elements/oneTBB/source/memory_allocation.rst", "elements/oneTBB/source/memory_allocation/c_interface_to_scalable_allocator.rst", "elements/oneTBB/source/memory_allocation/cache_aligned_allocator_cls.rst", "elements/oneTBB/source/memory_allocation/cache_aligned_resource_cls.rst", "elements/oneTBB/source/memory_allocation/scalable_allocator_cls.rst", "elements/oneTBB/source/memory_allocation/scalable_memory_resource_func.rst", "elements/oneTBB/source/memory_allocation/tbb_allocator_cls.rst", "elements/oneTBB/source/mutual_exclusion.rst", "elements/oneTBB/source/mutual_exclusion/mutex_cls.rst", "elements/oneTBB/source/mutual_exclusion/null_mutex_cls.rst", "elements/oneTBB/source/mutual_exclusion/null_rw_mutex_cls.rst", "elements/oneTBB/source/mutual_exclusion/queuing_mutex_cls.rst", "elements/oneTBB/source/mutual_exclusion/queuing_rw_mutex_cls.rst", "elements/oneTBB/source/mutual_exclusion/rw_mutex_cls.rst", "elements/oneTBB/source/mutual_exclusion/speculative_spin_mutex_cls.rst", "elements/oneTBB/source/mutual_exclusion/speculative_spin_rw_mutex_cls.rst", "elements/oneTBB/source/mutual_exclusion/spin_mutex_cls.rst", "elements/oneTBB/source/mutual_exclusion/spin_rw_mutex_cls.rst", "elements/oneTBB/source/named_requirements.rst", "elements/oneTBB/source/named_requirements/algorithms/blocked_range_val.rst", "elements/oneTBB/source/named_requirements/algorithms/container_based_sequence.rst", "elements/oneTBB/source/named_requirements/algorithms/filter_body.rst", "elements/oneTBB/source/named_requirements/algorithms/par_for_body.rst", "elements/oneTBB/source/named_requirements/algorithms/par_for_each_body.rst", "elements/oneTBB/source/named_requirements/algorithms/par_for_func.rst", "elements/oneTBB/source/named_requirements/algorithms/par_for_index.rst", "elements/oneTBB/source/named_requirements/algorithms/par_reduce_body.rst", "elements/oneTBB/source/named_requirements/algorithms/par_reduce_func.rst", "elements/oneTBB/source/named_requirements/algorithms/par_reduce_reduction.rst", "elements/oneTBB/source/named_requirements/algorithms/par_scan_body.rst", "elements/oneTBB/source/named_requirements/algorithms/par_scan_combine.rst", "elements/oneTBB/source/named_requirements/algorithms/par_scan_func.rst", "elements/oneTBB/source/named_requirements/algorithms/range.rst", "elements/oneTBB/source/named_requirements/algorithms/splittable.rst", "elements/oneTBB/source/named_requirements/containers/container_range.rst", "elements/oneTBB/source/named_requirements/containers/hash_compare.rst", "elements/oneTBB/source/named_requirements/flow_graph/async_node_body.rst", "elements/oneTBB/source/named_requirements/flow_graph/continue_node_body.rst", "elements/oneTBB/source/named_requirements/flow_graph/function_node_body.rst", "elements/oneTBB/source/named_requirements/flow_graph/gateway_type.rst", "elements/oneTBB/source/named_requirements/flow_graph/input_node_body.rst", "elements/oneTBB/source/named_requirements/flow_graph/join_node_func_obj.rst", "elements/oneTBB/source/named_requirements/flow_graph/multifunction_node_body.rst", "elements/oneTBB/source/named_requirements/flow_graph/sequencer.rst", "elements/oneTBB/source/named_requirements/mutexes/mutex.rst", "elements/oneTBB/source/named_requirements/mutexes/rw_mutex.rst", "elements/oneTBB/source/named_requirements/task_scheduler/suspend_func.rst", "elements/oneTBB/source/nested-aux-interfaces.rst", "elements/oneTBB/source/nested-depr-interfaces.rst", "elements/oneTBB/source/nested-gen-info.rst", "elements/oneTBB/source/nested-index.rst", "elements/oneTBB/source/nested-interfaces.rst", "elements/oneTBB/source/notation.rst", "elements/oneTBB/source/task_scheduler.rst", "elements/oneTBB/source/task_scheduler/attach_tag_type.rst", "elements/oneTBB/source/task_scheduler/scheduling_controls/global_control_cls.rst", "elements/oneTBB/source/task_scheduler/scheduling_controls/resumable_tasks.rst", "elements/oneTBB/source/task_scheduler/scheduling_controls/task_group_context_cls.rst", "elements/oneTBB/source/task_scheduler/scheduling_controls/task_scheduler_handle_cls.rst", "elements/oneTBB/source/task_scheduler/task_arena/task_arena_cls.rst", "elements/oneTBB/source/task_scheduler/task_arena/task_scheduler_observer_cls.rst", "elements/oneTBB/source/task_scheduler/task_arena/this_task_arena_ns.rst", "elements/oneTBB/source/task_scheduler/task_group/task_group_cls.rst", "elements/oneTBB/source/task_scheduler/task_group/task_group_status_enum.rst", "elements/oneTBB/source/task_scheduler/task_group/task_handle.rst", "elements/oneTBB/source/thread_local_storage.rst", "elements/oneTBB/source/thread_local_storage/combinable_cls.rst", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls.rst", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/combining.rst", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/construct_destroy_copy.rst", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/iteration.rst", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/safe_modifiers.rst", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/size_and_capacity.rst", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/unsafe_modifiers.rst", "elements/oneTBB/source/thread_local_storage/flattened2d_cls.rst", "elements/oneTBB/source/thread_safety.rst", "elements/oneTBB/source/timing.rst", "elements/oneTBB/source/timing/tick_count_cls.rst", "index.rst", "introduction.rst", "notices.rst"], "titles": ["Software Architecture", "&lt;no title&gt;", "Level Zero", "Definitions", "oneCCL", "Introduction", "Namespaces", "Programming Model", "Collective Operations", "Datatypes", "Error handling", "Generic Workflow", "oneCCL Concepts", "Operation Attributes", "Operation Progress Tracking", "Communication Operations", "Reductions", "Current Version of this oneCCL Specification", "Clustering", "K-Means", "K-Means initialization", "Decomposition", "Principal Components Analysis (PCA)", "Algorithms", "Nearest Neighbors (kNN)", "k-Nearest Neighbors Classification (k-NN)", "Appendix", "k-d Tree", "Bibliography", "Common type definitions", "Error handling", "Header files", "Common Interface", "Current Version of this oneDAL Specification", "Column accessor", "Row accessor", "Accessors", "Array", "CSV data source", "Data Sources", "Data management", "Homogeneous table", "Tables", "Glossary", "oneDAL", "Introduction", "Mathematical Notations", "Computational modes", "Descriptors", "End-to-end example", "Programming model", "Operations", "Supported operations", "Conventions", "Bfloat16", "Data types", "Int8", "Data model", "Memory Formats", "Memory", "Memory Descriptors and Objects", "Execution Model", "Data Model", "Common Definitions", "Graph extension", "Abs", "AbsBackward", "Add", "AvgPool", "AvgPoolBackward", "BatchNormForwardTraining", "BatchNormInference", "BatchNormTrainingBackward", "BiasAdd", "BiasAddBackward", "Clamp", "ClampBackward", "Concat", "ConvTranspose", "ConvTransposeBackwardData", "ConvTransposeBackwardWeights", "Convolution", "ConvolutionBackwardData", "ConvolutionBackwardWeights", "Dequantize", "Divide", "DynamicDequantize", "DynamicQuantize", "Elu", "EluBackward", "End", "Exp", "GELU", "GELUBackward", "HardSigmoid", "HardSigmoidBackward", "HardSwish", "HardSwishBackward", "Interpolate", "InterpolateBackward", "LayerNorm", "LayerNormBackward", "LeakyReLU", "Log", "LogSoftmax", "LogSoftmaxBackward", "MatMul", "MaxPool", "MaxPoolBackward", "Maximum", "Minimum", "Mish", "MishBackward", "Multiply", "PReLU", "PReLUBackward", "Pow", "Quantize", "ReLU", "ReLUBackward", "Reciprocal", "ReduceL1", "ReduceL2", "ReduceMax", "ReduceMean", "ReduceMin", "ReduceProd", "ReduceSum", "Reorder", "Round", "Select", "Sigmoid", "SigmoidBackward", "SoftPlus", "SoftPlusBackward", "SoftMax", "SoftMaxBackward", "Sqrt", "SqrtBackward", "Square", "SquaredDifference", "StaticReshape", "StaticTranspose", "Subtract", "Tanh", "TanhBackward", "TypeCast", "Wildcard", "Operation Set", "Programming Model", "oneDNN", "Introduction", "Attributes", "Post-ops", "Batch Normalization", "Binary", "Concat", "Convolution and Deconvolution", "Elementwise", "Common Definitions", "Primitives", "Inner Product", "Layer normalization", "Local Response Normalization", "Matrix Multiplication", "Pooling", "Prelu", "Reduction", "Reorder", "Resampling", "RNN", "Shuffle", "Softmax", "Sum", "Namespaces", "oneDPL", "Parallel API", "SYCL Kernels API", "oneMKL Appendix", "oneMKL Architecture", "asum", "axpby", "axpy", "axpy_batch", "BLAS Routines", "BLAS Level 1 Routines", "BLAS Level 2 Routines", "BLAS Level 3 Routines", "BLAS-like Extensions", "copy", "copy_batch", "dgmm_batch", "dot", "dotc", "dotu", "gbmv", "gemm", "gemm_batch", "gemm_bias", "gemmt", "gemv", "gemv_batch", "ger", "gerc", "geru", "hbmv", "hemm", "hemv", "her", "her2", "her2k", "herk", "hpmv", "hpr", "hpr2", "iamax", "iamin", "imatcopy", "imatcopy_batch", "nrm2", "omatadd", "omatadd_batch", "omatcopy", "omatcopy2", "omatcopy_batch", "rot", "rotg", "rotm", "rotmg", "sbmv", "scal", "sdsdot", "spmv", "spr", "spr2", "swap", "symm", "symv", "syr", "syr2", "syr2k", "syrk", "syrk_batch", "tbmv", "tbsv", "tpmv", "tpsv", "trmm", "trmv", "trsm", "trsm_batch", "trsv", "compute_backward", "compute_forward", "Configuration of Data Layouts", "Data storage", "Workspace placement", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">descriptor</span></code> class", "Discrete Fourier Transform Functions", "DFT-related scoped enumeration types", "oneMKL Domains", "gebrd", "gebrd_scratchpad_size", "geqrf", "geqrf_batch", "geqrf_batch_scratchpad_size", "geqrf_scratchpad_size", "gerqf", "gerqf_scratchpad_size", "gesvd", "gesvd_scratchpad_size", "getrf", "getrf_batch", "getrf_batch_scratchpad_size", "getrf_scratchpad_size", "getri", "getri_batch", "getri_batch_scratchpad_size", "getri_scratchpad_size", "getrs", "getrs_batch", "getrs_batch_scratchpad_size", "getrs_scratchpad_size", "heevd", "heevd_scratchpad_size", "hegvd", "hegvd_scratchpad_size", "hetrd", "hetrd_scratchpad_size", "hetrf", "hetrf_scratchpad_size", "LAPACK Routines", "orgbr", "orgbr_scratchpad_size", "orgqr", "orgqr_batch", "orgqr_batch_scratchpad_size", "orgqr_scratchpad_size", "orgtr", "orgtr_scratchpad_size", "ormqr", "ormqr_scratchpad_size", "ormrq", "ormrq_scratchpad_size", "ormtr", "ormtr_scratchpad_size", "potrf", "potrf_batch", "potrf_batch_scratchpad_size", "potrf_scratchpad_size", "potri", "potri_scratchpad_size", "potrs", "potrs_batch", "potrs_batch_scratchpad_size", "potrs_scratchpad_size", "syevd", "syevd_scratchpad_size", "sygvd", "sygvd_scratchpad_size", "sytrd", "sytrd_scratchpad_size", "sytrf", "sytrf_scratchpad_size", "trtrs", "trtrs_scratchpad_size", "ungbr", "ungbr_scratchpad_size", "ungqr", "ungqr_batch", "ungqr_batch_scratchpad_size", "ungqr_scratchpad_size", "ungtr", "ungtr_scratchpad_size", "unmqr", "unmqr_scratchpad_size", "unmrq", "unmrq_scratchpad_size", "unmtr", "unmtr_scratchpad_size", "Matrix Storage", "Bibliography", "Device Distributions", "Distributions Template Parameter Method", "Device Engines (Basic Random Number Generators)", "bernoulli", "bits", "exponential", "gaussian", "generate", "Device Generate Routines", "lognormal", "mcg31m1", "mcg59", "mrg32k3a", "philox4x32x10", "poisson", "skip_ahead", "uniform_bits", "uniform (Continuous)", "uniform (Discrete)", "oneMKL RNG Device Usage Model", "Random Number Generators Device Routines", "Device Service Routines", "Host Distributions", "Distributions Template Parameter Method", "Host Engines (Basic Random Number Generators)", "Host Generate Routine", "ars5", "bernoulli", "beta", "binomial", "bits", "cauchy", "chi_square", "default_engine", "exponential", "gamma", "gaussian", "gaussian_mv", "generate", "geometric", "gumbel", "hypergeometric", "laplace", "leapfrog", "lognormal", "mcg31m1", "mcg59", "mrg32k3a", "mt19937", "mt2203", "multinomial", "negative_binomial", "niederreiter", "nondeterministic", "philox4x32x10", "poisson", "poisson_v", "r250", "rayleigh", "sfmt19937", "skip_ahead", "sobol", "uniform (continuous)", "uniform (discrete)", "uniform_bits", "weibull", "wichmann_hill", "oneMKL RNG Host Usage Model", "Random Number Generators Host Routines", "Host Service Routines", "Random Number Generators (RNG)", "Data handles", "Sparse storage formats", "init_coo_matrix", "init_csr_matrix", "init_dense_matrix", "init_dense_vector", "release_dense_matrix", "release_dense_vector", "release_sparse_matrix", "set_coo_matrix_data", "set_csr_matrix_data", "set_dense_matrix_data", "set_dense_vector_data", "set_matrix_property", "Matrix view", "spmm", "spmv", "spsv", "Sparse BLAS", "Supported template types", "central_moment", "central_moment with provided mean", "central_sum", "central_sum with provided mean", "dataset", "kurtosis", "kurtosis with provided mean", "make_dataset", "max", "mean", "min", "min_max", "Summary Statistics", "raw_moment", "raw_sum", "Summary Statistics Routines", "Service Routines", "skewness", "skewness with provided mean", "oneMKL Summary Statistics Usage Model", "variation", "variation with provided mean", "Scalar Arguments in BLAS", "abs", "acos", "acosh", "acospi", "add", "arg", "asin", "asinh", "asinpi", "atan", "atan2", "atan2pi", "atanh", "atanpi", "Bibliography", "cbrt", "cdfnorm", "cdfnorminv", "ceil", "cis", "clear_status", "conj", "copysign", "cos", "cosd", "cosh", "cospi", "create_error_handler", "div", "erf", "erfc", "erfcinv", "erfinv", "exp", "exp10", "exp2", "expint1", "expm1", "fdim", "floor", "fmax", "fmin", "fmod", "frac", "get_mode", "get_status", "hypot", "inv", "invcbrt", "invsqrt", "lgamma", "linearfrac", "ln", "log10", "log1p", "log2", "logb", "maxmag", "minmag", "modf", "mul", "mulbyconj", "nearbyint", "nextafter", "pow", "pow2o3", "pow3o2", "powr", "powx", "remainder", "rint", "round", "set_status", "set_mode", "sin", "sincos", "sind", "sinh", "sinpi", "Special Value Notations", "sqr", "sqrt", "sub", "tan", "tand", "tanh", "tanpi", "tgamma", "trunc", "Vector Math", "Exceptions", "VM Mathematical Functions", "VM Service Functions", "oneMKL", "Algorithms", "blocked_range2d", "blocked_range3d", "blocked_range", "collaborative_call_once", "collaborative_once_flag", "feeder", "parallel_deterministic_reduce", "parallel_for_each", "parallel_for", "parallel_invoke", "parallel_pipeline", "filter", "filter_mode", "flow_control", "parallel_reduce", "parallel_scan", "parallel_sort", "pre_scan_tag and final_scan_tag", "affinity_partitioner", "auto_partitioner", "simple_partitioner", "static_partitioner", "proportional split", "split", "Configuration", "Enabling Debugging Features", "Feature Macros", "Namespaces", "Version Information", "Containers", "Node handles", "tbb_hash_compare", "concurrent_bounded_queue", "Construction, destruction, copying", "Deduction guides", "Iterators", "Non-member binary comparisons", "Non-member swap", "Concurrently safe member functions", "Concurrently unsafe member functions", "concurrent_hash_map", "accessor and const_accessor", "Construction, destruction, copying", "Deduction guides", "Hash policy", "Iterators", "Lookup", "Concurrently safe modifiers", "Non-member binary comparisons", "Non-member swap", "Parallel iteration", "Size and capacity", "Concurrently unsafe modifiers", "concurrent_map", "Construction, destruction, copying", "Deduction guides", "Element access", "Iterators", "Lookup", "Non-member binary comparisons", "Non-member lexicographical comparisons", "Non-member swap", "Observers", "Parallel iteration", "Concurrently safe modifiers", "Size and capacity", "Concurrently unsafe modifiers", "value_compare", "concurrent_multimap", "Construction, destruction, copying", "Deduction guides", "Iterators", "Lookup", "Non-member binary comparisons", "Non-member lexicographical comparisons", "Non-member swap", "Observers", "Parallel iteration", "Concurrently safe modifiers", "Size and capacity", "Concurrently unsafe modifiers", "value_compare", "concurrent_multiset", "Construction, destruction, copying", "Deduction guides", "Iterators", "Lookup", "Non-member binary comparisons", "Non-member lexicographical comparisons", "Non-member swap", "Observers", "Parallel iteration", "Concurrently safe modifiers", "Size and capacity", "Concurrently unsafe modifiers", "concurrent_priority_queue", "Construction, destruction, copying", "Deduction guides", "Non-member binary comparisons", "Non-member swap", "Concurrently safe modifiers", "Size and capacity", "Concurrently unsafe modifiers", "concurrent_queue", "Construction, destruction, copying", "Deduction guides", "Iterators", "Non-member binary comparisons", "Non-member swap", "Concurrently safe member functions", "Concurrently unsafe member functions", "concurrent_set", "Construction, destruction, copying", "Deduction guides", "Iterators", "Lookup", "Non-member binary comparisons", "Non-member lexicographical comparisons", "Non-member swap", "Observers", "Parallel iteration", "Concurrently safe modifiers", "Size and capacity", "Concurrently unsafe modifiers", "concurrent_unordered_map", "Bucket interface", "Construction, destruction, copying", "Deduction guides", "Element access", "Hash policy", "Iterators", "Lookup", "Non-member binary comparisons", "Non-member swap", "Observers", "Parallel iteration", "Concurrently safe modifiers", "Size and capacity", "Concurrently unsafe modifiers", "concurrent_unordered_multimap", "Bucket interface", "Construction, destruction, copying", "Deduction guides", "Hash policy", "Iterators", "Lookup", "Non-member binary comparisons", "Non-member swap", "Observers", "Parallel iteration", "Concurrently safe modifiers", "Size and capacity", "Concurrently unsafe modifiers", "concurrent_unordered_multiset", "Bucket interface", "Construction, destruction, copying", "Deduction guides", "Hash policy", "Iterators", "Lookup", "Non-member binary comparisons", "Non-member swap", "Observers", "Parallel iteration", "Concurrently safe modifiers", "Size and capacity", "Concurrently unsafe modifiers", "concurrent_unordered_set", "Bucket interface", "Construction, destruction, copying", "Deduction guides", "Hash policy", "Iterators", "Lookup", "Non-member binary comparisons", "Non-member swap", "Observers", "Parallel iteration", "Concurrently safe modifiers", "Size and capacity", "Concurrently unsafe modifiers", "concurrent_vector", "Concurrent growth", "Construction, destruction, copying", "Deduction guides", "Element access", "Iterators", "Non-member binary comparisons", "Non-member lexicographical comparisons", "Non-member swap", "Parallel iteration", "Size and capacity", "Concurrently unsafe operations", "task_arena::attach", "Flow Graph", "async_node", "broadcast_node", "buffer_node", "composite_node", "continue_msg", "continue_node", "copy_body", "Dependency Flow Graph Example", "Forwarding and Buffering", "function_node", "Function Nodes Policies", "graph", "graph_node", "indexer_node", "input_node", "input_port", "join_node", "join_node Policies", "limiter_node", "make_edge", "Message Flow Graph Example", "multifunction_node", "Nodes Priorities", "output_port", "overwrite_node", "Predefined Concurrency Limits", "priority_queue_node", "queue_node", "receiver", "remove_edge", "reset_flags Enumeration", "sender", "sequencer_node", "split_node", "tagged_msg", "write_once_node", "Identifiers", "info Namespace", "Introduction", "Memory Allocation", "C Interface to Scalable Allocator", "cache_aligned_allocator", "cache_aligned_resource", "scalable_allocator", "scalable_memory_resource", "tbb_allocator", "Mutual Exclusion", "mutex", "null_mutex", "null_rw_mutex", "queuing_mutex", "queuing_rw_mutex", "rw_mutex", "speculative_spin_mutex", "speculative_spin_rw_mutex", "spin_mutex", "spin_rw_mutex", "Named Requirements", "BlockedRangeValue", "ContainerBasedSequence", "FilterBody", "ParallelForBody", "ParallelForEachBody", "ParallelForFunc", "ParallelForIndex", "ParallelReduceBody", "ParallelReduceFunc", "ParallelReduceReduction", "ParallelScanBody", "ParallelScanCombine", "ParallelScanFunc", "Range", "Splittable", "ContainerRange", "HashCompare", "AsyncNodeBody", "ContinueNodeBody", "FunctionNodeBody", "GatewayType", "InputNodeBody", "JoinNodeFunctionObject", "MultifunctionNodeBody", "Sequencer", "Mutex", "ReaderWriterMutex", "SuspendFunc", "oneTBB Auxiliary Interfaces", "oneTBB Deprecated Interfaces", "General Information", "oneTBB", "oneTBB Interfaces", "Notational Conventions", "Task Scheduler", "attach tag type", "global_control", "Resumable tasks", "task_group_context", "task_scheduler_handle", "task_arena", "task_scheduler_observer", "this_task_arena", "task_group", "task_group_status", "task_handle", "Thread Local Storage", "combinable", "enumerable_thread_specific", "Combining", "Construction, destruction, copying", "Iteration", "Concurrently safe modifiers", "Size and capacity", "Concurrently unsafe modifiers", "flattened2d", "Thread Safety", "Timing", "tick_count class", "oneAPI Specification", "Introduction", "Legal Notices and Disclaimers"], "terms": {"dpc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865], "librari": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865], "3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865], "rev": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865], "collect": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865], "commun": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865], "data": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 60, 61, 63, 64, 148, 149, 150, 151, 152, 153, 159, 160, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865], "analyt": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865], "oned": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865], "daal": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865], "deep": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865], "neural": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865], "network": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865], "level": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865], "zero": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865], "thread": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 851, 852, 853, 854, 855, 856, 857, 858, 859, 861, 862, 863, 864, 865], "build": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865], "block": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865], "math": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865], "kernel": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865], "\u00bd": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865], "\u00bc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865], "\u215b": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865], "\u00be": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865], "\u215c": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865], "\u215d": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865], "\u215e": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865], "_": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865], "\u00b5": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865], "\u03c9": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865], "\u00aa": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865], "\u00ba": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865], "\u00b9": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865], "\u00b2": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865], "\u00b3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865], "intel": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865], "media": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865], "develop": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865], "kit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865], "provid": [0, 2, 5, 8, 10, 12, 13, 14, 31, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 48, 49, 55, 56, 58, 60, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 157, 159, 160, 162, 163, 164, 169, 170, 174, 175, 176, 177, 178, 179, 184, 188, 218, 221, 224, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 267, 272, 276, 280, 287, 291, 307, 308, 313, 314, 320, 343, 344, 345, 346, 347, 348, 351, 356, 358, 359, 360, 364, 366, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 381, 382, 383, 384, 386, 392, 393, 397, 398, 400, 403, 404, 405, 406, 407, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 440, 448, 449, 455, 479, 480, 482, 483, 530, 531, 532, 534, 535, 539, 540, 542, 550, 557, 559, 562, 566, 570, 579, 580, 583, 584, 585, 591, 592, 593, 594, 597, 598, 604, 605, 606, 619, 620, 621, 633, 634, 635, 646, 647, 648, 654, 655, 656, 662, 663, 664, 675, 677, 678, 690, 692, 693, 704, 706, 707, 718, 720, 721, 732, 734, 735, 745, 746, 751, 755, 760, 763, 765, 767, 768, 772, 775, 778, 784, 785, 786, 787, 789, 791, 792, 799, 800, 817, 819, 820, 828, 838, 841, 844, 850, 851, 852, 856, 859, 861, 862, 863, 864, 865], "common": [0, 3, 4, 13, 31, 42, 44, 48, 50, 51, 64, 149, 152, 153, 160, 255, 259, 352, 353, 354, 355, 357, 365, 368, 387, 388, 389, 390, 391, 396, 399, 401, 408, 507, 765, 775, 850, 865], "interfac": [0, 1, 2, 12, 36, 39, 40, 43, 44, 45, 48, 64, 179, 184, 254, 258, 260, 291, 357, 548, 561, 579, 675, 690, 704, 718, 746, 768, 783, 784, 785, 821, 829, 835, 839, 842, 863, 864], "across": [0, 1, 2, 8, 40, 45, 47, 150, 159, 162, 164, 179, 260, 385, 551, 552, 566, 572, 751, 817, 850, 852, 853, 863, 864], "rang": [0, 30, 31, 32, 34, 35, 36, 37, 42, 54, 56, 77, 84, 86, 87, 117, 121, 122, 123, 124, 125, 126, 127, 142, 153, 176, 177, 254, 257, 259, 362, 408, 432, 476, 483, 501, 520, 524, 528, 547, 551, 552, 553, 557, 559, 565, 566, 569, 570, 571, 572, 573, 574, 591, 593, 596, 604, 605, 617, 619, 631, 633, 645, 662, 663, 674, 675, 677, 689, 690, 703, 704, 717, 718, 720, 731, 732, 778, 803, 804, 807, 810, 811, 812, 814, 816, 818, 819, 836, 852, 855, 859], "parallel": [0, 1, 43, 44, 152, 174, 175, 257, 260, 341, 366, 409, 554, 558, 559, 560, 561, 563, 565, 566, 570, 571, 572, 591, 604, 619, 633, 662, 675, 690, 704, 718, 732, 745, 762, 768, 778, 784, 799, 800, 817, 819, 836, 838, 841, 843, 844, 851, 852, 861, 863, 864], "acceler": [0, 1, 28, 40, 149, 163, 549, 863, 864], "see": [0, 8, 12, 19, 20, 22, 25, 37, 40, 41, 42, 43, 48, 58, 60, 61, 100, 151, 152, 153, 154, 158, 159, 162, 164, 165, 170, 176, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 256, 289, 292, 293, 306, 307, 322, 326, 327, 345, 346, 347, 348, 349, 351, 356, 358, 359, 360, 369, 370, 371, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 392, 393, 397, 398, 400, 402, 404, 405, 407, 413, 415, 416, 417, 418, 422, 423, 424, 425, 427, 445, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 551, 552, 553, 557, 559, 561, 564, 565, 566, 568, 569, 571, 572, 573, 574, 578, 675, 677, 689, 690, 692, 703, 704, 706, 717, 718, 720, 731, 732, 734, 743, 744, 749, 753, 759, 761, 769, 770, 780, 785, 788, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 822, 828, 829, 830, 831, 839, 840, 843, 844, 847, 864], "figur": [0, 170, 385, 402, 472, 473, 485, 486, 487, 488, 766], "below": [0, 8, 11, 12, 31, 36, 40, 48, 49, 55, 58, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 153, 154, 157, 158, 161, 162, 164, 165, 171, 179, 198, 254, 255, 256, 258, 261, 263, 264, 287, 304, 305, 320, 338, 342, 364, 415, 416, 455, 461, 476, 501, 507, 528, 548, 557, 559, 565, 566, 576, 579, 675, 677, 689, 690, 692, 703, 704, 706, 717, 718, 720, 731, 734, 743, 753, 754, 756, 764, 766, 786, 803, 838], "programm": [0, 37, 179, 864], "us": [0, 2, 5, 8, 9, 10, 11, 12, 13, 14, 19, 20, 22, 25, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 67, 70, 76, 81, 82, 84, 85, 86, 87, 89, 90, 98, 99, 100, 101, 109, 110, 113, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 130, 132, 138, 140, 141, 143, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 186, 188, 191, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 212, 217, 218, 220, 221, 222, 223, 224, 236, 242, 243, 245, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 267, 269, 271, 272, 275, 276, 279, 280, 283, 285, 287, 289, 291, 292, 294, 295, 298, 299, 300, 302, 304, 305, 306, 307, 310, 312, 313, 316, 318, 320, 322, 324, 326, 328, 329, 332, 333, 334, 336, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 356, 358, 359, 360, 362, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 391, 392, 393, 394, 397, 398, 400, 403, 404, 405, 406, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 450, 451, 452, 453, 454, 455, 461, 472, 473, 479, 480, 482, 485, 486, 487, 488, 507, 520, 526, 530, 531, 532, 534, 539, 540, 542, 546, 549, 551, 552, 553, 555, 556, 557, 561, 562, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 579, 581, 582, 583, 584, 585, 589, 591, 592, 593, 594, 598, 604, 605, 606, 613, 615, 618, 619, 620, 621, 627, 629, 632, 633, 634, 635, 641, 643, 646, 647, 648, 651, 654, 655, 656, 660, 662, 663, 664, 670, 672, 675, 676, 677, 678, 687, 690, 691, 692, 693, 701, 704, 705, 706, 707, 715, 718, 719, 720, 721, 729, 732, 733, 734, 735, 744, 745, 746, 749, 750, 751, 753, 754, 755, 756, 758, 759, 760, 762, 763, 764, 766, 767, 768, 771, 778, 779, 780, 781, 782, 783, 784, 786, 787, 789, 790, 791, 793, 794, 795, 798, 799, 801, 803, 805, 810, 817, 818, 819, 820, 826, 829, 837, 838, 839, 840, 841, 842, 844, 845, 846, 849, 851, 852, 853, 854, 859, 862, 864, 865], "sycl": [0, 11, 12, 28, 34, 35, 37, 39, 41, 43, 49, 51, 52, 60, 61, 150, 159, 175, 176, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 349, 352, 353, 354, 355, 361, 362, 368, 380, 387, 388, 389, 390, 391, 394, 395, 396, 399, 401, 403, 408, 409, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544], "both": [0, 2, 5, 37, 43, 45, 48, 54, 57, 58, 60, 62, 63, 67, 69, 70, 72, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 100, 101, 109, 110, 113, 117, 143, 149, 152, 154, 158, 162, 172, 179, 210, 218, 221, 223, 224, 240, 254, 255, 267, 269, 362, 410, 426, 489, 548, 553, 557, 566, 749, 753, 766, 786, 846], "The": [0, 2, 5, 6, 8, 9, 12, 13, 14, 19, 20, 22, 23, 25, 28, 29, 30, 31, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 565, 566, 567, 569, 570, 571, 572, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 589, 591, 592, 593, 594, 596, 601, 602, 603, 604, 605, 606, 608, 615, 616, 617, 618, 619, 620, 621, 622, 629, 630, 631, 632, 633, 634, 635, 636, 643, 644, 645, 646, 647, 648, 651, 652, 653, 654, 655, 656, 657, 660, 662, 663, 664, 665, 672, 673, 674, 675, 677, 678, 681, 687, 688, 689, 690, 692, 693, 695, 701, 702, 703, 704, 706, 707, 709, 715, 716, 717, 718, 720, 721, 723, 729, 730, 731, 732, 734, 735, 736, 737, 743, 744, 745, 746, 747, 748, 749, 751, 753, 754, 755, 756, 758, 759, 760, 762, 763, 764, 765, 766, 767, 768, 770, 772, 773, 774, 775, 777, 778, 779, 780, 781, 782, 783, 785, 786, 787, 788, 789, 790, 791, 792, 793, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 811, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 837, 838, 840, 841, 842, 843, 844, 845, 846, 847, 849, 851, 852, 853, 854, 855, 857, 858, 859, 861, 862, 864, 865], "capabl": [0, 2, 5, 50, 62, 63, 176, 778, 784], "ar": [0, 2, 8, 10, 12, 19, 22, 25, 30, 31, 34, 35, 36, 37, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 78, 79, 80, 81, 82, 83, 100, 101, 106, 107, 108, 121, 122, 123, 124, 125, 126, 127, 130, 140, 141, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 181, 182, 183, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 220, 221, 222, 223, 224, 227, 228, 229, 232, 234, 236, 237, 239, 240, 241, 242, 244, 246, 247, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 267, 269, 270, 271, 272, 279, 280, 283, 284, 285, 286, 287, 289, 291, 292, 307, 308, 312, 313, 314, 316, 317, 318, 319, 320, 322, 324, 325, 326, 329, 340, 342, 343, 347, 348, 352, 355, 359, 360, 362, 364, 365, 366, 368, 370, 372, 387, 391, 394, 396, 399, 401, 403, 404, 405, 408, 410, 412, 414, 415, 416, 422, 423, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 450, 451, 452, 453, 454, 455, 456, 460, 462, 465, 466, 472, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 501, 506, 507, 510, 516, 520, 523, 524, 525, 527, 528, 530, 531, 532, 533, 534, 535, 538, 539, 540, 542, 543, 545, 547, 548, 549, 556, 557, 558, 559, 560, 561, 562, 563, 565, 566, 568, 572, 577, 578, 581, 582, 583, 585, 589, 591, 592, 594, 599, 601, 604, 606, 610, 614, 615, 617, 618, 619, 621, 623, 624, 628, 629, 631, 632, 633, 635, 637, 638, 642, 643, 645, 646, 648, 654, 656, 662, 664, 666, 667, 671, 672, 674, 675, 678, 683, 686, 687, 689, 690, 691, 693, 696, 697, 700, 701, 703, 704, 705, 707, 710, 711, 714, 715, 717, 718, 721, 725, 728, 729, 731, 732, 735, 738, 741, 745, 746, 747, 748, 749, 753, 754, 755, 756, 757, 759, 760, 762, 763, 764, 766, 767, 768, 770, 773, 776, 778, 779, 780, 781, 782, 783, 784, 786, 787, 788, 789, 791, 799, 800, 803, 804, 808, 810, 817, 829, 830, 837, 838, 840, 841, 842, 843, 844, 845, 846, 847, 851, 852, 853, 854, 855, 859, 860, 862, 864, 865], "determin": [0, 25, 63, 149, 157, 176, 206, 236, 247, 257, 258, 259, 262, 265, 266, 268, 270, 273, 274, 275, 276, 277, 278, 281, 282, 284, 286, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 308, 309, 311, 314, 315, 317, 319, 321, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 337, 338, 339, 384, 551, 552, 553, 567, 675, 690, 704, 718, 762, 764, 772, 778, 780, 808, 846], "which": [0, 8, 9, 12, 13, 25, 29, 30, 31, 33, 34, 35, 37, 40, 41, 42, 43, 45, 54, 56, 58, 60, 61, 62, 63, 68, 77, 81, 84, 86, 87, 100, 101, 102, 104, 105, 117, 121, 122, 123, 124, 125, 126, 127, 135, 136, 147, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 179, 185, 186, 187, 196, 218, 221, 224, 254, 257, 261, 264, 283, 285, 294, 295, 307, 316, 318, 328, 329, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 366, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 392, 393, 397, 398, 400, 402, 404, 405, 406, 407, 410, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 438, 439, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 479, 480, 482, 483, 530, 531, 532, 534, 539, 540, 542, 547, 551, 552, 553, 554, 556, 563, 566, 567, 571, 573, 579, 583, 591, 592, 593, 596, 598, 604, 605, 615, 617, 619, 620, 623, 631, 633, 634, 637, 645, 646, 654, 662, 663, 672, 675, 676, 677, 680, 687, 690, 691, 692, 694, 696, 703, 704, 705, 706, 708, 710, 717, 718, 719, 720, 722, 729, 732, 746, 749, 754, 756, 759, 760, 762, 764, 766, 768, 776, 787, 788, 789, 791, 803, 804, 808, 817, 818, 820, 821, 822, 823, 825, 826, 827, 828, 829, 838, 843, 844, 845, 846, 850, 855, 861, 862], "system": [0, 1, 12, 31, 50, 61, 149, 151, 152, 171, 179, 186, 244, 246, 250, 251, 260, 271, 272, 279, 280, 289, 291, 312, 313, 322, 324, 352, 387, 391, 430, 431, 576, 577, 783, 786, 863, 864], "abstract": [0, 2, 12, 30, 43, 45, 48, 51, 58, 59, 61, 149, 151, 160, 179, 785], "devic": [0, 1, 2, 3, 4, 5, 8, 11, 28, 30, 40, 43, 45, 47, 49, 61, 149, 150, 151, 175, 176, 177, 254, 255, 257, 258, 262, 264, 265, 266, 267, 268, 270, 272, 273, 274, 276, 277, 278, 280, 281, 282, 284, 286, 288, 290, 293, 295, 296, 297, 299, 301, 303, 305, 307, 308, 309, 311, 313, 314, 315, 317, 319, 321, 323, 325, 327, 329, 330, 331, 333, 335, 337, 339, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 395, 409, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 455, 546, 549, 863], "A": [0, 1, 8, 12, 19, 20, 22, 27, 29, 31, 37, 38, 39, 40, 42, 43, 46, 47, 48, 51, 58, 60, 61, 63, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 98, 99, 107, 108, 117, 121, 122, 123, 124, 125, 126, 127, 142, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 179, 191, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 220, 221, 222, 223, 224, 229, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 261, 262, 263, 266, 267, 268, 269, 270, 271, 274, 275, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 294, 297, 298, 304, 306, 309, 310, 311, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 328, 331, 332, 338, 340, 341, 355, 361, 366, 371, 383, 390, 396, 401, 409, 414, 426, 428, 429, 430, 452, 455, 483, 550, 551, 552, 553, 557, 559, 561, 562, 563, 565, 566, 567, 570, 571, 576, 581, 744, 745, 746, 747, 748, 749, 751, 753, 755, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 769, 770, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 784, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 843, 844, 845, 846, 847, 848, 851, 852, 853, 855, 856, 859, 862, 863, 864], "i": [0, 2, 8, 9, 10, 11, 12, 14, 17, 19, 20, 22, 25, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 67, 68, 69, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 95, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 130, 135, 136, 140, 141, 142, 143, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 549, 551, 552, 553, 554, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 574, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 589, 590, 591, 592, 593, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 607, 609, 610, 611, 613, 615, 616, 617, 618, 619, 620, 623, 624, 625, 627, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 641, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 666, 667, 668, 670, 672, 673, 674, 675, 676, 677, 679, 680, 682, 683, 687, 688, 689, 690, 691, 692, 694, 696, 697, 701, 702, 703, 704, 705, 706, 707, 708, 710, 711, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 729, 730, 731, 732, 733, 734, 735, 736, 738, 739, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 762, 763, 764, 766, 767, 768, 770, 772, 773, 774, 776, 777, 778, 779, 780, 781, 783, 784, 785, 786, 787, 788, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 808, 810, 814, 817, 818, 819, 820, 821, 822, 823, 825, 826, 827, 828, 829, 830, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 851, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865], "compris": [0, 175, 383, 733], "host": [0, 2, 8, 10, 11, 12, 30, 39, 43, 51, 60, 149, 176, 257, 361, 362, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 412, 428, 429, 430, 455, 546, 549], "typic": [0, 37, 43, 45, 46, 49, 50, 51, 56, 60, 106, 147, 149, 153, 154, 163, 168, 171, 172, 177, 260, 361, 362, 409, 410, 452, 553, 559, 565, 566, 581, 746, 817, 845], "multi": [0, 45, 67, 85, 109, 110, 113, 140, 143, 151, 254, 258, 260, 391, 437, 445, 749, 765, 775, 784, 864], "core": [0, 152, 179, 783, 784, 844, 864], "cpu": [0, 12, 43, 60, 61, 151, 177, 179, 409, 549, 784, 864], "one": [0, 2, 5, 8, 12, 19, 20, 22, 29, 36, 37, 39, 40, 41, 42, 43, 45, 48, 51, 54, 56, 58, 60, 61, 62, 63, 77, 82, 84, 86, 87, 114, 115, 117, 121, 122, 123, 124, 125, 126, 127, 128, 130, 141, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 164, 165, 167, 168, 169, 170, 173, 176, 177, 179, 187, 189, 190, 195, 196, 197, 198, 199, 200, 201, 206, 211, 215, 216, 217, 218, 220, 221, 222, 223, 224, 236, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 300, 302, 304, 334, 336, 338, 340, 414, 455, 478, 483, 519, 525, 547, 551, 552, 557, 559, 561, 563, 565, 566, 599, 610, 623, 624, 631, 637, 638, 667, 683, 696, 697, 703, 710, 711, 725, 732, 744, 745, 746, 754, 755, 762, 763, 764, 766, 767, 768, 780, 781, 786, 805, 806, 808, 837, 840, 842, 843, 844, 851, 853, 862], "more": [0, 8, 12, 19, 20, 22, 25, 28, 39, 43, 47, 48, 51, 52, 54, 56, 58, 60, 62, 130, 141, 149, 150, 151, 152, 153, 154, 157, 160, 164, 170, 172, 176, 178, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 257, 260, 341, 470, 483, 557, 559, 565, 566, 572, 578, 742, 745, 767, 786, 787, 788, 817, 827, 837, 843, 860], "gpu": [0, 2, 12, 43, 49, 61, 150, 151, 179, 343, 549, 864], "fpga": [0, 2, 549, 864], "other": [0, 2, 8, 10, 11, 12, 29, 30, 31, 37, 38, 39, 42, 43, 48, 50, 51, 53, 55, 58, 60, 62, 63, 149, 150, 151, 152, 153, 154, 157, 159, 160, 161, 163, 164, 165, 168, 170, 171, 172, 176, 177, 218, 221, 224, 227, 228, 235, 252, 253, 254, 257, 258, 259, 283, 316, 340, 368, 387, 388, 389, 390, 391, 394, 395, 396, 399, 401, 403, 408, 427, 440, 478, 545, 547, 549, 554, 557, 563, 566, 569, 576, 581, 584, 586, 589, 590, 593, 596, 597, 598, 599, 603, 605, 609, 610, 615, 617, 620, 623, 624, 629, 631, 634, 637, 638, 643, 645, 647, 651, 653, 655, 657, 660, 661, 663, 666, 667, 672, 674, 676, 677, 682, 683, 687, 689, 691, 692, 696, 697, 701, 703, 705, 706, 710, 711, 715, 717, 719, 720, 724, 725, 729, 731, 733, 734, 736, 743, 744, 745, 749, 754, 756, 759, 762, 767, 768, 779, 786, 788, 800, 817, 830, 838, 841, 843, 844, 847, 851, 852, 854, 856, 858], "processor": [0, 43, 157, 391, 787, 789, 799, 800], "serv": [0, 8, 13, 43, 48, 176, 757, 780], "can": [0, 2, 8, 10, 19, 20, 22, 25, 29, 31, 34, 35, 37, 40, 42, 43, 45, 48, 49, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 67, 85, 86, 87, 100, 102, 104, 106, 109, 110, 113, 130, 141, 143, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 179, 197, 223, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 346, 348, 358, 366, 368, 372, 394, 403, 406, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 455, 479, 480, 482, 483, 492, 519, 530, 531, 532, 534, 539, 540, 542, 545, 551, 552, 553, 554, 556, 558, 559, 560, 562, 563, 565, 566, 570, 572, 576, 577, 578, 579, 583, 586, 589, 590, 591, 596, 597, 598, 602, 603, 604, 609, 615, 616, 617, 619, 623, 629, 630, 631, 633, 637, 643, 644, 645, 646, 651, 653, 654, 657, 660, 661, 662, 666, 672, 673, 674, 675, 676, 680, 682, 687, 688, 689, 690, 691, 694, 696, 701, 702, 703, 704, 705, 708, 710, 715, 716, 717, 718, 719, 722, 724, 729, 730, 731, 732, 733, 736, 742, 743, 745, 746, 748, 749, 751, 754, 755, 756, 757, 758, 759, 760, 762, 764, 766, 767, 770, 771, 773, 776, 778, 780, 781, 784, 787, 799, 800, 803, 804, 805, 808, 810, 814, 817, 818, 819, 830, 837, 840, 841, 844, 845, 846, 847, 851, 852, 854, 856, 858, 860, 862, 864], "also": [0, 2, 8, 12, 29, 56, 58, 62, 63, 102, 149, 151, 152, 153, 154, 157, 159, 160, 164, 168, 174, 176, 177, 178, 179, 252, 253, 254, 257, 258, 285, 318, 362, 364, 366, 394, 403, 410, 414, 415, 416, 422, 423, 424, 425, 551, 552, 553, 557, 558, 559, 561, 562, 564, 565, 566, 569, 571, 572, 573, 574, 599, 683, 725, 743, 744, 745, 746, 749, 753, 755, 759, 761, 762, 764, 767, 768, 769, 778, 780, 784, 787, 795, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 822, 828, 829, 830, 831, 839, 840, 843, 844, 846, 850], "target": [0, 50, 87, 149, 152, 176, 257, 460, 481, 483, 484, 489, 506, 516, 520, 533, 538, 543], "each": [0, 8, 12, 19, 20, 22, 25, 27, 36, 39, 42, 43, 47, 48, 50, 51, 52, 55, 56, 58, 60, 62, 63, 78, 79, 80, 82, 121, 122, 123, 124, 125, 126, 127, 130, 140, 149, 151, 152, 155, 157, 161, 165, 166, 169, 170, 171, 173, 176, 177, 179, 183, 190, 197, 201, 218, 221, 224, 227, 235, 242, 250, 254, 255, 260, 264, 265, 272, 273, 276, 277, 280, 281, 295, 296, 307, 308, 313, 314, 329, 330, 340, 342, 346, 358, 364, 366, 372, 401, 406, 413, 414, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 450, 451, 453, 454, 474, 483, 495, 496, 497, 498, 499, 507, 512, 513, 514, 515, 518, 521, 522, 523, 525, 526, 527, 544, 547, 551, 552, 553, 557, 558, 559, 560, 561, 565, 570, 571, 579, 589, 597, 598, 599, 609, 610, 615, 623, 624, 629, 637, 638, 643, 651, 660, 666, 667, 672, 682, 683, 687, 696, 697, 701, 710, 711, 715, 724, 725, 729, 732, 733, 736, 745, 749, 751, 753, 754, 756, 759, 762, 763, 766, 778, 779, 786, 800, 840, 842, 843, 844, 845, 850, 851, 853, 854, 856, 864], "ha": [0, 14, 25, 27, 37, 40, 43, 46, 48, 53, 54, 56, 58, 60, 62, 63, 100, 101, 102, 149, 150, 151, 154, 155, 176, 179, 197, 215, 216, 218, 221, 223, 224, 257, 260, 269, 271, 272, 289, 310, 311, 312, 315, 322, 347, 355, 366, 368, 390, 391, 396, 414, 426, 428, 429, 430, 440, 455, 460, 479, 480, 482, 498, 500, 507, 516, 520, 524, 525, 529, 530, 531, 532, 534, 538, 539, 540, 542, 551, 552, 553, 555, 557, 558, 565, 566, 579, 697, 711, 732, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 759, 760, 762, 764, 767, 768, 770, 772, 773, 776, 779, 781, 786, 787, 789, 791, 803, 817, 818, 824, 840, 842, 844, 846, 849, 851, 852], "an": [0, 6, 8, 9, 10, 11, 12, 13, 14, 19, 20, 22, 25, 27, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 361, 385, 403, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 439, 447, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 553, 555, 557, 559, 561, 562, 563, 565, 566, 567, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 581, 583, 584, 585, 586, 591, 592, 593, 594, 596, 597, 598, 604, 605, 606, 608, 609, 613, 615, 617, 619, 620, 621, 622, 623, 627, 629, 631, 633, 634, 635, 636, 637, 641, 643, 645, 646, 647, 648, 654, 655, 656, 657, 662, 663, 664, 665, 666, 670, 672, 674, 675, 676, 677, 678, 681, 682, 683, 687, 689, 690, 691, 692, 693, 695, 696, 697, 701, 703, 704, 705, 706, 707, 709, 710, 711, 715, 717, 718, 719, 720, 721, 723, 724, 725, 729, 731, 732, 733, 734, 735, 737, 738, 744, 745, 746, 747, 748, 749, 750, 751, 755, 756, 757, 759, 760, 762, 763, 764, 765, 767, 770, 771, 772, 773, 775, 776, 778, 779, 780, 781, 784, 785, 786, 787, 789, 791, 793, 798, 799, 800, 801, 803, 805, 806, 808, 810, 814, 817, 818, 819, 820, 821, 824, 829, 830, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 853, 854, 856, 859, 861, 862, 863, 864, 865], "associ": [0, 8, 12, 23, 25, 27, 37, 60, 61, 62, 155, 156, 158, 166, 167, 168, 171, 172, 173, 176, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 565, 566, 581, 582, 589, 591, 593, 604, 613, 619, 627, 641, 660, 670, 675, 685, 690, 699, 713, 727, 734, 756, 757, 836, 842, 844, 847, 849, 851, 853], "command": [0, 2, 151, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 577, 786, 837], "queue": [0, 2, 11, 12, 34, 35, 37, 39, 41, 42, 49, 51, 52, 61, 150, 151, 176, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 361, 362, 368, 385, 387, 388, 389, 390, 391, 394, 395, 396, 399, 401, 402, 403, 408, 409, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 433, 434, 435, 436, 438, 439, 441, 442, 443, 444, 446, 447, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 548, 646, 746, 754, 755, 763, 766, 767, 836], "applic": [0, 1, 5, 29, 31, 36, 40, 43, 45, 56, 150, 152, 157, 177, 179, 254, 258, 364, 390, 399, 545, 549, 561, 566, 579, 756, 784, 808, 840, 841, 843, 844, 846, 852, 861, 863, 864], "emploi": [0, 58, 177, 784], "run": [0, 19, 20, 22, 25, 43, 48, 49, 58, 70, 149, 154, 157, 160, 164, 175, 176, 476, 501, 528, 553, 557, 559, 561, 565, 566, 579, 745, 753, 766, 786, 799, 800, 811, 814, 817, 818, 838, 840, 841, 842, 844, 846, 847, 861], "follow": [0, 5, 8, 9, 10, 12, 13, 16, 19, 22, 25, 28, 29, 30, 31, 37, 39, 40, 41, 42, 45, 46, 48, 49, 51, 53, 55, 56, 58, 59, 60, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 344, 345, 347, 348, 351, 355, 356, 357, 359, 360, 368, 369, 370, 371, 373, 374, 376, 377, 378, 381, 382, 383, 384, 386, 390, 391, 393, 396, 397, 398, 400, 401, 404, 405, 407, 409, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 446, 447, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 554, 557, 558, 559, 560, 561, 563, 565, 566, 576, 581, 585, 586, 594, 596, 599, 606, 608, 617, 621, 622, 623, 631, 635, 636, 637, 645, 648, 656, 657, 664, 665, 674, 675, 676, 678, 681, 683, 689, 690, 691, 693, 695, 696, 697, 703, 704, 705, 707, 709, 710, 711, 717, 718, 719, 721, 723, 725, 731, 732, 735, 737, 752, 753, 754, 768, 776, 781, 782, 786, 799, 800, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 837, 843, 845, 847, 860], "standard": [0, 1, 9, 10, 29, 30, 43, 49, 53, 55, 62, 63, 65, 68, 75, 77, 81, 88, 91, 92, 94, 96, 102, 103, 106, 107, 118, 131, 133, 135, 144, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 341, 343, 348, 351, 359, 360, 365, 378, 384, 386, 404, 405, 470, 507, 554, 556, 558, 560, 565, 566, 567, 576, 583, 584, 585, 586, 589, 591, 593, 594, 596, 598, 604, 605, 606, 608, 615, 619, 620, 621, 622, 629, 633, 634, 635, 636, 643, 646, 647, 648, 651, 654, 655, 656, 657, 660, 662, 663, 664, 665, 672, 675, 676, 677, 678, 679, 681, 687, 690, 691, 692, 693, 695, 701, 704, 705, 706, 707, 709, 715, 718, 719, 720, 721, 723, 729, 732, 733, 734, 735, 737, 746, 748, 749, 751, 755, 756, 759, 760, 762, 764, 767, 770, 772, 773, 778, 780, 781, 782, 784, 785, 786, 791, 793, 798, 803, 808, 810, 844, 846, 847, 851, 853, 863, 864], "c": [0, 1, 8, 10, 19, 20, 25, 28, 29, 30, 31, 43, 44, 53, 58, 62, 63, 68, 70, 71, 73, 77, 100, 101, 107, 135, 149, 150, 152, 154, 156, 157, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 174, 175, 178, 191, 196, 197, 198, 199, 206, 210, 211, 217, 218, 220, 221, 225, 226, 235, 236, 240, 241, 242, 247, 249, 260, 300, 301, 302, 303, 304, 305, 334, 335, 336, 337, 338, 339, 341, 355, 365, 366, 368, 371, 379, 383, 393, 394, 396, 401, 403, 428, 548, 554, 556, 558, 560, 562, 565, 566, 567, 569, 570, 571, 572, 576, 583, 584, 585, 586, 589, 591, 593, 594, 596, 598, 604, 605, 606, 607, 608, 615, 618, 619, 620, 621, 622, 629, 632, 633, 634, 635, 636, 643, 646, 647, 648, 651, 654, 655, 656, 657, 660, 662, 663, 664, 665, 672, 675, 676, 677, 678, 679, 681, 687, 690, 691, 692, 693, 695, 701, 704, 705, 706, 707, 709, 715, 718, 719, 720, 721, 723, 729, 732, 733, 734, 735, 737, 746, 748, 749, 751, 753, 755, 756, 759, 760, 762, 764, 767, 770, 772, 773, 778, 780, 781, 782, 783, 784, 785, 787, 789, 791, 793, 795, 798, 801, 802, 803, 805, 808, 810, 829, 837, 844, 846, 847, 851, 853, 859, 863], "execut": [0, 2, 5, 8, 11, 12, 30, 39, 43, 48, 51, 54, 55, 56, 58, 60, 62, 63, 64, 116, 148, 149, 150, 151, 152, 153, 160, 174, 175, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 260, 261, 263, 269, 271, 275, 279, 283, 285, 287, 289, 292, 294, 298, 300, 302, 304, 306, 310, 312, 316, 318, 320, 322, 324, 326, 328, 332, 334, 336, 338, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 433, 434, 435, 436, 438, 439, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 549, 554, 557, 558, 559, 560, 561, 563, 565, 566, 567, 569, 571, 572, 586, 590, 596, 597, 598, 601, 603, 609, 617, 623, 631, 637, 645, 653, 657, 661, 666, 674, 676, 682, 689, 691, 696, 703, 705, 710, 717, 719, 724, 731, 743, 745, 746, 751, 753, 754, 755, 756, 757, 760, 767, 768, 771, 776, 783, 784, 799, 800, 808, 817, 831, 838, 840, 841, 842, 843, 844, 845, 846, 847, 858], "semant": [0, 37, 53, 60, 62, 106, 114, 115, 152, 153, 155, 164, 166, 176, 556, 584, 589, 593, 598, 605, 615, 620, 629, 634, 643, 647, 651, 655, 660, 663, 672, 677, 687, 692, 701, 706, 715, 720, 729, 733, 734, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 824, 825, 826, 827, 828, 831, 849], "To": [0, 3, 4, 22, 27, 31, 40, 48, 50, 51, 56, 61, 81, 130, 149, 151, 157, 163, 168, 169, 179, 292, 294, 295, 326, 328, 329, 402, 483, 557, 561, 576, 745, 786, 844, 852], "function": [0, 2, 8, 10, 12, 13, 16, 19, 20, 22, 25, 29, 30, 31, 34, 35, 37, 38, 39, 41, 42, 45, 46, 50, 51, 53, 56, 60, 61, 75, 91, 102, 104, 111, 121, 122, 123, 124, 125, 126, 127, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 178, 188, 252, 253, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 392, 393, 396, 397, 398, 400, 402, 404, 405, 406, 407, 409, 410, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 549, 554, 557, 558, 559, 560, 565, 566, 567, 586, 596, 603, 605, 615, 617, 620, 629, 631, 634, 643, 645, 648, 651, 653, 657, 663, 672, 674, 676, 677, 678, 685, 687, 689, 691, 692, 693, 699, 701, 703, 705, 706, 707, 713, 715, 717, 719, 720, 721, 727, 729, 731, 733, 736, 743, 752, 753, 754, 761, 763, 765, 766, 768, 769, 775, 776, 786, 790, 803, 808, 809, 818, 819, 820, 832, 833, 836, 837, 841, 846, 853, 856, 858, 860, 861], "object": [0, 8, 9, 11, 12, 13, 14, 19, 34, 35, 37, 39, 41, 42, 43, 45, 48, 51, 56, 57, 59, 61, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 179, 252, 253, 254, 255, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 345, 346, 347, 348, 349, 351, 356, 357, 358, 359, 360, 361, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 450, 451, 452, 453, 454, 455, 483, 554, 555, 558, 559, 560, 561, 562, 564, 565, 569, 583, 591, 593, 599, 601, 604, 605, 610, 613, 614, 619, 620, 624, 627, 628, 633, 634, 638, 641, 642, 646, 654, 662, 663, 667, 670, 671, 675, 677, 683, 686, 690, 692, 697, 700, 704, 706, 711, 714, 718, 720, 725, 728, 732, 738, 741, 746, 747, 750, 751, 752, 753, 755, 760, 762, 763, 764, 766, 767, 770, 778, 779, 780, 781, 786, 787, 789, 791, 792, 805, 808, 818, 819, 820, 821, 822, 823, 825, 826, 827, 828, 829, 838, 840, 841, 842, 844, 845, 846, 847, 849, 851, 852, 853, 854, 859, 860, 862], "submit": [0, 37, 361, 362, 368, 387, 388, 389, 390, 391, 394, 395, 396, 399, 401, 403, 408, 746, 808, 821, 824, 840, 841, 844], "group": [0, 8, 12, 22, 28, 30, 37, 43, 54, 55, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 183, 188, 190, 191, 197, 201, 218, 221, 224, 242, 250, 264, 265, 272, 273, 276, 277, 280, 281, 291, 295, 296, 307, 308, 313, 314, 329, 330, 342, 364, 383, 545, 547, 697, 711, 836, 842, 846, 847, 848], "contain": [0, 6, 8, 9, 22, 29, 31, 34, 35, 37, 38, 40, 42, 43, 52, 62, 68, 69, 78, 79, 80, 81, 82, 83, 84, 98, 99, 107, 108, 117, 121, 122, 123, 124, 125, 126, 127, 142, 149, 150, 152, 154, 157, 159, 160, 165, 179, 183, 190, 191, 197, 201, 215, 216, 218, 221, 224, 227, 228, 242, 250, 252, 253, 254, 255, 257, 259, 260, 261, 263, 264, 267, 269, 271, 272, 276, 279, 280, 283, 285, 287, 289, 291, 295, 300, 302, 304, 306, 307, 310, 312, 313, 316, 318, 320, 322, 324, 329, 334, 336, 338, 340, 342, 362, 364, 383, 401, 410, 414, 415, 416, 422, 423, 426, 428, 429, 430, 437, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 551, 552, 553, 558, 566, 567, 578, 581, 582, 583, 586, 587, 589, 590, 591, 595, 596, 598, 599, 601, 602, 603, 604, 607, 608, 610, 614, 615, 616, 617, 619, 622, 624, 628, 630, 631, 633, 636, 638, 642, 644, 645, 646, 649, 651, 652, 653, 654, 657, 658, 660, 661, 662, 665, 667, 671, 673, 674, 675, 676, 679, 680, 681, 683, 686, 687, 688, 689, 690, 691, 694, 695, 697, 700, 702, 703, 704, 705, 708, 709, 711, 714, 716, 717, 718, 719, 722, 723, 725, 728, 730, 731, 732, 733, 736, 738, 741, 743, 759, 762, 763, 766, 776, 781, 783, 808, 819, 834, 835, 836, 843, 846, 850, 852, 853, 855, 857, 859, 860, 865], "": [0, 8, 9, 11, 12, 13, 14, 22, 37, 40, 43, 45, 47, 48, 51, 52, 59, 60, 61, 62, 63, 100, 101, 107, 108, 141, 147, 149, 150, 152, 155, 157, 158, 160, 161, 164, 167, 168, 177, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 351, 362, 365, 383, 386, 394, 402, 403, 408, 410, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 438, 439, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 553, 558, 559, 560, 561, 565, 566, 570, 581, 746, 751, 753, 755, 763, 764, 765, 766, 775, 778, 799, 800, 828, 840, 842, 844, 845, 864], "definit": [0, 4, 31, 32, 40, 42, 43, 44, 46, 48, 50, 52, 60, 62, 64, 149, 160, 170, 171, 257, 285, 291, 306, 307, 310, 312, 313, 318, 364, 412, 413, 427, 428, 429, 430, 445, 476, 483, 501, 528, 535, 566], "togeth": [0, 52, 64, 153, 170], "variabl": [0, 37, 43, 48, 63, 65, 68, 75, 77, 81, 88, 91, 92, 94, 96, 102, 103, 106, 107, 118, 131, 133, 135, 144, 152, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 340, 362, 410, 412, 483, 746, 751, 755, 760, 767, 778, 786, 840], "refer": [0, 28, 34, 35, 37, 41, 42, 43, 48, 50, 51, 52, 55, 56, 62, 149, 152, 154, 158, 160, 168, 171, 172, 175, 176, 179, 256, 257, 258, 341, 362, 410, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 445, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 558, 566, 578, 581, 583, 584, 591, 592, 593, 604, 605, 607, 617, 619, 620, 631, 633, 634, 645, 646, 647, 654, 655, 662, 663, 674, 675, 677, 678, 679, 689, 690, 692, 693, 703, 704, 706, 707, 717, 718, 720, 721, 731, 732, 734, 736, 746, 749, 751, 753, 755, 759, 760, 761, 762, 764, 767, 769, 779, 786, 803, 808, 818, 819, 837, 843, 844, 846, 849, 851, 852, 854, 856, 859], "simpli": [0, 60, 152, 156, 173], "through": [0, 12, 16, 22, 40, 45, 56, 58, 149, 152, 283, 285, 316, 318, 343, 428, 429, 430, 553, 758, 762, 764, 766, 772, 778, 779, 784, 808, 844, 864], "memori": [0, 2, 8, 10, 12, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 47, 54, 55, 56, 57, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 181, 218, 220, 221, 223, 224, 254, 256, 257, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 361, 409, 415, 416, 417, 418, 422, 423, 424, 425, 452, 455, 545, 546, 549, 584, 585, 593, 605, 620, 634, 647, 655, 656, 663, 677, 692, 706, 720, 732, 734, 735, 742, 743, 784, 786, 787, 788, 789, 790, 791, 799, 800, 832, 835], "defin": [0, 2, 6, 8, 9, 10, 12, 13, 15, 16, 19, 22, 25, 27, 29, 30, 31, 36, 37, 39, 40, 41, 42, 43, 48, 50, 51, 52, 58, 59, 60, 62, 63, 77, 81, 84, 86, 87, 95, 100, 102, 106, 117, 148, 149, 150, 151, 152, 154, 156, 157, 160, 161, 162, 163, 165, 166, 169, 170, 171, 172, 176, 177, 183, 190, 191, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 220, 221, 222, 223, 224, 225, 226, 229, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 263, 264, 267, 287, 294, 295, 296, 297, 300, 301, 302, 303, 320, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339, 345, 346, 347, 348, 351, 356, 358, 359, 362, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 386, 392, 393, 394, 395, 397, 398, 400, 401, 403, 404, 405, 406, 407, 410, 412, 413, 414, 415, 416, 428, 429, 430, 437, 456, 460, 462, 465, 472, 473, 476, 479, 483, 484, 485, 486, 487, 488, 492, 500, 501, 507, 516, 528, 529, 530, 535, 538, 539, 549, 551, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 582, 583, 585, 591, 594, 604, 606, 619, 621, 633, 635, 646, 648, 654, 656, 662, 664, 675, 677, 678, 690, 692, 693, 704, 706, 707, 718, 720, 721, 732, 735, 744, 746, 747, 748, 749, 750, 751, 752, 755, 756, 757, 759, 760, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 772, 773, 775, 776, 778, 779, 780, 781, 783, 784, 786, 787, 788, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 817, 818, 829, 830, 840, 841, 842, 843, 844, 845, 846, 847, 851, 852, 859, 862, 864], "sever": [0, 36, 37, 40, 45, 47, 157, 158, 160, 179, 184, 257, 258, 260, 291, 340, 346, 372, 549, 560, 780, 785, 837, 840], "mechan": [0, 10, 11, 12, 30, 37, 48, 56, 62, 151, 152, 153, 179], "share": [0, 2, 34, 35, 37, 40, 42, 50, 149, 170, 176, 218, 221, 224, 255, 257, 452, 766, 787, 788, 795, 798, 802, 844, 846], "depend": [0, 8, 12, 37, 41, 43, 45, 46, 48, 50, 56, 58, 60, 62, 74, 130, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 162, 170, 176, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 300, 302, 304, 334, 336, 338, 380, 419, 420, 421, 428, 429, 430, 433, 434, 435, 436, 438, 439, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 553, 561, 566, 583, 591, 604, 619, 633, 646, 654, 662, 675, 690, 704, 718, 732, 745, 746, 751, 754, 755, 767, 768, 787, 789, 791, 806, 817, 838, 862], "descript": [0, 10, 30, 31, 36, 37, 39, 40, 42, 46, 59, 60, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 130, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 145, 149, 150, 151, 152, 154, 155, 157, 158, 161, 163, 164, 167, 168, 170, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548, 786, 829, 860], "buffer": [0, 8, 12, 60, 62, 149, 151, 152, 160, 175, 254, 255, 256, 257, 268, 270, 290, 323, 385, 419, 420, 421, 428, 429, 430, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 748, 759, 760, 762, 763, 770, 772, 773, 776, 781, 786], "creat": [0, 8, 9, 11, 12, 13, 19, 20, 22, 25, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 49, 56, 58, 60, 61, 63, 149, 150, 151, 152, 153, 154, 157, 160, 161, 164, 165, 168, 169, 170, 176, 179, 256, 257, 258, 361, 366, 385, 402, 409, 422, 423, 424, 425, 440, 449, 452, 455, 483, 545, 548, 556, 557, 570, 581, 744, 745, 749, 753, 760, 762, 765, 766, 767, 775, 776, 814, 817, 838, 840, 842, 843, 844, 845, 847, 849, 850, 851, 852, 853, 854, 859, 863, 864], "pass": [0, 8, 12, 13, 16, 39, 48, 51, 52, 56, 58, 60, 61, 62, 63, 100, 141, 149, 150, 151, 152, 153, 154, 157, 159, 160, 162, 163, 164, 165, 169, 170, 176, 179, 252, 253, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 455, 483, 553, 560, 561, 564, 566, 569, 745, 746, 751, 753, 755, 760, 762, 764, 766, 767, 772, 773, 776, 778, 779, 781, 808, 821, 822, 823, 825, 826, 827, 828, 841, 842, 844], "arrai": [0, 8, 29, 34, 35, 40, 42, 43, 44, 49, 56, 58, 149, 152, 157, 158, 165, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 261, 263, 264, 265, 267, 269, 271, 272, 273, 275, 276, 277, 279, 280, 281, 283, 285, 287, 289, 291, 292, 295, 296, 306, 307, 308, 309, 312, 313, 314, 316, 318, 320, 322, 324, 325, 326, 329, 330, 338, 340, 361, 369, 370, 371, 374, 376, 377, 381, 383, 384, 386, 390, 391, 393, 397, 398, 399, 400, 401, 404, 405, 407, 414, 415, 416, 422, 423, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 483, 545, 565, 735, 803, 814, 864], "accessor": [0, 43, 44, 179, 591, 597, 598], "identifi": [0, 6, 9, 13, 25, 27, 31, 62, 149, 176, 578, 579, 759, 780, 783, 834, 835, 844, 852], "access": [0, 34, 35, 36, 37, 38, 40, 43, 48, 49, 51, 54, 60, 176, 179, 252, 253, 254, 255, 257, 258, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 551, 552, 553, 567, 597, 598, 604, 675, 732, 733, 737, 770, 787, 804, 852, 855], "thi": [0, 4, 6, 10, 15, 19, 20, 22, 25, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 49, 51, 52, 53, 54, 56, 58, 60, 61, 63, 73, 74, 81, 84, 100, 101, 117, 141, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 178, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 346, 352, 353, 354, 355, 358, 364, 368, 372, 375, 383, 385, 387, 388, 389, 390, 391, 394, 395, 396, 399, 401, 403, 408, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 553, 554, 558, 559, 560, 561, 562, 565, 566, 571, 575, 576, 577, 578, 579, 581, 583, 584, 585, 586, 589, 590, 592, 593, 596, 597, 598, 603, 605, 609, 613, 615, 617, 619, 620, 623, 627, 629, 631, 633, 634, 637, 641, 643, 645, 647, 651, 653, 654, 655, 656, 657, 660, 661, 663, 666, 670, 672, 674, 675, 676, 677, 682, 685, 687, 689, 690, 691, 692, 696, 699, 701, 703, 704, 705, 706, 710, 713, 715, 717, 718, 719, 720, 724, 727, 729, 731, 733, 734, 735, 736, 743, 744, 745, 746, 749, 750, 751, 753, 754, 755, 756, 757, 760, 764, 766, 767, 768, 770, 776, 779, 781, 782, 784, 785, 786, 787, 788, 790, 803, 805, 808, 810, 811, 814, 817, 820, 837, 838, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 860, 862, 864, 865], "call": [0, 8, 10, 19, 22, 30, 31, 37, 39, 41, 45, 48, 51, 53, 60, 63, 102, 149, 151, 152, 157, 161, 171, 179, 183, 190, 191, 196, 197, 198, 199, 201, 206, 236, 242, 250, 256, 257, 258, 259, 260, 261, 262, 266, 268, 270, 274, 275, 276, 278, 279, 280, 282, 284, 286, 288, 290, 293, 295, 297, 298, 299, 301, 303, 304, 305, 309, 310, 311, 312, 313, 315, 317, 319, 321, 323, 325, 327, 329, 331, 332, 333, 335, 337, 338, 339, 342, 361, 362, 364, 368, 387, 388, 389, 390, 391, 394, 395, 396, 399, 401, 402, 403, 408, 409, 412, 415, 416, 417, 418, 428, 429, 430, 452, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 553, 554, 555, 556, 557, 567, 576, 584, 592, 593, 605, 618, 620, 632, 634, 647, 655, 663, 677, 692, 706, 720, 734, 743, 744, 746, 749, 751, 753, 755, 756, 757, 760, 762, 764, 767, 770, 771, 776, 780, 781, 786, 787, 789, 806, 808, 817, 825, 827, 838, 841, 842, 843, 844, 845, 846, 847, 851, 852, 853, 854, 857, 864], "runtim": [0, 2, 12, 30, 42, 56, 70, 100, 154, 162, 179, 197, 577, 579, 746, 780], "ensur": [0, 60, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 261, 263, 264, 267, 269, 271, 272, 275, 276, 279, 280, 283, 285, 287, 289, 292, 294, 295, 298, 300, 302, 304, 306, 307, 310, 312, 313, 316, 318, 320, 322, 324, 326, 328, 329, 332, 334, 336, 338, 358, 380, 406, 426, 433, 434, 435, 436, 438, 439, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 565, 788, 864], "avail": [0, 19, 20, 22, 25, 28, 29, 34, 35, 37, 38, 40, 41, 42, 43, 47, 49, 121, 122, 123, 124, 125, 126, 127, 141, 157, 164, 179, 247, 249, 257, 260, 385, 402, 414, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548, 556, 561, 578, 581, 589, 599, 683, 725, 760, 762, 763, 768, 772, 778, 783, 789, 791, 838], "all": [0, 2, 8, 9, 10, 12, 13, 19, 20, 22, 25, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 51, 52, 54, 55, 56, 58, 60, 61, 62, 63, 74, 77, 78, 79, 80, 82, 106, 121, 122, 123, 124, 125, 126, 127, 130, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 166, 169, 170, 172, 173, 174, 176, 177, 179, 180, 183, 190, 191, 197, 201, 215, 216, 218, 221, 224, 242, 247, 249, 250, 252, 253, 254, 257, 258, 259, 264, 265, 269, 270, 272, 273, 276, 277, 280, 281, 283, 285, 291, 292, 295, 296, 307, 308, 313, 314, 316, 318, 326, 329, 330, 340, 362, 364, 385, 402, 410, 426, 428, 429, 430, 437, 440, 455, 460, 483, 516, 520, 523, 529, 538, 545, 546, 547, 551, 552, 558, 559, 560, 561, 563, 565, 576, 578, 579, 584, 586, 587, 589, 590, 593, 596, 597, 598, 601, 603, 605, 609, 614, 615, 617, 620, 623, 628, 629, 631, 634, 637, 642, 643, 645, 647, 649, 651, 653, 655, 657, 658, 660, 661, 663, 666, 671, 672, 674, 676, 677, 682, 686, 687, 689, 691, 692, 696, 700, 701, 703, 705, 706, 710, 714, 715, 717, 719, 720, 724, 728, 729, 731, 732, 733, 734, 736, 741, 743, 745, 747, 753, 754, 757, 758, 759, 760, 762, 763, 764, 766, 770, 772, 774, 776, 777, 780, 781, 786, 788, 793, 795, 798, 800, 801, 802, 824, 830, 838, 840, 842, 843, 844, 845, 847, 848, 851, 852, 853, 854, 855, 856, 858, 859, 864, 865], "unifi": [0, 2, 40, 176, 452], "address": [0, 11, 12, 58, 179, 218, 221, 224, 254, 415, 416, 417, 418, 428, 429, 430, 758], "guarante": [0, 141, 142, 149, 179, 258, 364, 426, 507, 559, 567, 572, 732, 784, 786, 793, 798, 838, 839, 841, 843, 844, 845, 852], "space": [0, 25, 27, 43, 58, 60, 151, 152, 259, 294, 295, 328, 329, 412, 551, 552, 557, 559, 565], "pointer": [0, 2, 13, 34, 35, 36, 37, 41, 42, 49, 60, 149, 152, 176, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 257, 260, 261, 263, 264, 269, 271, 272, 275, 279, 280, 283, 285, 287, 289, 292, 294, 298, 300, 302, 304, 306, 307, 310, 312, 313, 316, 318, 320, 322, 324, 326, 328, 332, 334, 336, 338, 380, 409, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 433, 434, 435, 436, 438, 439, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 558, 562, 565, 566, 583, 591, 592, 604, 617, 619, 631, 633, 645, 654, 662, 674, 675, 689, 690, 703, 704, 717, 718, 731, 732, 746, 755, 758, 762, 766, 767, 778, 787, 788, 789, 790, 791, 804, 810, 852, 859], "valu": [0, 3, 4, 8, 9, 11, 13, 19, 20, 22, 25, 27, 28, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 51, 53, 54, 55, 56, 58, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 145, 149, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 176, 177, 179, 180, 181, 182, 183, 185, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 358, 359, 360, 364, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 412, 414, 415, 416, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 551, 552, 553, 557, 559, 560, 561, 562, 563, 564, 565, 566, 576, 577, 579, 581, 583, 584, 589, 590, 591, 593, 595, 596, 597, 603, 604, 605, 617, 619, 620, 631, 633, 634, 645, 646, 647, 651, 653, 654, 655, 660, 661, 662, 663, 674, 675, 677, 680, 689, 690, 692, 694, 703, 704, 706, 708, 717, 718, 720, 722, 731, 732, 733, 734, 743, 746, 751, 755, 756, 759, 762, 764, 766, 767, 768, 770, 776, 780, 781, 786, 787, 803, 804, 810, 812, 813, 815, 816, 817, 821, 822, 823, 825, 840, 844, 846, 851, 852, 854, 857], "alwai": [0, 40, 55, 58, 60, 63, 149, 152, 154, 160, 161, 162, 164, 168, 170, 258, 259, 527, 553, 557, 629, 643, 701, 715, 745, 747, 830, 843, 854], "same": [0, 8, 12, 36, 37, 39, 41, 42, 43, 45, 50, 51, 54, 55, 58, 60, 62, 63, 71, 73, 77, 78, 81, 100, 101, 141, 146, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 176, 177, 179, 215, 216, 218, 220, 221, 224, 254, 255, 257, 258, 259, 269, 298, 299, 304, 305, 332, 333, 338, 339, 340, 361, 366, 426, 427, 428, 429, 430, 483, 498, 523, 524, 525, 545, 551, 552, 553, 554, 556, 557, 558, 562, 565, 566, 567, 569, 580, 581, 583, 587, 591, 604, 610, 619, 624, 633, 638, 646, 649, 654, 658, 662, 667, 675, 690, 697, 704, 711, 718, 732, 738, 746, 747, 748, 751, 755, 760, 762, 764, 767, 772, 773, 776, 778, 779, 780, 784, 786, 787, 789, 791, 809, 812, 813, 815, 816, 821, 822, 823, 824, 825, 826, 827, 828, 830, 841, 843, 844, 846, 847, 851, 852, 853, 854, 859, 860, 862, 864], "locat": [0, 31, 62, 159, 168, 218, 221, 224, 254, 545, 787], "enabl": [0, 5, 8, 13, 38, 40, 43, 45, 55, 56, 60, 149, 151, 157, 158, 164, 179, 260, 455, 483, 548, 564, 566, 569, 572, 575, 577, 746, 760, 784, 786, 803, 836, 845, 855, 864], "without": [0, 12, 37, 40, 42, 43, 56, 60, 151, 152, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 179, 383, 385, 427, 563, 566, 581, 742, 749, 756, 799, 800, 829, 830, 837, 844, 865], "There": [0, 59, 149, 152, 155, 157, 158, 159, 161, 166, 167, 168, 169, 171, 172, 173, 179, 218, 221, 224, 247, 249, 414, 455, 559, 745, 754, 817, 829, 838, 840, 841, 844], "support": [0, 2, 5, 8, 9, 10, 12, 29, 30, 34, 35, 36, 38, 40, 43, 45, 48, 50, 55, 58, 60, 63, 148, 149, 150, 151, 152, 159, 160, 175, 178, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 345, 346, 347, 348, 351, 356, 357, 358, 359, 360, 364, 365, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 392, 393, 397, 398, 400, 402, 404, 405, 406, 407, 412, 413, 414, 415, 416, 417, 418, 422, 423, 424, 425, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 572, 573, 576, 581, 582, 585, 591, 594, 604, 606, 619, 621, 633, 635, 648, 656, 662, 664, 675, 678, 690, 693, 704, 707, 718, 721, 735, 745, 759, 762, 763, 766, 770, 784, 786, 799, 800, 844, 855, 859], "featur": [0, 2, 19, 20, 22, 25, 27, 38, 40, 41, 43, 46, 153, 162, 366, 385, 549, 575, 578, 732, 745, 836], "underli": [0, 2, 12, 14, 40, 45, 48, 60, 61, 63, 150, 342, 346, 364, 372, 415, 416, 417, 418, 422, 423, 424, 425, 455, 788, 852], "schedul": [0, 2, 179, 572, 756, 834, 835, 836, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849], "when": [0, 8, 10, 14, 29, 30, 34, 35, 36, 37, 40, 41, 42, 43, 45, 47, 53, 56, 58, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 254, 256, 257, 258, 298, 304, 332, 338, 340, 345, 347, 348, 351, 356, 358, 359, 360, 364, 369, 370, 371, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 391, 392, 393, 394, 397, 398, 400, 403, 404, 405, 407, 408, 422, 423, 424, 425, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 455, 460, 481, 484, 489, 516, 520, 533, 538, 546, 558, 559, 561, 564, 565, 566, 569, 570, 571, 576, 577, 581, 732, 744, 746, 751, 753, 755, 756, 760, 763, 764, 767, 768, 776, 779, 787, 799, 800, 814, 817, 825, 830, 838, 840, 842, 843, 844, 845, 852, 864], "readi": [0, 37, 63, 259, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544], "If": [0, 8, 10, 12, 22, 29, 30, 34, 35, 37, 42, 46, 48, 51, 60, 62, 63, 69, 72, 76, 80, 82, 83, 86, 87, 89, 119, 121, 122, 123, 124, 125, 126, 127, 130, 132, 138, 145, 149, 152, 153, 154, 159, 162, 168, 170, 176, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 261, 263, 264, 267, 269, 270, 271, 272, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 332, 334, 335, 336, 337, 338, 339, 340, 365, 394, 399, 403, 408, 419, 420, 421, 427, 428, 429, 430, 437, 440, 482, 483, 506, 507, 513, 514, 520, 525, 534, 535, 542, 543, 557, 558, 559, 561, 562, 565, 566, 567, 570, 576, 581, 584, 585, 589, 592, 593, 594, 595, 596, 597, 598, 605, 606, 607, 615, 617, 620, 621, 623, 629, 631, 634, 635, 637, 643, 645, 647, 648, 651, 655, 656, 660, 663, 664, 672, 674, 675, 677, 678, 679, 680, 687, 689, 690, 692, 693, 694, 696, 701, 703, 704, 706, 707, 708, 710, 715, 717, 718, 720, 721, 722, 729, 731, 732, 734, 735, 743, 744, 745, 746, 751, 754, 755, 757, 760, 762, 763, 764, 767, 770, 772, 776, 778, 780, 781, 783, 788, 789, 808, 817, 820, 829, 837, 840, 842, 843, 844, 845, 846, 851, 852, 853, 856], "method": [0, 2, 12, 13, 29, 30, 31, 34, 35, 36, 37, 41, 42, 43, 45, 50, 51, 56, 63, 152, 159, 169, 176, 177, 179, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 345, 347, 348, 351, 356, 357, 359, 360, 362, 363, 364, 366, 369, 370, 371, 373, 374, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 392, 393, 397, 398, 400, 402, 404, 405, 407, 410, 411, 433, 434, 435, 436, 438, 439, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 556, 557, 558, 565, 566, 580, 581, 586, 590, 596, 597, 598, 603, 609, 615, 617, 623, 629, 631, 637, 643, 645, 653, 657, 661, 666, 672, 674, 676, 682, 687, 689, 691, 696, 701, 703, 705, 710, 715, 717, 719, 724, 729, 731, 732, 733, 736, 743, 744, 749, 764, 780, 781, 787, 789, 790, 791, 811, 837, 842, 843, 844, 845, 847, 851, 856, 858, 860], "copi": [0, 34, 35, 36, 37, 40, 42, 43, 54, 60, 63, 141, 142, 149, 152, 153, 168, 185, 188, 190, 217, 218, 221, 222, 223, 224, 257, 368, 387, 388, 389, 390, 391, 394, 395, 396, 399, 401, 403, 408, 546, 559, 562, 565, 573, 574, 581, 583, 585, 589, 591, 594, 604, 606, 613, 615, 617, 619, 621, 627, 629, 631, 633, 635, 641, 643, 645, 646, 648, 651, 654, 656, 660, 662, 664, 670, 672, 674, 675, 678, 685, 687, 689, 690, 693, 699, 701, 703, 704, 707, 713, 715, 717, 718, 721, 727, 729, 731, 732, 733, 735, 743, 746, 747, 748, 751, 752, 755, 759, 760, 762, 764, 766, 767, 770, 772, 773, 776, 778, 779, 781, 804, 807, 810, 817, 818, 820, 821, 822, 823, 825, 826, 827, 828, 831, 844, 851, 852, 856, 859], "necessari": [0, 43, 56, 60, 151, 157, 159, 161, 168, 170, 179, 257, 570, 697, 817, 843], "order": [0, 8, 22, 25, 39, 43, 51, 54, 55, 56, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 179, 223, 254, 256, 257, 260, 269, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 298, 299, 300, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 332, 333, 334, 336, 338, 354, 389, 412, 414, 426, 433, 434, 435, 436, 445, 446, 447, 448, 455, 557, 559, 561, 563, 567, 646, 697, 711, 745, 748, 753, 756, 772, 773, 778, 787, 796, 797, 803, 817, 836], "soon": [0, 768], "prior": [0, 153, 179, 257, 258, 749], "finish": [0, 25, 61, 63, 149, 179, 252, 253, 844], "you": [0, 37, 49, 58, 150, 157, 170, 271, 272, 279, 289, 292, 312, 322, 326, 352, 387, 394, 403, 479, 480, 482, 530, 531, 532, 534, 539, 540, 542, 548, 565, 566, 577, 578, 803, 817, 837, 840, 845, 847, 864, 865], "must": [0, 8, 16, 22, 37, 55, 56, 58, 60, 61, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 152, 153, 154, 156, 157, 159, 161, 162, 164, 165, 166, 168, 170, 176, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 415, 416, 417, 418, 422, 423, 424, 425, 426, 428, 429, 430, 455, 483, 520, 524, 551, 552, 553, 554, 556, 558, 559, 560, 561, 562, 565, 566, 567, 579, 583, 584, 589, 591, 593, 598, 604, 605, 607, 615, 617, 619, 620, 629, 631, 633, 634, 643, 645, 646, 647, 651, 654, 655, 660, 662, 663, 672, 674, 675, 677, 679, 687, 689, 690, 692, 701, 703, 704, 706, 715, 717, 718, 720, 729, 731, 732, 733, 734, 746, 748, 749, 751, 753, 755, 756, 759, 760, 762, 764, 765, 767, 770, 772, 773, 775, 778, 779, 780, 781, 786, 788, 807, 809, 811, 812, 813, 815, 816, 821, 822, 823, 824, 825, 826, 827, 828, 841, 842, 844, 846, 847, 851, 853, 854, 859, 864], "specifi": [0, 8, 12, 16, 19, 20, 22, 25, 27, 29, 44, 48, 50, 52, 54, 56, 58, 60, 61, 62, 67, 68, 69, 77, 82, 83, 84, 85, 86, 87, 98, 99, 107, 108, 109, 110, 113, 117, 121, 122, 123, 124, 125, 126, 127, 130, 140, 141, 142, 143, 149, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 181, 182, 183, 190, 191, 195, 196, 197, 198, 199, 200, 201, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 220, 221, 222, 223, 224, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 257, 258, 259, 262, 264, 265, 266, 268, 269, 270, 272, 273, 274, 276, 277, 278, 280, 281, 282, 284, 285, 286, 287, 288, 290, 292, 293, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 317, 318, 319, 320, 321, 323, 325, 326, 327, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 364, 394, 402, 403, 414, 417, 424, 427, 428, 429, 430, 437, 440, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 550, 553, 557, 559, 561, 562, 565, 570, 571, 572, 573, 577, 745, 746, 751, 755, 756, 757, 759, 762, 764, 767, 768, 776, 779, 783, 784, 786, 817, 830, 837, 840, 841, 844, 845, 846, 859, 862, 864], "set": [0, 12, 13, 19, 20, 22, 25, 27, 29, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 51, 53, 60, 62, 63, 64, 68, 81, 100, 101, 114, 121, 122, 123, 124, 125, 126, 127, 130, 149, 151, 152, 153, 154, 155, 157, 161, 162, 164, 167, 168, 175, 176, 208, 209, 211, 212, 213, 214, 215, 216, 218, 221, 224, 227, 228, 247, 249, 250, 254, 255, 256, 257, 258, 259, 260, 341, 342, 345, 347, 348, 351, 356, 359, 360, 364, 366, 369, 370, 371, 373, 374, 376, 377, 378, 381, 382, 383, 384, 386, 391, 393, 394, 397, 399, 400, 403, 404, 405, 407, 408, 412, 414, 422, 423, 424, 425, 426, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 548, 549, 550, 557, 561, 562, 563, 572, 579, 581, 589, 595, 597, 598, 680, 694, 708, 722, 744, 745, 746, 748, 751, 753, 754, 755, 756, 760, 762, 766, 767, 768, 770, 773, 778, 781, 785, 786, 792, 803, 817, 829, 830, 840, 842, 844, 851, 855, 856, 859, 864], "event": [0, 2, 3, 4, 8, 11, 34, 35, 37, 41, 43, 150, 159, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 261, 263, 264, 267, 269, 271, 272, 275, 276, 279, 280, 283, 285, 287, 289, 292, 294, 295, 298, 300, 302, 304, 306, 307, 310, 312, 313, 316, 318, 320, 322, 324, 326, 328, 329, 332, 334, 336, 338, 380, 409, 419, 420, 421, 428, 429, 430, 433, 434, 435, 436, 438, 439, 441, 442, 443, 444, 446, 447, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 570], "complet": [0, 8, 14, 40, 43, 58, 60, 147, 149, 152, 155, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 257, 258, 261, 263, 264, 267, 269, 271, 272, 275, 276, 279, 280, 283, 285, 287, 289, 292, 294, 295, 298, 300, 302, 304, 306, 307, 310, 312, 313, 316, 318, 320, 322, 324, 326, 328, 329, 332, 334, 336, 338, 364, 370, 380, 419, 420, 421, 427, 428, 429, 430, 433, 434, 435, 436, 438, 439, 441, 442, 443, 444, 446, 447, 450, 451, 452, 453, 454, 476, 483, 501, 528, 732, 745, 750, 751, 753, 757, 824, 838, 840, 842, 843, 844, 845, 847, 848], "synchron": [0, 2, 8, 12, 13, 58, 60, 61, 792, 799, 800, 844], "coordin": [0, 58, 98, 99, 226, 228, 414], "destruct": [0, 559, 581, 583, 591, 604, 619, 633, 646, 654, 662, 675, 690, 704, 718, 732, 770, 781, 829, 840, 843, 844, 852], "advanc": [0, 159, 341, 415, 416, 566, 745], "requir": [0, 8, 10, 19, 22, 29, 38, 39, 40, 44, 46, 48, 49, 50, 51, 53, 54, 55, 58, 60, 61, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 165, 167, 168, 170, 173, 176, 177, 179, 227, 228, 252, 253, 254, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 352, 354, 387, 389, 409, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 565, 566, 567, 569, 570, 571, 572, 573, 574, 582, 583, 584, 585, 586, 589, 591, 593, 594, 596, 598, 601, 604, 605, 606, 607, 608, 614, 615, 617, 619, 620, 621, 622, 628, 629, 631, 633, 634, 635, 636, 642, 643, 645, 646, 647, 648, 651, 654, 655, 656, 657, 660, 662, 663, 664, 665, 671, 672, 674, 675, 676, 677, 678, 679, 681, 686, 687, 689, 690, 691, 692, 693, 695, 700, 701, 703, 704, 705, 706, 707, 709, 714, 715, 717, 718, 719, 720, 721, 723, 728, 729, 731, 733, 734, 735, 737, 741, 745, 746, 748, 749, 751, 755, 756, 759, 760, 762, 764, 765, 767, 770, 772, 773, 775, 778, 779, 780, 781, 784, 785, 787, 789, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 831, 834, 835, 841, 844, 846, 847, 851, 853, 855, 859, 864], "strategi": [0, 37, 559, 785], "In": [0, 8, 10, 19, 30, 34, 35, 39, 40, 43, 46, 47, 48, 49, 50, 51, 54, 56, 58, 60, 61, 62, 81, 82, 106, 149, 150, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 179, 210, 220, 221, 223, 227, 228, 240, 254, 258, 260, 267, 283, 292, 304, 305, 316, 338, 340, 341, 342, 346, 366, 372, 412, 414, 415, 416, 417, 418, 422, 423, 424, 425, 455, 460, 483, 484, 498, 516, 520, 538, 554, 559, 561, 565, 572, 576, 579, 585, 594, 606, 615, 619, 621, 633, 635, 648, 656, 664, 672, 675, 678, 687, 690, 693, 704, 707, 718, 721, 729, 735, 736, 745, 753, 754, 760, 766, 776, 780, 789, 790, 805, 808, 817, 841, 843, 864], "we": [0, 54, 56, 58, 81, 82, 130, 152, 154, 157, 158, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 179, 218, 221, 224, 255, 258, 864], "onemkl": [0, 1, 184, 191, 195, 197, 198, 199, 200, 201, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 220, 221, 222, 223, 224, 229, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 258, 259, 291, 340, 342, 344, 362, 364, 366, 410, 412, 415, 416, 445, 448, 455, 863], "matrix": [0, 22, 23, 46, 53, 56, 58, 106, 152, 159, 160, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 274, 275, 278, 279, 282, 283, 284, 285, 287, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 315, 316, 317, 318, 320, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 379, 390, 391, 399, 414, 415, 416, 417, 422, 423, 428, 429, 430, 431, 437, 440, 455, 565], "multipli": [0, 43, 53, 60, 63, 148, 152, 153, 170, 173, 197, 249, 250, 289, 291, 300, 301, 302, 303, 304, 305, 322, 334, 335, 336, 337, 338, 339, 480, 482, 507, 532, 534, 540, 542, 547, 756], "routin": [0, 1, 10, 39, 51, 179, 180, 181, 182, 183, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 344, 345, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 364, 366, 368, 369, 370, 371, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 549, 576, 786, 863], "gemm": [0, 152, 157, 179, 187, 197], "write": [0, 31, 37, 41, 60, 176, 179, 254, 257, 472, 473, 485, 486, 487, 488, 492, 506, 543, 559, 561, 592, 792, 795, 798, 802, 803, 830, 837, 864], "omit": [0, 12, 39, 51, 58, 151, 152, 159, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 368, 559, 817, 844], "irrelev": [0, 254, 837], "detail": [0, 19, 20, 22, 25, 31, 43, 48, 54, 60, 63, 150, 151, 152, 160, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 257, 258, 260, 261, 263, 264, 267, 269, 271, 272, 275, 276, 279, 280, 283, 285, 287, 289, 292, 294, 295, 298, 300, 302, 304, 306, 307, 310, 312, 313, 316, 318, 320, 322, 324, 326, 328, 329, 332, 334, 336, 338, 346, 349, 358, 362, 366, 380, 410, 415, 416, 422, 423, 445, 455, 500, 675, 690, 704, 718, 732, 785, 803], "initi": [0, 5, 18, 19, 22, 23, 25, 37, 40, 41, 42, 44, 45, 48, 52, 53, 58, 60, 154, 157, 161, 162, 164, 167, 169, 170, 176, 179, 196, 197, 198, 199, 206, 236, 247, 249, 250, 255, 257, 352, 353, 354, 355, 361, 368, 387, 388, 389, 390, 391, 394, 396, 399, 401, 403, 408, 409, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 452, 483, 554, 555, 558, 570, 593, 647, 677, 692, 706, 720, 744, 746, 751, 755, 760, 762, 764, 767, 770, 779, 781, 803, 812, 844, 846], "gpu_selector": [0, 49, 150], "want": [0, 152, 394, 403], "comput": [0, 2, 5, 12, 19, 22, 25, 28, 29, 30, 40, 43, 44, 45, 50, 51, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 66, 68, 70, 74, 76, 78, 79, 80, 81, 82, 83, 89, 93, 95, 97, 99, 100, 101, 105, 106, 107, 112, 115, 119, 132, 134, 136, 138, 145, 146, 147, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 178, 179, 180, 181, 182, 183, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 366, 380, 385, 391, 412, 428, 429, 431, 433, 434, 435, 436, 438, 439, 441, 442, 443, 444, 445, 446, 447, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 549, 557, 561, 565, 566, 745, 753, 755, 778, 781, 814, 816, 838, 841, 847, 851, 853, 862, 864], "perform": [0, 1, 8, 10, 19, 22, 25, 29, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 50, 51, 52, 56, 58, 60, 64, 65, 67, 68, 70, 78, 81, 85, 86, 87, 98, 100, 101, 103, 107, 109, 110, 111, 113, 114, 116, 121, 122, 123, 124, 125, 126, 127, 130, 137, 139, 140, 143, 146, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 176, 179, 183, 185, 186, 187, 190, 191, 192, 193, 194, 197, 201, 210, 211, 214, 217, 218, 220, 221, 222, 223, 224, 225, 227, 231, 233, 240, 241, 242, 250, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 276, 277, 278, 280, 281, 282, 284, 286, 288, 290, 291, 293, 295, 296, 297, 299, 301, 303, 305, 307, 308, 309, 311, 313, 314, 315, 317, 319, 321, 323, 325, 327, 329, 330, 331, 333, 335, 337, 339, 341, 364, 375, 391, 414, 415, 416, 417, 418, 428, 429, 430, 460, 476, 477, 479, 480, 482, 484, 498, 500, 501, 503, 507, 516, 517, 525, 528, 529, 530, 531, 532, 534, 536, 538, 539, 540, 542, 545, 547, 549, 555, 559, 565, 566, 570, 572, 576, 586, 589, 590, 596, 603, 615, 617, 629, 631, 643, 645, 651, 653, 657, 660, 661, 672, 674, 687, 689, 701, 703, 715, 717, 729, 731, 733, 736, 743, 751, 755, 768, 776, 783, 786, 787, 799, 800, 822, 823, 827, 829, 843, 844, 856, 858, 863, 864], "hold": [0, 8, 13, 37, 42, 58, 60, 61, 121, 122, 123, 124, 125, 126, 127, 149, 152, 158, 176, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 362, 410, 417, 418, 426, 427, 440, 571, 589, 591, 602, 616, 630, 644, 673, 676, 688, 691, 702, 705, 716, 719, 730, 732, 742, 758, 770, 781, 829, 830, 843, 851], "alloc": [0, 2, 10, 30, 31, 34, 35, 37, 45, 60, 149, 151, 152, 168, 179, 181, 183, 190, 221, 224, 252, 253, 254, 255, 256, 257, 259, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 452, 455, 483, 546, 581, 583, 584, 585, 587, 588, 589, 590, 591, 592, 593, 594, 599, 600, 603, 604, 605, 606, 610, 611, 612, 613, 615, 617, 618, 619, 620, 621, 624, 625, 626, 627, 629, 631, 632, 633, 634, 635, 638, 639, 640, 641, 643, 645, 646, 647, 648, 649, 650, 653, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 667, 668, 669, 670, 672, 674, 675, 677, 678, 683, 684, 685, 687, 689, 690, 692, 693, 697, 698, 699, 701, 703, 704, 706, 707, 711, 712, 713, 715, 717, 718, 720, 721, 725, 726, 727, 729, 731, 732, 734, 735, 738, 739, 740, 742, 743, 787, 788, 789, 790, 791, 832, 835, 852, 854], "compar": [0, 43, 54, 60, 63, 130, 176, 567, 582, 591, 593, 596, 597, 598, 604, 606, 609, 610, 611, 612, 613, 618, 619, 621, 623, 624, 625, 626, 627, 632, 633, 635, 637, 638, 639, 640, 641, 646, 647, 648, 649, 650, 662, 664, 666, 667, 668, 669, 670, 677, 692, 706, 720, 768, 772, 788, 790, 803, 820], "add": [0, 60, 63, 68, 69, 73, 78, 79, 80, 81, 82, 83, 107, 108, 148, 149, 155, 157, 159, 161, 164, 168, 181, 182, 183, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 229, 232, 233, 234, 236, 237, 238, 239, 249, 547, 556, 558, 748, 756, 766, 772, 773, 778, 787, 808, 817, 843, 847], "paramet": [0, 8, 19, 20, 22, 25, 29, 34, 35, 37, 38, 39, 40, 41, 42, 43, 48, 49, 50, 51, 56, 58, 60, 61, 62, 63, 81, 82, 100, 101, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 364, 366, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 553, 559, 560, 562, 565, 566, 615, 629, 643, 672, 675, 687, 690, 701, 704, 715, 718, 729, 744, 756, 759, 764, 768, 780, 786, 809, 812, 813, 815, 816, 817, 830, 840, 844, 846, 851, 852, 853, 855], "replac": [0, 37, 42, 75, 76, 153, 170, 171, 179, 227, 235, 383, 565, 584, 593, 605, 620, 634, 647, 655, 663, 677, 692, 706, 720, 734, 776, 787, 849], "otherwis": [0, 8, 34, 35, 37, 60, 63, 76, 89, 95, 119, 121, 122, 123, 124, 125, 126, 127, 132, 138, 145, 154, 158, 159, 175, 176, 177, 179, 191, 208, 209, 213, 214, 218, 222, 223, 226, 365, 415, 416, 422, 423, 494, 496, 497, 507, 513, 514, 523, 535, 547, 553, 556, 568, 576, 577, 579, 581, 582, 587, 589, 590, 592, 597, 598, 599, 602, 603, 609, 610, 615, 616, 617, 618, 623, 624, 629, 630, 631, 632, 637, 638, 643, 644, 645, 649, 651, 652, 653, 658, 660, 661, 666, 667, 672, 673, 674, 675, 682, 683, 687, 688, 689, 690, 696, 697, 701, 702, 703, 704, 710, 711, 715, 716, 717, 718, 724, 725, 729, 730, 731, 732, 738, 739, 742, 743, 746, 755, 757, 760, 762, 763, 767, 770, 772, 780, 781, 791, 793, 798, 799, 800, 801, 802, 829, 830, 842, 843, 844, 845, 847, 849, 851, 856, 857, 860, 865], "namespac": [0, 4, 11, 19, 20, 22, 25, 29, 32, 34, 35, 37, 38, 39, 41, 42, 44, 48, 49, 51, 52, 160, 175, 176, 177, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 575, 582, 583, 591, 592, 604, 618, 619, 632, 633, 646, 654, 662, 675, 690, 704, 718, 732, 744, 746, 747, 748, 749, 750, 751, 752, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 787, 788, 789, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 832, 835, 836, 837, 839, 840, 842, 843, 844, 845, 846, 847, 848, 849, 851, 852, 859, 862], "cl": [0, 34, 35, 37, 60, 61, 159, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339], "declar": [0, 19, 20, 22, 25, 29, 34, 35, 37, 38, 39, 41, 42, 48, 49, 51, 152, 179, 753, 783, 817, 837, 861], "doubl": [0, 8, 9, 19, 20, 22, 25, 34, 35, 41, 43, 48, 50, 180, 181, 182, 183, 185, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 343, 347, 348, 351, 356, 359, 364, 370, 371, 373, 374, 376, 377, 378, 379, 382, 384, 386, 392, 393, 397, 398, 400, 404, 407, 409, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 554, 768, 862], "new": [0, 12, 19, 20, 22, 25, 28, 34, 35, 37, 38, 40, 41, 42, 43, 44, 60, 63, 149, 151, 159, 176, 179, 422, 423, 424, 425, 455, 528, 529, 557, 558, 589, 607, 651, 660, 679, 732, 733, 743, 744, 746, 751, 755, 760, 764, 767, 778, 781, 825, 837, 844, 851, 856], "m": [0, 19, 22, 25, 46, 58, 106, 164, 191, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 217, 218, 220, 221, 222, 223, 224, 236, 237, 247, 249, 250, 254, 255, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 289, 291, 292, 293, 294, 295, 296, 297, 300, 301, 302, 303, 304, 305, 322, 326, 327, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339, 340, 341, 351, 352, 353, 365, 371, 383, 386, 387, 388, 392, 428, 429, 430, 455, 591, 604, 619, 633, 662, 675, 690, 704, 718, 829, 830, 837], "n": [0, 19, 20, 22, 25, 40, 46, 56, 58, 68, 69, 70, 71, 73, 77, 81, 98, 99, 100, 101, 104, 106, 107, 142, 150, 152, 153, 154, 156, 157, 161, 162, 163, 164, 165, 166, 168, 169, 170, 173, 176, 177, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 256, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 352, 353, 354, 355, 357, 361, 368, 371, 374, 379, 380, 383, 387, 388, 389, 390, 391, 392, 394, 396, 398, 399, 401, 402, 403, 408, 409, 428, 429, 440, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 557, 559, 561, 565, 566, 567, 591, 593, 595, 675, 676, 680, 690, 691, 694, 704, 705, 708, 718, 719, 722, 732, 733, 734, 743, 749, 752, 753, 761, 762, 766, 769, 770, 778, 787, 788, 789, 791, 837, 841], "b": [0, 46, 53, 58, 149, 164, 170, 176, 191, 196, 197, 198, 199, 206, 210, 220, 221, 222, 223, 224, 226, 236, 240, 242, 244, 246, 247, 249, 250, 251, 254, 261, 269, 279, 280, 281, 282, 285, 286, 288, 312, 313, 314, 315, 318, 319, 324, 325, 341, 342, 348, 351, 355, 359, 360, 364, 370, 373, 382, 384, 386, 396, 400, 401, 404, 405, 407, 428, 460, 466, 467, 478, 484, 494, 496, 497, 498, 502, 507, 513, 514, 516, 517, 519, 520, 523, 524, 525, 538, 547, 566, 753, 768, 814, 859], "p": [0, 19, 20, 22, 25, 28, 37, 40, 46, 159, 167, 261, 271, 291, 292, 293, 294, 295, 326, 327, 328, 329, 341, 345, 354, 356, 360, 365, 369, 370, 371, 381, 389, 392, 393, 397, 398, 405, 507, 557, 559, 561, 565, 604, 615, 619, 629, 675, 687, 690, 701, 765, 775, 787, 788, 789, 791, 827, 837, 840], "q": [0, 179, 258, 261, 263, 267, 287, 291, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 304, 305, 320, 326, 327, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 361, 365, 370, 409], "1d": [0, 58, 73, 86, 87, 98, 99, 100, 101, 106, 114, 115, 121, 122, 123, 124, 125, 126, 127, 154, 157, 161, 163, 165, 169, 179], "matric": [0, 22, 28, 40, 179, 187, 188, 191, 196, 197, 198, 199, 201, 206, 210, 217, 218, 220, 221, 222, 223, 224, 236, 240, 242, 247, 249, 250, 260, 261, 264, 265, 272, 273, 276, 277, 280, 281, 285, 286, 287, 288, 289, 291, 292, 295, 296, 307, 308, 313, 314, 318, 319, 320, 321, 322, 324, 326, 329, 330, 340, 414, 415, 416, 431], "bound": [0, 2, 37, 63, 75, 76, 152, 348, 359, 360, 404, 405, 553, 558, 559, 560, 561, 565, 570, 583, 601, 614, 628, 642, 671, 686, 700, 714, 728, 741, 749, 757, 786, 838, 842, 855], "mkl": [0, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 447, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546], "transpos": [0, 58, 106, 171, 179, 188, 195, 196, 197, 198, 199, 200, 201, 210, 211, 217, 218, 220, 221, 222, 223, 224, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 279, 280, 281, 282, 300, 301, 302, 303, 304, 305, 324, 325, 334, 335, 336, 337, 338, 339, 426, 428, 429, 430], "nt": [0, 54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "nontran": [0, 179, 210, 211, 217, 220, 221, 222, 223, 240, 241, 279, 280, 281, 282, 300, 301, 302, 303, 304, 305, 324, 325, 334, 335, 336, 337, 338, 339, 428, 429, 430], "syntax": [0, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 358, 359, 360, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 759, 762, 832], "void": [0, 8, 9, 11, 12, 13, 14, 37, 41, 43, 60, 63, 152, 153, 159, 168, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 257, 261, 263, 264, 267, 269, 271, 272, 275, 276, 279, 280, 283, 285, 287, 289, 292, 294, 295, 298, 300, 302, 304, 306, 307, 310, 312, 313, 316, 318, 320, 322, 324, 326, 328, 329, 332, 334, 336, 338, 357, 380, 385, 402, 415, 416, 417, 418, 422, 423, 424, 425, 428, 429, 430, 433, 434, 435, 436, 438, 439, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 554, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 581, 583, 584, 588, 589, 590, 591, 592, 595, 598, 600, 603, 604, 612, 615, 617, 619, 626, 629, 631, 633, 640, 643, 645, 646, 647, 650, 651, 653, 654, 655, 659, 660, 661, 662, 669, 672, 674, 675, 680, 684, 687, 689, 690, 694, 698, 701, 703, 704, 708, 712, 715, 717, 718, 722, 726, 729, 731, 732, 734, 740, 743, 744, 749, 751, 753, 757, 760, 765, 768, 770, 775, 781, 786, 787, 788, 789, 791, 793, 794, 795, 798, 801, 802, 803, 804, 806, 807, 809, 811, 814, 821, 824, 827, 829, 830, 831, 841, 842, 843, 844, 845, 846, 847, 851, 852, 853, 858], "exec_queu": [0, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544], "transa": [0, 196, 197, 198, 199, 220, 221, 247, 249, 324], "transb": [0, 196, 197, 198, 199, 220, 221], "int64_t": [0, 19, 20, 22, 25, 29, 34, 35, 37, 41, 42, 43, 49, 59, 159, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 380, 415, 416, 417, 418, 422, 423, 424, 425, 432, 437, 440, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544], "k": [0, 18, 23, 24, 26, 44, 52, 106, 152, 159, 163, 164, 187, 191, 196, 197, 198, 199, 205, 210, 211, 229, 240, 241, 242, 243, 244, 246, 254, 272, 289, 292, 293, 294, 295, 296, 297, 300, 301, 302, 303, 322, 326, 327, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339, 340, 341, 355, 356, 360, 365, 368, 371, 381, 383, 392, 393, 396, 397, 398, 399, 401, 405, 428, 552, 582, 591, 596, 597, 598, 604, 609, 617, 619, 623, 631, 633, 637, 645, 662, 666, 674, 675, 682, 689, 690, 696, 703, 704, 710, 717, 718, 724, 731, 732, 762, 763, 804, 810, 820, 826, 837], "t": [0, 19, 22, 28, 34, 35, 40, 53, 58, 60, 62, 63, 100, 101, 149, 152, 153, 159, 162, 170, 176, 177, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 379, 428, 429, 430, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 562, 566, 583, 587, 588, 589, 591, 592, 594, 599, 600, 604, 606, 610, 611, 612, 615, 618, 619, 621, 624, 625, 626, 629, 632, 633, 638, 639, 640, 643, 646, 648, 649, 650, 651, 654, 658, 659, 660, 662, 667, 668, 669, 672, 675, 678, 683, 684, 687, 690, 693, 697, 698, 701, 704, 707, 711, 712, 715, 718, 721, 725, 726, 729, 732, 738, 739, 740, 747, 748, 749, 757, 759, 762, 764, 770, 772, 773, 774, 777, 778, 780, 781, 787, 789, 791, 803, 808, 824, 828, 851, 852, 853, 854], "alpha": [0, 54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 181, 182, 183, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 220, 221, 222, 223, 224, 229, 230, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 247, 249, 250, 260, 365, 370, 377, 400, 407, 428, 429, 430, 455], "lda": [0, 58, 179, 191, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 220, 221, 222, 223, 224, 229, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 455], "ldb": [0, 196, 197, 198, 199, 206, 210, 220, 221, 222, 223, 224, 236, 240, 247, 249, 250, 279, 280, 281, 282, 285, 286, 312, 313, 314, 315, 318, 319, 324, 325], "beta": [0, 54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 181, 195, 196, 197, 198, 199, 200, 201, 205, 206, 207, 210, 211, 212, 220, 221, 229, 232, 236, 237, 240, 241, 242, 247, 249, 260, 347, 351, 364, 365, 373, 376, 377, 382, 384, 386, 400, 407, 428, 429, 455], "ldc": [0, 191, 196, 197, 198, 199, 206, 210, 211, 220, 221, 236, 240, 241, 242, 247, 249, 300, 301, 302, 303, 304, 305, 334, 335, 336, 337, 338, 339], "bla": [0, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 260, 340, 413, 414, 415, 416, 417, 418, 427, 428, 429, 430, 432, 864], "0": [0, 11, 12, 17, 19, 20, 22, 25, 29, 33, 34, 35, 37, 38, 41, 42, 46, 49, 58, 60, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 152, 153, 155, 156, 157, 158, 159, 161, 162, 164, 166, 168, 169, 170, 171, 173, 176, 177, 179, 183, 190, 191, 196, 197, 198, 199, 201, 206, 215, 216, 218, 221, 224, 226, 227, 228, 231, 236, 242, 247, 249, 250, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 345, 347, 348, 351, 352, 353, 354, 355, 356, 357, 359, 360, 365, 368, 369, 370, 371, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 412, 414, 415, 416, 422, 423, 424, 425, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 515, 516, 518, 520, 521, 522, 523, 525, 526, 527, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 551, 552, 554, 561, 565, 566, 576, 577, 591, 595, 597, 617, 674, 689, 731, 751, 753, 756, 762, 764, 765, 766, 768, 770, 775, 778, 781, 786, 837, 840, 841, 842, 843, 844, 846, 865], "exit": [0, 269, 283, 285, 287, 316, 318, 320, 829, 845, 846], "destructor": [0, 732, 758, 779, 804, 807, 810, 811, 817, 820, 821, 822, 823, 825, 826, 827, 828, 837, 847, 862], "result": [0, 8, 12, 30, 38, 40, 43, 45, 47, 49, 50, 52, 53, 54, 55, 56, 58, 121, 122, 123, 124, 125, 126, 127, 140, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 163, 164, 166, 167, 168, 170, 172, 176, 180, 182, 188, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 213, 215, 216, 219, 220, 221, 228, 229, 231, 232, 233, 236, 237, 238, 239, 252, 253, 254, 257, 259, 261, 263, 264, 267, 269, 271, 272, 275, 276, 279, 280, 283, 285, 287, 289, 291, 292, 294, 295, 298, 300, 302, 304, 306, 307, 310, 312, 313, 316, 318, 320, 322, 324, 326, 328, 329, 332, 334, 336, 338, 394, 428, 429, 430, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 554, 557, 565, 566, 583, 591, 597, 598, 602, 616, 630, 644, 652, 654, 673, 688, 702, 716, 730, 745, 749, 753, 755, 756, 760, 764, 766, 781, 786, 787, 789, 791, 811, 812, 813, 814, 815, 816, 817, 844, 845, 851, 853, 854], "back": [0, 8, 40, 60, 62, 68, 69, 78, 79, 80, 81, 82, 83, 107, 108, 157, 165, 168, 176, 258, 732, 736, 789], "With": [0, 54, 60, 149, 170, 179, 745, 786, 840], "do": [0, 8, 12, 40, 43, 54, 56, 58, 60, 61, 68, 107, 152, 153, 154, 169, 179, 247, 249, 250, 257, 291, 340, 479, 480, 482, 530, 531, 532, 534, 539, 540, 542, 558, 559, 566, 570, 572, 573, 577, 581, 615, 672, 687, 729, 745, 746, 751, 755, 760, 767, 778, 781, 786, 800, 830, 843, 844, 860], "addit": [0, 5, 10, 39, 40, 42, 43, 51, 53, 55, 58, 60, 67, 78, 79, 80, 82, 106, 127, 149, 154, 155, 157, 164, 175, 179, 180, 181, 182, 183, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 257, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 343, 366, 391, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 460, 556, 558, 566, 570, 572, 579, 585, 594, 606, 621, 635, 648, 656, 664, 678, 693, 707, 721, 735, 745, 803, 808, 844], "simpl": [0, 37, 153, 753, 766], "should": [0, 8, 11, 12, 13, 22, 31, 34, 39, 40, 56, 58, 60, 62, 63, 67, 69, 70, 72, 73, 77, 80, 82, 83, 85, 86, 87, 98, 99, 109, 110, 113, 121, 122, 123, 124, 125, 126, 127, 130, 143, 149, 150, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 394, 402, 403, 427, 428, 429, 430, 433, 434, 435, 436, 438, 439, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 550, 561, 562, 564, 565, 569, 570, 571, 572, 573, 598, 615, 617, 623, 629, 631, 633, 637, 643, 645, 672, 674, 687, 689, 696, 701, 703, 710, 715, 717, 729, 731, 762, 776, 782, 784, 786, 789, 806, 808, 811, 817, 818, 820, 838, 840, 843, 844, 846, 851, 853], "read": [0, 31, 34, 35, 36, 37, 40, 41, 49, 60, 179, 254, 255, 257, 259, 427, 428, 429, 430, 553, 581, 592, 778, 795, 798, 802], "lambda": [0, 258, 283, 285, 286, 316, 318, 319, 343, 356, 365, 397, 398], "element": [0, 8, 22, 27, 28, 29, 34, 37, 40, 41, 42, 43, 46, 58, 62, 63, 65, 67, 75, 81, 84, 85, 86, 87, 88, 91, 92, 94, 96, 100, 101, 102, 103, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 133, 135, 137, 139, 140, 141, 142, 143, 144, 146, 149, 152, 157, 158, 159, 165, 176, 177, 179, 180, 181, 182, 183, 185, 189, 190, 191, 192, 193, 194, 197, 198, 201, 208, 209, 211, 212, 213, 214, 215, 216, 218, 219, 221, 223, 224, 225, 227, 228, 230, 231, 235, 242, 246, 247, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 352, 353, 354, 355, 357, 363, 383, 411, 414, 415, 416, 418, 422, 423, 425, 440, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 565, 566, 567, 586, 587, 592, 596, 597, 599, 601, 602, 603, 604, 608, 609, 610, 614, 616, 619, 622, 623, 624, 628, 630, 633, 636, 637, 638, 642, 644, 649, 652, 653, 657, 658, 662, 665, 666, 667, 671, 673, 675, 676, 680, 681, 682, 683, 686, 688, 690, 691, 694, 695, 696, 697, 700, 702, 704, 705, 708, 709, 710, 711, 714, 716, 718, 719, 722, 723, 724, 725, 728, 730, 732, 733, 737, 738, 741, 742, 743, 749, 759, 762, 779, 783, 806, 808, 814, 819, 825, 826, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 864], "parallel_for": [0, 37, 361, 362, 550, 553, 565, 573, 574, 804, 807, 809, 810, 817, 819, 841, 843], "map": [0, 11, 12, 48, 60, 84, 86, 87, 117, 147, 151, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 557, 561, 562, 581, 749, 784, 838, 851, 864], "leav": [0, 576, 845], "scope": [0, 12, 36, 41, 42, 149, 151, 152, 179, 254, 255, 256, 257, 506, 543, 798, 802, 829, 830, 840, 846], "includ": [0, 2, 12, 23, 29, 34, 35, 37, 40, 43, 45, 48, 49, 55, 62, 149, 150, 152, 157, 159, 174, 175, 176, 177, 179, 185, 186, 187, 188, 260, 285, 291, 318, 361, 362, 409, 410, 452, 455, 545, 554, 560, 565, 585, 594, 606, 621, 635, 648, 656, 664, 678, 693, 707, 721, 735, 748, 753, 756, 766, 768, 770, 772, 773, 778, 781, 784, 787, 788, 830, 837, 838, 843, 844, 864, 865], "hpp": [0, 19, 20, 22, 25, 29, 31, 34, 35, 37, 38, 41, 42, 49, 361, 409, 452], "int": [0, 8, 9, 11, 12, 34, 35, 37, 58, 60, 150, 152, 153, 155, 156, 159, 171, 172, 173, 176, 177, 341, 355, 361, 368, 370, 374, 377, 378, 396, 401, 409, 452, 551, 552, 553, 554, 560, 566, 579, 585, 594, 606, 621, 635, 648, 656, 664, 678, 693, 707, 721, 735, 751, 753, 756, 766, 768, 770, 778, 781, 783, 786, 803, 810, 837, 841, 843, 844, 846], "main": [0, 11, 12, 30, 31, 34, 35, 37, 40, 47, 54, 58, 149, 151, 153, 340, 361, 362, 409, 427, 452, 585, 594, 606, 621, 635, 648, 656, 664, 678, 693, 707, 721, 735, 753, 756, 766, 768, 770, 778, 781, 843, 844], "ahost": 0, "bhost": 0, "chost": 0, "2d": [0, 58, 106, 152, 154, 157, 158, 161, 162, 163, 164, 165, 166, 169, 171], "2": [0, 19, 20, 25, 28, 29, 34, 35, 37, 46, 60, 70, 71, 72, 78, 80, 81, 82, 83, 86, 87, 99, 100, 101, 106, 112, 114, 115, 122, 130, 140, 153, 154, 158, 159, 162, 163, 170, 179, 184, 185, 195, 200, 202, 203, 204, 205, 207, 208, 209, 212, 213, 214, 223, 227, 228, 229, 232, 233, 234, 237, 238, 239, 243, 244, 245, 246, 248, 251, 254, 255, 256, 258, 269, 283, 285, 286, 289, 300, 302, 316, 318, 319, 322, 334, 336, 340, 341, 343, 344, 348, 351, 352, 353, 354, 355, 356, 357, 365, 366, 368, 373, 374, 378, 379, 381, 384, 385, 386, 387, 388, 389, 390, 393, 394, 396, 398, 399, 400, 401, 402, 403, 408, 409, 414, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 472, 473, 478, 480, 482, 484, 485, 486, 487, 488, 491, 494, 496, 497, 498, 502, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 520, 522, 523, 525, 526, 531, 532, 533, 534, 538, 540, 542, 547, 551, 552, 553, 560, 561, 566, 577, 606, 621, 635, 664, 756, 768, 781], "handler": [0, 37, 361, 362, 457, 458, 459, 460, 462, 464, 468, 472, 473, 475, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 498, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 516, 517, 519, 520, 521, 522, 523, 524, 525, 530, 531, 532, 533, 534, 537, 538, 539, 540, 542, 543, 545, 548], "h": [0, 53, 58, 70, 71, 73, 150, 152, 154, 157, 161, 163, 165, 166, 168, 195, 196, 197, 198, 199, 200, 201, 203, 208, 209, 210, 211, 213, 214, 217, 218, 220, 221, 222, 223, 224, 227, 228, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 261, 269, 270, 283, 285, 287, 289, 290, 300, 302, 306, 307, 312, 313, 314, 315, 324, 326, 332, 334, 335, 336, 337, 338, 339, 341, 428, 429, 430, 551, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 579, 582, 583, 585, 591, 594, 606, 621, 633, 635, 648, 654, 656, 662, 664, 675, 678, 690, 693, 704, 707, 718, 721, 732, 735, 744, 746, 747, 748, 749, 750, 751, 752, 753, 755, 756, 757, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 775, 776, 778, 779, 780, 781, 783, 786, 787, 788, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 820, 837, 840, 841, 842, 843, 844, 845, 846, 847, 849, 851, 852, 859, 861], "from": [0, 1, 8, 10, 11, 12, 19, 20, 25, 27, 28, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 49, 50, 51, 53, 58, 60, 61, 62, 63, 74, 98, 99, 100, 101, 106, 114, 115, 121, 122, 123, 124, 125, 126, 127, 128, 130, 135, 136, 141, 142, 146, 149, 150, 151, 152, 156, 159, 160, 163, 165, 168, 170, 171, 176, 177, 179, 218, 221, 223, 224, 227, 254, 255, 257, 258, 264, 280, 281, 285, 291, 294, 295, 300, 301, 302, 303, 304, 305, 307, 308, 313, 314, 318, 328, 329, 334, 335, 336, 337, 338, 339, 340, 344, 349, 350, 353, 362, 363, 364, 365, 366, 367, 368, 380, 383, 385, 387, 388, 389, 390, 391, 394, 395, 396, 399, 401, 403, 408, 410, 411, 412, 427, 440, 449, 496, 497, 513, 514, 519, 527, 538, 546, 547, 551, 552, 554, 556, 557, 558, 559, 561, 562, 565, 566, 567, 569, 570, 571, 572, 573, 574, 577, 578, 579, 581, 583, 586, 587, 589, 590, 591, 596, 598, 599, 603, 604, 607, 608, 615, 617, 619, 622, 629, 631, 633, 636, 643, 644, 645, 646, 649, 651, 652, 653, 654, 657, 658, 660, 661, 662, 665, 672, 673, 674, 675, 676, 679, 681, 683, 687, 688, 689, 690, 691, 695, 701, 702, 703, 704, 705, 709, 715, 717, 718, 719, 723, 725, 729, 730, 731, 732, 733, 737, 743, 745, 746, 748, 749, 751, 752, 753, 754, 755, 756, 759, 760, 762, 763, 764, 765, 767, 768, 770, 772, 773, 775, 776, 778, 779, 780, 781, 783, 784, 785, 786, 787, 789, 791, 795, 801, 802, 803, 806, 810, 814, 818, 829, 830, 837, 840, 841, 842, 844, 845, 851, 854, 859, 860, 863], "auto": [0, 11, 19, 20, 22, 25, 34, 35, 37, 38, 48, 49, 62, 67, 85, 109, 110, 113, 130, 140, 141, 143, 152, 157, 170, 176, 349, 409, 452, 554, 559, 844, 846], "get_access": 0, "mode": [0, 43, 44, 45, 50, 54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 179, 364, 365, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 561, 562, 563, 786], "widtha": 0, "get_rang": 0, "id": [0, 37, 41, 42, 63, 149, 179, 272, 280, 307, 313, 566, 596, 597, 598, 609, 617, 623, 631, 637, 645, 666, 674, 675, 682, 689, 690, 696, 703, 704, 710, 717, 718, 724, 731, 765, 775, 778, 783, 844, 852], "index": [0, 19, 29, 30, 34, 37, 53, 61, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 179, 185, 215, 216, 223, 254, 255, 258, 264, 265, 272, 273, 276, 277, 280, 281, 295, 296, 307, 308, 313, 314, 329, 330, 340, 385, 391, 408, 414, 415, 416, 422, 423, 483, 558, 559, 732, 759, 779, 780, 783, 809, 810, 844, 846], "row": [0, 19, 20, 22, 29, 34, 36, 40, 41, 42, 43, 44, 46, 49, 58, 106, 149, 178, 179, 191, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 217, 218, 220, 221, 222, 223, 224, 229, 232, 233, 234, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 279, 280, 281, 282, 283, 285, 289, 292, 293, 294, 295, 296, 297, 300, 301, 302, 303, 304, 305, 316, 318, 322, 324, 325, 326, 327, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339, 340, 414, 415, 416, 417, 422, 423, 424, 426, 535, 551, 552], "col": [0, 198, 551, 552], "sum": [0, 8, 16, 22, 54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 180, 185, 220, 225, 264, 265, 272, 273, 276, 277, 280, 281, 295, 296, 307, 308, 313, 314, 329, 330, 371, 383, 392, 393, 414, 435, 436, 445, 447, 448, 502, 547, 561, 565, 566, 766, 810, 814, 816, 859, 862], "oneapi": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865], "softwar": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865], "onedpl": [1, 174, 176, 177, 863], "companion": [1, 175, 863], "compil": [1, 37, 43, 48, 51, 62, 63, 64, 106, 576, 577, 579, 837, 863], "program": [1, 4, 32, 36, 39, 40, 43, 44, 45, 60, 64, 151, 157, 160, 161, 170, 175, 258, 340, 545, 576, 578, 675, 690, 704, 718, 784, 808, 817, 841, 843, 861, 863, 864], "api": [1, 11, 37, 38, 42, 43, 44, 45, 59, 62, 63, 64, 150, 159, 160, 175, 183, 190, 191, 197, 201, 218, 221, 224, 242, 250, 260, 264, 265, 272, 273, 276, 277, 280, 281, 295, 296, 307, 308, 313, 314, 329, 330, 412, 415, 416, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 549, 578, 745, 784, 838, 844, 861, 863, 864], "stl": [1, 179, 553, 804, 863], "extens": [1, 44, 50, 62, 149, 150, 175, 179, 181, 183, 184, 190, 191, 197, 198, 199, 201, 217, 218, 220, 221, 222, 223, 224, 242, 250, 264, 265, 272, 273, 276, 277, 280, 281, 295, 296, 307, 308, 313, 314, 329, 330, 552, 784, 799, 800, 837, 863], "onednn": [1, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 148, 149, 151, 152, 157, 160, 161, 168, 169, 170, 863], "high": [1, 43, 150, 151, 157, 165, 341, 355, 364, 396, 479, 480, 482, 500, 529, 530, 531, 532, 534, 539, 540, 542, 549, 829, 844, 863, 864], "implement": [1, 10, 19, 20, 22, 23, 25, 28, 29, 30, 31, 36, 39, 40, 41, 42, 43, 44, 45, 48, 50, 51, 52, 54, 55, 56, 58, 59, 62, 63, 84, 86, 87, 106, 117, 147, 148, 149, 151, 152, 153, 154, 157, 159, 160, 161, 162, 163, 164, 165, 168, 169, 171, 175, 176, 177, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 352, 366, 375, 387, 395, 403, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 455, 507, 520, 554, 563, 566, 579, 583, 591, 604, 619, 633, 646, 654, 662, 675, 677, 690, 692, 704, 706, 718, 720, 732, 745, 746, 751, 755, 756, 761, 762, 767, 769, 771, 776, 779, 783, 784, 785, 787, 789, 791, 799, 800, 803, 829, 830, 837, 838, 840, 841, 842, 852, 859, 862, 863, 864], "primit": [1, 2, 5, 53, 54, 55, 56, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 792, 863], "learn": [1, 5, 28, 49, 50, 52, 55, 62, 149, 150, 153, 863], "framework": [1, 45, 62, 147, 149, 150, 863], "oneccl": [1, 3, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 863], "scale": [1, 5, 28, 43, 53, 54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 181, 183, 188, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 220, 221, 222, 223, 224, 225, 228, 229, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 247, 249, 250, 258, 351, 365, 370, 373, 377, 386, 391, 507, 789, 863, 864], "multipl": [1, 2, 5, 8, 11, 12, 16, 43, 53, 55, 56, 58, 60, 62, 63, 126, 149, 151, 152, 153, 154, 155, 159, 160, 162, 167, 179, 183, 190, 191, 197, 198, 201, 206, 210, 218, 221, 224, 236, 240, 242, 247, 250, 258, 260, 279, 280, 291, 312, 313, 324, 341, 344, 352, 353, 354, 366, 387, 388, 389, 391, 408, 415, 416, 426, 428, 429, 430, 483, 516, 517, 557, 562, 563, 565, 566, 580, 583, 592, 593, 598, 605, 615, 619, 620, 623, 631, 633, 634, 637, 645, 646, 654, 663, 672, 677, 687, 690, 692, 696, 703, 704, 710, 717, 720, 729, 732, 745, 759, 762, 766, 779, 787, 799, 800, 810, 827, 830, 842, 851, 854, 863], "languag": [1, 2, 43, 175, 784, 863, 864], "algorithm": [1, 5, 19, 20, 22, 25, 28, 30, 31, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 257, 259, 260, 283, 285, 291, 316, 318, 352, 353, 354, 355, 365, 368, 387, 388, 389, 390, 391, 394, 396, 399, 401, 403, 408, 409, 428, 429, 430, 452, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 675, 690, 704, 718, 784, 804, 805, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 819, 834, 835, 836, 838, 843, 846, 863, 864], "scienc": [1, 341, 390, 863], "onetbb": [1, 554, 575, 578, 579, 580, 744, 745, 768, 782, 784, 785, 790, 791, 803, 838, 840, 841, 843, 844, 845, 863], "ad": [1, 40, 43, 63, 70, 71, 72, 73, 100, 101, 149, 152, 176, 181, 188, 231, 249, 415, 416, 419, 420, 421, 428, 429, 430, 558, 760, 763, 772, 773, 847, 863], "base": [1, 10, 29, 30, 42, 43, 48, 52, 54, 55, 56, 58, 101, 102, 111, 114, 116, 151, 153, 154, 155, 157, 158, 160, 161, 162, 163, 165, 166, 167, 169, 170, 171, 172, 176, 177, 179, 215, 216, 227, 228, 254, 340, 344, 355, 365, 366, 368, 394, 396, 402, 403, 414, 415, 416, 422, 423, 490, 491, 509, 511, 547, 570, 745, 758, 762, 774, 777, 837, 844, 863, 864], "complex": [1, 40, 45, 47, 151, 157, 160, 179, 180, 181, 182, 183, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 230, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 300, 302, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 432, 456, 457, 458, 460, 461, 462, 463, 465, 468, 475, 477, 479, 481, 483, 484, 489, 508, 509, 516, 517, 520, 524, 530, 533, 535, 537, 538, 539, 541, 547, 557, 559, 565, 566, 567, 863], "multiprocessor": [1, 366, 863], "engin": [1, 54, 55, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 177, 346, 349, 350, 352, 353, 354, 355, 357, 358, 361, 362, 363, 367, 368, 372, 375, 380, 385, 387, 388, 389, 390, 391, 394, 395, 396, 399, 401, 402, 403, 406, 408, 409, 410, 411, 838, 863], "financi": [1, 545, 863], "low": [2, 43, 152, 157, 165, 341, 355, 396, 479, 480, 482, 500, 529, 530, 531, 532, 534, 539, 540, 542, 786, 844], "direct": [2, 22, 34, 35, 43, 45, 60, 67, 85, 109, 110, 113, 140, 143, 150, 157, 159, 170, 254, 258, 394, 403, 512, 519, 547, 770, 781, 817, 864], "metal": 2, "tailor": [2, 151, 160], "platform": [2, 5, 149, 177, 784, 786, 864], "broader": [2, 178], "virtual": [2, 12, 732, 749, 758, 845], "o": [2, 30, 53, 58, 152, 170, 254, 341, 557, 559, 565, 567, 576, 786, 844, 852], "while": [2, 8, 37, 38, 40, 43, 50, 53, 54, 63, 106, 152, 157, 168, 170, 179, 192, 218, 220, 221, 224, 254, 258, 283, 285, 316, 318, 340, 372, 565, 570, 601, 609, 615, 623, 629, 637, 643, 666, 672, 682, 687, 696, 701, 710, 715, 724, 729, 733, 736, 745, 764, 768, 772, 778, 784, 829, 838, 846, 847], "fine": [2, 152, 570], "grain": [2, 551, 552, 553, 557, 566, 570, 571, 572, 819], "explicit": [2, 8, 19, 20, 22, 25, 37, 39, 51, 176, 345, 347, 348, 351, 356, 359, 360, 369, 370, 371, 373, 374, 376, 377, 378, 379, 381, 382, 383, 384, 386, 392, 393, 397, 398, 400, 404, 405, 407, 415, 416, 422, 423, 437, 573, 581, 583, 584, 585, 591, 593, 594, 604, 605, 606, 619, 620, 621, 633, 634, 635, 646, 647, 648, 654, 655, 656, 662, 663, 664, 675, 677, 678, 690, 692, 693, 704, 706, 707, 718, 720, 721, 732, 734, 735, 744, 747, 748, 751, 758, 762, 770, 772, 773, 779, 781, 788, 843, 844, 845, 849, 851, 852, 854, 859, 862], "control": [2, 5, 12, 43, 50, 55, 61, 68, 69, 70, 71, 72, 73, 74, 78, 79, 80, 81, 82, 83, 98, 99, 106, 107, 108, 141, 151, 152, 154, 162, 179, 259, 500, 529, 576, 577, 745, 768, 817, 836, 840, 864], "need": [2, 8, 40, 43, 46, 50, 56, 58, 60, 61, 62, 63, 149, 151, 152, 153, 170, 196, 197, 198, 199, 206, 212, 213, 214, 236, 247, 249, 250, 252, 253, 256, 257, 292, 326, 358, 394, 403, 414, 455, 483, 553, 566, 680, 694, 708, 722, 745, 758, 766, 784, 786, 794, 795, 817, 825, 837], "higher": [2, 30, 54, 56, 154, 157, 162, 165, 166, 169, 179, 768, 817, 844], "discoveri": [2, 23], "peer": [2, 8], "inter": [2, 864], "process": [2, 8, 11, 12, 31, 38, 40, 43, 44, 45, 47, 62, 152, 170, 176, 341, 437, 440, 476, 483, 501, 528, 556, 558, 561, 563, 565, 566, 745, 746, 754, 755, 756, 766, 770, 778, 806, 808, 818, 840, 841, 844, 845, 846, 865], "submiss": 2, "asynchron": [2, 13, 419, 420, 421, 428, 429, 430, 455], "metric": [2, 40], "report": [2, 10, 28, 30, 51, 152, 168, 179, 254, 547], "architectur": [2, 58, 549, 864], "expos": [2, 5, 40, 43, 48, 151, 152, 154, 162, 581], "physic": [2, 40, 43, 60, 62, 341], "logic": [2, 30, 40, 42, 43, 58, 59, 60, 62, 87, 147, 151, 152, 153, 154, 156, 157, 158, 161, 162, 163, 164, 165, 166, 168, 171, 172, 173, 414, 565, 784, 786, 787, 793, 798, 840, 844], "sub": [2, 40, 42, 64, 159, 170, 195, 243, 244, 257, 261, 340, 428, 429, 430, 547], "entiti": [2, 12, 19, 20, 22, 25, 31, 40, 43, 557, 559, 565, 566], "model": [2, 4, 23, 43, 44, 45, 49, 52, 53, 55, 64, 84, 117, 150, 151, 152, 157, 160, 161, 170, 341, 362, 410, 412, 445, 549, 784, 787, 789, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 804, 810, 817, 855, 864], "latenc": 2, "well": [2, 12, 23, 29, 37, 42, 48, 51, 52, 56, 58, 152, 160, 184, 257, 291, 342, 364, 412, 535, 547, 566, 572, 591, 604, 619, 633, 662, 675, 690, 704, 718, 745, 753, 786, 808, 845, 864], "construct": [2, 12, 29, 37, 40, 43, 58, 60, 61, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 258, 259, 455, 551, 552, 553, 554, 555, 558, 562, 573, 577, 581, 583, 589, 591, 598, 604, 607, 615, 618, 619, 629, 632, 633, 643, 646, 651, 654, 660, 662, 672, 675, 679, 687, 690, 701, 704, 715, 718, 729, 732, 733, 736, 743, 744, 746, 747, 748, 749, 751, 753, 755, 757, 759, 760, 762, 763, 764, 766, 767, 768, 770, 772, 773, 776, 778, 779, 780, 781, 788, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 817, 818, 821, 822, 823, 825, 826, 827, 828, 829, 830, 838, 839, 840, 842, 844, 845, 846, 847, 849, 851, 852, 856, 857, 859, 862, 864], "work": [2, 28, 40, 45, 47, 56, 60, 151, 152, 153, 155, 158, 162, 166, 167, 168, 171, 172, 173, 176, 179, 218, 221, 224, 257, 261, 263, 264, 267, 283, 285, 287, 316, 318, 320, 362, 366, 410, 550, 556, 557, 558, 566, 569, 570, 572, 732, 786, 817, 824, 838, 840, 841, 843, 844, 845], "simultan": [2, 168, 179, 580, 745, 746, 766, 784, 787, 830, 843, 844, 852], "heavili": 2, "influenc": [2, 786], "opencl": [2, 28, 43, 841], "design": [2, 12, 31, 36, 43, 45, 77, 162, 171, 358, 366, 406, 412, 529, 549, 565, 566, 745, 786, 829, 844], "evolv": 2, "independ": [2, 43, 106, 152, 164, 170, 172, 188, 197, 291, 362, 366, 371, 392, 410, 412, 512, 519], "differ": [2, 8, 40, 43, 45, 50, 54, 56, 57, 58, 60, 61, 62, 63, 67, 85, 106, 109, 110, 113, 128, 140, 141, 142, 143, 150, 151, 152, 153, 159, 160, 164, 168, 170, 179, 183, 190, 191, 197, 201, 218, 221, 224, 242, 250, 254, 255, 260, 291, 341, 342, 352, 362, 364, 387, 408, 410, 413, 422, 423, 424, 425, 428, 429, 430, 455, 476, 483, 494, 501, 519, 528, 547, 557, 566, 579, 601, 602, 614, 616, 628, 630, 642, 644, 652, 654, 671, 673, 675, 686, 688, 690, 700, 702, 704, 714, 716, 718, 728, 730, 741, 745, 785, 787, 803, 804, 819, 840, 843, 846, 852, 855, 860, 862], "specif": [2, 4, 8, 9, 10, 11, 12, 13, 15, 16, 28, 29, 31, 32, 36, 40, 42, 44, 45, 48, 50, 51, 55, 58, 59, 60, 61, 63, 130, 149, 150, 151, 152, 158, 160, 163, 167, 175, 178, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 347, 348, 359, 364, 368, 406, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 456, 460, 462, 465, 476, 479, 483, 484, 501, 516, 520, 524, 528, 530, 538, 539, 549, 579, 581, 677, 689, 692, 703, 706, 717, 720, 731, 734, 743, 744, 745, 749, 759, 761, 762, 769, 784, 786, 803, 829, 830, 839, 840, 841, 842, 844, 851, 852, 853, 865], "found": [2, 54, 165, 179, 215, 216, 257, 366, 368, 597, 617, 623, 631, 637, 645, 674, 689, 696, 703, 710, 717, 731], "onlin": [2, 40, 43, 44, 45, 50], "concept": [3, 4, 29, 31, 37, 39, 42, 43, 45, 149, 151, 179, 566, 782, 794, 797, 805], "context": [3, 4, 8, 11, 13, 46, 58, 60, 61, 149, 150, 151, 177, 255, 258, 553, 557, 558, 559, 560, 561, 565, 757, 817, 818, 841, 842, 847], "kei": [3, 4, 11, 31, 149, 176, 355, 368, 396, 567, 581, 582, 591, 593, 594, 596, 597, 598, 599, 600, 604, 605, 606, 607, 609, 610, 611, 612, 613, 615, 617, 618, 619, 620, 621, 623, 624, 625, 626, 627, 629, 631, 632, 633, 634, 635, 637, 641, 645, 662, 663, 664, 666, 670, 672, 674, 675, 676, 677, 678, 679, 682, 683, 684, 685, 687, 689, 690, 691, 692, 693, 696, 697, 698, 699, 701, 703, 704, 705, 710, 711, 713, 717, 718, 719, 724, 727, 731, 762, 763, 820, 826, 852, 854], "store": [3, 4, 8, 11, 19, 20, 22, 25, 27, 34, 35, 37, 38, 40, 41, 42, 43, 48, 49, 53, 55, 56, 57, 58, 60, 63, 141, 151, 152, 153, 157, 160, 170, 176, 179, 180, 191, 192, 193, 194, 196, 197, 198, 199, 206, 210, 211, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 231, 236, 240, 241, 242, 247, 249, 250, 252, 253, 254, 255, 261, 263, 264, 267, 269, 271, 272, 275, 276, 279, 280, 283, 284, 285, 286, 287, 288, 289, 290, 292, 294, 295, 298, 300, 302, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 328, 329, 332, 334, 336, 338, 340, 414, 483, 545, 584, 593, 604, 605, 618, 619, 620, 632, 633, 634, 647, 655, 663, 675, 676, 677, 680, 690, 691, 692, 694, 704, 705, 706, 708, 719, 720, 722, 734, 754, 762, 770, 772, 780, 781, 854], "stream": [3, 4, 8, 11, 40, 45, 47, 54, 55, 58, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 366, 385, 399, 402, 561, 564, 806], "oper": [3, 4, 5, 9, 10, 11, 16, 30, 36, 37, 40, 42, 43, 44, 45, 47, 48, 49, 50, 53, 54, 55, 56, 58, 60, 61, 62, 64, 116, 150, 151, 152, 153, 159, 160, 176, 177, 183, 185, 186, 187, 188, 190, 191, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 220, 221, 222, 223, 224, 225, 229, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 256, 258, 259, 260, 341, 368, 387, 388, 389, 390, 391, 394, 395, 396, 399, 401, 403, 408, 414, 415, 416, 417, 418, 426, 427, 428, 429, 430, 431, 432, 545, 555, 556, 557, 558, 559, 560, 561, 562, 565, 566, 567, 568, 573, 577, 581, 583, 587, 589, 591, 592, 599, 604, 610, 611, 618, 619, 624, 625, 632, 633, 638, 639, 646, 649, 652, 654, 658, 662, 667, 668, 675, 683, 690, 697, 704, 711, 718, 725, 732, 736, 738, 739, 753, 756, 757, 766, 768, 786, 787, 789, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 821, 822, 823, 825, 826, 827, 828, 829, 830, 831, 834, 843, 849, 851, 852, 859, 860, 862, 864], "attribut": [3, 4, 8, 9, 15, 16, 38, 43, 56, 116, 148, 149, 151, 153, 159, 160, 162, 865], "datatyp": [3, 4, 8, 13, 15, 56, 152, 191, 195, 197, 198, 199, 200, 201, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 220, 221, 222, 223, 224, 229, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 415, 416, 417, 418, 422, 423, 424, 425, 432], "custom": [3, 4, 8, 13, 16, 31, 37, 45, 152, 745, 784, 864], "reduct": [3, 4, 8, 13, 15, 22, 43, 121, 122, 123, 124, 125, 126, 127, 152, 159, 160, 176, 261, 557, 565, 566, 813, 851, 853], "allgatherv": [3, 4, 5], "allreduc": [3, 4, 5, 11, 13, 16], "alltoallv": [3, 4, 5], "barrier": [3, 4], "broadcast": [3, 4, 5, 60, 67, 73, 85, 106, 109, 110, 113, 130, 140, 141, 143, 148, 152, 153, 155, 156, 164, 166, 168, 173, 746, 747, 751, 753, 754, 755, 759, 760, 762, 763, 764, 766, 767, 768, 770, 779, 781, 824], "reduc": [3, 4, 5, 13, 16, 49, 54, 56, 121, 122, 123, 124, 125, 126, 127, 149, 151, 152, 157, 167, 256, 261, 287, 291, 292, 298, 304, 320, 327, 332, 338, 365, 565, 743, 756, 768, 786], "reducescatt": [3, 4, 13, 16], "point": [3, 4, 9, 10, 19, 20, 22, 25, 27, 29, 30, 34, 35, 37, 41, 50, 54, 55, 56, 62, 63, 86, 150, 153, 155, 157, 159, 161, 164, 167, 168, 169, 170, 177, 179, 185, 218, 220, 221, 224, 225, 226, 227, 252, 253, 257, 258, 259, 261, 263, 264, 267, 269, 271, 272, 275, 276, 279, 280, 283, 285, 287, 289, 292, 294, 295, 298, 300, 302, 304, 306, 307, 310, 312, 313, 316, 318, 320, 322, 324, 326, 328, 329, 332, 334, 336, 338, 341, 349, 367, 380, 415, 416, 417, 418, 428, 429, 430, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 455, 470, 483, 519, 526, 535, 547, 559, 565, 566, 592, 615, 617, 629, 631, 643, 645, 672, 674, 687, 689, 701, 703, 715, 717, 729, 731, 786, 787, 788, 789, 791, 831, 840, 841, 842, 843, 844, 847, 855, 859], "send": [3, 4, 745, 777, 779], "recv": [3, 4], "progress": [3, 4, 8, 12, 15, 25, 149, 252, 253, 257], "track": [3, 4, 8, 12, 15, 90, 149, 252, 253], "error": [3, 4, 32, 44, 51, 54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 257, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 576, 783], "handl": [3, 4, 8, 9, 12, 32, 44, 60, 153, 168, 178, 254, 260, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 457, 458, 459, 460, 462, 464, 468, 472, 473, 475, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 498, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 516, 517, 519, 520, 521, 522, 523, 524, 525, 530, 531, 532, 533, 534, 537, 538, 539, 540, 542, 543, 549, 577, 580, 604, 615, 617, 619, 629, 631, 633, 643, 645, 662, 672, 674, 675, 687, 689, 690, 701, 703, 704, 715, 717, 718, 729, 731, 754, 755, 756, 757, 843], "except": [3, 4, 12, 14, 32, 37, 51, 60, 61, 63, 77, 78, 98, 149, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 177, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 345, 347, 348, 351, 356, 359, 360, 364, 369, 370, 371, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 391, 392, 393, 397, 398, 400, 404, 405, 407, 408, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 549, 554, 566, 577, 589, 607, 677, 679, 689, 692, 703, 706, 717, 720, 731, 734, 743, 757, 772, 773, 778, 780, 784, 786, 829, 840, 842, 843, 844, 845, 846, 847, 851, 852, 856], "classif": [3, 4, 23, 24, 32, 43, 44, 45, 48, 50], "introduct": [4, 37, 44, 150, 168, 254, 259, 803, 834, 835], "ccl": [4, 8, 9, 10, 11, 12, 13], "current": [4, 8, 19, 25, 32, 40, 44, 152, 168, 170, 286, 288, 317, 362, 368, 387, 388, 389, 390, 391, 394, 395, 396, 399, 401, 402, 403, 408, 410, 415, 416, 500, 512, 518, 519, 526, 547, 579, 598, 744, 748, 751, 764, 772, 773, 776, 780, 783, 786, 793, 795, 798, 801, 802, 830, 831, 840, 841, 842, 844, 846, 851, 856, 862], "version": [4, 19, 28, 32, 44, 58, 151, 154, 156, 173, 178, 268, 352, 387, 455, 500, 520, 529, 553, 566, 575, 577, 784, 836, 844, 846], "gener": [4, 7, 10, 19, 39, 43, 44, 45, 48, 50, 52, 53, 58, 60, 63, 116, 154, 157, 160, 162, 164, 165, 166, 169, 170, 172, 175, 179, 185, 186, 187, 188, 195, 196, 197, 198, 199, 200, 202, 203, 204, 206, 210, 211, 217, 218, 220, 221, 222, 223, 224, 236, 240, 241, 242, 247, 249, 250, 254, 258, 261, 263, 264, 267, 269, 271, 272, 275, 276, 285, 291, 292, 293, 294, 295, 298, 307, 313, 318, 326, 327, 328, 329, 332, 340, 341, 342, 343, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 358, 359, 360, 363, 364, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 427, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 549, 550, 559, 561, 565, 566, 575, 576, 579, 585, 594, 606, 621, 635, 648, 656, 664, 675, 678, 690, 693, 704, 707, 718, 721, 735, 760, 762, 767, 779, 784, 788, 817, 825, 835, 837, 838, 844, 846, 859, 863], "workflow": [4, 7, 45, 49, 256], "pattern": [5, 29, 62, 149, 151, 153, 260, 554, 566, 569, 572, 803, 829], "occur": [5, 10, 30, 47, 179, 271, 272, 289, 322, 460, 483, 484, 516, 519, 520, 538, 559, 732, 754, 783], "up": [5, 12, 29, 44, 48, 58, 153, 165, 366, 390, 433, 434, 435, 436, 445, 446, 447, 448, 566, 589, 753, 764, 766, 845, 861], "out": [5, 8, 11, 12, 22, 30, 40, 41, 42, 56, 58, 61, 78, 79, 80, 81, 82, 83, 149, 151, 152, 154, 156, 159, 162, 165, 168, 171, 173, 179, 188, 220, 221, 222, 223, 224, 252, 253, 254, 255, 257, 259, 476, 483, 501, 528, 561, 581, 583, 654, 753, 763, 773, 829, 842], "cluster": [5, 19, 20, 23, 43, 44, 45], "node": [5, 25, 27, 45, 47, 141, 385, 580, 604, 619, 633, 662, 675, 690, 704, 718, 746, 747, 748, 749, 751, 752, 753, 754, 755, 757, 758, 760, 762, 764, 765, 766, 767, 770, 772, 773, 774, 775, 776, 777, 778, 779, 781, 783, 836, 843, 844], "dl": [5, 149], "reduce_scatt": [5, 8], "over": [5, 25, 37, 43, 56, 69, 77, 80, 82, 83, 100, 101, 121, 122, 123, 124, 125, 126, 127, 152, 156, 159, 160, 162, 170, 172, 176, 179, 300, 302, 334, 336, 359, 360, 404, 405, 412, 557, 558, 559, 565, 566, 768, 786, 788, 844, 851, 853, 855, 864], "optim": [5, 31, 44, 45, 50, 59, 60, 63, 86, 87, 149, 150, 151, 154, 157, 158, 161, 162, 163, 164, 165, 168, 170, 171, 260, 426, 428, 429, 430, 569, 570, 756], "priorit": [5, 768], "persist": [5, 13, 428, 429, 430], "decoupl": 5, "time": [5, 19, 20, 22, 40, 43, 45, 46, 48, 51, 56, 58, 60, 63, 81, 82, 84, 113, 149, 151, 152, 154, 157, 159, 160, 161, 162, 163, 164, 165, 169, 171, 254, 255, 257, 258, 259, 260, 261, 263, 264, 267, 269, 271, 272, 275, 276, 289, 292, 293, 294, 295, 298, 300, 302, 322, 326, 327, 328, 329, 332, 334, 336, 368, 428, 429, 430, 455, 563, 566, 567, 579, 751, 753, 756, 762, 766, 768, 781, 786, 793, 798, 827, 830, 832, 835, 837, 838, 840, 844, 846, 851, 854, 862], "repetit": 5, "section": [6, 15, 19, 20, 22, 25, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 51, 52, 53, 54, 55, 58, 63, 150, 151, 152, 154, 157, 159, 164, 179, 256, 260, 362, 366, 410, 547, 554, 556, 557, 558, 560, 565, 566, 567, 568, 569, 570, 571, 572, 575, 577, 578, 583, 584, 585, 586, 589, 590, 591, 593, 594, 596, 597, 598, 603, 604, 605, 606, 607, 608, 609, 615, 617, 619, 620, 621, 622, 623, 629, 631, 633, 634, 635, 636, 637, 643, 645, 646, 647, 648, 651, 653, 654, 655, 656, 657, 660, 661, 662, 663, 664, 665, 666, 672, 674, 675, 676, 677, 678, 679, 681, 682, 687, 689, 690, 691, 692, 693, 695, 696, 701, 703, 704, 705, 706, 707, 709, 710, 715, 717, 718, 719, 720, 721, 723, 724, 729, 731, 732, 733, 734, 735, 736, 737, 743, 746, 748, 749, 751, 755, 756, 759, 760, 762, 764, 767, 770, 772, 773, 778, 780, 781, 782, 785, 787, 788, 789, 791, 793, 795, 798, 799, 800, 801, 802, 803, 808, 810, 844, 846, 847, 850, 851, 853, 856, 858, 859, 864], "describ": [6, 12, 22, 29, 31, 39, 42, 43, 51, 52, 53, 56, 57, 58, 60, 62, 63, 98, 99, 142, 149, 151, 152, 160, 168, 170, 177, 179, 185, 186, 187, 198, 210, 240, 252, 253, 260, 292, 326, 352, 353, 354, 355, 361, 390, 391, 401, 415, 416, 422, 423, 427, 428, 429, 430, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 547, 549, 554, 560, 575, 578, 579, 585, 594, 598, 606, 621, 635, 648, 656, 664, 678, 693, 707, 721, 735, 782, 785, 786, 793, 798, 803, 808, 837, 838, 844, 846, 847, 850, 851, 853], "convent": [6, 60, 65, 68, 75, 77, 81, 88, 91, 92, 96, 102, 103, 106, 107, 118, 131, 133, 135, 144, 150, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 179, 255, 340, 461, 578, 782, 803, 817, 834, 835, 860], "shall": [6, 8, 10, 12, 13, 14, 19, 20, 22, 25, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 48, 51, 56, 149, 152, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 257, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430], "public": [6, 12, 19, 20, 22, 25, 28, 29, 30, 31, 34, 35, 37, 38, 39, 41, 42, 48, 51, 60, 61, 62, 63, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 257, 341, 345, 347, 348, 351, 352, 353, 354, 355, 356, 359, 360, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 470, 551, 552, 553, 554, 555, 556, 560, 562, 564, 566, 569, 570, 571, 572, 573, 578, 581, 583, 591, 604, 618, 619, 632, 633, 646, 654, 662, 675, 690, 704, 718, 744, 746, 747, 748, 749, 751, 755, 757, 758, 759, 760, 762, 764, 766, 767, 770, 772, 773, 778, 779, 780, 781, 787, 788, 789, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 829, 830, 837, 840, 842, 843, 844, 845, 847, 849, 851, 852, 859, 862], "altern": [6, 19, 61, 149, 151, 169, 177, 178, 479, 530, 531, 539], "consid": [6, 43, 56, 58, 60, 61, 154, 157, 162, 178, 254, 255, 258, 259, 383, 578, 768, 817, 844], "alia": [6, 19, 20, 22, 25, 39, 48, 51, 58, 151, 159, 170, 562, 578, 583, 585, 591, 604, 619, 633, 635, 646, 648, 654, 656, 662, 664, 675, 690, 704, 707, 718, 721, 732, 735, 751, 755, 759, 760, 762, 767, 778, 787, 789, 791, 862], "pointtopoint": 8, "These": [8, 23, 36, 45, 50, 56, 58, 158, 176, 177, 179, 188, 255, 291, 340, 362, 366, 390, 410, 412, 428, 429, 430, 455, 479, 530, 531, 539, 548, 561, 572, 581, 583, 591, 594, 601, 604, 606, 609, 614, 619, 621, 623, 628, 633, 635, 637, 642, 646, 648, 654, 662, 664, 666, 671, 675, 678, 682, 686, 690, 691, 693, 696, 700, 704, 705, 707, 710, 714, 718, 721, 724, 728, 732, 741, 745, 778, 786, 787, 789, 791, 859, 862], "mean": [8, 18, 22, 23, 40, 43, 44, 48, 51, 52, 53, 56, 58, 60, 62, 63, 70, 71, 72, 78, 79, 80, 81, 82, 83, 100, 101, 107, 108, 124, 141, 142, 149, 154, 155, 156, 157, 158, 159, 163, 164, 165, 166, 167, 168, 171, 172, 173, 348, 351, 364, 378, 379, 384, 386, 398, 426, 446, 448, 452, 483, 500, 561, 563, 756, 760, 776, 837, 844], "particip": [8, 12, 557, 572, 585, 594, 596, 597, 598, 606, 609, 615, 617, 621, 623, 629, 631, 635, 637, 645, 648, 656, 664, 666, 674, 678, 682, 687, 689, 693, 696, 701, 703, 707, 710, 717, 721, 724, 731, 733, 734, 735, 786, 841, 844, 845, 847, 854], "rank": [8, 11, 12, 58, 77, 84, 86, 87, 100, 101, 106, 117, 121, 122, 123, 124, 125, 126, 127, 149, 186, 187, 202, 203, 204, 208, 209, 210, 211, 213, 214, 233, 234, 238, 239, 240, 241, 242], "make": [8, 37, 39, 44, 45, 49, 51, 58, 106, 147, 151, 152, 153, 160, 254, 257, 258, 362, 390, 557, 559, 565, 566, 571, 573, 745, 749, 765, 768, 784, 838, 864], "abil": [8, 12, 14, 37, 40, 179], "either": [8, 12, 34, 35, 37, 40, 43, 48, 54, 56, 60, 69, 70, 72, 80, 82, 83, 98, 99, 130, 149, 151, 154, 155, 156, 159, 160, 162, 163, 165, 166, 167, 169, 172, 173, 176, 179, 206, 215, 216, 236, 247, 249, 250, 254, 260, 287, 289, 304, 305, 306, 307, 322, 338, 339, 428, 429, 430, 455, 483, 520, 524, 551, 552, 561, 586, 590, 596, 603, 617, 631, 645, 653, 657, 661, 674, 676, 689, 691, 703, 705, 717, 719, 731, 743, 746, 755, 767, 838, 845, 847, 858], "addition": [8, 22, 106, 149, 151, 153, 176, 177, 254, 818], "accept": [8, 30, 39, 43, 48, 51, 56, 64, 69, 82, 83, 108, 147, 151, 176, 179, 343, 365, 455, 558, 559, 560, 565, 570, 735, 745, 746, 754, 755, 756, 760, 763, 764, 765, 767, 775, 780, 803, 808, 831, 841], "mai": [8, 9, 12, 13, 19, 37, 40, 46, 48, 50, 55, 56, 58, 60, 62, 63, 141, 142, 148, 149, 151, 152, 153, 155, 157, 160, 161, 167, 168, 169, 170, 176, 177, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 352, 353, 354, 355, 364, 375, 385, 387, 402, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 455, 520, 524, 557, 558, 559, 560, 562, 565, 566, 567, 570, 571, 573, 576, 577, 579, 581, 583, 591, 602, 604, 616, 619, 630, 633, 644, 646, 652, 654, 662, 673, 675, 688, 690, 702, 704, 716, 718, 730, 732, 745, 746, 753, 755, 760, 762, 763, 766, 767, 768, 774, 776, 777, 778, 786, 787, 788, 789, 791, 799, 800, 803, 808, 818, 825, 827, 838, 840, 844, 846, 852, 859, 862], "vector": [8, 11, 12, 19, 20, 22, 25, 27, 37, 40, 43, 46, 59, 60, 63, 81, 82, 150, 152, 156, 157, 159, 161, 165, 169, 170, 173, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 261, 263, 264, 267, 269, 270, 271, 272, 275, 276, 279, 280, 283, 285, 287, 289, 292, 294, 295, 298, 300, 302, 304, 306, 307, 310, 312, 313, 316, 318, 320, 322, 324, 326, 328, 329, 332, 334, 336, 338, 340, 346, 352, 353, 354, 355, 365, 372, 379, 380, 390, 392, 394, 398, 399, 403, 412, 418, 419, 420, 421, 428, 429, 430, 431, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548, 549, 585, 594, 606, 621, 635, 648, 656, 664, 678, 693, 707, 721, 732, 733, 736, 737, 742, 743, 758, 783, 844], "input": [8, 12, 31, 38, 40, 43, 50, 52, 53, 56, 58, 62, 63, 64, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 179, 180, 181, 182, 183, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 349, 352, 353, 354, 355, 357, 364, 368, 380, 385, 387, 388, 389, 390, 391, 394, 395, 396, 399, 401, 402, 403, 408, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 557, 558, 561, 562, 564, 584, 585, 593, 594, 598, 605, 606, 615, 620, 621, 629, 634, 635, 643, 647, 648, 655, 656, 663, 664, 672, 677, 678, 687, 692, 693, 701, 706, 707, 715, 720, 721, 729, 733, 734, 735, 745, 746, 749, 751, 755, 756, 759, 760, 761, 762, 763, 765, 766, 767, 775, 778, 779, 805, 806, 808, 821, 823, 826, 827], "output": [8, 31, 43, 51, 53, 54, 56, 58, 60, 62, 63, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 261, 263, 264, 267, 269, 271, 272, 275, 276, 279, 280, 283, 285, 287, 289, 292, 294, 295, 298, 300, 302, 304, 306, 307, 310, 312, 313, 316, 318, 320, 322, 324, 326, 328, 329, 332, 334, 336, 338, 342, 355, 364, 368, 379, 380, 394, 396, 401, 402, 403, 412, 415, 416, 417, 418, 419, 420, 421, 428, 429, 430, 433, 434, 435, 436, 438, 439, 441, 442, 443, 444, 446, 447, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 557, 561, 562, 564, 579, 745, 746, 749, 751, 754, 755, 759, 760, 765, 766, 767, 769, 775, 779, 780, 822, 823, 824, 825, 827], "option": [8, 9, 12, 13, 38, 39, 40, 48, 55, 60, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 179, 220, 260, 269, 270, 283, 285, 291, 316, 318, 380, 415, 416, 422, 423, 426, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 559, 577, 615, 629, 643, 672, 687, 701, 715, 729, 808, 817, 818, 837], "buffertyp": 8, "type": [8, 12, 19, 20, 22, 25, 30, 31, 32, 34, 35, 37, 38, 40, 41, 43, 44, 45, 50, 51, 54, 56, 57, 58, 59, 60, 61, 62, 148, 149, 150, 151, 152, 153, 159, 176, 177, 179, 225, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 343, 345, 346, 347, 348, 349, 351, 356, 358, 359, 360, 362, 364, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 392, 393, 397, 398, 400, 402, 404, 405, 406, 407, 410, 413, 414, 415, 416, 417, 418, 422, 423, 424, 425, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 455, 481, 483, 489, 490, 491, 493, 502, 507, 522, 523, 533, 547, 550, 553, 554, 556, 557, 558, 559, 560, 561, 562, 565, 566, 567, 568, 569, 572, 573, 574, 581, 583, 584, 585, 586, 589, 591, 593, 594, 596, 597, 598, 601, 604, 605, 606, 607, 608, 609, 614, 615, 617, 619, 620, 621, 622, 623, 628, 629, 631, 633, 634, 635, 636, 637, 642, 643, 645, 646, 647, 648, 651, 654, 655, 656, 657, 660, 662, 663, 664, 665, 666, 671, 672, 674, 675, 676, 677, 678, 679, 681, 682, 686, 687, 689, 690, 691, 692, 693, 695, 696, 700, 701, 703, 704, 705, 706, 707, 709, 710, 714, 715, 717, 718, 719, 720, 721, 723, 724, 728, 729, 731, 732, 733, 734, 735, 737, 741, 747, 748, 749, 751, 753, 755, 760, 763, 764, 765, 766, 768, 770, 772, 773, 774, 775, 777, 778, 779, 780, 781, 784, 787, 789, 791, 795, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 836, 837, 841, 846, 847, 848, 849, 851, 853, 854, 855, 859, 862], "buf": [8, 176], "send_buf": 8, "recv_buf": 8, "At": [8, 40, 45, 77, 164], "least": [8, 28, 34, 35, 41, 43, 48, 60, 77, 152, 160, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 260, 261, 263, 264, 265, 267, 268, 269, 271, 272, 273, 275, 276, 277, 279, 280, 281, 283, 285, 287, 289, 291, 292, 295, 296, 298, 300, 302, 304, 306, 307, 308, 310, 312, 313, 314, 316, 318, 320, 322, 324, 326, 329, 330, 332, 334, 336, 338, 340, 415, 416, 417, 418, 422, 423, 424, 425, 428, 429, 430, 483, 623, 631, 637, 696, 703, 710, 743, 763, 773, 783, 843], "u": [8, 53, 159, 170, 171, 179, 269, 270, 271, 279, 285, 289, 306, 312, 315, 318, 322, 341, 412, 562, 787, 789, 791, 803], "8": [8, 9, 29, 54, 55, 62, 63, 150, 152, 153, 341, 352, 353, 354, 355, 401], "16": [8, 9, 29, 54, 55, 62, 63, 150, 352, 353, 354, 355, 561], "32": [8, 9, 29, 54, 55, 62, 63, 150, 152, 340, 342, 344, 352, 354, 355, 358, 364, 366, 368, 389, 390, 394, 396, 399, 401, 403, 406], "64": [8, 9, 29, 179, 342, 354, 355, 357, 358, 364, 368, 396, 402, 406], "_t": [8, 170], "float": [8, 9, 19, 20, 22, 25, 29, 34, 35, 37, 41, 43, 49, 50, 54, 55, 56, 62, 63, 71, 84, 117, 150, 153, 154, 157, 158, 159, 162, 163, 167, 168, 169, 170, 173, 177, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 343, 345, 347, 348, 351, 359, 361, 369, 370, 373, 374, 376, 377, 378, 379, 381, 382, 384, 386, 400, 404, 407, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 561, 565, 566, 594, 606, 621, 675, 678, 680, 690, 693, 694, 704, 708, 718, 722, 842, 844], "cannot": [8, 30, 42, 43, 58, 60, 61, 63, 128, 151, 164, 165, 168, 176, 179, 257, 269, 428, 429, 430, 571, 754, 755, 756, 764, 781, 793, 798, 825, 838, 844, 846, 864], "infer": [8, 28, 39, 43, 46, 48, 49, 50, 51, 55, 56, 60, 63, 149, 153, 159, 170], "argument": [8, 10, 12, 30, 39, 51, 56, 58, 60, 61, 116, 148, 152, 153, 176, 177, 179, 181, 182, 183, 188, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 220, 221, 222, 223, 224, 225, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 247, 249, 250, 252, 253, 257, 258, 260, 262, 265, 266, 268, 270, 273, 274, 277, 278, 281, 282, 284, 286, 288, 290, 292, 293, 296, 297, 299, 301, 303, 305, 308, 309, 311, 314, 315, 317, 319, 321, 323, 325, 326, 327, 330, 331, 333, 335, 337, 339, 355, 368, 396, 415, 416, 428, 429, 430, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 553, 557, 558, 561, 565, 566, 567, 571, 573, 574, 583, 584, 585, 591, 593, 594, 604, 605, 606, 619, 620, 621, 633, 634, 635, 646, 647, 648, 654, 655, 656, 662, 663, 664, 675, 677, 678, 690, 692, 693, 704, 706, 707, 718, 720, 721, 732, 734, 735, 746, 751, 755, 760, 762, 764, 767, 771, 772, 778, 780, 783, 787, 789, 791, 808, 817, 818, 821, 822, 823, 824, 825, 826, 827, 828, 840, 841, 854, 862], "native_device_typ": [8, 12], "translat": 8, "native_stream_typ": [8, 12], "correspond": [8, 12, 13, 19, 27, 37, 48, 51, 55, 56, 58, 60, 61, 81, 82, 106, 121, 122, 123, 124, 125, 126, 127, 141, 149, 151, 152, 154, 155, 157, 158, 160, 161, 162, 164, 166, 167, 168, 171, 176, 177, 179, 254, 255, 257, 264, 287, 289, 295, 307, 313, 320, 322, 329, 340, 342, 364, 366, 392, 394, 403, 428, 429, 430, 467, 478, 494, 496, 497, 498, 507, 513, 514, 519, 523, 525, 546, 547, 566, 576, 675, 690, 697, 704, 711, 718, 745, 759, 779, 780, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 808, 809, 812, 813, 814, 815, 816, 824, 826, 829, 830, 844, 851, 852, 853, 854, 856], "miss": [8, 40, 63, 789], "default": [8, 19, 20, 22, 25, 37, 38, 41, 42, 43, 44, 48, 60, 61, 63, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 117, 119, 121, 122, 123, 124, 125, 126, 127, 130, 132, 133, 134, 135, 136, 138, 140, 141, 143, 145, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 259, 261, 263, 264, 267, 269, 271, 272, 275, 276, 279, 280, 283, 285, 287, 289, 292, 294, 295, 298, 300, 302, 304, 306, 307, 310, 312, 313, 316, 318, 320, 322, 324, 326, 328, 329, 332, 334, 336, 338, 345, 347, 348, 351, 352, 353, 354, 355, 356, 359, 360, 366, 369, 370, 371, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 386, 387, 393, 394, 397, 400, 403, 404, 405, 407, 419, 420, 421, 427, 428, 429, 430, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 558, 559, 560, 561, 562, 565, 569, 570, 571, 572, 576, 577, 581, 732, 733, 734, 743, 744, 746, 751, 755, 756, 757, 760, 764, 767, 768, 783, 787, 789, 791, 817, 839, 840, 843, 844, 845, 851, 852, 854, 856], "default_": 8, "operation_nam": 8, "_attr": 8, "compli": 8, "behavior": [8, 12, 13, 40, 42, 50, 61, 152, 154, 157, 159, 163, 164, 170, 176, 177, 254, 255, 258, 415, 416, 417, 418, 422, 423, 424, 425, 428, 429, 430, 507, 557, 571, 581, 584, 586, 590, 592, 593, 596, 601, 603, 605, 615, 617, 620, 629, 631, 634, 643, 645, 647, 653, 655, 657, 661, 663, 672, 674, 676, 677, 687, 689, 691, 692, 701, 703, 705, 706, 715, 717, 719, 720, 729, 731, 732, 734, 736, 743, 749, 756, 762, 764, 768, 772, 778, 786, 787, 789, 791, 840, 842, 843, 844, 845, 846, 847, 858], "undefin": [8, 42, 55, 56, 58, 62, 63, 159, 170, 176, 254, 257, 258, 414, 415, 416, 417, 418, 422, 423, 424, 425, 428, 429, 430, 556, 562, 576, 581, 584, 586, 590, 592, 593, 596, 601, 603, 605, 615, 617, 620, 629, 631, 634, 643, 645, 647, 653, 655, 657, 661, 663, 672, 674, 676, 677, 687, 689, 691, 692, 701, 703, 705, 706, 715, 717, 719, 720, 729, 731, 732, 734, 736, 743, 749, 772, 778, 787, 789, 791, 830, 842, 844, 845, 846, 847, 858], "unless": [8, 29, 58, 60, 152, 159, 162, 175, 176, 179, 523, 547, 570, 860, 865], "within": [8, 31, 34, 35, 36, 37, 40, 41, 42, 45, 48, 60, 61, 149, 153, 159, 160, 176, 177, 179, 197, 218, 221, 224, 254, 259, 364, 507, 529, 554, 746, 751, 755, 760, 767, 841, 843, 844, 846, 859, 861], "singl": [8, 9, 12, 36, 40, 43, 54, 55, 56, 60, 62, 63, 116, 121, 122, 123, 124, 125, 126, 127, 149, 151, 152, 154, 157, 159, 160, 162, 168, 170, 179, 183, 190, 191, 197, 201, 218, 223, 224, 231, 242, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 345, 352, 353, 354, 355, 369, 371, 381, 391, 408, 455, 476, 479, 480, 481, 482, 483, 489, 490, 491, 493, 501, 502, 507, 522, 523, 528, 530, 531, 532, 533, 534, 539, 540, 542, 547, 566, 748, 753, 754, 760, 766, 767, 770, 771, 772, 773, 778, 779, 781, 783, 784, 838, 840], "contribut": [8, 178, 865], "segment": [8, 340], "size": [8, 9, 11, 12, 34, 35, 37, 43, 54, 55, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 352, 353, 354, 355, 358, 375, 379, 383, 392, 398, 399, 403, 414, 415, 416, 417, 418, 422, 423, 424, 425, 428, 429, 430, 432, 437, 440, 452, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 551, 552, 553, 557, 559, 565, 566, 570, 571, 572, 573, 583, 590, 591, 604, 619, 633, 646, 662, 675, 680, 690, 694, 704, 708, 718, 722, 732, 733, 736, 743, 786, 819, 840, 844, 852, 859], "place": [8, 36, 58, 141, 142, 149, 153, 154, 155, 156, 158, 159, 162, 172, 173, 176, 188, 217, 218, 220, 221, 222, 223, 224, 252, 253, 254, 255, 259, 545, 576, 598, 607, 615, 629, 643, 672, 675, 679, 687, 690, 701, 704, 715, 718, 729, 733, 734, 743, 844], "rank_offset": 8, "where": [8, 10, 12, 19, 20, 22, 25, 27, 29, 30, 40, 43, 45, 48, 53, 56, 58, 60, 64, 68, 71, 77, 81, 82, 84, 86, 87, 100, 101, 112, 117, 120, 121, 122, 123, 124, 125, 126, 127, 135, 141, 152, 153, 154, 155, 156, 157, 161, 162, 163, 165, 167, 169, 170, 171, 172, 176, 177, 179, 180, 181, 182, 183, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 345, 347, 348, 351, 355, 356, 357, 359, 360, 368, 369, 370, 371, 373, 376, 377, 378, 379, 381, 382, 383, 384, 386, 390, 392, 393, 396, 397, 398, 400, 401, 402, 404, 405, 407, 412, 415, 416, 428, 429, 430, 433, 434, 435, 436, 438, 439, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 551, 552, 554, 557, 559, 562, 565, 566, 567, 570, 572, 577, 579, 583, 585, 591, 594, 604, 606, 607, 609, 615, 619, 621, 623, 629, 633, 635, 637, 643, 646, 648, 654, 656, 662, 664, 666, 672, 675, 678, 679, 682, 687, 690, 693, 696, 701, 704, 707, 710, 715, 718, 721, 724, 729, 732, 735, 751, 755, 759, 760, 762, 778, 784, 787, 789, 791, 803, 814, 837, 844, 850, 854, 862, 864], "recv_count": 8, "templat": [8, 13, 19, 20, 22, 25, 34, 35, 37, 38, 39, 41, 48, 51, 52, 60, 63, 159, 176, 177, 179, 252, 253, 254, 257, 258, 259, 262, 265, 266, 268, 270, 273, 274, 277, 278, 281, 282, 284, 286, 288, 290, 293, 296, 297, 299, 301, 303, 305, 308, 309, 311, 314, 315, 317, 319, 321, 323, 325, 327, 330, 331, 333, 335, 337, 339, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 392, 393, 397, 398, 400, 402, 404, 405, 406, 407, 410, 415, 416, 417, 418, 422, 423, 424, 425, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 455, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 562, 564, 565, 566, 567, 569, 570, 571, 584, 585, 587, 588, 589, 592, 593, 594, 596, 597, 598, 599, 600, 605, 606, 609, 610, 611, 612, 615, 617, 618, 620, 621, 623, 624, 625, 626, 629, 631, 632, 634, 635, 637, 638, 639, 640, 643, 645, 647, 648, 649, 650, 651, 655, 656, 658, 659, 660, 663, 664, 666, 667, 668, 669, 672, 674, 677, 678, 682, 683, 684, 687, 689, 692, 693, 696, 697, 698, 701, 703, 706, 707, 710, 711, 712, 715, 717, 720, 721, 724, 725, 726, 729, 731, 733, 734, 735, 738, 739, 740, 746, 747, 748, 749, 751, 752, 755, 756, 759, 760, 761, 762, 763, 764, 765, 766, 767, 769, 770, 772, 773, 774, 775, 777, 778, 779, 780, 781, 784, 787, 788, 789, 791, 794, 795, 803, 805, 808, 809, 812, 813, 815, 816, 817, 821, 822, 823, 824, 825, 826, 827, 828, 838, 841, 844, 846, 847, 850, 851, 852, 853, 854, 855, 859], "class": [8, 9, 10, 12, 13, 14, 16, 19, 20, 22, 23, 25, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 48, 51, 55, 58, 60, 61, 63, 151, 152, 160, 170, 174, 175, 177, 178, 179, 252, 253, 254, 258, 259, 357, 362, 385, 402, 410, 415, 416, 422, 423, 426, 427, 428, 429, 430, 551, 552, 553, 555, 556, 560, 562, 563, 564, 569, 570, 571, 572, 573, 574, 585, 594, 606, 613, 621, 627, 635, 641, 648, 656, 664, 670, 678, 693, 707, 721, 735, 744, 746, 747, 748, 749, 750, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 766, 767, 769, 770, 772, 773, 774, 777, 778, 779, 780, 781, 785, 787, 788, 789, 791, 804, 806, 808, 817, 818, 822, 828, 829, 830, 832, 836, 837, 840, 842, 843, 844, 845, 847, 849, 850, 851, 852, 855, 859, 860], "const": [8, 9, 12, 13, 19, 20, 22, 25, 29, 34, 35, 37, 38, 39, 41, 42, 43, 48, 49, 51, 52, 60, 61, 63, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 257, 261, 263, 264, 267, 269, 271, 272, 275, 276, 279, 280, 283, 285, 287, 289, 292, 294, 295, 298, 300, 302, 304, 306, 307, 310, 312, 313, 316, 318, 320, 322, 324, 326, 328, 329, 332, 334, 336, 338, 345, 347, 348, 351, 356, 359, 360, 368, 369, 370, 371, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 407, 408, 419, 420, 421, 428, 429, 430, 433, 434, 435, 436, 438, 439, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 551, 552, 553, 555, 556, 557, 558, 559, 560, 561, 562, 565, 566, 567, 573, 579, 581, 582, 583, 584, 586, 587, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 641, 642, 643, 644, 645, 646, 647, 649, 651, 652, 654, 655, 657, 658, 660, 661, 662, 663, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 736, 737, 738, 739, 741, 742, 743, 746, 747, 748, 751, 753, 755, 756, 759, 760, 762, 764, 767, 768, 770, 772, 773, 778, 779, 780, 781, 787, 788, 789, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 842, 843, 844, 845, 847, 849, 851, 852, 853, 854, 855, 857, 859, 862], "size_t": [8, 9, 11, 12, 13, 60, 61, 63, 159, 176, 197, 361, 428, 429, 430, 452, 553, 561, 565, 573, 582, 591, 601, 746, 755, 759, 761, 764, 767, 769, 771, 778, 786, 787, 788, 789, 791, 804, 810, 820, 828, 840, 852, 855], "send_count": 8, "vector_class": [8, 12, 41, 179, 224], "comm": [8, 11], "allgatherv_attr": [8, 13], "attr": [8, 9, 63, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "default_allgatherv_attr": 8, "dep": 8, "dtype": [8, 9, 42, 63], "local": [8, 12, 36, 40, 58, 149, 159, 160, 457, 458, 459, 460, 462, 464, 468, 472, 473, 475, 479, 480, 481, 482, 484, 486, 487, 488, 489, 490, 491, 492, 493, 498, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 516, 517, 519, 520, 521, 522, 523, 524, 525, 530, 531, 532, 533, 534, 537, 538, 539, 540, 542, 543, 548, 772, 835, 836, 851, 852, 853, 854, 856, 857, 859], "gather": 8, "number": [8, 12, 19, 20, 22, 25, 29, 37, 40, 41, 42, 43, 45, 46, 48, 59, 60, 61, 63, 68, 69, 70, 71, 72, 78, 79, 80, 81, 82, 83, 84, 86, 87, 107, 108, 117, 147, 149, 152, 153, 154, 155, 157, 159, 162, 164, 165, 166, 167, 170, 171, 172, 175, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 411, 414, 415, 416, 417, 418, 422, 423, 424, 425, 432, 437, 440, 452, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 549, 557, 559, 561, 565, 567, 570, 572, 579, 587, 589, 593, 595, 599, 602, 609, 610, 616, 623, 624, 630, 631, 637, 638, 644, 645, 649, 652, 658, 666, 667, 673, 675, 677, 680, 682, 683, 688, 690, 692, 694, 696, 697, 702, 703, 704, 706, 708, 710, 711, 716, 717, 718, 720, 722, 724, 725, 730, 738, 742, 745, 746, 749, 751, 764, 771, 778, 789, 804, 810, 828, 840, 844, 846, 852, 857, 862], "larg": [8, 28, 256, 257, 365, 391, 460, 481, 483, 484, 489, 516, 520, 533, 538, 770], "enough": [8, 34, 35, 152, 483, 566, 864], "receiv": [8, 20, 149, 177, 554, 570, 745, 746, 747, 748, 749, 751, 753, 755, 759, 762, 764, 765, 767, 770, 772, 773, 775, 778, 779, 781, 806, 808, 842, 845, 848], "equal": [8, 9, 13, 25, 29, 37, 41, 42, 43, 58, 60, 63, 68, 86, 87, 114, 115, 120, 121, 122, 123, 124, 125, 126, 127, 130, 141, 152, 154, 156, 159, 161, 162, 165, 166, 169, 176, 197, 198, 210, 254, 257, 261, 263, 264, 267, 269, 271, 272, 275, 276, 279, 280, 283, 285, 287, 289, 292, 294, 295, 298, 300, 302, 304, 306, 307, 310, 312, 313, 316, 318, 320, 322, 324, 326, 328, 329, 332, 334, 336, 338, 366, 401, 414, 426, 437, 440, 496, 497, 513, 514, 525, 547, 557, 559, 565, 567, 572, 576, 577, 579, 582, 587, 593, 598, 599, 605, 610, 611, 615, 618, 619, 620, 624, 625, 632, 634, 638, 639, 649, 658, 663, 667, 668, 672, 675, 677, 683, 685, 687, 690, 692, 697, 699, 704, 706, 710, 711, 713, 718, 720, 725, 727, 729, 738, 739, 751, 764, 768, 783, 786, 790, 810, 817, 820, 844, 852, 857], "expect": [8, 60, 62, 149, 150, 151, 152, 154, 157, 159, 160, 161, 162, 163, 164, 165, 169, 177, 179, 257, 258, 559, 732, 759, 762, 794, 795, 864], "posit": [8, 19, 20, 29, 60, 68, 69, 70, 71, 72, 78, 79, 80, 81, 82, 83, 98, 99, 100, 101, 102, 107, 108, 176, 179, 191, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 215, 216, 217, 218, 220, 221, 222, 223, 224, 229, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 262, 265, 266, 268, 270, 272, 273, 274, 277, 278, 281, 282, 284, 285, 286, 288, 290, 291, 293, 296, 297, 299, 301, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 321, 323, 325, 327, 330, 331, 333, 335, 337, 339, 340, 379, 414, 478, 492, 520, 524, 534, 535, 553, 559, 610, 624, 638, 667, 736, 738, 749, 764, 819, 829, 830], "caller": 8, "skip": [8, 352, 353, 354, 355, 357, 363, 385, 411], "explicitli": [8, 27, 39, 51, 62, 152, 155, 157, 167, 170, 176, 179, 254, 261, 262, 263, 264, 266, 267, 268, 270, 274, 278, 282, 284, 286, 287, 288, 290, 293, 297, 298, 299, 301, 303, 305, 309, 311, 315, 317, 319, 320, 321, 323, 325, 327, 331, 332, 333, 335, 337, 339, 414, 455, 784, 786, 817, 842, 844, 847, 864], "return": [8, 9, 12, 13, 14, 19, 20, 22, 25, 34, 35, 36, 37, 39, 40, 41, 42, 43, 48, 51, 60, 61, 62, 63, 130, 141, 142, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 257, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 345, 347, 348, 349, 351, 352, 353, 354, 355, 356, 359, 360, 368, 369, 370, 371, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 392, 393, 396, 397, 398, 400, 404, 405, 407, 415, 416, 417, 418, 419, 420, 421, 426, 428, 429, 430, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 551, 552, 553, 554, 558, 559, 560, 561, 562, 564, 565, 566, 567, 573, 579, 581, 582, 584, 586, 587, 589, 590, 592, 593, 595, 596, 597, 598, 599, 601, 602, 605, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 618, 620, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 634, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 649, 651, 652, 655, 657, 658, 660, 661, 663, 665, 666, 667, 668, 670, 671, 672, 673, 674, 676, 677, 679, 680, 681, 682, 683, 685, 686, 687, 688, 689, 691, 692, 694, 695, 696, 697, 699, 700, 701, 702, 703, 705, 706, 708, 709, 710, 711, 713, 714, 715, 716, 717, 719, 720, 722, 723, 724, 725, 727, 728, 729, 730, 731, 733, 734, 736, 737, 738, 739, 741, 742, 746, 747, 748, 749, 751, 752, 753, 755, 756, 757, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 772, 773, 778, 779, 780, 781, 783, 786, 787, 788, 789, 790, 791, 793, 795, 798, 801, 802, 803, 804, 805, 806, 815, 816, 819, 820, 822, 823, 825, 826, 828, 829, 830, 840, 842, 843, 844, 845, 846, 847, 849, 851, 852, 853, 854, 855, 856, 857, 859, 862], "global": [8, 11, 149, 152, 159, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 772, 845, 846], "distribut": [8, 11, 12, 40, 44, 45, 50, 150, 175, 177, 260, 341, 345, 346, 347, 348, 349, 350, 351, 352, 356, 358, 359, 360, 361, 362, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 392, 393, 397, 398, 400, 404, 405, 406, 407, 409, 410, 412, 472, 473, 485, 486, 488, 547, 566, 572, 865], "count": [8, 37, 42, 43, 61, 68, 69, 141, 142, 254, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 591, 604, 619, 633, 662, 675, 690, 704, 718, 732, 734, 751, 764, 770], "rtype": 8, "allreduce_attr": [8, 13], "default_allreduce_attr": 8, "have": [8, 31, 36, 40, 41, 42, 48, 50, 52, 54, 55, 56, 58, 60, 63, 81, 141, 142, 146, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 179, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 220, 221, 222, 223, 224, 229, 232, 233, 234, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 255, 257, 259, 263, 289, 292, 313, 314, 322, 326, 394, 412, 426, 455, 483, 500, 565, 566, 581, 587, 610, 624, 638, 649, 658, 667, 745, 753, 754, 756, 757, 760, 763, 765, 768, 772, 775, 787, 829, 830, 840, 842, 843, 844, 845, 846, 848, 852, 854, 857, 864], "dimens": [8, 58, 59, 60, 62, 63, 68, 69, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 98, 100, 101, 106, 107, 108, 114, 115, 117, 121, 122, 123, 124, 125, 126, 127, 130, 135, 141, 142, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 179, 191, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 217, 218, 220, 221, 222, 223, 224, 229, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 254, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 366, 379, 394, 403, 417, 424, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454], "appli": [8, 19, 22, 38, 43, 48, 50, 51, 56, 58, 63, 65, 67, 75, 84, 85, 86, 87, 88, 91, 92, 94, 96, 102, 103, 104, 106, 109, 110, 113, 114, 117, 118, 121, 122, 123, 124, 125, 126, 127, 131, 133, 135, 140, 142, 143, 144, 152, 154, 155, 157, 158, 159, 161, 164, 167, 170, 176, 177, 179, 195, 196, 197, 198, 199, 200, 201, 210, 211, 217, 218, 220, 221, 222, 223, 224, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 257, 260, 300, 301, 302, 303, 304, 305, 334, 335, 336, 337, 338, 339, 341, 357, 368, 380, 387, 388, 389, 390, 391, 394, 395, 396, 399, 401, 403, 408, 412, 557, 558, 565, 756, 763, 780, 807, 809, 825, 840, 844, 846], "alltoal": 8, "separ": [8, 38, 43, 152, 154, 157, 162, 254, 255, 259, 787, 814, 837, 841], "j": [8, 19, 22, 25, 28, 49, 58, 60, 104, 135, 163, 183, 190, 191, 197, 201, 218, 221, 224, 242, 250, 254, 257, 258, 340, 341, 391, 408, 414, 551, 552, 553, 804, 810], "th": [8, 19, 22, 25, 46, 49, 121, 122, 123, 124, 125, 126, 127, 152, 258, 261, 263, 264, 267, 269, 271, 272, 275, 276, 279, 280, 283, 285, 287, 289, 292, 294, 295, 298, 300, 302, 304, 306, 307, 310, 312, 313, 316, 318, 320, 322, 324, 326, 328, 329, 332, 334, 336, 338, 355, 368, 396, 401, 414, 779, 804, 810], "sent": [8, 759, 760, 764], "alltoallv_attr": [8, 13], "default_alltoallv_attr": 8, "onli": [8, 12, 19, 34, 35, 36, 37, 38, 40, 43, 48, 50, 54, 55, 56, 58, 60, 61, 62, 84, 86, 87, 101, 114, 115, 117, 149, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 176, 177, 179, 183, 188, 190, 191, 197, 199, 201, 218, 221, 224, 242, 250, 252, 253, 254, 255, 257, 258, 259, 264, 272, 276, 280, 283, 284, 285, 286, 295, 307, 313, 316, 317, 318, 319, 324, 329, 362, 365, 410, 415, 416, 417, 418, 422, 423, 427, 428, 429, 430, 460, 483, 507, 516, 520, 538, 553, 554, 555, 557, 562, 565, 570, 581, 583, 585, 586, 590, 591, 592, 594, 596, 597, 598, 601, 603, 604, 606, 609, 614, 615, 617, 619, 621, 623, 628, 629, 631, 633, 635, 637, 642, 645, 646, 648, 653, 654, 656, 657, 661, 662, 664, 666, 671, 674, 675, 676, 678, 682, 686, 687, 689, 690, 691, 693, 696, 700, 701, 703, 704, 705, 707, 710, 714, 717, 718, 719, 721, 724, 728, 731, 732, 733, 734, 735, 741, 743, 749, 751, 753, 760, 762, 766, 771, 781, 786, 787, 789, 791, 808, 838, 842, 844, 846, 855, 858, 859, 862], "after": [8, 20, 29, 37, 40, 43, 48, 51, 52, 56, 140, 149, 152, 153, 157, 179, 257, 258, 259, 295, 298, 304, 329, 332, 338, 455, 483, 551, 552, 559, 746, 751, 753, 755, 760, 767, 768, 776, 781, 793, 798, 804, 810, 818, 841, 844, 845, 849, 857], "barrier_attr": [8, 13], "default_barrier_attr": 8, "denot": [8, 19, 20, 22, 25, 46, 56, 58, 59, 69, 80, 82, 83, 107, 108, 114, 115, 156, 158, 304, 305, 338, 358, 473, 487, 535, 547, 596, 597, 598, 609, 617, 623, 631, 637, 645, 666, 674, 675, 682, 689, 690, 696, 703, 704, 710, 717, 718, 724, 731, 765, 775, 804, 837], "root": [8, 27, 122, 137, 159, 167, 471, 502, 504, 505, 521, 522, 537, 547, 561, 842], "broadcast_attr": [8, 13], "default_broadcast_attr": 8, "reduce_attr": [8, 13], "default_reduce_attr": 8, "ignor": [8, 60, 68, 69, 72, 82, 83, 98, 99, 107, 108, 152, 157, 158, 355, 368, 396, 427, 428, 429, 430, 560, 744, 804, 840, 844], "get": [8, 12, 13, 22, 43, 49, 63, 149, 170, 361, 409, 500, 501, 545, 548, 749, 759, 762, 764, 766, 770, 781, 852], "scatter": 8, "reduce_scatter_attr": [8, 13], "default_reduce_scatter_attr": 8, "comm_siz": 8, "two": [8, 27, 30, 39, 43, 46, 51, 58, 59, 60, 61, 62, 63, 67, 85, 106, 109, 110, 113, 128, 130, 140, 143, 151, 152, 164, 165, 168, 170, 179, 181, 188, 191, 192, 193, 194, 201, 209, 214, 220, 223, 225, 227, 231, 234, 235, 239, 247, 249, 252, 253, 254, 255, 257, 258, 260, 343, 354, 355, 362, 364, 365, 366, 389, 396, 410, 412, 414, 415, 416, 455, 466, 467, 496, 497, 502, 513, 514, 520, 523, 525, 527, 547, 551, 552, 553, 558, 561, 562, 565, 566, 599, 610, 624, 638, 667, 683, 697, 711, 725, 738, 749, 754, 768, 786, 787, 789, 791, 803, 817, 818, 819, 820, 829, 837, 846, 852, 860, 862], "so": [8, 19, 51, 56, 60, 62, 149, 152, 153, 160, 164, 170, 179, 196, 198, 199, 210, 211, 218, 221, 224, 240, 241, 254, 255, 260, 264, 265, 269, 272, 273, 276, 277, 280, 281, 295, 296, 307, 308, 313, 314, 329, 330, 340, 402, 412, 455, 460, 481, 484, 489, 516, 520, 533, 538, 553, 558, 559, 560, 565, 566, 753, 754, 778, 814, 851, 864], "post": [8, 51, 55, 56, 152, 159], "doe": [8, 10, 12, 14, 22, 37, 39, 41, 47, 48, 50, 51, 52, 56, 58, 60, 62, 65, 66, 90, 91, 92, 93, 96, 97, 103, 111, 112, 118, 120, 128, 129, 131, 137, 139, 140, 144, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 179, 196, 197, 198, 199, 206, 236, 254, 256, 258, 261, 263, 264, 267, 352, 387, 415, 416, 417, 418, 422, 423, 424, 425, 428, 429, 430, 456, 460, 461, 463, 465, 466, 467, 469, 474, 477, 478, 481, 484, 489, 494, 495, 496, 497, 499, 502, 506, 513, 514, 515, 516, 518, 520, 526, 527, 533, 536, 538, 541, 543, 544, 557, 558, 565, 566, 572, 589, 592, 594, 604, 606, 615, 619, 621, 629, 633, 635, 643, 648, 651, 660, 662, 664, 672, 675, 678, 687, 690, 693, 701, 704, 707, 715, 718, 721, 729, 732, 749, 751, 759, 764, 772, 781, 786, 794, 795, 808, 829, 830, 840, 843, 844, 845, 846, 851, 854], "proce": [8, 357, 363, 385, 402, 411, 799, 800], "concurr": [8, 152, 179, 554, 561, 565, 567, 581, 583, 584, 586, 591, 592, 593, 596, 597, 601, 602, 604, 605, 609, 616, 619, 620, 623, 630, 633, 634, 637, 644, 646, 647, 652, 654, 655, 657, 662, 663, 666, 673, 675, 676, 677, 682, 688, 690, 691, 692, 696, 702, 704, 705, 706, 710, 716, 718, 719, 720, 724, 730, 732, 734, 736, 745, 746, 753, 755, 756, 757, 760, 766, 767, 779, 783, 799, 800, 811, 818, 819, 842, 844, 846, 847, 851, 852, 854, 859, 860], "destin": [8, 30, 53, 54, 56, 58, 60, 78, 90, 149, 152, 153, 155, 156, 157, 158, 159, 161, 164, 167, 168, 169, 170, 171], "sourc": [8, 31, 43, 44, 45, 49, 53, 54, 56, 58, 60, 78, 149, 151, 152, 153, 155, 156, 157, 158, 159, 161, 164, 167, 168, 169, 170, 171, 176, 223, 362, 395, 410, 604, 615, 619, 629, 633, 643, 662, 672, 675, 687, 690, 701, 704, 715, 718, 729, 837, 864], "As": [8, 54, 56, 58, 149, 152, 153, 154, 168, 177, 179, 254, 257, 341, 549, 557, 763, 844, 864], "For": [8, 19, 20, 22, 25, 28, 29, 31, 40, 43, 44, 50, 52, 53, 54, 55, 56, 58, 60, 62, 63, 84, 86, 87, 98, 99, 106, 117, 121, 122, 123, 124, 125, 126, 127, 149, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 174, 176, 177, 179, 183, 190, 191, 192, 197, 201, 218, 221, 223, 224, 242, 249, 250, 254, 255, 256, 258, 259, 260, 285, 318, 326, 340, 341, 343, 362, 364, 365, 366, 391, 426, 452, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 557, 559, 565, 566, 577, 583, 591, 604, 619, 633, 646, 654, 662, 675, 690, 704, 718, 732, 745, 753, 756, 758, 768, 784, 785, 786, 787, 789, 791, 800, 803, 814, 817, 830, 837, 838, 845, 860, 862], "inform": [8, 28, 37, 40, 42, 43, 44, 51, 52, 53, 60, 63, 149, 159, 164, 176, 178, 260, 341, 427, 437, 445, 470, 557, 566, 575, 578, 783, 786, 788, 810, 835, 836, 837, 865], "ccl_api": 8, "pt2pt_attr": 8, "default_pt2pt_attr": 8, "enum": [9, 13, 16, 32, 38, 42, 55, 58, 60, 61, 62, 152, 159, 170, 179, 259, 415, 416, 422, 423, 426, 427, 428, 429, 430, 563, 776, 786, 791, 840, 842, 844, 848, 852], "int8": [9, 29, 55, 57, 62, 84, 117, 152, 153, 157, 161, 164, 167, 168, 170], "unspecifi": [9, 10, 13, 16, 61, 176, 179, 507, 583, 584, 589, 591, 593, 598, 604, 605, 615, 619, 620, 623, 629, 631, 633, 634, 637, 643, 645, 646, 647, 651, 654, 655, 660, 662, 663, 672, 675, 677, 687, 690, 692, 696, 701, 703, 704, 706, 710, 715, 717, 718, 720, 729, 732, 733, 734, 746, 751, 755, 756, 767, 774, 777, 787, 789, 791, 839, 844, 851, 854, 862], "uint8": [9, 29], "int16": [9, 29, 56], "uint16": [9, 29], "int32": [9, 29, 56], "uint32": [9, 29], "int64": [9, 29], "uint64": [9, 29], "float16": [9, 48], "float32": [9, 29, 43], "float64": [9, 29, 43], "bfloat16": [9, 29, 48, 50, 55, 57, 63, 150, 182, 192, 196, 197, 219, 225, 230], "last_predefin": 9, "largest": [9, 13, 22, 215, 385, 772, 778, 787], "abov": [9, 13, 22, 58, 106, 130, 149, 152, 154, 158, 161, 210, 240, 254, 257, 258, 261, 263, 264, 267, 287, 320, 556, 558, 766, 768, 803, 808, 829, 830, 837, 844], "bit": [9, 29, 54, 55, 62, 63, 150, 152, 153, 177, 179, 341, 342, 344, 352, 353, 354, 355, 358, 364, 366, 368, 387, 388, 389, 390, 394, 396, 399, 401, 403, 406, 432, 507], "sign": [9, 28, 29, 46, 55, 56, 62, 63, 152, 153, 176, 478, 483, 498, 499, 525, 535, 542, 547, 583, 591, 604, 619, 633, 646, 654, 662, 675, 690, 704, 718, 732], "integ": [9, 19, 20, 29, 41, 55, 56, 59, 62, 63, 129, 150, 152, 153, 176, 179, 183, 188, 190, 191, 197, 198, 201, 242, 250, 255, 258, 264, 265, 272, 273, 276, 277, 280, 281, 295, 296, 307, 308, 313, 314, 329, 330, 342, 343, 346, 355, 364, 368, 369, 371, 372, 381, 383, 390, 392, 393, 396, 397, 398, 399, 401, 405, 414, 432, 474, 482, 495, 498, 506, 515, 518, 520, 524, 525, 526, 527, 534, 542, 543, 544, 547, 583, 591, 604, 619, 633, 646, 654, 662, 675, 690, 704, 718, 732, 778, 817, 819, 846], "unsign": [9, 29, 55, 61, 62, 63, 152, 153, 159, 170, 177, 390, 591, 604, 619, 633, 646, 654, 662, 675, 690, 704, 718, 732, 762, 768, 780, 819, 844], "half": [9, 54, 55, 62, 63, 182, 192, 196, 197, 219, 225, 230, 258, 551, 552, 553, 584, 593, 598, 605, 615, 617, 620, 629, 631, 634, 643, 645, 647, 655, 663, 672, 674, 677, 687, 689, 692, 701, 703, 706, 715, 717, 720, 729, 731, 733, 734, 859], "precis": [9, 50, 54, 55, 56, 58, 60, 63, 146, 152, 157, 168, 180, 181, 182, 183, 185, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547], "non": [9, 12, 13, 14, 27, 30, 40, 42, 55, 56, 58, 62, 63, 68, 78, 79, 80, 81, 82, 83, 88, 89, 98, 102, 107, 108, 151, 157, 159, 160, 162, 168, 170, 176, 220, 221, 222, 223, 243, 244, 245, 246, 248, 251, 254, 255, 258, 259, 260, 261, 263, 264, 267, 269, 271, 272, 275, 276, 279, 280, 283, 285, 287, 289, 292, 294, 295, 298, 300, 302, 304, 306, 307, 310, 312, 313, 316, 318, 320, 322, 324, 326, 328, 329, 332, 334, 336, 338, 366, 385, 395, 414, 415, 416, 422, 423, 440, 476, 481, 483, 489, 501, 516, 520, 523, 528, 533, 547, 559, 581, 748, 751, 756, 768, 770, 781, 784, 793, 794, 795, 798, 799, 800, 801, 802, 808, 838, 844, 861], "7": [9, 54, 55, 62, 63, 390, 391, 402, 455, 768], "mantissa": [9, 54, 55, 62, 63, 152], "wai": [9, 12, 22, 36, 37, 40, 54, 60, 64, 130, 151, 152, 156, 157, 159, 160, 168, 173, 176, 179, 257, 355, 368, 396, 414, 551, 552, 569, 789, 799, 800, 803, 817], "regist": [9, 341, 366, 390, 394, 399, 403, 476, 501, 528, 745, 779], "deregist": 9, "datatype_attr": 9, "list": [9, 12, 13, 36, 37, 40, 42, 51, 55, 63, 68, 69, 78, 79, 80, 81, 82, 83, 84, 98, 99, 107, 108, 117, 121, 122, 123, 124, 125, 126, 127, 142, 149, 158, 159, 170, 179, 180, 181, 182, 183, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 261, 263, 264, 267, 269, 271, 272, 275, 276, 279, 280, 283, 285, 287, 289, 291, 292, 294, 295, 298, 300, 302, 304, 306, 307, 310, 312, 313, 316, 318, 320, 322, 324, 326, 328, 329, 332, 334, 336, 338, 357, 364, 380, 402, 419, 420, 421, 428, 429, 430, 433, 434, 435, 436, 438, 439, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548, 747, 754, 759, 762, 764, 770, 778, 781, 784], "fill": [9, 13, 37, 130, 176, 177, 409, 415, 416, 417, 418, 452, 455, 732], "datatype_attr_id": 9, "byte": [9, 37, 40, 43, 60, 63, 152, 428, 429, 430, 786, 787, 788, 789, 791], "create_datatype_attr": 9, "register_datatyp": 9, "deregister_datatyp": 9, "retriev": [9, 12, 14, 39, 150, 179, 259], "get_datatype_s": 9, "reli": [10, 22, 29, 30, 38, 50, 53, 168, 179, 559, 565], "propag": [10, 30, 53, 59, 60, 101, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 169, 170, 171, 172, 173, 179], "caught": [10, 30, 179, 844, 845], "align": [10, 30, 130, 174, 175, 178, 179, 254, 257, 412, 428, 429, 430, 786, 787, 788], "introduc": [10, 30, 36, 179, 342, 364, 547, 830, 837, 864], "hierarchi": [10, 30, 31, 179], "throw": [10, 12, 14, 30, 37, 51, 60, 63, 149, 151, 152, 154, 155, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 257, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 345, 347, 348, 351, 356, 359, 360, 369, 370, 371, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 391, 392, 393, 397, 398, 400, 404, 405, 407, 408, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 546, 577, 607, 679, 732, 736, 743, 762, 772, 778, 829, 840, 843, 847], "inherit": [10, 58, 60, 61, 63, 179, 745, 759, 762, 837, 842], "std": [10, 11, 19, 20, 22, 25, 29, 30, 34, 35, 37, 38, 41, 42, 43, 49, 59, 60, 63, 150, 151, 152, 156, 159, 169, 173, 174, 176, 177, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 345, 346, 349, 352, 353, 354, 355, 356, 357, 358, 360, 368, 369, 371, 372, 374, 379, 380, 381, 383, 385, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 401, 402, 403, 405, 406, 408, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 554, 558, 567, 573, 581, 582, 583, 584, 585, 590, 591, 592, 593, 594, 596, 598, 601, 603, 604, 605, 606, 607, 609, 615, 617, 619, 620, 621, 623, 629, 631, 633, 634, 635, 637, 643, 645, 646, 647, 648, 653, 654, 655, 656, 661, 662, 663, 664, 666, 672, 674, 675, 677, 678, 679, 682, 687, 689, 690, 692, 693, 696, 701, 703, 704, 706, 707, 710, 715, 717, 718, 720, 721, 724, 729, 731, 732, 733, 734, 735, 736, 743, 746, 749, 751, 753, 755, 759, 760, 762, 766, 767, 768, 771, 772, 778, 779, 780, 783, 785, 787, 788, 789, 790, 791, 805, 808, 820, 843, 844, 846, 849, 852], "deriv": [10, 30, 42, 51, 155, 156, 159, 160, 165, 167, 173, 179, 845], "check": [10, 14, 34, 35, 37, 41, 60, 63, 128, 149, 152, 163, 342, 343, 576, 587, 649, 658, 849], "howev": [10, 54, 55, 56, 58, 60, 149, 152, 154, 156, 158, 162, 164, 165, 171, 172, 179, 257, 283, 316, 352, 362, 387, 415, 416, 479, 480, 482, 530, 531, 532, 534, 539, 540, 542, 553, 557, 559, 566, 732, 786, 787, 830, 840, 841, 843, 844, 847, 854], "condit": [10, 19, 25, 43, 51, 130, 170, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 257, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 349, 352, 353, 354, 355, 368, 387, 388, 389, 390, 391, 396, 399, 401, 408, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 546, 571, 599, 675, 683, 689, 690, 697, 704, 711, 717, 718, 725, 799, 800, 829, 840, 843, 847], "fit": [10, 40, 43, 47, 179, 460, 484, 516, 520, 538, 838], "ani": [10, 12, 13, 29, 31, 37, 43, 48, 54, 55, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 340, 375, 380, 414, 433, 434, 435, 436, 438, 439, 441, 442, 443, 444, 446, 447, 450, 451, 452, 453, 454, 456, 460, 461, 463, 465, 466, 467, 469, 474, 477, 478, 482, 483, 494, 495, 496, 497, 499, 502, 513, 514, 515, 516, 518, 520, 523, 526, 527, 535, 536, 538, 541, 544, 546, 559, 565, 566, 579, 581, 589, 592, 601, 675, 690, 704, 718, 732, 745, 747, 748, 749, 754, 756, 759, 762, 766, 772, 773, 778, 784, 786, 787, 788, 803, 804, 810, 817, 825, 827, 830, 838, 840, 841, 843, 844, 846, 849, 854, 865], "invalid_argu": [10, 30, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 257, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 345, 347, 348, 351, 356, 359, 360, 369, 370, 371, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 391, 392, 393, 397, 398, 400, 404, 405, 407, 408, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 546], "were": [10, 61, 176, 179, 254, 264, 272, 276, 280, 285, 295, 307, 313, 318, 329, 399, 558, 772, 786, 787, 843, 854], "reject": [10, 179, 343, 365, 746, 754, 755, 760, 764, 767, 778], "host_bad_alloc": [10, 30, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 257, 261, 263, 267, 269, 271, 275, 279, 283, 285, 287, 289, 292, 294, 298, 300, 302, 304, 306, 310, 312, 316, 318, 320, 322, 324, 326, 328, 332, 334, 336, 338, 415, 416, 417, 418, 428, 429, 430, 546], "dure": [10, 12, 25, 30, 37, 38, 40, 43, 50, 56, 58, 60, 63, 141, 146, 149, 151, 152, 153, 154, 157, 158, 160, 162, 163, 164, 165, 179, 260, 261, 263, 264, 267, 269, 271, 275, 279, 280, 283, 285, 287, 289, 292, 294, 298, 300, 302, 304, 306, 310, 312, 313, 316, 318, 320, 322, 324, 326, 328, 329, 332, 334, 336, 338, 394, 403, 476, 483, 501, 528, 757, 776, 783, 786, 821, 822, 823, 825, 826, 827, 828, 838, 851], "unimpl": [10, 30, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 257, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430], "request": [10, 34, 35, 149, 151, 159, 257, 283, 316, 786, 788, 796, 797, 830, 841, 842, 847, 848, 852], "unsupport": [10, 30, 149], "built": [11, 12, 149], "Its": [11, 12, 36, 177, 563, 732, 776], "band": [11, 12, 186, 195, 205, 229, 243, 244, 245, 246, 248, 251, 340], "exampl": [11, 12, 29, 31, 36, 39, 42, 43, 44, 45, 48, 50, 54, 55, 58, 60, 62, 63, 84, 86, 87, 90, 106, 117, 121, 122, 123, 124, 125, 126, 127, 130, 141, 149, 150, 151, 154, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 174, 218, 221, 224, 256, 362, 364, 385, 395, 402, 410, 455, 526, 551, 552, 553, 568, 577, 581, 583, 585, 591, 594, 604, 606, 619, 621, 633, 635, 646, 648, 654, 656, 662, 664, 675, 678, 690, 693, 704, 707, 718, 721, 732, 735, 758, 784, 787, 789, 791, 803, 804, 810, 814, 817, 829, 836, 837, 838, 847, 860, 862, 865], "mpi": 11, "mpi_rank": 11, "mpi_siz": 11, "mpi_init": 11, "argc": 11, "argv": 11, "mpi_comm_rank": 11, "mpi_comm_world": 11, "mpi_comm_s": 11, "shared_ptr_class": [11, 12], "kv": [11, 12], "address_typ": [11, 12], "kvs_addr": 11, "create_main_kv": [11, 12], "get_address": [11, 12], "mpi_bcast": 11, "address_max_s": [11, 12], "mpi_byt": 11, "els": [11, 98, 99, 191, 250, 561], "create_kv": [11, 12], "create_commun": [11, 12], "per": [11, 12, 62, 78, 79, 80, 82, 84, 86, 87, 100, 101, 115, 117, 176, 177, 179, 680, 694, 708, 722, 850, 852, 854], "sycl_context": 11, "sycl_devic": 11, "sycl_queu": 11, "ccl_context": 11, "create_context": [11, 12], "ccl_devic": 11, "idx": [11, 37, 155, 156, 159, 173, 183, 190, 191, 197, 201, 218, 221, 224, 242, 250, 361, 385, 391, 408], "push_back": [11, 732], "create_devic": [11, 12], "r2d_map": 11, "dev": [11, 150], "uniqu": [11, 13, 22, 41, 42, 43, 63, 121, 122, 123, 124, 125, 126, 127, 149, 152, 254, 255, 591, 604, 662, 675, 718, 844, 846, 852], "ccl_stream": 11, "create_stream": [11, 12], "choic": [11, 257, 375, 551, 552, 565, 837], "wait": [11, 14, 37, 60, 61, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 261, 263, 264, 267, 269, 271, 272, 275, 276, 279, 280, 283, 285, 287, 289, 292, 294, 295, 298, 300, 302, 304, 306, 307, 310, 312, 313, 316, 318, 320, 322, 324, 326, 328, 329, 332, 334, 336, 338, 380, 409, 419, 420, 421, 428, 429, 430, 433, 434, 435, 436, 438, 439, 441, 442, 443, 444, 446, 447, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 559, 589, 745, 751, 753, 793, 798, 838, 843, 844, 845, 847], "e": [11, 19, 28, 31, 40, 42, 43, 46, 50, 56, 58, 88, 91, 100, 101, 104, 111, 112, 131, 133, 135, 149, 152, 154, 156, 158, 161, 162, 172, 176, 179, 254, 257, 258, 259, 260, 261, 287, 320, 341, 356, 374, 377, 415, 416, 428, 429, 430, 432, 472, 485, 486, 487, 488, 492, 547, 753, 781, 843, 859], "here": [12, 54, 56, 58, 60, 77, 81, 98, 99, 152, 154, 156, 157, 158, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 784, 829, 837, 843, 865], "nativ": [12, 14, 152, 257, 259, 852, 854], "native_context_typ": 12, "native_event_typ": [12, 14], "card": [12, 61, 149, 151], "instanc": [12, 19, 20, 22, 25, 37, 38, 39, 41, 42, 43, 44, 50, 53, 152, 157, 159, 168, 176, 177, 179, 223, 252, 253, 257, 258, 414, 573, 581, 744, 745, 765, 772, 775, 778, 787, 789, 791, 794, 795, 817, 818, 821, 822, 823, 824, 825, 826, 827, 828, 843, 844, 845, 849, 851, 852, 853, 854], "native_devic": 12, "exist": [12, 37, 60, 150, 151, 153, 176, 597, 598, 609, 615, 617, 623, 631, 637, 645, 666, 672, 674, 682, 687, 689, 696, 703, 710, 717, 724, 729, 731, 732, 744, 840, 843, 844, 849, 851, 852, 856, 864], "get_n": [12, 14], "wrap": [12, 14, 34, 35, 37, 40, 41, 42, 559, 844], "respons": [12, 37, 39, 41, 43, 46, 51, 56, 58, 60, 62, 149, 159, 160, 179, 256, 258, 565, 745, 746, 756], "manag": [12, 31, 37, 44, 45, 149, 179, 256, 455, 680, 694, 708, 722, 745, 746, 748, 773, 790, 841, 844], "resourc": [12, 149, 179, 419, 420, 421, 788, 790, 832], "native_context": 12, "kvs_interfac": 12, "establish": [12, 160, 864], "connect": [12, 40, 43, 147, 149, 161, 581, 744, 745, 764, 779, 781, 844], "between": [12, 25, 37, 38, 43, 54, 56, 58, 60, 61, 62, 63, 68, 81, 107, 108, 128, 149, 151, 152, 155, 160, 168, 179, 181, 183, 190, 191, 192, 193, 194, 197, 201, 218, 221, 223, 224, 231, 242, 250, 254, 259, 264, 265, 272, 273, 276, 277, 280, 281, 295, 296, 307, 308, 313, 314, 329, 330, 342, 364, 513, 514, 526, 527, 547, 566, 581, 745, 746, 753, 755, 765, 767, 775, 787, 789, 791, 792, 819, 846, 862], "creation": [12, 37, 39, 40, 43, 51, 56, 63, 151, 152, 153, 157, 159, 164, 176, 341, 452, 845], "record": [12, 38, 43, 149], "char": [12, 13, 38, 159, 551, 552, 579, 753], "string_class": 12, "given": [12, 19, 20, 22, 25, 27, 29, 38, 43, 46, 60, 65, 67, 85, 103, 109, 110, 111, 113, 114, 116, 121, 122, 123, 124, 125, 126, 127, 137, 139, 140, 143, 146, 149, 152, 153, 176, 179, 183, 185, 190, 191, 197, 201, 218, 221, 224, 225, 226, 227, 228, 235, 242, 250, 252, 253, 256, 257, 258, 259, 260, 261, 312, 313, 345, 347, 348, 349, 350, 351, 356, 359, 360, 362, 363, 364, 367, 368, 369, 370, 371, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 407, 408, 410, 411, 426, 427, 472, 473, 476, 485, 487, 488, 500, 501, 528, 529, 548, 551, 552, 553, 557, 565, 566, 761, 763, 769, 783, 786, 817, 830, 838, 844, 845, 862], "empti": [12, 37, 40, 42, 55, 60, 61, 62, 63, 114, 121, 122, 123, 124, 125, 126, 127, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 179, 261, 263, 264, 267, 269, 271, 272, 275, 276, 279, 280, 283, 285, 287, 289, 292, 294, 295, 298, 300, 302, 304, 306, 307, 310, 312, 313, 316, 318, 320, 322, 324, 326, 328, 329, 332, 334, 336, 338, 428, 429, 430, 483, 535, 551, 552, 553, 581, 583, 589, 590, 591, 597, 598, 604, 615, 617, 619, 629, 631, 633, 643, 645, 646, 651, 654, 660, 661, 662, 672, 674, 675, 687, 689, 690, 701, 703, 704, 715, 717, 718, 729, 731, 732, 748, 750, 760, 762, 772, 773, 776, 778, 817, 842, 843, 844, 846, 847, 849, 852, 857], "save": [12, 163, 165, 483, 566, 763, 776], "remov": [12, 60, 121, 122, 123, 124, 125, 126, 127, 179, 590, 598, 603, 617, 631, 645, 653, 661, 674, 689, 703, 717, 731, 743, 748, 754, 763, 775, 776, 778, 844, 851, 852], "static": [12, 37, 41, 56, 61, 62, 352, 353, 354, 355, 368, 387, 388, 389, 390, 391, 394, 396, 399, 401, 403, 408, 437, 566, 568, 572, 582, 768, 781, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 829, 830, 840, 844, 862], "constexpr": [12, 34, 35, 37, 38, 176, 177, 352, 353, 354, 355, 368, 387, 388, 389, 390, 391, 394, 396, 399, 401, 403, 408, 437, 452, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 829, 830], "256": 12, "array_class": 12, "overrid": [12, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 788, 844, 845], "addr": 12, "homogen": [12, 31, 34, 35, 36, 37, 40, 42, 43, 44], "user": [12, 16, 19, 37, 39, 40, 41, 43, 50, 51, 54, 55, 56, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 179, 218, 221, 224, 252, 253, 254, 256, 257, 258, 259, 260, 362, 394, 403, 412, 426, 455, 483, 557, 565, 745, 746, 755, 760, 763, 764, 766, 767, 778, 785, 838, 841, 842, 843, 844, 864], "suppli": [12, 179, 212, 213, 214, 232, 233, 234, 245, 246, 262, 264, 265, 266, 268, 270, 272, 273, 274, 276, 277, 278, 280, 281, 282, 284, 286, 288, 290, 293, 295, 296, 297, 298, 299, 301, 303, 304, 305, 307, 308, 309, 311, 313, 314, 315, 317, 319, 321, 323, 325, 327, 329, 330, 331, 332, 333, 335, 337, 338, 339, 340, 785], "thei": [12, 13, 30, 37, 40, 56, 58, 60, 61, 98, 100, 101, 149, 151, 152, 153, 154, 157, 158, 161, 162, 165, 170, 177, 179, 218, 221, 224, 259, 269, 414, 415, 416, 422, 423, 455, 480, 482, 532, 534, 540, 542, 545, 568, 587, 591, 599, 604, 610, 619, 624, 633, 638, 645, 646, 649, 658, 662, 667, 675, 683, 690, 697, 703, 704, 711, 718, 725, 732, 738, 745, 753, 759, 762, 763, 766, 784, 787, 789, 791, 796, 797, 803, 830, 838, 860, 862], "map_class": 12, "rank_device_map": 12, "total": [12, 62, 82, 152, 183, 190, 191, 197, 201, 218, 221, 224, 242, 250, 264, 265, 272, 273, 276, 277, 280, 281, 295, 296, 307, 308, 313, 314, 329, 330, 357, 402, 565, 566, 766, 803, 840, 844], "wire": 12, "wa": [12, 30, 149, 162, 165, 179, 257, 258, 271, 272, 289, 322, 401, 419, 420, 421, 422, 423, 424, 425, 426, 579, 581, 589, 598, 617, 631, 645, 651, 660, 674, 689, 703, 717, 731, 746, 747, 749, 755, 757, 759, 760, 767, 778, 779, 786, 814, 830, 844, 845, 851, 856, 857], "get_devic": [12, 61], "get_context": [12, 61], "encapsul": [12, 43, 60, 61, 149, 150, 151, 160, 178, 179, 255, 257, 258, 749], "native_stream": 12, "create_ev": 12, "native_ev": 12, "modifi": [13, 22, 152, 157, 159, 164, 176, 185, 227, 228, 257, 362, 410, 581, 591, 597, 604, 609, 619, 623, 633, 637, 646, 662, 666, 675, 682, 690, 696, 704, 710, 718, 724, 840, 852, 865], "operation_attr_id": 13, "prioriti": [13, 30, 646, 647, 649, 651, 745, 746, 751, 755, 767, 772, 786, 844], "to_cach": 13, "match_id": 13, "last_valu": 13, "conjunct": [13, 56, 562, 565, 568], "cach": [13, 63, 149, 151, 160, 569, 787, 788], "extend": [13, 29, 40, 42, 150, 179, 188, 291, 354, 355, 368, 389, 390, 391, 394, 396, 399, 401, 403, 408, 415, 416, 417, 418, 422, 423, 424, 425, 428, 429, 430, 756, 830], "allreduce_attr_id": 13, "reduction_fn": [13, 16], "reduce_attr_id": 13, "reduce_scatter_attr_id": 13, "signatur": [13, 455, 568, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 824, 825, 826, 827, 828, 831, 851, 853], "typedef": [13, 749, 768, 781, 786, 837], "in_buf": 13, "in_count": 13, "inout_buf": 13, "out_count": 13, "fn_context": 13, "struct": [13, 19, 20, 22, 25, 29, 48, 60, 61, 63, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 413, 427, 428, 429, 430, 437, 558, 565, 568, 678, 693, 707, 721, 744, 753, 763, 766, 768, 778, 844], "offset": [13, 29, 37, 58, 60, 84, 86, 87, 117, 151, 179, 183, 190, 191, 197, 198, 201, 218, 221, 224, 242, 250, 254, 259, 352, 353, 354, 355, 358, 365, 402, 432], "opattrtyp": 13, "create_operation_attr": 13, "manner": [14, 60, 476, 501, 528], "statu": [14, 63, 149, 151, 179, 259, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548, 847, 848], "signal": [14, 535, 745, 841], "bool": [14, 22, 37, 42, 60, 63, 68, 69, 76, 89, 100, 101, 106, 114, 119, 121, 122, 123, 124, 125, 126, 127, 132, 138, 141, 145, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 426, 483, 551, 552, 553, 566, 568, 581, 582, 583, 587, 589, 590, 591, 592, 597, 598, 599, 602, 604, 609, 610, 611, 615, 616, 618, 619, 623, 624, 625, 629, 630, 632, 633, 637, 638, 639, 643, 644, 646, 649, 651, 652, 654, 658, 660, 661, 662, 666, 667, 668, 672, 673, 675, 682, 683, 687, 688, 690, 696, 697, 701, 702, 704, 710, 711, 715, 716, 718, 724, 725, 729, 730, 732, 738, 739, 742, 746, 747, 748, 751, 755, 757, 759, 760, 762, 764, 767, 770, 772, 773, 778, 779, 780, 781, 787, 788, 789, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 810, 816, 817, 820, 824, 829, 830, 842, 843, 844, 845, 847, 849, 851, 852, 856, 857], "test": [14, 60, 341], "true": [14, 19, 20, 22, 25, 37, 41, 42, 49, 60, 63, 68, 69, 76, 89, 100, 101, 106, 114, 119, 121, 122, 123, 124, 125, 126, 127, 132, 138, 141, 145, 154, 159, 168, 176, 483, 551, 552, 553, 567, 568, 581, 582, 584, 587, 589, 590, 592, 593, 597, 598, 599, 602, 603, 605, 609, 610, 611, 615, 616, 617, 618, 620, 623, 624, 625, 629, 630, 631, 632, 634, 637, 638, 639, 643, 644, 645, 647, 649, 651, 652, 653, 655, 658, 660, 661, 663, 666, 667, 668, 672, 673, 674, 677, 682, 683, 687, 688, 689, 692, 696, 697, 701, 702, 703, 706, 710, 711, 715, 716, 717, 720, 724, 725, 729, 730, 731, 734, 738, 739, 742, 743, 746, 747, 748, 751, 755, 757, 760, 762, 764, 767, 770, 772, 773, 778, 779, 780, 781, 787, 789, 791, 793, 794, 795, 796, 797, 798, 800, 801, 802, 816, 817, 820, 829, 830, 842, 843, 844, 845, 847, 849, 851, 856, 857], "been": [14, 60, 63, 153, 179, 257, 271, 272, 289, 310, 311, 312, 313, 314, 315, 322, 455, 500, 555, 754, 763, 764, 772, 787, 789, 791, 824, 843, 844], "fals": [14, 37, 42, 60, 63, 68, 69, 76, 89, 100, 101, 106, 114, 119, 121, 122, 123, 124, 125, 126, 127, 132, 138, 141, 145, 149, 151, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 483, 553, 559, 565, 568, 581, 582, 587, 589, 590, 592, 597, 598, 599, 602, 609, 610, 615, 616, 617, 618, 623, 624, 630, 631, 632, 637, 638, 644, 645, 649, 651, 652, 658, 660, 661, 666, 667, 672, 673, 674, 682, 683, 687, 688, 689, 696, 697, 702, 703, 710, 711, 716, 717, 724, 725, 729, 730, 731, 738, 739, 742, 746, 747, 748, 751, 755, 757, 759, 760, 762, 763, 764, 767, 770, 772, 773, 778, 780, 781, 787, 788, 789, 791, 793, 794, 796, 797, 798, 799, 800, 801, 802, 829, 830, 842, 843, 844, 845, 849, 851, 856, 857], "cover": [15, 45, 149, 150, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 257, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430], "prod": [16, 126, 152], "min": [16, 54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 261, 263, 264, 267, 269, 270, 271, 272, 292, 293, 326, 327, 340, 365, 383, 444, 448, 837], "max": [16, 54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 198, 217, 218, 261, 263, 267, 268, 269, 271, 272, 275, 279, 283, 285, 287, 289, 298, 300, 302, 304, 305, 306, 310, 312, 316, 318, 320, 322, 324, 325, 326, 332, 334, 336, 338, 339, 340, 360, 365, 383, 405, 444, 448], "elementwis": [16, 53, 55, 56, 58, 150, 153, 155, 157, 159, 160, 161, 164, 167], "summat": [16, 159, 170, 173], "actual": [16, 41, 45, 56, 58, 60, 151, 152, 153, 157, 160, 161, 170, 257, 577, 581, 602, 616, 630, 644, 652, 673, 688, 702, 716, 730, 749, 794, 795, 804, 837, 838, 844, 852], "solv": [19, 20, 22, 25, 28, 50, 187, 188, 244, 246, 249, 250, 251, 260, 264, 265, 271, 272, 273, 276, 277, 279, 280, 281, 282, 285, 286, 289, 291, 295, 296, 307, 308, 312, 313, 314, 318, 319, 322, 324, 325, 329, 330, 430, 431], "problem": [19, 20, 22, 25, 28, 43, 50, 152, 168, 179, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 275, 276, 277, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 292, 293, 294, 295, 296, 298, 299, 300, 302, 304, 305, 306, 307, 308, 310, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 324, 326, 327, 328, 329, 330, 332, 333, 334, 336, 338, 339, 852, 864], "partit": [19, 20, 25, 27, 54, 55, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 179, 357, 550, 551, 552, 553, 559, 572, 817, 818], "minim": [19, 216, 254, 565, 570, 733, 762, 864], "some": [19, 22, 40, 43, 45, 48, 50, 51, 54, 56, 58, 60, 152, 153, 155, 158, 163, 164, 165, 168, 254, 256, 258, 259, 260, 264, 272, 276, 280, 295, 307, 313, 329, 364, 366, 414, 426, 428, 429, 430, 498, 559, 566, 576, 840, 843, 844, 860, 864], "criterion": 19, "character": 19, "repres": [19, 29, 30, 31, 37, 38, 39, 40, 42, 48, 51, 56, 59, 62, 63, 75, 81, 104, 105, 135, 136, 147, 149, 151, 153, 157, 160, 176, 179, 218, 221, 224, 254, 257, 258, 259, 261, 263, 264, 265, 267, 287, 320, 340, 371, 390, 402, 414, 428, 429, 430, 437, 445, 455, 535, 551, 552, 553, 559, 561, 562, 563, 565, 566, 579, 581, 601, 604, 614, 619, 628, 633, 642, 662, 671, 675, 686, 690, 700, 704, 714, 718, 728, 732, 741, 750, 756, 776, 783, 803, 805, 817, 818, 819, 829, 830, 842, 844, 845, 847, 848, 850, 855, 859, 862], "centroid": [19, 20], "train_input": [19, 22, 25], "train_result": [19, 22, 25, 49], "infer_input": [19, 22, 25], "infer_result": [19, 22, 25], "x": [19, 20, 22, 25, 46, 48, 53, 54, 55, 56, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 279, 282, 285, 286, 312, 318, 319, 324, 325, 340, 345, 347, 348, 351, 356, 359, 360, 365, 369, 370, 371, 373, 374, 376, 377, 378, 379, 381, 382, 383, 384, 386, 393, 397, 398, 399, 400, 404, 405, 407, 429, 430, 437, 455, 457, 458, 460, 461, 463, 467, 468, 472, 473, 481, 484, 485, 486, 487, 488, 492, 508, 509, 516, 520, 535, 538, 540, 542, 551, 552, 558, 561, 565, 567, 579, 766, 786, 803, 812, 813, 818, 837, 851, 853], "x_1": [19, 20, 22, 25, 46, 343, 365, 392], "ldot": [19, 20, 22, 25, 58, 155, 156, 158, 168, 254, 257, 258, 259, 340, 356, 360], "x_n": [19, 20, 22, 25, 155, 158, 168, 352, 353, 354, 387, 388, 389, 394, 399, 403, 408], "dimension": [19, 20, 22, 25, 29, 43, 46, 49, 56, 58, 104, 151, 152, 179, 254, 255, 257, 258, 259, 260, 340, 341, 390, 394, 403, 437, 445, 452, 551, 552], "find": [19, 20, 25, 43, 49, 121, 122, 123, 124, 125, 176, 215, 216, 591, 604, 619, 633, 662, 675, 690, 704, 718], "c_1": [19, 20, 77, 156], "c_k": [19, 20], "phi_": 19, "sum_": [19, 22, 58, 81, 104, 106, 135, 157, 161, 164, 180, 183, 190, 191, 192, 193, 194, 197, 201, 218, 221, 224, 231, 242, 250, 258, 356, 397, 398], "d": [19, 26, 37, 38, 44, 46, 53, 58, 73, 106, 121, 122, 123, 124, 125, 126, 127, 152, 157, 158, 161, 163, 165, 177, 254, 257, 258, 259, 261, 287, 289, 320, 322, 341, 355, 365, 379, 396, 401, 412, 419, 420, 421, 428, 429, 430, 472, 485, 486, 487, 488, 492, 753, 766, 770, 778, 804, 810], "x_i": [19, 25, 46, 180, 193, 227, 280, 281, 313, 392, 398], "squar": [19, 28, 63, 122, 137, 140, 148, 159, 260, 279, 280, 291, 364, 365, 374, 426, 430, 502, 505, 521, 522, 536, 537, 547, 561, 766, 837], "euclidean": [19, 25, 185, 219], "distanc": [19, 25, 107, 108, 176, 179, 218, 221, 223, 224, 254, 255, 259, 340], "closest": [19, 25], "min_": 19, "leq": [19, 22, 25, 58, 118, 158, 166, 171, 254, 258, 259, 345, 347, 348, 351, 356, 359, 360, 365, 369, 370, 371, 373, 376, 377, 378, 379, 381, 382, 383, 384, 386, 392, 393, 397, 398, 400, 404, 405, 407, 437, 440], "c_j": [19, 391], "quad": [19, 22, 25, 340], "express": [19, 37, 58, 176, 179, 254, 255, 348, 561, 562, 591, 604, 619, 633, 662, 675, 690, 704, 718, 787, 789, 791, 803, 804, 810, 851, 854, 862, 864], "cdot": [19, 22, 53, 56, 68, 71, 81, 84, 86, 87, 92, 95, 100, 106, 107, 117, 121, 122, 123, 124, 125, 126, 127, 153, 154, 157, 158, 159, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 254, 255, 258, 259, 263, 264, 275, 289, 307, 313, 322, 355, 357, 368, 396, 402, 428, 429, 430, 458, 508], "l_2": [19, 46], "norm": [19, 46, 121, 122, 167, 185, 219], "case": [19, 22, 34, 35, 36, 37, 46, 48, 49, 54, 56, 60, 62, 63, 65, 66, 68, 88, 95, 102, 114, 115, 118, 120, 141, 149, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 345, 347, 351, 352, 353, 354, 355, 356, 359, 360, 391, 394, 400, 403, 408, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 455, 460, 481, 483, 484, 489, 499, 507, 515, 516, 520, 533, 538, 544, 546, 554, 559, 561, 584, 586, 590, 593, 596, 601, 602, 603, 605, 615, 616, 617, 620, 630, 631, 634, 644, 645, 647, 652, 653, 655, 657, 661, 663, 672, 673, 674, 675, 676, 677, 687, 688, 689, 690, 691, 692, 702, 703, 704, 705, 706, 716, 717, 718, 719, 720, 729, 730, 731, 734, 736, 743, 760, 768, 776, 808, 829, 830, 834, 837, 844, 858, 864], "arbitrari": [19, 22, 37, 51, 75, 76, 88, 89, 94, 95, 100, 101, 102, 104, 105, 116, 133, 134, 135, 136, 147, 155, 156, 158, 162, 166, 167, 168, 169, 171, 172, 173, 176, 223, 366, 412, 520, 524, 748], "spec": [19, 22], "lloyd82": [19, 28], "consist": [19, 23, 45, 53, 58, 60, 149, 152, 170, 254, 257, 259, 261, 355, 368, 396, 428, 429, 430, 445, 837, 863], "iter": [19, 25, 28, 43, 50, 63, 149, 154, 159, 160, 170, 175, 412, 553, 558, 559, 567, 569, 583, 584, 585, 591, 593, 594, 598, 604, 605, 606, 609, 615, 617, 619, 620, 621, 623, 629, 631, 633, 634, 635, 637, 643, 645, 647, 648, 654, 655, 656, 662, 663, 664, 666, 672, 674, 675, 676, 677, 678, 682, 687, 689, 690, 691, 692, 693, 696, 701, 703, 704, 705, 706, 707, 710, 715, 717, 718, 719, 720, 721, 724, 729, 731, 732, 733, 734, 735, 753, 804, 805, 808, 819, 852, 853, 859], "updat": [19, 25, 47, 53, 54, 58, 149, 157, 161, 170, 176, 179, 181, 182, 186, 187, 188, 189, 195, 199, 200, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 225, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 245, 248, 415, 416, 417, 418, 428, 429, 430, 551, 552, 553, 565, 566, 746, 751, 755, 760, 766, 767, 770, 781, 817, 844], "assign": [19, 30, 37, 42, 43, 48, 63, 149, 156, 159, 176, 368, 387, 388, 389, 390, 391, 394, 395, 396, 399, 401, 403, 408, 437, 455, 566, 569, 572, 583, 589, 646, 651, 654, 660, 732, 748, 770, 773, 778, 781, 804, 810, 814, 846, 849, 852, 862], "step": [19, 22, 25, 40, 49, 130, 149, 160, 259, 368, 412, 559, 749], "g": [19, 31, 40, 42, 43, 46, 56, 58, 81, 100, 101, 149, 152, 154, 157, 161, 162, 171, 177, 179, 257, 258, 260, 264, 265, 272, 273, 276, 277, 280, 281, 295, 296, 307, 308, 313, 314, 329, 330, 412, 415, 416, 428, 429, 430, 553, 560, 561, 746, 747, 748, 749, 751, 753, 755, 756, 758, 759, 760, 762, 764, 766, 767, 768, 770, 772, 773, 778, 779, 781, 843], "begin": [19, 22, 46, 65, 66, 88, 95, 102, 114, 118, 120, 158, 166, 171, 176, 179, 225, 226, 227, 228, 235, 261, 264, 265, 272, 273, 276, 277, 280, 281, 295, 296, 307, 308, 313, 314, 329, 330, 340, 345, 347, 351, 356, 359, 360, 369, 370, 371, 374, 376, 377, 381, 383, 384, 386, 390, 391, 393, 397, 398, 400, 402, 404, 405, 407, 414, 428, 429, 430, 499, 515, 544, 553, 554, 558, 565, 566, 567, 584, 585, 591, 593, 594, 598, 604, 605, 606, 615, 619, 620, 621, 629, 633, 634, 635, 643, 647, 648, 655, 656, 662, 663, 664, 672, 675, 677, 678, 687, 690, 692, 693, 701, 704, 706, 707, 715, 718, 720, 721, 729, 732, 733, 734, 735, 751, 753, 805, 808, 819, 852, 855, 859], "nearest": [19, 23, 44, 63, 98, 99, 129, 146, 159, 525, 526, 527, 547, 817], "y_i": [19, 25, 46, 193, 227, 474, 488, 495, 499, 515, 544], "label": [19, 22, 25, 43, 71, 81, 128, 252, 253, 257], "mathrm": [19, 22, 25, 46, 53, 158], "arg": [19, 25, 40, 51, 152, 159, 176, 547, 554, 560, 569, 570, 571, 572, 583, 589, 591, 598, 604, 615, 619, 629, 633, 643, 646, 651, 654, 660, 662, 672, 675, 687, 690, 701, 704, 715, 718, 729, 732, 733, 781, 852, 854], "exactli": [19, 121, 122, 123, 124, 125, 126, 127, 179, 257, 271, 272, 289, 322, 383, 554, 842], "disjoint": 19, "s_j": 19, "big": [19, 25, 34, 35, 43, 44, 104, 520], "recalcul": 19, "averag": [19, 68, 159, 165, 351, 384, 567, 680, 694, 708, 722], "frac": [19, 22, 25, 56, 68, 70, 71, 81, 96, 100, 104, 112, 124, 131, 135, 154, 157, 158, 162, 163, 165, 167, 169, 171, 172, 254, 258, 347, 348, 351, 356, 359, 360, 365, 370, 373, 374, 376, 377, 378, 379, 382, 383, 384, 386, 392, 397, 398, 400, 404, 405, 407, 458, 472, 485, 486, 487, 488, 492, 508, 509, 547], "until": [19, 60, 179, 257, 409, 415, 416, 417, 418, 422, 423, 424, 425, 428, 429, 430, 452, 557, 571, 589, 754, 757, 760, 817, 838, 843, 846, 847], "stop": [19, 561, 564, 576, 760, 770, 806, 825, 845], "varepsilon": [19, 71, 154, 162], "satisfi": [19, 37, 39, 48, 51, 176, 177, 221, 254, 258, 269, 569, 570, 571, 572, 573, 756, 793, 795, 798, 801, 802, 804, 805, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 847], "exce": [19, 553, 844], "maxim": [19, 29, 64, 215, 844], "x_m": [19, 22, 25], "produc": [19, 22, 25, 38, 45, 47, 50, 55, 60, 102, 149, 152, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 255, 258, 343, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 358, 359, 360, 364, 366, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 392, 393, 397, 398, 400, 401, 404, 406, 407, 412, 476, 483, 501, 528, 557, 838], "stage": [19, 22, 25, 31, 40, 43, 44, 45, 48, 49, 50, 52, 141, 149, 157, 164, 260, 428, 429, 430, 749], "predict": [19, 23, 25, 28, 43, 45, 46], "y_j": [19, 25], "accord": [19, 22, 25, 43, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 152, 170, 176, 257, 343, 365, 394, 399, 412, 456, 460, 462, 465, 479, 484, 507, 516, 528, 529, 530, 538, 539, 545, 547, 755, 757, 817], "rule": [19, 23, 67, 85, 106, 109, 110, 113, 130, 140, 141, 143, 148, 756, 840, 851, 853, 860], "x_j": [19, 25], "l": [19, 25, 28, 152, 163, 170, 179, 254, 271, 285, 289, 306, 312, 315, 318, 322, 341, 344, 352, 354, 366, 383, 387, 389, 609, 623, 637, 666, 682, 696, 710, 724], "c_l": 19, "kmean": [19, 31], "run_train": [19, 22, 25], "tabl": [19, 20, 22, 25, 29, 31, 34, 35, 36, 38, 39, 43, 44, 49, 51, 52, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 185, 186, 187, 188, 254, 257, 259, 291, 341, 342, 364, 365, 461, 476, 483, 501, 507, 523, 528, 535, 546, 547, 548, 576, 754, 763, 786, 803, 829, 830], "initial_centroid": 19, "kmeans_desc": [19, 20], "set_cluster_count": [19, 20], "10": [19, 20, 25, 54, 177, 344, 355, 366, 368, 396, 490, 509, 547, 551, 552, 579, 756, 766, 768], "set_max_iteration_count": 19, "50": 19, "set_accuracy_threshold": 19, "1e": [19, 100, 101], "4": [19, 28, 29, 34, 35, 37, 70, 71, 72, 101, 112, 130, 158, 159, 227, 228, 256, 352, 353, 354, 355, 368, 389, 408, 414, 457, 458, 461, 463, 466, 467, 508, 509, 577, 781, 865], "print_tabl": [19, 20, 22, 25], "get_label": [19, 25], "get_model": [19, 22, 25, 49], "get_centroid": [19, 20], "print_valu": 19, "get_objective_function_valu": 19, "run_infer": [19, 22, 25], "new_data": [19, 22, 25], "get_cluster_count": [19, 20], "dal": [19, 20, 22, 25, 29, 30, 31, 34, 35, 37, 39, 40, 41, 42, 48, 49, 51, 52], "via": [19, 20, 22, 25, 29, 30, 34, 35, 37, 38, 39, 40, 41, 42, 51, 58, 60, 87, 141, 149, 151, 152, 153, 157, 159, 160, 164, 165, 176, 179, 254, 257, 259, 566, 583, 589, 591, 604, 619, 633, 646, 654, 662, 675, 690, 704, 718, 732, 784, 787, 789, 791, 840, 862], "inclus": [19, 20, 22, 25, 29, 34, 35, 37, 38, 41, 42, 394, 403, 553], "algo": [19, 20, 22, 25, 31], "header": [19, 20, 22, 25, 29, 32, 34, 35, 37, 38, 41, 42, 44, 49, 176, 177, 551, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 579, 582, 583, 591, 633, 654, 662, 675, 690, 704, 718, 732, 744, 746, 747, 748, 749, 750, 751, 752, 755, 756, 757, 759, 760, 761, 762, 763, 764, 765, 767, 769, 770, 771, 772, 773, 775, 776, 778, 779, 780, 781, 783, 786, 787, 788, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 840, 841, 842, 843, 844, 845, 846, 847, 851, 852, 859], "file": [19, 20, 22, 25, 29, 32, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 49, 576, 776], "typenam": [19, 20, 22, 25, 34, 35, 37, 38, 39, 41, 48, 51, 52, 60, 63, 159, 176, 177, 252, 253, 262, 265, 266, 268, 270, 273, 274, 277, 278, 281, 282, 284, 286, 288, 290, 293, 296, 297, 299, 301, 303, 305, 308, 309, 311, 314, 315, 317, 319, 321, 323, 325, 327, 330, 331, 333, 335, 337, 339, 345, 346, 347, 348, 349, 351, 356, 357, 358, 359, 360, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 392, 393, 397, 398, 400, 402, 404, 405, 406, 407, 415, 416, 417, 418, 422, 423, 424, 425, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 551, 552, 553, 554, 556, 557, 558, 559, 560, 562, 565, 566, 567, 582, 583, 584, 585, 587, 588, 589, 591, 592, 593, 594, 596, 597, 598, 599, 600, 604, 605, 606, 609, 610, 611, 612, 615, 617, 618, 619, 620, 621, 623, 624, 625, 626, 629, 631, 632, 633, 634, 635, 637, 638, 639, 640, 643, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 669, 672, 674, 675, 677, 678, 682, 683, 684, 687, 689, 690, 692, 693, 696, 697, 698, 701, 703, 704, 706, 707, 710, 711, 712, 715, 717, 718, 720, 721, 724, 725, 726, 729, 731, 732, 733, 734, 735, 738, 739, 740, 746, 747, 748, 749, 751, 752, 755, 759, 760, 761, 762, 763, 764, 765, 767, 769, 770, 772, 773, 774, 775, 777, 778, 779, 780, 781, 787, 789, 791, 841, 844, 846, 847, 851, 852, 853, 854, 859], "by_default": [19, 20, 22, 25, 48, 51, 345, 347, 348, 351, 356, 359, 360, 369, 370, 371, 373, 374, 376, 377, 378, 379, 381, 382, 383, 384, 386, 392, 393, 397, 398, 400, 404, 405, 407], "cluster_count": [19, 20], "get_max_iteration_count": 19, "get_accuracy_threshold": 19, "intermedi": [19, 20, 22, 25, 43, 49, 53, 55, 56, 153, 158, 163, 168, 256, 261, 263, 264, 267, 269, 271, 272, 275, 276, 279, 280, 283, 285, 287, 289, 292, 294, 295, 298, 300, 302, 304, 306, 307, 310, 312, 313, 316, 318, 320, 322, 324, 326, 328, 329, 332, 334, 336, 338, 748, 772, 773], "constructor": [19, 20, 22, 25, 29, 34, 35, 36, 37, 38, 41, 42, 48, 51, 58, 60, 63, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 179, 258, 345, 347, 348, 351, 352, 353, 354, 355, 356, 359, 360, 368, 369, 370, 371, 373, 374, 376, 377, 378, 379, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 407, 408, 427, 437, 455, 551, 552, 553, 556, 557, 565, 573, 574, 585, 594, 606, 615, 617, 621, 629, 631, 635, 643, 645, 648, 656, 664, 672, 674, 678, 687, 689, 693, 701, 703, 707, 715, 717, 721, 729, 731, 732, 735, 744, 762, 768, 771, 776, 780, 804, 807, 810, 811, 814, 817, 818, 820, 821, 822, 823, 825, 826, 827, 828, 831, 840, 842, 844, 852, 856], "properti": [19, 20, 22, 25, 37, 39, 40, 41, 42, 43, 44, 48, 51, 63, 149, 152, 176, 177, 260, 352, 366, 387, 390, 394, 746, 747, 748, 751, 755, 759, 760, 762, 764, 767, 770, 772, 773, 779, 781, 829, 842, 865], "getter": [19, 20, 22, 25, 38, 39, 43, 48, 51], "setter": [19, 20, 22, 25, 39, 43, 48, 51, 152], "invari": [19, 20, 22, 25, 30], "accuracy_threshold": 19, "threshold": [19, 481, 489, 490, 491, 493, 502, 506, 507, 522, 523, 533, 543, 547, 551, 561, 746, 751, 755, 764, 767, 786], "max_iteration_count": 19, "maximum": [19, 56, 63, 123, 148, 151, 155, 165, 185, 215, 445, 507, 547, 589, 602, 616, 630, 644, 673, 676, 680, 688, 691, 694, 702, 705, 708, 716, 719, 722, 730, 742, 840, 844], "100": [19, 43, 341, 365, 577, 735, 778, 781], "parameter": [19, 20, 22, 25], "get_data": [19, 20, 22, 25, 37, 40, 41, 42], "set_data": [19, 20, 22, 25], "get_initial_centroid": 19, "set_initial_centroid": 19, "get_iteration_count": 19, "sampl": [19, 39, 43, 48, 51, 154, 165, 352, 383, 387, 865], "phi_x": 19, "desc": [19, 20, 22, 25, 48, 51, 52, 54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 252, 253, 254, 255, 256, 258], "precondit": [19, 20, 22, 25, 30, 34, 35, 37, 42, 51, 179, 428, 429, 430], "has_data": [19, 20, 22, 25, 40, 42], "row_count": [19, 20, 22, 25, 34, 35, 41, 42, 43, 49], "column_count": [19, 20, 22, 25, 34, 35, 41, 42, 49], "postcondit": [19, 20, 22, 25, 30, 37, 51, 179], "iteration_count": 19, "set_model": [19, 22, 25], "choos": [20, 22, 37, 58, 152, 156, 164, 173, 179, 254, 768], "compute_input": 20, "compute_result": 20, "train": [20, 23, 27, 43, 45, 46, 48, 49, 50, 54, 55, 58, 70, 102, 159, 163], "first": [20, 22, 28, 29, 34, 38, 40, 43, 48, 58, 60, 62, 81, 130, 152, 157, 158, 161, 170, 176, 179, 193, 215, 216, 228, 254, 257, 260, 261, 269, 270, 272, 280, 287, 313, 320, 340, 393, 402, 414, 478, 494, 519, 542, 547, 558, 559, 561, 563, 564, 583, 584, 586, 591, 593, 596, 598, 604, 605, 608, 609, 615, 617, 618, 619, 620, 622, 623, 629, 631, 632, 633, 634, 636, 637, 643, 645, 646, 647, 654, 655, 657, 662, 663, 665, 666, 672, 674, 675, 676, 677, 681, 687, 689, 690, 691, 692, 695, 696, 701, 703, 704, 705, 706, 709, 710, 715, 717, 718, 719, 720, 723, 729, 731, 732, 733, 734, 737, 743, 749, 753, 756, 763, 768, 773, 781, 786, 817, 842, 844, 845, 852, 854, 859], "run_comput": 20, "kmeans_init": 20, "init": [20, 176, 565, 583, 584, 591, 593, 598, 604, 605, 615, 619, 620, 629, 633, 634, 643, 646, 647, 654, 655, 662, 663, 672, 675, 677, 687, 690, 692, 701, 704, 706, 715, 718, 720, 729, 732, 733, 734], "obtain": [20, 34, 35, 36, 40, 49, 52, 160, 168, 179, 256, 257, 261, 263, 264, 267, 269, 271, 272, 275, 276, 279, 280, 283, 285, 287, 289, 292, 294, 295, 298, 300, 302, 304, 306, 307, 310, 312, 313, 316, 318, 320, 322, 324, 326, 328, 329, 332, 334, 336, 338, 345, 347, 348, 349, 350, 351, 355, 356, 359, 360, 361, 362, 364, 365, 367, 368, 369, 370, 371, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 407, 408, 410, 557, 577, 579, 584, 593, 605, 620, 634, 647, 655, 663, 677, 692, 706, 720, 734, 746, 751, 755, 760, 763, 764, 767, 786, 788, 819, 844], "princip": [21, 23, 44, 49], "compon": [21, 23, 44, 45, 49, 175, 227, 228, 354, 389, 440, 618, 632, 745, 776, 784, 864], "analysi": [21, 23, 44, 45, 49, 149, 341, 576], "pca": [21, 23, 44, 49, 52], "exploratori": 22, "transform": [22, 38, 39, 40, 43, 44, 45, 51, 58, 60, 98, 99, 151, 152, 160, 179, 217, 218, 227, 228, 252, 253, 254, 255, 257, 259, 261, 287, 320, 345, 347, 348, 351, 356, 359, 360, 362, 365, 369, 370, 371, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 392, 393, 397, 398, 400, 404, 405, 407, 410, 412, 428, 429, 430, 507, 547, 549], "possibli": [22, 176, 188, 254, 255, 560, 572, 763, 786, 799, 800, 805, 843], "correl": [22, 399], "uncorrel": 22, "varianc": [22, 40, 70, 71, 72, 100, 101, 154, 159, 379], "mostli": [22, 58, 799, 800], "spread": 22, "r": [22, 28, 46, 53, 77, 84, 86, 87, 100, 101, 117, 121, 122, 123, 124, 125, 126, 127, 159, 167, 170, 179, 226, 263, 267, 304, 305, 338, 339, 345, 347, 348, 351, 356, 359, 360, 368, 369, 370, 371, 373, 376, 377, 378, 379, 380, 381, 382, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 407, 408, 456, 461, 475, 551, 552, 553, 554, 565, 566, 571, 780, 788, 814, 816, 817], "eigenvector": [22, 49, 283, 284, 285, 286, 291, 316, 317, 318, 319], "lang87": [22, 28], "eigenvalu": [22, 260, 261, 262, 269, 270, 283, 284, 285, 286, 287, 288, 292, 293, 298, 299, 304, 305, 316, 317, 318, 319, 320, 321, 326, 327, 332, 333, 338, 339], "decomposit": [22, 23, 28, 44, 263, 264, 267, 269, 287, 291, 320, 343, 365], "dataset": [22, 25, 38, 43, 46, 260, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454], "format": [22, 36, 38, 40, 42, 43, 45, 56, 57, 59, 60, 78, 79, 80, 81, 82, 83, 98, 99, 114, 115, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 259, 260, 340, 390, 391, 413, 415, 416, 422, 423], "column": [22, 29, 36, 40, 41, 42, 44, 46, 58, 106, 179, 191, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 220, 221, 222, 223, 224, 229, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 279, 280, 283, 285, 289, 291, 292, 293, 294, 295, 296, 297, 300, 301, 302, 303, 304, 312, 313, 316, 318, 322, 324, 326, 327, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339, 340, 414, 415, 416, 417, 422, 423, 424, 426, 535, 551, 552, 754], "s_i": [22, 412], "x_": [22, 56, 340, 354, 370, 378, 389, 390, 391, 394, 399, 403, 408], "cross": [22, 45, 128], "product": [22, 43, 53, 58, 60, 106, 141, 150, 159, 160, 164, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 225, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 242, 243, 245, 247, 248, 251, 261, 263, 264, 267, 287, 289, 294, 295, 296, 297, 300, 301, 302, 303, 304, 320, 322, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339, 341, 355, 396, 428, 429, 431, 551, 552, 576, 864, 865], "tx": [22, 279, 282, 324, 325], "sigma": [22, 58, 70, 71, 72, 100, 101, 154, 162, 170, 258, 259, 269, 348, 351, 378, 384, 386], "lambda_i": [22, 283, 316, 398], "upsilon_i": 22, "ping14": [22, 28], "final": [22, 25, 45, 47, 54, 55, 56, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 179, 258, 409, 566, 766, 843, 851], "sort": [22, 58, 269, 414, 426, 567, 604, 619, 633, 646, 662, 772, 783, 803], "pair": [22, 25, 51, 61, 149, 159, 176, 258, 343, 365, 496, 497, 513, 514, 547, 551, 552, 559, 591, 594, 596, 604, 606, 609, 615, 619, 621, 623, 629, 633, 637, 643, 662, 666, 672, 675, 678, 682, 687, 690, 693, 696, 701, 704, 710, 715, 718, 724, 729], "descend": [22, 269], "form": [22, 37, 53, 58, 149, 172, 179, 183, 196, 197, 198, 201, 212, 213, 214, 218, 221, 224, 232, 233, 234, 242, 245, 246, 250, 261, 263, 264, 267, 269, 279, 280, 281, 282, 283, 285, 287, 289, 291, 292, 294, 295, 298, 300, 302, 304, 306, 307, 316, 318, 320, 322, 325, 326, 328, 329, 332, 334, 336, 338, 551, 552, 557, 558, 559, 579, 591, 604, 619, 633, 662, 675, 690, 704, 718, 751, 765, 775, 786, 808, 830, 842], "upsilon_": 22, "singular": [22, 28, 260, 261, 262, 269, 270, 271, 272, 283, 284, 285, 286, 287, 288, 289, 292, 293, 298, 299, 304, 305, 316, 317, 318, 319, 320, 321, 322, 326, 327, 332, 333, 338, 339, 476, 483, 501, 528], "its": [22, 31, 34, 35, 37, 40, 42, 43, 46, 48, 49, 50, 51, 58, 60, 61, 62, 115, 116, 149, 151, 152, 153, 155, 161, 163, 164, 175, 179, 199, 206, 210, 211, 236, 240, 241, 242, 252, 253, 254, 257, 263, 264, 267, 342, 364, 414, 419, 420, 421, 426, 428, 429, 430, 437, 547, 550, 551, 552, 553, 558, 559, 560, 561, 562, 564, 565, 570, 571, 732, 743, 745, 746, 747, 748, 751, 753, 755, 757, 759, 760, 762, 763, 764, 767, 770, 772, 773, 778, 779, 781, 784, 786, 790, 817, 840, 843, 844, 847, 851, 852, 865], "u_i": [22, 170, 272, 280, 307, 313, 314, 412], "v_i": [22, 394, 403], "demmel90": [22, 28], "v_": 22, "solver": [22, 45, 50, 179], "due": [22, 60, 152, 254, 257, 352, 387, 755, 768, 778], "ambigu": [22, 28], "determinist": [22, 260, 366, 395, 557, 559, 567, 572, 768], "One": [22, 37, 43, 54, 157, 160, 257, 554], "propos": [22, 178], "bro07": [22, 28], "modif": [22, 390], "hat": [22, 154], "_i": [22, 46, 77, 272, 273, 276, 280], "t_i": 22, "sgn": [22, 46], "max_": [22, 25], "ij": 22, "t_": 22, "signum": 22, "end": [22, 29, 44, 45, 46, 50, 63, 65, 66, 88, 95, 102, 114, 118, 120, 148, 149, 151, 158, 166, 171, 176, 183, 190, 191, 197, 201, 218, 221, 224, 225, 226, 227, 228, 235, 242, 250, 261, 340, 345, 347, 351, 356, 359, 360, 369, 370, 371, 374, 376, 377, 381, 383, 384, 386, 390, 391, 393, 397, 398, 400, 404, 405, 407, 414, 428, 429, 430, 499, 515, 544, 553, 554, 558, 561, 564, 565, 566, 567, 584, 585, 591, 593, 594, 598, 604, 605, 606, 609, 615, 619, 620, 621, 623, 629, 633, 634, 635, 637, 643, 647, 648, 655, 656, 662, 663, 664, 666, 672, 675, 677, 678, 682, 687, 690, 692, 693, 696, 701, 704, 706, 707, 710, 715, 718, 720, 721, 724, 729, 732, 733, 734, 735, 743, 805, 806, 819, 840, 852, 855, 859], "linear": [22, 28, 43, 50, 56, 58, 60, 63, 84, 86, 87, 98, 99, 117, 151, 159, 169, 178, 179, 184, 186, 244, 246, 250, 251, 263, 266, 267, 268, 271, 272, 274, 275, 278, 279, 280, 282, 289, 290, 294, 297, 300, 301, 302, 303, 306, 309, 310, 311, 312, 313, 315, 322, 323, 324, 325, 328, 331, 334, 335, 336, 337, 340, 341, 352, 353, 387, 388, 430, 431, 455, 507, 547, 549, 557], "pca_desc": [22, 49], "set_component_count": [22, 49], "5": [22, 25, 34, 35, 54, 92, 98, 99, 100, 101, 130, 158, 169, 177, 227, 228, 256, 341, 354, 356, 365, 366, 368, 371, 374, 381, 389, 393, 397, 409, 414, 473, 482, 526, 542, 553, 768], "set_determinist": [22, 49], "get_mean": 22, "get_vari": 22, "get_eigenvalu": 22, "get_eigenvector": [22, 49], "get_component_count": 22, "get_transformed_data": [22, 49], "component_count": 22, "get_determinist": 22, "cov": 22, "dim_reduct": 22, "whether": [22, 37, 40, 42, 43, 48, 52, 58, 60, 63, 68, 69, 100, 106, 114, 149, 152, 154, 155, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 179, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 229, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 255, 259, 289, 290, 306, 307, 308, 309, 313, 314, 322, 323, 324, 325, 414, 417, 424, 426, 455, 576, 577, 579, 830], "project": [22, 28, 58, 159], "transformed_data": 22, "mine": [23, 28, 45], "regress": [23, 43, 45, 48, 50], "neighbor": [23, 44, 159], "knn": [23, 25, 31, 44], "nn": [23, 24, 44, 52, 340], "major": [25, 40, 42, 43, 45, 58, 149, 178, 179, 191, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 210, 211, 217, 218, 220, 221, 222, 223, 224, 236, 240, 241, 242, 247, 249, 250, 291, 340, 417, 424, 577, 579], "vote": 25, "observ": [25, 40, 43, 46, 179, 252, 253, 255, 437, 440, 604, 619, 633, 662, 675, 690, 704, 718, 756, 845], "let": [25, 58, 63, 81, 82, 152, 157, 161, 169, 254, 258, 553, 566, 732, 768], "y": [25, 46, 48, 62, 181, 182, 183, 189, 190, 192, 193, 194, 195, 200, 201, 202, 203, 204, 205, 207, 209, 212, 214, 225, 226, 227, 228, 229, 231, 232, 234, 235, 237, 239, 348, 370, 374, 377, 378, 429, 430, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 565, 566, 567, 579, 803, 813, 837], "y_1": 25, "y_n": [25, 354, 389, 408], "allow": [25, 39, 40, 45, 48, 51, 54, 56, 60, 63, 67, 85, 109, 110, 113, 130, 143, 149, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 179, 252, 253, 256, 257, 366, 394, 403, 549, 554, 581, 592, 680, 694, 708, 722, 746, 749, 753, 755, 756, 758, 764, 766, 767, 770, 771, 772, 781, 786, 799, 800, 818, 821, 829, 830, 840, 843, 864], "subseteq": 25, "respect": [25, 27, 30, 53, 55, 58, 60, 62, 81, 99, 102, 142, 152, 157, 158, 159, 161, 167, 169, 170, 176, 179, 218, 221, 224, 227, 228, 254, 255, 258, 259, 340, 355, 359, 360, 396, 404, 405, 472, 479, 485, 486, 488, 498, 525, 530, 531, 535, 539, 545, 547, 551, 552, 563, 583, 591, 604, 619, 633, 646, 654, 662, 675, 690, 704, 718, 732, 749, 763, 766, 787, 789, 791, 844, 862], "estim": [25, 260, 433, 434, 435, 436, 438, 439, 441, 442, 443, 444, 446, 447, 448, 450, 451, 452, 453, 454], "probabl": [25, 345, 347, 348, 351, 356, 359, 360, 365, 369, 370, 371, 373, 374, 376, 377, 378, 379, 381, 382, 383, 384, 386, 392, 393, 397, 398, 400, 404, 405, 407, 412], "fraction": [25, 157, 499, 507, 515, 547], "whose": [25, 29, 48, 176, 244, 246, 251, 252, 253, 255, 258, 269, 279, 280, 283, 294, 295, 296, 297, 300, 301, 302, 303, 312, 313, 316, 324, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339, 768, 780, 804], "p_": [25, 170, 261, 383], "jl": 25, "x_r": 25, "y_r": 25, "highest": [25, 176, 651, 768, 772], "equat": [25, 50, 170, 186, 187, 188, 244, 246, 249, 250, 251, 260, 263, 266, 267, 268, 271, 272, 274, 275, 278, 279, 280, 281, 282, 289, 290, 294, 297, 300, 301, 302, 303, 306, 309, 310, 311, 312, 313, 315, 322, 323, 324, 325, 328, 331, 334, 335, 336, 337, 430], "travers": [25, 601, 604, 609, 615, 619, 623, 629, 633, 637, 643, 662, 666, 672, 675, 676, 682, 687, 690, 691, 696, 701, 704, 705, 710, 715, 718, 719, 724, 729, 733, 736, 819, 859], "leaf": [25, 27], "tild": [25, 53, 170], "known": [25, 53, 60, 149, 157, 164, 175, 176, 394, 415, 416, 422, 423, 566, 751, 763, 764], "search": [25, 176], "limit": [25, 51, 55, 56, 58, 59, 63, 168, 175, 258, 362, 481, 489, 490, 491, 493, 502, 507, 520, 522, 523, 524, 533, 570, 745, 746, 755, 764, 767, 786, 840, 844, 852, 865], "explor": 25, "part": [25, 27, 33, 40, 43, 56, 60, 62, 160, 179, 180, 188, 199, 208, 209, 211, 212, 213, 214, 233, 234, 238, 239, 252, 253, 254, 255, 258, 269, 270, 283, 284, 285, 286, 287, 288, 289, 290, 292, 294, 295, 306, 307, 308, 309, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 326, 328, 329, 340, 355, 396, 415, 416, 427, 428, 429, 430, 460, 481, 484, 489, 499, 512, 515, 516, 520, 533, 535, 538, 547, 549, 554, 573, 578, 817, 819, 829, 837], "less": [25, 39, 51, 61, 106, 153, 159, 164, 169, 176, 261, 263, 264, 267, 269, 271, 272, 275, 276, 279, 280, 283, 285, 287, 289, 292, 294, 295, 298, 300, 302, 304, 306, 307, 310, 312, 313, 316, 318, 320, 322, 324, 326, 328, 329, 332, 334, 336, 338, 479, 498, 507, 530, 531, 539, 570, 589, 595, 604, 606, 609, 611, 619, 621, 623, 625, 633, 635, 637, 639, 646, 648, 662, 664, 666, 668, 732, 739, 764, 772, 788, 852], "than": [25, 29, 30, 37, 61, 75, 76, 106, 141, 149, 153, 158, 159, 168, 169, 176, 179, 215, 216, 218, 221, 224, 257, 261, 263, 264, 267, 269, 271, 272, 275, 276, 279, 283, 285, 287, 289, 292, 294, 298, 300, 302, 304, 306, 310, 312, 316, 318, 320, 322, 324, 326, 328, 332, 334, 336, 338, 394, 403, 415, 416, 422, 423, 424, 425, 428, 429, 430, 498, 570, 572, 579, 589, 595, 609, 611, 623, 625, 637, 639, 666, 668, 732, 739, 745, 764, 768, 786, 787, 788, 799, 800, 817, 837, 843, 844, 852], "most": [25, 45, 48, 54, 56, 58, 60, 61, 106, 149, 151, 155, 156, 160, 163, 164, 167, 168, 173, 260, 292, 326, 365, 394, 403, 414, 455, 575, 746, 755, 767, 768, 783, 784, 857, 864], "distant": 25, "onc": [25, 40, 149, 151, 152, 153, 164, 258, 260, 428, 429, 430, 554, 555, 732, 753, 760, 764, 781, 838, 842], "equiv": [25, 258], "class_count": 25, "neighbor_count": 25, "knn_desc": 25, "get_class_count": 25, "set_class_count": 25, "get_neighbor_count": 25, "set_neighbor_count": 25, "bruteforc": 25, "kd_tree": 25, "set_label": 25, "classifi": 25, "tree": [26, 44, 842], "binari": [27, 43, 56, 58, 149, 150, 157, 158, 159, 160, 161, 164, 167, 176, 399, 470, 565, 583, 591, 604, 619, 633, 646, 654, 662, 675, 690, 704, 718, 732, 787, 789, 791, 851, 853, 862], "bentley80": [27, 28], "induc": 27, "hyperplan": 27, "split": [27, 60, 260, 357, 366, 402, 551, 552, 553, 557, 559, 565, 566, 569, 570, 571, 572, 754, 811, 814, 817, 818, 836], "axi": [27, 54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 551, 552], "cut": [27, 803], "subset": [27, 50, 56, 148, 151, 174, 175, 177], "bucket": [27, 593, 595, 675, 677, 680, 690, 692, 694, 704, 706, 708, 718, 720, 722], "belong": [27, 149, 159, 168, 179, 254, 255, 258, 264, 265, 272, 273, 276, 277, 280, 281, 307, 308, 313, 314, 352, 353, 364, 387, 388, 479, 480, 482, 530, 531, 532, 534, 539, 540, 542, 747, 748, 749, 759, 762, 764, 770, 772, 773, 778, 781, 846], "region": [27, 60, 343, 365, 426, 829, 841, 846], "path": [27, 479, 480, 482, 530, 531, 532, 534, 539, 540, 542, 745, 768, 837], "orthogon": [27, 261, 263, 264, 267, 269, 287, 291, 292, 294, 295, 298, 300, 302, 304, 316, 320, 328, 329], "about": [28, 37, 40, 42, 43, 45, 51, 52, 60, 164, 260, 341, 437, 455, 470, 783, 786, 788, 810, 861], "openclspec": [28, 43], "khrono": [28, 43], "document": [28, 44, 58, 60, 63, 175, 179, 254, 428, 429, 430, 506, 543, 784, 786, 803, 837, 864, 865], "revis": 28, "24": [28, 177, 340, 408, 480, 507, 532], "pdf": 28, "syclspec": [28, 43], "subgroup": 28, "integr": [28, 29, 40, 150, 151, 152, 176, 177, 492, 512, 545, 547, 579, 762, 764, 780, 783, 804, 810, 844], "modern": [28, 352, 354, 387, 389], "stuart": 28, "lloyd": 28, "quantiz": [28, 54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "pcm": 28, "ieee": [28, 54, 55, 62, 291, 470, 507, 535], "transact": [28, 341, 799, 800], "theori": 28, "1982": 28, "28": 28, "1982pp": 28, "129": 28, "137": 28, "bro": 28, "acar": 28, "kolda": 28, "resolv": [28, 455, 579], "sandia": 28, "sand2007": 28, "6422": 28, "unlimit": [28, 746, 755, 756, 766, 767, 770, 771, 778, 779, 781], "releas": [28, 37, 428, 429, 430, 576, 579, 597, 598, 763, 786, 793, 794, 795, 798, 801, 802, 829, 830, 843, 865], "octob": 28, "2007": 28, "bentlei": 28, "multidimension": [28, 58, 149, 341, 354, 389], "divid": [28, 30, 37, 43, 58, 63, 78, 79, 80, 81, 82, 83, 148, 283, 285, 291, 316, 318, 459, 464, 467, 469, 476, 483, 501, 528, 547, 570, 571, 572], "conquer": [28, 283, 285, 291, 316, 318], "acm": [28, 341], "23": [28, 54, 177, 340, 354, 360, 389], "214": 28, "229": 28, "1980": 28, "friedman17": [28, 50], "friedman": 28, "hasti": 28, "tibshirani": 28, "statist": [28, 40, 58, 159, 162, 349, 350, 352, 361, 362, 367, 380, 387, 409, 410, 412, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 449, 450, 451, 453, 454, 549], "springer": [28, 341], "2017": [28, 175, 785], "zhang04": [28, 50], "zhang": 28, "stochast": 28, "gradient": [28, 53, 54, 58, 66, 72, 74, 76, 89, 93, 95, 97, 99, 102, 105, 112, 115, 119, 132, 134, 136, 138, 145, 157, 159, 161], "descent": 28, "icml": 28, "2004": 28, "proceed": [28, 252, 253, 341], "Of": 28, "twenti": 28, "intern": [28, 37, 43, 50, 55, 60, 63, 149, 152, 252, 253, 257, 341, 455, 546, 576, 583, 591, 604, 619, 633, 646, 654, 662, 675, 690, 704, 718, 732, 743, 744, 751, 764, 770, 776, 781, 782, 786, 787, 789, 791, 837, 844, 854, 862, 865], "confer": [28, 341], "On": [28, 47, 58, 60, 151, 159, 160, 164, 250, 269, 285, 287, 318, 320, 415, 416, 417, 418, 428, 429, 430, 753, 784], "machin": [28, 50, 52, 566], "919": 28, "926": 28, "lang": 28, "algebra": [28, 178, 179, 184, 291, 340, 431, 455, 549], "verlag": 28, "york": 28, "1987": 28, "ping": 28, "tak": 28, "peter": 28, "eric": 28, "polizzi": 28, "feast": 28, "subspac": 28, "eigensolv": 28, "approxim": [28, 352, 353, 365, 387, 388, 551, 552, 553, 572, 768], "spectral": [28, 283, 316], "2014": 28, "w": [28, 53, 58, 63, 70, 71, 73, 150, 152, 154, 157, 161, 163, 165, 166, 168, 170, 258, 283, 285, 316, 318, 401, 837], "demmel": 28, "kahan": [28, 283, 316], "accur": [28, 152, 172, 343, 359, 360, 364, 365, 404], "bidiagon": [28, 261, 269, 291], "siam": 28, "sci": [28, 341], "stat": [28, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 447, 450, 451, 452, 453], "11": [28, 177, 227, 228, 340, 341, 354, 389, 390, 784], "1990": 28, "pp": 28, "873": 28, "912": 28, "cstdint": 29, "It": [29, 37, 40, 43, 48, 55, 58, 60, 62, 63, 84, 86, 87, 98, 100, 102, 116, 117, 128, 146, 147, 149, 151, 152, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 172, 179, 191, 196, 197, 198, 199, 201, 206, 210, 211, 217, 218, 220, 221, 224, 236, 240, 241, 242, 247, 249, 250, 252, 253, 257, 285, 318, 358, 366, 394, 403, 406, 480, 500, 532, 554, 557, 559, 565, 566, 581, 604, 619, 633, 662, 675, 690, 704, 718, 746, 749, 751, 755, 756, 759, 760, 762, 767, 786, 793, 794, 795, 798, 803, 804, 808, 810, 830, 839, 844, 851, 854, 860], "recommend": [29, 45, 58, 155, 156, 164, 167, 173, 179, 254, 786, 810, 817], "enumer": [29, 42, 55, 58, 60, 61, 62, 63, 152, 170, 179, 254, 255, 256, 257, 563, 745, 791, 840, 852], "data_typ": [29, 31, 32, 42, 54, 55, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 252, 253, 781], "them": [29, 40, 43, 50, 51, 58, 60, 62, 63, 121, 122, 123, 124, 125, 126, 127, 130, 149, 151, 152, 153, 159, 170, 181, 193, 209, 214, 234, 238, 239, 257, 258, 261, 362, 366, 432, 472, 473, 485, 486, 487, 488, 492, 506, 543, 566, 745, 753, 767], "name": [29, 31, 38, 39, 40, 48, 51, 54, 58, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 178, 179, 287, 375, 455, 547, 548, 553, 565, 569, 571, 572, 581, 753, 805, 809, 834, 835, 837], "int_xx_t": 29, "uint_xx_t": 29, "xx": 29, "bi": [29, 498, 525, 762], "start_index": 29, "end_index": 29, "start": [29, 37, 40, 43, 100, 101, 114, 115, 159, 176, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 261, 263, 264, 267, 269, 271, 272, 275, 276, 279, 280, 283, 285, 287, 289, 292, 294, 295, 298, 300, 302, 304, 306, 307, 310, 312, 313, 316, 318, 320, 322, 324, 326, 328, 329, 332, 334, 336, 338, 340, 380, 419, 420, 421, 428, 429, 430, 433, 434, 435, 436, 438, 439, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 751, 753, 768, 785, 812, 816, 838, 844, 845], "get_element_count": [29, 32], "max_end_index": 29, "noexcept": [29, 37, 42, 177, 675, 677, 684, 689, 690, 692, 698, 703, 704, 706, 712, 717, 718, 720, 726, 731, 732, 734, 742, 743, 756, 787, 788, 789, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 829, 830, 843, 849], "start_idx": 29, "end_idx": 29, "indic": [29, 37, 38, 41, 42, 43, 59, 60, 62, 63, 81, 82, 100, 101, 121, 122, 123, 124, 125, 126, 127, 149, 151, 152, 156, 157, 163, 165, 166, 170, 171, 179, 215, 216, 221, 254, 259, 271, 272, 279, 280, 281, 282, 283, 285, 289, 290, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 322, 323, 324, 325, 414, 415, 416, 422, 423, 426, 432, 437, 440, 523, 535, 555, 564, 732, 750, 783, 837, 844], "greater": [29, 37, 75, 76, 159, 169, 257, 394, 403, 415, 416, 422, 423, 559, 579, 609, 611, 623, 625, 637, 639, 648, 666, 668, 739, 844], "rel": [29, 176, 567, 768, 829], "next": [29, 40, 149, 151, 152, 159, 448, 519, 547, 561, 564, 566, 609, 666, 682, 724, 753, 754, 760, 772, 778, 806, 810, 825], "last": [29, 37, 41, 47, 100, 101, 106, 142, 159, 162, 227, 228, 254, 258, 414, 558, 559, 560, 561, 583, 584, 586, 589, 591, 593, 596, 598, 604, 605, 608, 615, 617, 619, 620, 622, 623, 629, 631, 633, 634, 636, 637, 643, 645, 646, 647, 654, 655, 657, 660, 662, 663, 665, 672, 674, 675, 676, 677, 681, 687, 689, 690, 691, 692, 695, 696, 701, 703, 704, 705, 706, 709, 710, 715, 717, 718, 719, 720, 723, 729, 731, 732, 733, 734, 737, 757, 768, 819, 843, 859], "neg": [29, 63, 68, 69, 78, 79, 80, 81, 82, 83, 88, 89, 100, 101, 102, 107, 108, 142, 153, 154, 157, 159, 170, 171, 172, 269, 364, 393, 440, 478, 492, 506, 520, 523, 524, 534, 535, 543, 547, 764, 829, 830], "sequenc": [29, 153, 157, 160, 176, 252, 253, 254, 255, 257, 258, 259, 341, 342, 346, 363, 364, 366, 380, 385, 394, 401, 402, 403, 411, 547, 558, 561, 566, 567, 633, 662, 704, 718, 732, 733, 778, 803, 805, 836, 859], "ye": [30, 52, 754, 829, 830], "three": [30, 39, 40, 43, 48, 51, 170, 227, 228, 255, 260, 365, 414, 483, 552, 732, 745, 749, 753, 763, 766], "logic_error": [30, 51], "runtime_error": [30, 51, 780], "bad_alloc": 30, "violat": [30, 51, 61, 152, 176, 346, 372, 808], "happen": [30, 37, 56, 60, 61, 77, 152, 157, 168, 254, 476, 483, 501, 528], "failur": [30, 63, 178, 553, 576, 847], "storag": [30, 37, 40, 58, 59, 60, 150, 151, 152, 159, 160, 176, 178, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 225, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 256, 259, 260, 341, 437, 440, 584, 593, 605, 620, 634, 647, 655, 663, 677, 692, 706, 720, 734, 770, 786, 835, 836, 852], "invalid": [30, 252, 253, 254, 257, 433, 434, 435, 436, 438, 439, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 476, 483, 501, 502, 528, 617, 631, 645, 674, 689, 703, 717, 731, 732, 770, 781], "domain": [30, 43, 58, 179, 252, 253, 254, 255, 257, 362, 364, 410, 412, 432, 445, 479, 480, 482, 530, 531, 532, 534, 539, 540, 542, 549, 864], "domain_error": [30, 37], "out_of_rang": [30, 607, 679, 736], "unsupported_devic": [30, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430], "situat": [30, 164, 787], "No": [30, 37, 41, 52, 58, 63, 263, 264, 267, 341, 477, 615, 617, 629, 631, 643, 645, 672, 674, 687, 689, 701, 703, 715, 717, 729, 731, 829, 830, 843], "outsid": [30, 149, 151, 152, 179, 258, 581, 746, 749, 751, 755, 760, 767, 844], "aris": 30, "becaus": [30, 55, 56, 58, 60, 153, 154, 162, 557, 561, 566, 576, 756, 764, 787, 803, 817, 825, 829, 838, 864], "distinguish": [30, 40, 46, 50, 568, 573, 574, 818], "facil": 30, "interact": [30, 149, 179, 745, 846], "internal_error": 30, "range_error": [30, 732, 736], "system_error": 30, "could": [30, 50, 54, 58, 60, 62, 157, 164, 176, 178, 179, 252, 253, 257, 279, 280, 285, 306, 307, 310, 312, 313, 318, 565, 566, 803, 841], "inheritor": 30, "device_bad_alloc": [30, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 257, 261, 263, 267, 269, 271, 275, 279, 283, 285, 287, 289, 292, 294, 298, 300, 302, 304, 306, 310, 312, 316, 318, 320, 322, 324, 326, 328, 332, 334, 336, 338, 428, 429, 430, 546], "layer": [31, 53, 58, 98, 100, 101, 150, 159, 160, 161, 170, 179], "particular": [31, 40, 43, 45, 48, 51, 60, 61, 149, 151, 152, 153, 157, 160, 164, 172, 179, 257, 258, 395, 559, 561, 563, 565, 573, 768, 790, 837, 847], "folder": 31, "itself": [31, 61, 165, 176, 179, 306, 310, 426], "string": [31, 37, 38, 39, 48, 51, 63, 67, 68, 69, 70, 71, 72, 73, 74, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 98, 99, 107, 108, 109, 110, 113, 114, 115, 117, 130, 140, 141, 143, 579, 753], "substitut": [31, 39, 48, 51], "misc": 31, "func": [31, 554, 557, 559, 562, 565, 812, 826, 831, 841, 847], "miscellan": [31, 45, 547], "intend": [31, 45, 54, 254, 364, 391, 399, 551, 552, 780, 837, 838, 840], "pipelin": [31, 40, 45, 561, 563, 564, 756], "mt19937": [31, 366, 391], "cross_enthropy_loss": 31, "relat": [31, 39, 40, 42, 48, 153, 169, 171, 176, 177, 179, 254, 255, 256, 258, 260, 269, 291, 413, 472, 473, 485, 486, 487, 488, 578, 579, 745, 785, 847], "table_metadata": [31, 40, 42], "data_layout": [31, 40, 41, 42], "_tabl": 31, "suffix": 31, "homogen_t": [31, 34, 35, 40, 41, 42], "io": [31, 38, 54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 841], "csv": [31, 39, 40, 43, 44, 49], "util": [31, 45, 152, 159, 175, 176, 569, 570, 571, 572, 859], "auxiliari": [31, 45, 745, 835, 836], "trait": [31, 45, 829, 830, 842], "variou": [31, 40, 45, 57, 160, 175, 179, 352, 387, 390, 428, 429, 430], "usm_alloc": 31, "type_trait": 31, "content": [31, 37, 60, 179, 269, 584, 590, 593, 603, 605, 617, 620, 631, 634, 645, 653, 655, 661, 663, 674, 677, 689, 692, 703, 706, 717, 720, 731, 734, 743, 849, 851, 854, 865], "extern": [31, 37, 40, 41, 42, 256, 257, 259, 260, 554, 560, 745, 746, 776, 786, 821, 824], "visibl": [31, 149, 152], "servic": [31, 357, 362, 366, 385, 402, 410, 440, 476, 483, 500, 501, 528, 529, 545, 838, 845, 865], "structur": [31, 37, 40, 43, 48, 51, 179, 218, 221, 224, 260, 289, 322, 341, 362, 410, 412, 445, 561, 583, 654, 837], "data_sourc": [31, 38, 39, 40, 49], "parent": [31, 58, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 842], "nor": [31, 565, 567, 829], "scalar": [32, 37, 40, 63, 177, 179, 180, 181, 182, 183, 185, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 220, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 247, 249, 250, 260, 261, 263, 264, 267, 287, 292, 320, 428, 429, 430, 507, 524], "column_accessor": [34, 36, 40], "contigu": [34, 35, 36, 37, 40, 41, 42, 43, 149, 176, 179, 340, 545], "iostream": [34, 35, 37, 49, 768, 843], "default_selector": [34, 35, 37], "host_data": [34, 35], "0f": [34, 35, 37, 152, 369, 370, 381], "5f": [34, 35, 152, 345, 369], "1f": [34, 35], "2f": [34, 35, 606, 621], "7f": [34, 35], "9f": [34, 35], "6": [34, 35, 58, 96, 112, 158, 354, 365, 389, 552], "shared_data": [34, 35], "malloc_shar": [34, 35, 179, 455], "memcpi": [34, 35], "sizeof": [34, 35, 150, 152, 255, 256, 787, 789, 791, 837], "whole": [34, 56, 152, 292, 294, 295, 326, 328, 329, 566, 768, 840, 843, 852], "acc": [34, 35, 49], "pull": [34, 35, 36, 40, 49], "get_count": [34, 35, 37, 40, 42, 49, 61, 380, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 546], "cout": [34, 35, 37, 42, 49, 152, 768], "endl": [34, 35, 37, 42, 49, 152, 768, 843], "free": [34, 35, 41, 42, 59, 63, 149, 256, 362, 410, 419, 420, 421, 428, 429, 430, 445, 780, 786, 789, 791, 792, 863, 865], "data_t": [34, 35, 37], "remove_const_t": [34, 35, 594, 606, 621, 678, 693], "obj": [34, 35], "column_index": 34, "usm": [34, 35, 37, 49, 60, 176, 254, 255, 256, 257, 268, 419, 420, 421, 428, 429, 430, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546], "qualifi": [34, 35, 60, 596, 597, 598, 609, 617, 623, 631, 637, 645, 666, 674, 675, 682, 689, 690, 696, 703, 704, 710, 717, 718, 724, 731, 765, 775, 803, 808], "int32_t": [34, 35, 41, 43, 63, 159, 196, 197, 198, 345, 352, 353, 354, 355, 356, 360, 369, 371, 374, 379, 381, 383, 392, 393, 397, 398, 405, 432], "kind": [34, 35, 37, 40, 41, 42, 54, 55, 56, 58, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 865], "directli": [34, 35, 36, 40, 50, 54, 58, 60, 62, 157, 179, 782, 864], "possibl": [34, 35, 36, 37, 43, 58, 60, 154, 157, 158, 161, 162, 163, 165, 166, 167, 169, 170, 171, 172, 176, 179, 257, 259, 392, 415, 416, 422, 423, 428, 429, 430, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 566, 585, 594, 606, 621, 635, 648, 656, 664, 678, 693, 707, 721, 735, 753, 754, 756, 768, 781, 786, 817, 844, 864], "immut": [34, 35, 37, 40, 42, 43, 149, 160], "convert": [34, 35, 40, 54, 56, 62, 84, 86, 87, 117, 128, 149, 152, 158, 168, 179, 343, 365, 455, 573, 804, 810, 820, 862], "mutabl": [34, 35, 37, 149, 151, 160], "reus": [34, 35, 149, 151, 160, 164, 197, 562, 781], "reset": [34, 35, 37, 40, 53, 58, 159, 254, 415, 416, 417, 418, 422, 423, 424, 425, 428, 429, 430, 476, 757, 776, 842], "row_accessor": [35, 36, 40, 49], "second": [35, 48, 58, 60, 81, 115, 121, 122, 123, 124, 125, 126, 127, 130, 153, 179, 223, 228, 257, 261, 267, 269, 271, 279, 283, 285, 287, 289, 298, 300, 302, 304, 306, 310, 312, 316, 318, 320, 322, 324, 332, 334, 336, 338, 393, 408, 478, 494, 519, 542, 547, 551, 552, 553, 558, 561, 607, 679, 756, 768, 786, 817, 862], "third": [35, 43, 48, 130, 756], "everi": [36, 40, 42, 65, 75, 88, 91, 92, 94, 96, 102, 103, 118, 131, 133, 135, 144, 152, 158, 183, 190, 191, 197, 198, 201, 242, 250, 254, 258, 745], "Be": [36, 40, 42], "lightweight": [36, 43, 746, 751, 755, 767], "computation": [36, 535, 838, 864], "intens": [36, 58, 60, 154, 163, 165, 171, 838], "convers": [36, 40, 45, 56, 62, 128, 152, 157, 176, 258, 565, 803], "move": [36, 42, 68, 69, 78, 79, 80, 81, 82, 83, 107, 108, 257, 368, 387, 388, 389, 390, 391, 394, 395, 396, 399, 401, 403, 408, 556, 581, 585, 589, 594, 598, 606, 607, 615, 617, 621, 629, 631, 635, 643, 645, 648, 651, 656, 660, 664, 672, 674, 678, 679, 687, 689, 693, 701, 703, 707, 715, 717, 721, 729, 731, 733, 735, 849, 851, 852], "sinc": [36, 40, 49, 58, 62, 149, 152, 177, 254, 557, 558, 562, 565, 566, 585, 594, 606, 621, 635, 648, 656, 664, 678, 693, 707, 721, 735, 746, 753, 755, 762, 767, 778, 846], "avoid": [36, 40, 56, 58, 70, 71, 72, 479, 480, 482, 530, 531, 532, 534, 539, 540, 542, 566, 781, 787, 788, 838, 844, 846, 852], "usag": [36, 39, 40, 45, 55, 58, 128, 149, 152, 157, 175, 254, 255, 362, 410, 428, 429, 430, 445, 559, 565, 772, 773, 781, 786, 787, 803, 854], "insid": [37, 40, 42, 43, 60, 63, 149, 179, 264, 265, 272, 273, 276, 277, 280, 281, 295, 296, 307, 308, 313, 314, 329, 330, 476, 501, 528, 764, 770, 778, 844], "organ": [37, 40, 179, 675, 690, 704, 718], "chang": [37, 43, 48, 55, 60, 62, 63, 141, 149, 151, 152, 153, 168, 176, 257, 258, 260, 402, 427, 428, 429, 430, 478, 483, 529, 542, 547, 565, 566, 579, 581, 746, 755, 760, 767, 778, 799, 800, 830, 844, 846, 852, 865], "state": [37, 43, 48, 53, 58, 149, 159, 160, 170, 177, 257, 352, 353, 354, 355, 357, 362, 363, 366, 368, 385, 387, 388, 389, 390, 391, 394, 395, 396, 399, 401, 402, 403, 408, 410, 411, 412, 428, 429, 430, 535, 555, 584, 589, 593, 598, 602, 605, 615, 616, 620, 629, 630, 634, 643, 644, 647, 651, 652, 655, 660, 663, 672, 673, 677, 687, 688, 692, 701, 702, 706, 715, 716, 720, 729, 730, 732, 733, 734, 746, 748, 751, 755, 760, 762, 764, 767, 772, 773, 776, 779, 793, 799, 800, 801, 837, 842, 844, 845, 851, 854, 860, 865], "anoth": [37, 40, 42, 43, 50, 58, 60, 62, 128, 149, 152, 153, 176, 179, 189, 190, 235, 257, 258, 366, 394, 403, 455, 519, 547, 569, 598, 746, 756, 788, 844, 862], "brief": [37, 547], "basic": [37, 40, 60, 63, 149, 152, 184, 260, 342, 349, 352, 353, 354, 355, 361, 362, 364, 368, 375, 380, 387, 388, 389, 390, 391, 394, 395, 396, 399, 401, 403, 408, 409, 410, 431, 455, 551, 552, 553, 573, 768, 810, 817, 852, 859], "scenario": [37, 40, 45, 47, 63, 362, 410, 566, 772, 773, 781], "print_properti": 37, "data_count": 37, "arr_data": 37, "ones": [37, 60, 169, 179, 784], "arr_on": 37, "full": [37, 40, 43, 64, 149, 340, 379, 576, 579], "has_mutable_data": [37, 40], "arr_mdata": 37, "still": [37, 56, 60, 63, 170, 177, 257, 352, 387, 577, 840, 842, 847], "origin": [37, 43, 98, 99, 151, 152, 153, 154, 158, 159, 162, 168, 169, 172, 259, 292, 293, 326, 327, 363, 385, 411, 551, 552, 553, 746, 751, 755, 760, 767, 778, 818], "need_mutable_data": [37, 40], "cgh": [37, 361, 362], "mdata": 37, "get_mutable_data": [37, 40], "cone": 37, "array_addit": 37, "retain": [37, 43, 754], "nullptr": [37, 41, 152, 252, 253, 257, 380, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 546, 561], "lifetim": [37, 60, 415, 416, 417, 418, 422, 423, 424, 425, 428, 429, 430, 840], "own": [37, 40, 41, 48, 51, 60, 61, 149, 150, 151, 160, 394, 403, 551, 558, 559, 560, 561, 565, 581, 598, 615, 617, 629, 631, 643, 645, 672, 674, 687, 689, 701, 703, 715, 717, 729, 731, 745, 757, 844, 845, 846, 849, 851], "destroi": [37, 61, 152, 269, 285, 318, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 559, 581, 584, 589, 591, 592, 593, 604, 605, 619, 620, 633, 634, 647, 651, 655, 660, 662, 663, 675, 677, 690, 692, 704, 706, 718, 720, 734, 757, 758, 770, 781, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 842, 843, 844, 845, 847, 849, 851, 852, 854, 858], "remain": [37, 41, 60, 81, 152, 157, 249, 260, 267, 415, 416, 422, 423, 515, 551, 552, 617, 631, 645, 672, 674, 689, 703, 717, 731, 732, 763], "dealloc": [37, 581, 584, 593, 605, 620, 634, 647, 655, 663, 677, 692, 706, 720, 734, 786, 787, 788, 789, 790, 791], "delet": [37, 41, 555, 776, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 829, 830, 843], "like": [37, 58, 71, 106, 149, 151, 153, 154, 155, 157, 160, 161, 163, 165, 170, 176, 179, 181, 183, 184, 190, 191, 197, 198, 199, 201, 217, 218, 220, 221, 222, 223, 224, 242, 250, 257, 259, 264, 265, 272, 273, 276, 277, 280, 281, 295, 296, 307, 308, 313, 314, 329, 330, 428, 429, 430, 513, 514, 553, 557, 759, 762, 790, 799, 800, 803, 819, 830, 837, 864], "member": [37, 43, 48, 61, 160, 178, 252, 253, 254, 257, 258, 259, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 358, 359, 360, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 427, 437, 440, 558, 560, 565, 566, 586, 596, 603, 615, 617, 629, 631, 643, 645, 651, 653, 657, 672, 674, 676, 678, 687, 689, 691, 693, 701, 703, 705, 707, 715, 717, 719, 721, 729, 731, 733, 736, 743, 819, 821, 827, 833, 837, 853, 856, 858, 861], "decrement": [37, 42, 419, 420, 421, 764], "reach": [37, 159, 561, 564, 751, 764], "increment": [37, 42, 47, 340, 415, 416, 417, 418, 422, 423, 424, 425, 547, 751], "re": [37, 180, 215, 216, 254, 255, 258, 361, 456, 457, 458, 460, 461, 463, 468, 481, 489, 508, 509, 516, 520, 533, 535, 538, 776, 785, 844, 864], "simplifi": [37, 81, 104, 157, 169, 175, 176, 759, 762, 792, 861, 864], "extdata": 37, "refdata": 37, "ref": [37, 71, 81, 94, 128, 280, 304, 414], "get_siz": [37, 40, 54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "sure": [37, 106, 254, 557, 566, 571], "valid": [37, 44, 45, 63, 68, 69, 75, 76, 78, 79, 80, 81, 82, 83, 107, 108, 149, 151, 176, 179, 254, 256, 257, 258, 259, 292, 326, 368, 387, 388, 389, 390, 391, 394, 395, 396, 399, 401, 403, 408, 455, 581, 584, 589, 593, 596, 597, 598, 605, 609, 615, 617, 620, 623, 629, 631, 634, 637, 643, 645, 647, 651, 655, 660, 663, 666, 672, 674, 675, 677, 682, 687, 689, 690, 692, 696, 701, 703, 704, 706, 710, 715, 717, 718, 720, 724, 729, 731, 732, 733, 734, 760, 765, 770, 775, 781, 786, 803, 825, 844, 854], "long": [37, 61, 152, 170, 179, 254, 354, 389, 583, 591, 604, 619, 633, 646, 654, 662, 675, 690, 704, 718, 732, 787, 789, 791, 838, 862], "transfer": [37, 40, 43, 45, 61, 151, 176, 340, 581, 615, 617, 629, 631, 643, 645, 672, 674, 687, 689, 701, 703, 715, 717, 729, 731, 754, 787], "behaviour": 37, "becom": [37, 43, 58, 154, 162, 179, 291, 507, 562, 589, 592, 732, 786, 842, 849], "written": [37, 43, 56, 152, 269, 483, 492, 565, 566, 782], "unmanag": 37, "othewis": 37, "noth": [37, 589, 615, 629, 643, 651, 660, 672, 687, 701, 715, 729, 794, 795, 843, 845], "newli": [37, 415, 416, 417, 418, 428, 429, 430, 551, 552, 553, 818, 852], "extract": [38, 40, 43, 581], "text": [38, 39, 43, 58, 65, 66, 88, 95, 102, 114, 118, 120, 158, 164, 254, 263, 264, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 289, 292, 294, 295, 296, 298, 299, 300, 302, 304, 305, 306, 307, 308, 310, 312, 313, 314, 316, 318, 319, 320, 322, 324, 325, 328, 329, 330, 332, 334, 336, 338, 339, 340, 428, 429, 430, 535, 837], "delimit": [38, 39, 40, 43], "numer": [38, 40, 43, 45, 54, 62, 71, 100, 101, 154, 159, 162, 172, 259, 341, 344, 353, 366, 388, 402, 408, 579], "represent": [38, 40, 43, 45, 60, 62, 149, 259, 261, 263, 264, 267, 287, 320, 482, 519, 542, 547, 579, 743, 744, 778, 844], "chosen": [38, 56, 58, 154, 157, 159, 160, 163, 168, 257, 258, 551, 552], "read_opt": 38, "uint64_t": [38, 179, 346, 352, 353, 354, 355, 357, 358, 368, 385, 388, 396, 402, 406], "none": [38, 54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "parse_head": 38, "default_delimit": 38, "default_read_opt": 38, "file_nam": [38, 39, 40], "opt": 38, "get_file_nam": 38, "get_delimit": 38, "get_read_opt": 38, "flag": [38, 54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 227, 228, 259, 483, 554, 757, 776, 842, 845], "get_filenam": 38, "charact": [38, 43, 179, 837], "get_delimt": 38, "line": [38, 43, 579, 753, 787, 788, 837], "read_arg": [38, 39, 40], "datasourc": [38, 39], "code": [39, 43, 48, 51, 58, 60, 149, 150, 151, 152, 153, 157, 160, 168, 177, 179, 256, 261, 263, 264, 267, 269, 271, 272, 275, 276, 279, 280, 283, 285, 287, 289, 292, 294, 295, 298, 300, 302, 304, 306, 307, 310, 312, 313, 316, 318, 320, 322, 324, 326, 328, 329, 332, 334, 336, 338, 362, 394, 403, 412, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 548, 558, 565, 566, 576, 582, 593, 766, 782, 784, 792, 820, 837, 845, 864, 865], "show": [39, 40, 48, 51, 58, 154, 157, 161, 162, 164, 165, 166, 169, 535, 554, 566, 756, 781, 803, 837], "read_args_t": 39, "read_result_t": 39, "side": [39, 41, 51, 60, 106, 179, 191, 206, 236, 246, 247, 249, 250, 251, 257, 279, 280, 281, 282, 291, 300, 301, 302, 303, 304, 305, 312, 313, 314, 315, 324, 325, 334, 335, 336, 337, 338, 339, 455, 559, 756, 785], "verbos": [39, 51], "overload": [39, 51, 558, 559, 565, 585, 594, 596, 597, 598, 606, 609, 615, 617, 621, 623, 629, 631, 635, 637, 645, 648, 656, 664, 666, 674, 678, 682, 687, 689, 693, 696, 701, 703, 707, 710, 717, 721, 724, 731, 733, 734, 735, 765, 775, 808, 854], "combin": [39, 43, 51, 59, 60, 61, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 154, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 292, 326, 341, 344, 354, 366, 375, 389, 408, 475, 547, 566, 745, 756, 757, 813, 815, 836, 850, 852, 864], "previou": [39, 51, 58, 149, 152, 153, 170, 179, 340, 476, 528, 529, 565, 566, 569, 837, 844], "property_nam": [39, 48, 51], "property_typ": [39, 48, 51, 63], "property_type_1": 39, "property_name_1": 39, "property_type_2": 39, "property_name_2": 39, "descriptor": [39, 40, 44, 49, 50, 51, 52, 55, 57, 58, 59, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 179, 252, 253, 254, 256, 258, 259, 260, 427, 428, 429, 430, 776], "set_": [39, 48, 51], "get_": [39, 48, 51], "perspect": [40, 50, 168], "acquisit": [40, 45, 829, 830], "prepar": [40, 56, 152, 361, 770], "pictur": [40, 43, 768], "raw": [40, 42, 445, 446, 447, 448, 455], "databas": [40, 841], "remot": 40, "compress": [40, 43, 414, 416], "decompress": 40, "recov": 40, "filter": [40, 63, 550, 563, 564, 806], "normal": [40, 45, 53, 58, 70, 71, 100, 101, 150, 160, 223, 285, 318, 342, 343, 348, 351, 362, 364, 365, 378, 379, 386, 394, 403, 410, 472, 473, 485, 486, 488, 535, 547, 844], "covari": [40, 379], "flow": [40, 50, 152, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 821, 824, 834, 835, 836, 841, 843], "goe": [40, 42], "forth": 40, "fulli": [40, 62, 149, 151, 152, 160, 161, 164, 179, 252, 253, 257, 258], "done": [40, 150, 157, 158, 165, 168, 179, 252, 253, 257, 259, 476, 501, 528, 551, 552, 749, 817, 851], "tabular": 40, "view": [40, 141, 142, 170, 859], "download": 40, "load": [40, 49, 570, 572, 579], "especi": [40, 60], "batch": [40, 43, 44, 45, 50, 53, 58, 70, 71, 81, 106, 150, 152, 157, 159, 160, 164, 172, 179, 183, 190, 197, 201, 218, 221, 224, 242, 250, 254, 257, 258, 259, 264, 265, 272, 273, 276, 277, 280, 281, 291, 295, 296, 307, 308, 313, 314, 329, 330], "therefor": [40, 45, 53, 54, 306, 307, 310, 507, 557, 570, 578, 753, 759, 766, 768, 787, 817, 852], "automat": [40, 43, 58, 156, 157, 159, 173, 179, 254, 256, 259, 557, 680, 694, 708, 722, 744, 756, 783, 817, 829, 844, 846], "categor": [40, 43], "continu": [40, 43, 260, 342, 364, 554, 750, 754, 760, 841], "heterogen": [40, 43], "dens": [40, 41, 42, 58, 60, 179, 184, 217, 218, 220, 221, 222, 223, 224, 291, 340, 417, 418, 428, 429, 430, 431, 455, 549], "spars": [40, 43, 179, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 549], "chunk": [40, 342, 358, 364, 406], "unnecessari": [40, 58], "ownership": [40, 415, 416, 417, 418, 422, 423, 424, 425, 581, 592, 615, 617, 631, 645, 672, 674, 687, 689, 703, 717, 729, 731, 745, 798, 802], "layout": [40, 41, 43, 57, 58, 60, 62, 63, 74, 128, 141, 142, 146, 149, 150, 151, 152, 153, 162, 170, 178, 179, 191, 195, 196, 197, 198, 200, 201, 202, 203, 204, 206, 217, 218, 220, 221, 222, 223, 224, 236, 247, 249, 250, 259, 291, 340, 379, 417, 424, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 450, 451, 452, 453, 454, 766], "safeti": [40, 565, 834, 835, 859], "reason": [40, 53, 56, 58, 150, 152, 256, 476, 501, 528, 756], "better": [40, 55, 60, 149, 218, 221, 224, 799, 800], "thu": [40, 58, 149, 283, 316, 566, 570, 768, 793, 798, 847], "nomin": [40, 42, 43], "ordin": [40, 41, 42, 43], "interv": [40, 42, 43, 177, 342, 359, 360, 364, 404, 405, 412, 551, 552, 553, 584, 593, 598, 605, 615, 617, 620, 629, 631, 634, 643, 645, 647, 655, 663, 672, 674, 677, 687, 689, 692, 701, 703, 706, 715, 717, 720, 729, 731, 733, 734, 764, 859, 862], "ratio": [40, 42, 43, 467, 547, 551, 552, 553, 573], "affect": [40, 152, 153, 526, 746, 751, 755, 756, 760, 767, 778, 786, 840], "contract": 40, "flat": [40, 43], "acquir": [40, 763, 764, 793, 794, 795, 796, 797, 798, 801, 802, 829, 830], "desir": [40, 49, 61, 252, 253, 254, 257, 258, 259, 342, 455], "demonstr": [40, 409, 452, 566, 568, 768, 770, 778, 844], "diagram": [40, 149], "highlight": [40, 152], "color": [40, 43], "dark": 40, "blue": 40, "orang": 40, "light": 40, "shown": [40, 48, 154, 162, 170, 171, 254, 256, 427, 566, 753, 766, 786], "tm": [40, 43], "note": [40, 56, 67, 69, 70, 72, 73, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 98, 99, 100, 101, 109, 110, 113, 117, 121, 122, 123, 124, 125, 126, 127, 130, 141, 143, 146, 147, 152, 153, 154, 156, 157, 158, 162, 164, 170, 192, 196, 197, 198, 199, 206, 236, 247, 249, 250, 254, 255, 258, 259, 291, 292, 326, 342, 343, 346, 358, 385, 402, 414, 415, 416, 422, 423, 428, 429, 430, 457, 458, 461, 463, 468, 479, 480, 481, 483, 489, 530, 531, 532, 533, 537, 539, 540, 541, 557, 732, 860], "shortcut": [40, 50], "get_column_count": [40, 42, 49], "get_row_count": [40, 42, 43], "get_metadata": [40, 42], "get_kind": [40, 41, 42, 61, 159], "get_data_layout": [40, 42], "get_feature_count": [40, 42], "get_feature_typ": [40, 42], "get_data_typ": [40, 42, 63], "feature_typ": [40, 42], "data_point": 41, "row_major": [41, 42, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 437, 440, 452], "constdelet": 41, "data_delet": 41, "reinterpret_cast": 41, "metadata": [41, 43, 149], "column_major": [41, 42, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 455], "cast": [41, 128, 146], "onto": [42, 784, 838], "restrict": [42, 73, 155, 157, 158, 161, 164, 167, 168, 257, 258, 840, 846, 865], "weaken": 42, "illustr": [42, 255, 472, 473, 485, 486, 487, 488, 755], "table1": 42, "data_ptr": 42, "table2": 42, "table3": 42, "subtyp": 42, "how": [42, 49, 58, 68, 69, 70, 71, 72, 73, 74, 78, 79, 80, 81, 82, 83, 98, 99, 107, 108, 141, 149, 150, 152, 157, 159, 160, 165, 169, 176, 177, 179, 215, 216, 255, 260, 269, 289, 290, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 322, 323, 415, 416, 422, 423, 427, 452, 455, 550, 557, 566, 568, 572, 755, 837, 843], "mani": [42, 50, 149, 151, 179, 188, 257, 269, 291, 545, 557, 566, 754, 781, 787, 843, 864], "special": [42, 43, 60, 73, 149, 151, 155, 156, 158, 159, 164, 166, 167, 168, 171, 172, 173, 176, 179, 254, 257, 258, 259, 260, 291, 400, 456, 460, 461, 462, 465, 477, 479, 484, 500, 507, 516, 523, 524, 530, 538, 539, 545, 547, 555, 561, 749, 762, 763, 768, 836, 844, 854], "swap": [42, 60, 78, 157, 185, 583, 591, 604, 619, 633, 646, 654, 662, 675, 690, 704, 718, 732, 803, 834], "ftype": 42, "feature_index": 42, "feature_count": 42, "unknown": [42, 62, 149, 159, 254, 577], "moment": [42, 47, 433, 434, 445, 446, 448, 772], "discret": [43, 179, 252, 253, 257, 259, 342, 364, 549, 865], "synonym": 43, "qualit": 43, "supervis": 43, "what": [43, 50, 56, 58, 60, 63, 152, 159, 257, 364, 422, 423, 424, 425, 803, 837], "dog": 43, "cat": 43, "email": 43, "spam": 43, "unsupervis": 43, "bunch": [43, 289, 291, 322], "usual": [43, 63, 102, 151, 294, 295, 328, 329, 412, 566], "encod": 43, "star": 43, "imag": [43, 58, 68, 152, 165], "real": [43, 46, 168, 179, 180, 192, 210, 211, 215, 216, 252, 253, 254, 257, 259, 260, 261, 269, 283, 285, 291, 292, 294, 298, 300, 302, 304, 306, 307, 312, 313, 314, 315, 316, 318, 320, 322, 355, 368, 370, 373, 374, 376, 377, 378, 379, 382, 384, 386, 396, 400, 404, 407, 432, 460, 475, 481, 484, 489, 492, 516, 520, 524, 533, 535, 538, 547, 803, 861], "quantit": 43, "person": 43, "height": [43, 58, 81, 82, 107, 108, 157, 165], "price": [43, 787], "hous": [43, 428, 429, 430], "comma": [43, 837], "field": [43, 63, 390, 554], "By": [43, 60, 152, 352, 353, 354, 355, 427, 558, 559, 560, 561, 565, 757, 760, 768, 860, 864, 865], "meaning": 43, "qualiti": [43, 375], "rectangl": 43, "width": [43, 58, 81, 82, 107, 108, 157, 165, 179], "subtract": [43, 63, 140, 148, 538, 547, 862], "frame": 43, "temperatur": 43, "celsiu": 43, "fahrenheit": 43, "detect": [43, 149, 152, 165, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 257, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 576, 577], "weight": [43, 53, 54, 56, 58, 60, 63, 78, 79, 80, 81, 82, 83, 106, 149, 153, 154, 157, 159, 161, 162, 164, 166, 168, 170, 437, 440], "bia": [43, 53, 56, 58, 73, 74, 78, 81, 100, 101, 106, 157, 159, 161, 164, 170, 188, 198], "gender": 43, "car": 43, "student": 43, "grade": 43, "outlier": 43, "significantli": [43, 54, 257, 576], "comparison": [43, 60, 176, 567, 583, 591, 604, 605, 613, 618, 619, 620, 627, 632, 633, 634, 641, 646, 647, 654, 662, 663, 670, 675, 690, 704, 718, 732, 787, 789, 791], "divis": [43, 70, 71, 72, 78, 79, 80, 81, 82, 83, 85, 255, 271, 272, 289, 322, 484, 551, 552, 553, 557, 817], "absenc": [43, 60, 151], "tower": 43, "weather": 43, "made": [43, 60, 260, 412, 500, 551, 552, 746, 755, 760, 767, 778], "goal": [43, 151], "select": [43, 58, 63, 148, 157, 179, 215, 216, 257, 291, 375, 570, 762, 768, 837, 840, 852], "criteria": 43, "hidden": [43, 53, 159, 170, 787, 864], "patter": 43, "uniform": [43, 177, 341, 342, 343, 354, 361, 362, 364, 365, 389, 410, 412], "builder": 43, "characterist": [43, 345, 347, 348, 351, 356, 359, 360, 369, 370, 371, 373, 374, 376, 377, 378, 379, 381, 382, 383, 384, 386, 392, 393, 397, 398, 400, 404, 405, 407], "principl": 43, "privat": [43, 152, 252, 253, 788, 837], "present": [43, 58, 106, 179, 598, 607, 679, 851, 856], "csr": [43, 414, 416, 423, 426], "increas": [43, 54, 170, 510, 547, 579, 680, 694, 708, 722, 751, 764, 786, 787, 817, 862], "freed": [43, 149, 786, 789], "set_row_count": 43, "hide": [43, 566], "workload": [43, 50, 58, 572], "jit": 43, "just": [43, 56, 149, 157, 768], "spir": 43, "v": [43, 171, 176, 269, 270, 341, 346, 358, 523, 562, 594, 606, 621, 635, 664, 678, 693, 707, 721, 746, 747, 748, 751, 755, 756, 759, 760, 762, 764, 766, 767, 770, 772, 773, 778, 779, 780, 781, 821, 822, 823, 824, 826, 827, 828], "portabl": [43, 60, 150, 151, 352, 387, 863, 864], "style": [43, 179, 782], "github": 44, "page": [44, 62, 255, 341, 552, 786, 805], "help": [44, 45, 90, 147, 149, 179, 383, 768], "speed": [44, 352, 387, 861], "highli": [44, 56, 150, 364, 745, 864], "preprocess": [44, 45], "decis": [44, 45, 149, 179], "tradit": [44, 58, 179, 340], "visit": [44, 859], "glossari": 44, "mathemat": [44, 50, 56, 111, 114, 116, 168, 170, 179, 260, 341, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 549, 566], "notat": [44, 58, 152, 254, 461, 545, 803, 834, 835], "appendix": [44, 179, 549], "bibliographi": [44, 507], "edg": [45, 749, 751, 753, 757, 765, 775, 776, 836], "close": [45, 54, 177, 408, 525, 553], "consum": [45, 55, 60, 149, 152, 255, 763, 838, 852], "agnost": [45, 58, 59, 60], "technologi": 45, "entir": [45, 47, 121, 122, 123, 124, 125, 126, 127, 258, 479, 480, 482, 530, 531, 532, 534, 539, 540, 542, 842, 853], "varieti": [45, 50, 414, 549, 864], "appropri": [45, 56, 60, 152, 155, 156, 164, 165, 167, 173, 257, 361, 409, 452, 557, 565, 570, 571], "random": [45, 175, 176, 179, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 452, 549, 557, 567, 732, 737, 804, 855], "import": [45, 49, 50, 58, 151, 152, 160, 569, 570, 572, 803], "seamless": 45, "orient": [45, 341, 366, 401], "redefin": 45, "sometim": [46, 149, 151, 160, 161, 566, 787], "interpret": [46, 58, 62, 68, 69, 70, 71, 72, 73, 74, 78, 79, 80, 81, 82, 83, 98, 99, 106, 107, 108, 141, 179, 254, 255, 355, 396, 399, 427, 786], "cardin": 46, "absolut": [46, 65, 121, 185, 215, 216, 254, 456, 506, 547, 862], "mathbb": [46, 258, 348, 351], "sqrt": [46, 63, 71, 100, 122, 138, 148, 154, 158, 162, 228, 343, 348, 351, 365, 378, 379, 384, 386, 472, 473, 485, 486, 487, 488, 502, 547, 561], "x_2": [46, 343, 365], "dot": [46, 185, 193, 194, 231, 254, 255, 258], "x_d": 46, "partial": [47, 152, 162, 176, 271, 272, 557, 566, 753], "later": [47, 100, 151, 758, 831, 841, 844], "merg": [47, 557, 565, 604, 615, 619, 633, 662, 675, 687, 690, 704, 718, 811, 814, 851], "meta": [48, 50, 149], "dispatch": [48, 160], "aggreg": [48, 51, 844], "dedic": [48, 152, 841, 842], "turn": [48, 576, 786, 843], "default_float_t": 48, "tag": [48, 59, 60, 152, 157, 164, 165, 167, 169, 176, 566, 579, 744, 756, 759, 762, 780, 836, 838, 841], "never": [48, 58, 60, 240, 241, 242, 565, 732, 760, 782, 844], "preset": 48, "chain": [48, 157], "set_property_name_1": 48, "value_1": 48, "set_property_name_2": 48, "value_2": 48, "set_property_name_3": 48, "value_3": 48, "top": [48, 68, 69, 78, 79, 80, 81, 82, 83, 107, 108, 157, 160, 165, 340, 576, 578], "assum": [48, 56, 58, 81, 86, 87, 149, 151, 154, 157, 158, 160, 166, 169, 179, 212, 213, 214, 227, 228, 247, 249, 250, 254, 255, 257, 259, 285, 291, 318, 324, 325, 352, 353, 354, 355, 359, 360, 368, 387, 388, 389, 394, 396, 399, 403, 404, 405, 408, 414, 529, 570, 768], "depict": [49, 170], "cassert": 49, "selector": [49, 176], "instead": [49, 50, 58, 151, 153, 155, 157, 158, 161, 164, 168, 170, 177, 179, 197, 254, 255, 263, 264, 267, 455, 843, 844, 846], "breviti": 49, "configur": [49, 61, 101, 152, 153, 154, 157, 162, 164, 166, 177, 179, 252, 253, 255, 256, 257, 258, 259, 260, 576, 577, 578, 579, 783, 786, 835, 836, 844, 846], "train_r": 49, "print": [49, 152, 576, 579, 753], "assert": [49, 60, 152, 153, 553, 576], "data_transform": 49, "primarili": [50, 840], "knob": 50, "those": [50, 56, 64, 106, 158, 174, 176, 179, 255, 258, 455, 589, 615, 672, 687, 729, 768, 784, 846], "often": [50, 55, 157, 256, 455, 570], "dozen": 50, "logist": [50, 53, 159], "procedur": [50, 52], "besid": [50, 62, 149], "moreov": [50, 55, 58, 153, 157], "empir": 50, "risk": [50, 179], "techniqu": 50, "Such": [50, 60, 151, 254, 352, 387, 415, 416], "few": [50, 152, 157, 161, 170, 259, 455], "aspect": [50, 179, 551, 552, 840], "task": [50, 51, 56, 152, 179, 252, 253, 260, 291, 419, 420, 421, 428, 429, 430, 557, 558, 559, 560, 561, 565, 569, 572, 744, 745, 753, 756, 757, 768, 831, 834, 835, 836, 840, 842, 843, 844, 845, 846, 847, 848, 849, 852], "vari": [50, 179, 197, 364, 394, 398, 403], "best": [50, 56, 149, 157, 162, 168, 258, 394, 479, 480, 482, 530, 531, 532, 534, 539, 540, 542, 817], "tackl": 50, "mention": [50, 130, 152, 154, 342, 549], "challeng": 50, "decompos": 50, "verifi": 51, "befor": [51, 56, 58, 60, 62, 78, 79, 80, 81, 82, 83, 102, 106, 130, 140, 149, 152, 157, 159, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 256, 257, 261, 263, 264, 267, 269, 271, 272, 275, 276, 279, 280, 283, 285, 287, 289, 292, 294, 295, 298, 300, 302, 304, 306, 307, 310, 312, 313, 316, 318, 320, 322, 324, 326, 328, 329, 332, 334, 336, 338, 340, 380, 419, 420, 421, 428, 429, 430, 433, 434, 435, 436, 438, 439, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 476, 483, 535, 561, 567, 581, 751, 753, 759, 760, 764, 772, 793, 798, 845, 847, 849], "_input_t": 51, "_result_t": 51, "incompat": [51, 63, 732], "exact": [51, 62, 170, 481, 484, 489, 512, 525, 533, 583, 591, 604, 619, 633, 646, 654, 662, 675, 690, 704, 718, 732, 778, 838], "compat": [51, 352, 387, 579, 581, 784, 864], "pre": [51, 56, 60, 151, 160, 566], "similar": [51, 60, 61, 287, 291, 320, 557, 565, 566, 772, 773, 781, 803, 851, 856], "operation_input": 51, "_input": 51, "assumpt": [51, 149, 179, 380, 385, 402, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 549], "operation_result": 51, "_result": 51, "bellow": 52, "train_input_t": 52, "train_result_t": 52, "infer_input_t": 52, "infer_result_t": 52, "compute_input_t": 52, "compute_result_t": 52, "dst": [53, 56, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 96, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173], "f": [53, 58, 150, 153, 167, 169, 170, 179, 254, 355, 368, 396, 412, 526, 559, 560, 562, 565, 609, 623, 637, 666, 682, 696, 710, 724, 757, 809, 844, 846, 847, 851, 852, 853], "src": [53, 56, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 746, 747, 748, 751, 755, 759, 760, 762, 764, 767, 770, 772, 773, 778, 781, 849], "activ": [53, 56, 58, 75, 91, 102, 111, 149, 152, 153, 154, 159, 161, 170, 746, 760, 770, 821, 824, 840, 841, 843, 844, 845], "learnabl": [53, 100, 101, 154, 162], "backward": [53, 54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 159, 160, 164, 167, 168, 170, 173, 176, 187, 249, 252, 253, 254, 255, 257, 259], "diffsrc": [53, 69, 79, 82, 95, 101, 108, 154, 157, 158, 161, 162, 163, 165, 166, 169, 171, 172], "f_": [53, 347, 348, 351, 356, 359, 360, 369, 370, 371, 373, 374, 376, 377, 378, 379, 381, 382, 383, 384, 386, 393, 397, 398, 400, 404, 405, 407], "diffdst": [53, 66, 69, 74, 79, 80, 82, 83, 95, 101, 108, 112, 154, 157, 158, 161, 162, 163, 165, 166, 169, 171, 172], "diffweight": [53, 80, 83, 157, 161, 166], "might": [53, 56, 149, 152, 153, 154, 157, 158, 161, 162, 163, 168, 170, 366, 476, 501, 528, 557, 566, 768, 770, 787, 837, 838, 843, 847], "commonli": [53, 175, 260], "wide": [53, 549, 829], "convolut": [53, 58, 60, 62, 63, 78, 79, 80, 82, 83, 148, 150, 151, 153, 159, 160, 165, 168, 170], "usabl": [53, 786], "inner": [53, 58, 150, 159, 160, 210, 240, 859], "scale_shift": 53, "shift": [53, 71, 100, 152, 154, 159, 341, 366, 390, 399, 401, 507], "workspac": [53, 154, 157, 159, 162, 163, 165, 170, 257, 259, 260, 320, 428, 429, 430], "carri": [53, 257, 259, 260, 842], "forward": [53, 58, 60, 69, 151, 159, 160, 167, 170, 173, 176, 187, 249, 252, 253, 254, 255, 257, 258, 259, 558, 586, 596, 608, 615, 622, 629, 636, 657, 665, 676, 681, 687, 691, 695, 701, 705, 709, 719, 723, 745, 747, 748, 753, 763, 764, 766, 772, 773, 778, 808, 859], "scratchpad": [53, 151, 159, 160, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339], "temporari": [53, 151, 152, 159, 160, 176, 256, 428, 429, 430], "diff_src": [53, 66, 69, 72, 76, 79, 82, 89, 93, 95, 97, 99, 101, 105, 108, 112, 115, 119, 132, 134, 136, 138, 145, 154, 165, 169], "diff_dst": [53, 66, 69, 72, 74, 76, 79, 80, 82, 83, 89, 93, 95, 97, 99, 101, 105, 108, 112, 115, 119, 132, 134, 136, 138, 145, 154, 172], "diff_weight": [53, 80, 83, 152], "diff_bia": [53, 74], "diff_scal": 53, "diff_shift": 53, "_layer": 53, "_iter": 53, "recurr": [53, 159, 170, 355, 364, 368, 372, 396, 399], "box": 53, "transposit": [53, 188, 195, 196, 197, 198, 199, 200, 201, 211, 217, 218, 220, 221, 222, 223, 224, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251], "box_t": 53, "timestamp": [53, 170, 862], "box_l": 53, "tanh": [53, 63, 111, 145, 148, 150, 157, 158, 159, 170, 539, 547], "relu": [53, 63, 102, 114, 119, 148, 150, 151, 154, 157, 159, 160, 166, 170], "cell": [53, 58, 159, 535], "candid": [53, 58, 64], "gate": [53, 58, 159, 170], "forget": [53, 58], "f16": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "bf16": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "f32": [54, 55, 56, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "s32": [54, 55, 56, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "s8": [54, 55, 56, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "u8": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl": [54, 55, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "abcdef": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "abcd": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "abdc": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "abc": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "ab": [54, 55, 58, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 200, 201, 202, 203, 204, 205, 207, 208, 209, 212, 213, 214, 215, 216, 219, 225, 227, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 243, 244, 245, 246, 248, 251, 340, 479, 480, 482, 502, 530, 531, 532, 534, 539, 540, 542, 547], "acb": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "acdb": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "acdeb": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "bac": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "ba": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "cba": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "cdba": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "cdeba": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dcab": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "decab": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "defcab": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dhwigo": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dhwio": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "goidhw": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "goihw": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "goiw": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "hwigo": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "hwio": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "ldgoi": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "ldgo": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "ldigo": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "ldio": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "ldoi": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "ldnc": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "ncdhw": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "nchw": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "ncw": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "nc": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "ndhwc": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "nhwc": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "ntc": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "nwc": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "oidhw": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "oihw": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "oiw": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "oi": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "tnc": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "tn": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 759, 780], "wigo": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "wio": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "format_tag": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "use_global_stat": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "use_scal": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "use_shift": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "fuse_norm_relu": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "normalization_flag": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "use_scaleshift": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "backward_data": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "forward_infer": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "forward_train": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "prop_kind": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "binary_add": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "binary_max": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "binary_min": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "binary_mul": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "convolution_auto": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "convolution_direct": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "convolution_winograd": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "deconvolution_direct": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "deconvolution_winograd": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_ab": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_bounded_relu": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_clip": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_clip_use_dst_for_bwd": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_elu_use_dst_for_bwd": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_elu": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_exp_use_dst_for_bwd": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_exp": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_gelu_erf": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_gelu_tanh": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_gelu": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_hardsigmoid": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_hardswish": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_linear": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_logistic_use_dst_for_bwd": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_logist": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_log": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_mish": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_pow": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_relu_use_dst_for_bwd": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_relu": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_round": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_soft_relu": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_sqrt_use_dst_for_bwd": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_sqrt": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_squar": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_swish": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_tanh_use_dst_for_bwd": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_tanh": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "lbr_gru": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "lrn_across_channel": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "lrn_within_channel": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "pooling_avg_exclude_pad": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "pooling_avg_include_pad": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "pooling_avg": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "pooling_max": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "resampling_linear": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "resampling_nearest": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "undef": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "vanilla_gru": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "vanilla_lstm": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "vanilla_rnn": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_attr_multiple_post_op": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_attr_scal": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_attr_zero_point": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_src_0": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_src": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_src_lay": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_from": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_src_1": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_src_it": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_src_2": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_src_iter_c": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_dst_0": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_dst": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_to": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_dst_lay": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_dst_1": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_dst_it": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_dst_2": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_dst_iter_c": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_weights_0": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_weight": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_scal": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_shift": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_weights_lay": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_weights_1": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_weights_it": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_weights_peephol": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_weights_project": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_bia": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_mean": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_vari": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_workspac": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_scratchpad": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_src_0": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_src": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_src_lay": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_src_1": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_src_it": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_src_2": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_src_iter_c": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_dst_0": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_dst": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_dst_lay": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_dst_1": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_dst_it": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_dst_2": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_dst_iter_c": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_weights_0": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_weight": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_scal": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_shift": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_weights_lay": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_weights_1": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_weights_it": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_weights_peephol": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_weights_project": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_diff_bia": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_multiple_src": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_arg_multiple_dst": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_runtime_dim_v": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_runtime_size_v": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_runtime_f32_v": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_runtime_s32_v": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "augru_backward": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "primitive_desc": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "augru_forward": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "batch_normalization_forward": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "concat": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "convolution_forward": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_backward": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwise_forward": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "gru_backward": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "gru_forward": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "layer_normalization_forward": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "primtive_desc": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "lbr_augru_backward": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "lbr_augru_forward": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "lbr_gru_backward": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "lbr_gru_forward": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "lstm_backward": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "lstm_forward": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "permute_ax": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "submemory_desc": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "get_data_handl": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "get_desc": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "get_engin": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "set_data_handl": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "pooling_forward": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "workspace_desc": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "post_op": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "append_eltwis": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "append_binari": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "append_sum": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "len": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 191, 195, 200], "primimit": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwis": [54, 55, 56, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "primitive_attr": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "set_fpmath_mod": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "set_scales_mask": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "set_zero_points_mask": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "set_post_op": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "set_scratchpad_mod": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "next_impl": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "primitive_desc_bas": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "reorder": [54, 55, 56, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173], "rnn_primitive_desc_bas": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "scratchpad_mod": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "shuffle_forward": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "vanilla_rnn_backward": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "vanilla_rnn_forward": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "sycl_interop": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "get_buff": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176], "set_buff": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "auto_broadcast": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "epsilon": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "momentum": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "begin_norm_axi": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "ax": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 279, 282, 285, 286, 312, 318, 319, 324, 325, 551, 552], "dilat": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dst_shape": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "output_pad": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "pads_begin": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "pads_end": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "shape": [54, 55, 58, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 365, 370, 377, 400, 407, 864], "src_shape": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "stride": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 180, 181, 182, 183, 188, 189, 190, 191, 192, 193, 194, 195, 197, 200, 201, 202, 203, 204, 205, 207, 208, 209, 212, 213, 214, 215, 216, 218, 219, 221, 223, 224, 225, 227, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 242, 243, 244, 245, 246, 248, 250, 251, 254, 255, 259, 264, 265, 272, 273, 276, 277, 280, 281, 295, 296, 307, 308, 313, 314, 329, 330, 385], "weights_shap": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "zp": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "exclude_pad": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "keep_dim": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "keep_stat": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "per_channel_broadcast": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "special_zero": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "transpose_a": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "transpose_b": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "use_affin": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "use_dst": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "auto_pad": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "coordinate_transformation_mod": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "data_format": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "qtype": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "rounding_typ": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "weights_format": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "layout_typ": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "opaqu": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 413, 428, 429, 430], "dequant": [54, 55, 56, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "typecast": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "graph": [54, 55, 58, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 179, 578, 746, 747, 748, 749, 751, 754, 755, 756, 758, 759, 760, 762, 764, 767, 768, 770, 772, 773, 776, 778, 779, 780, 781, 821, 824, 834, 835, 836, 841, 843], "op": [54, 55, 56, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 159, 160, 162, 195, 196, 197, 198, 199, 200, 201, 211, 217, 218, 220, 221, 222, 223, 224, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 428, 429, 430, 565], "staticreshap": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dynamicreshap": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "compiled_partit": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "add_op": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "get_partit": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "is_support": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_graph_unknown_ndim": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "dnnl_graph_unknown_dim": [54, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "abbrevi": [54, 58, 154, 157, 158, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172], "readabl": [54, 58, 154, 157, 158, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 178], "expon": [54, 116, 120, 152, 159, 475, 507, 512, 547], "keep": [54, 58, 63, 141, 615, 672, 687, 729, 770, 854], "signific": [54, 257, 507], "veri": [54, 152, 257, 341, 557], "occupi": [54, 787], "spot": 54, "trade": 54, "advantag": [54, 197, 260], "versu": 54, "footprint": [54, 149, 786], "henc": [54, 58, 60, 152, 154, 157, 158, 162, 165, 171, 172, 179, 340], "throughput": [54, 56, 799, 800], "treat": [54, 161, 168, 172, 346, 372], "themselv": [54, 307], "necessarili": [54, 156, 169, 179, 269, 414, 549, 553, 565, 570, 711, 846, 852], "flexibl": [54, 64, 151, 218, 221, 224, 784], "maintain": [54, 56, 60, 176, 749, 751], "master": 54, "afterward": [54, 553], "tensor": [54, 56, 58, 59, 60, 62, 65, 67, 69, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 96, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 137, 139, 140, 141, 143, 144, 146, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "latter": [54, 154, 162, 258], "fed": [54, 62, 556], "fundament": [55, 549, 732, 810], "discuss": [55, 58, 179, 366, 549], "mix": [55, 62, 146, 192, 254, 455], "accuraci": [55, 56, 152, 157, 364, 390, 460, 476, 479, 480, 482, 483, 500, 501, 507, 516, 520, 528, 529, 530, 531, 532, 534, 538, 539, 540, 542, 545, 548], "implicit": [55, 60, 155, 156, 157, 164, 168, 173, 176, 415, 416, 422, 423, 803, 837, 844], "downconvers": 55, "speedup": [55, 152], "fpmath": [55, 152], "lower": [55, 56, 75, 76, 149, 152, 154, 157, 165, 166, 169, 179, 188, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 229, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 261, 271, 272, 283, 284, 285, 286, 287, 288, 289, 290, 298, 299, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 332, 333, 338, 339, 340, 426, 427, 480, 482, 532, 534, 535, 540, 542, 553, 768, 786, 844], "arithmet": [55, 124, 140, 176, 258, 259, 260, 470, 547, 862], "individu": [55, 151, 179, 218, 221, 224, 549, 581, 759], "guid": [55, 583, 591, 604, 619, 633, 646, 654, 662, 675, 690, 704, 718, 732, 768, 829, 837], "push": [56, 583, 646, 652, 654, 746, 747, 748, 751, 754, 755, 759, 760, 762, 764, 767, 770, 772, 773, 778, 779, 781], "recent": [56, 773, 857], "focus": 56, "achiev": [56, 58, 168, 170, 557, 570, 749], "offer": [56, 260, 732], "improv": [56, 71, 100, 101, 150, 153, 154, 158, 162, 260, 414, 545, 567, 768, 787], "pack": [56, 60, 186, 212, 213, 214, 232, 233, 234, 245, 246, 340, 379, 560, 759, 780], "instruct": [56, 58, 60, 157, 366], "cost": [56, 149, 151], "symmetr": [56, 62, 86, 87, 179, 186, 187, 229, 232, 233, 234, 236, 237, 238, 239, 240, 241, 285, 287, 291, 298, 304, 306, 307, 310, 312, 313, 316, 318, 320, 322, 379, 426, 427, 483], "asymmetr": [56, 62, 84, 86, 87, 117], "factor": [56, 88, 89, 152, 153, 159, 169, 183, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 220, 221, 222, 223, 224, 225, 228, 229, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 247, 249, 250, 257, 258, 260, 261, 263, 264, 267, 271, 272, 275, 276, 279, 280, 283, 285, 289, 290, 291, 292, 294, 295, 300, 302, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 322, 323, 328, 329, 334, 336, 365, 375, 768], "relationship": [56, 149, 472, 473, 485, 486, 487, 488, 753, 838], "scale_": 56, "zp_": 56, "formula": [56, 65, 68, 70, 71, 75, 81, 82, 86, 87, 88, 91, 92, 94, 95, 96, 100, 102, 103, 106, 107, 111, 114, 116, 118, 131, 133, 135, 144, 152, 154, 157, 158, 161, 162, 163, 165, 166, 169, 170, 171, 172, 343, 365, 368, 456, 460, 462, 465, 479, 484, 516, 530, 535, 538, 539], "ahead": [56, 357, 363, 402, 411, 566], "calibr": 56, "tool": [56, 150, 576], "minimum": [56, 63, 125, 148, 155, 185, 216, 259, 445, 507, 840], "dynam": [56, 157, 159, 164, 341, 781, 840, 847], "behav": [56, 149, 170, 176, 455, 513, 514, 553, 562, 776, 779, 786, 790], "mask": [56, 152, 153, 401, 845], "rnn": [56, 58, 150, 152, 159, 160, 162], "requant": 56, "wider": 56, "impact": [56, 152, 732, 786, 840], "overflow": [56, 460, 476, 481, 483, 484, 489, 490, 491, 493, 501, 506, 516, 519, 520, 528, 533, 538, 543, 547], "accumul": [56, 74, 149, 153, 165, 565, 745, 811, 812, 814], "underflow": [56, 472, 476, 483, 486, 489, 490, 491, 501, 519, 528], "encourag": 56, "satur": [56, 152, 168], "fuse": [56, 62, 64, 151, 154, 159, 160], "mecan": 56, "_op": [56, 167], "src_": [56, 84, 86, 87, 117, 121, 122, 123, 124, 125, 126, 127], "weights_": [56, 437], "dst_": [56, 84, 86, 87, 117, 121, 122, 123, 124, 125, 126, 127], "zero_point": [56, 152], "zero_point_": 56, "operatornam": [56, 58, 111, 133, 153, 472, 473, 485, 486, 487, 488, 492], "_to": [56, 357, 402], "_int8": 56, "_f32": 56, "conv_": 56, "comp_": 56, "regular": [56, 148, 163, 572, 786, 844], "take": [56, 62, 79, 80, 84, 86, 87, 106, 117, 121, 122, 123, 124, 125, 126, 127, 130, 149, 151, 152, 153, 157, 158, 159, 160, 179, 259, 260, 355, 368, 396, 414, 415, 416, 417, 418, 422, 423, 424, 425, 455, 545, 557, 559, 565, 566, 571, 581, 746, 756, 762, 767, 768, 786, 808, 818, 840, 861, 864], "compens": 56, "term": [56, 157, 169, 170, 348, 803, 837], "account": [56, 157, 258, 864], "_s8": 56, "potenti": [56, 60, 63, 150, 151, 787, 838], "round": [56, 63, 68, 84, 86, 87, 107, 117, 146, 148, 152, 158, 159, 260, 474, 495, 512, 518, 519, 526, 544, 547, 566, 817], "popular": [56, 414], "deconvolut": [56, 159, 160, 165], "would": [56, 60, 152, 153, 154, 157, 162, 164, 165, 168, 170, 254, 260, 357, 385, 391, 402, 408, 428, 429, 430, 593, 605, 615, 620, 634, 663, 672, 677, 687, 692, 720, 729, 768, 803, 840], "ic": [56, 81, 84, 87, 117, 152, 157, 161, 169, 172], "ih": [56, 81, 152, 157, 161, 169], "iw": [56, 81, 152, 157, 161, 169], "oc": [56, 81, 152, 157, 161], "kh": [56, 68, 81, 82, 107, 152, 157, 161, 165], "kw": [56, 68, 81, 107, 152, 157, 161, 165], "oh": [56, 68, 81, 107, 157, 165, 169], "ow": [56, 68, 81, 107, 157, 165, 169], "now": [56, 170, 256, 768, 786, 862], "accordingli": [56, 60, 63, 86, 87, 153, 254], "dim": [57, 58, 59, 60, 62, 63, 152, 157, 159, 163, 164, 165, 168, 171, 176], "offset_0": 58, "laid": [58, 151, 152, 168], "length": [58, 59, 63, 114, 115, 195, 200, 202, 203, 204, 205, 207, 208, 209, 212, 213, 214, 218, 224, 229, 232, 233, 234, 237, 238, 239, 243, 244, 245, 246, 248, 251, 257, 258, 259, 352, 353, 366, 387, 388, 390, 394, 401, 414, 415, 416, 417, 418, 422, 423, 424, 425, 483], "fix": [58, 179, 198, 455, 483, 524, 844], "certain": [58, 61, 149, 153, 157, 415, 416, 520, 524, 576, 580, 676, 691, 705, 719, 745, 793, 798, 840, 844, 845], "canon": 58, "cnn": [58, 150, 152, 153, 154, 157, 161, 162, 165, 171], "stand": [58, 157, 365, 780], "minibatch": [58, 60, 161], "channel": [58, 62, 71, 73, 74, 78, 79, 80, 81, 82, 83, 84, 86, 87, 100, 101, 114, 115, 117, 121, 122, 123, 124, 125, 126, 127, 154, 159, 162, 170, 171, 172], "spatial": [58, 68, 69, 78, 79, 80, 81, 82, 83, 98, 99, 107, 108, 149, 152, 154, 157, 161, 163, 165, 166, 169, 171], "depth": [58, 81, 82, 157, 165], "outermost": [58, 156, 171, 172, 841], "innermost": [58, 156, 171, 172, 842, 847], "plai": [58, 149], "role": [58, 149], "agre": [58, 865], "permut": [58, 60, 142, 259, 271, 272, 289, 322], "geq": [58, 157, 158, 169, 343, 345, 347, 356, 359, 360, 499, 515, 544], "Then": [58, 130, 141, 161, 343, 399, 732], "i_0": 58, "i_": 58, "i_j": 58, "submemori": 58, "Their": 58, "purpos": [58, 60, 149, 257, 259, 343, 362, 547, 788], "regardless": [58, 179, 215, 216, 258, 527], "_a": 58, "densli": 58, "stai": [58, 60, 152], "strides_non_transpos": 58, "a_non_transpos": 58, "strides_transpos": 58, "a_transpos": 58, "letter": [58, 837], "english": 58, "alphabet": 58, "arbitrarili": 58, "word": [58, 152, 254, 258, 283, 316, 340, 837], "nomenclatur": 58, "conveni": [58, 59, 149, 159, 553], "alias": [58, 59, 174, 176, 594, 606, 621, 678, 693, 749], "That": [58, 141, 157, 164, 176, 179, 254, 257, 340, 566, 749, 768], "queri": [58, 60, 149, 151, 152, 157, 159, 160, 161, 163, 170, 179, 197, 256, 257, 258, 260, 783], "expens": [58, 60, 151, 157, 576], "pad": [58, 60, 68, 69, 78, 79, 80, 81, 82, 83, 107, 108, 157, 159, 165, 170, 254, 787, 788], "fail": [58, 60, 63, 149, 151, 154, 155, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 257, 264, 272, 276, 280, 283, 285, 295, 307, 313, 316, 318, 329, 546, 577, 579, 615, 672, 687, 729, 732, 789, 843], "incorrect": [58, 262, 265, 266, 268, 270, 273, 274, 277, 278, 281, 282, 284, 286, 288, 290, 293, 296, 297, 299, 301, 303, 305, 308, 309, 311, 314, 315, 317, 319, 321, 323, 325, 327, 330, 331, 333, 335, 337, 339], "calcul": [58, 68, 69, 70, 72, 76, 78, 79, 80, 81, 82, 83, 89, 98, 99, 104, 105, 107, 108, 119, 121, 122, 123, 124, 125, 126, 127, 132, 135, 136, 138, 141, 145, 149, 159, 165, 166, 197, 201, 242, 252, 253, 255, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 354, 355, 364, 368, 394, 396, 403, 415, 416, 448, 452, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 582, 593, 766, 781, 820], "amount": [58, 60, 78, 79, 80, 81, 82, 83, 152, 786, 817, 844], "central": [58, 433, 434, 435, 436, 445, 448], "notion": [58, 155, 156, 167, 173, 830], "understood": [58, 179], "correctli": [58, 154, 157, 732], "matmul": [58, 63, 148, 159, 164], "placehold": [58, 157, 160, 161, 164, 170, 837], "circumst": [58, 63], "hardwar": [58, 149, 152, 179, 395, 566, 787, 799, 800, 844, 845, 846, 863, 864], "practic": [58, 168, 175, 732], "topologi": [58, 153, 165, 171, 756, 783], "lrn": [58, 150, 159, 163], "preced": [58, 69, 80, 82, 83, 149, 154, 163, 165, 171, 566, 768, 772, 804, 810, 837, 844], "short": [58, 170, 179, 342, 364, 547, 548], "summari": [58, 154, 162, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 449, 450, 451, 453, 454, 549, 566, 814, 815, 816], "de": [58, 84, 86, 87, 117], "bandwidth": 58, "pool": [58, 68, 69, 107, 108, 150, 159, 160, 838], "shuffl": [58, 150, 159, 160], "softmax": [58, 63, 104, 136, 148, 150, 159, 160], "hint_pd": 58, "further": [58, 81, 157, 159, 169, 255, 256, 258, 259, 402, 445, 570, 571, 572, 754, 781, 817], "categori": [58, 547], "hand": [58, 164, 246, 251, 279, 280, 281, 282, 291, 312, 313, 314, 315, 324, 325], "sens": [58, 559, 565, 817], "come": [58, 158, 165, 171, 179, 787], "mini": 58, "3d": [58, 100, 101, 154, 157, 161, 162, 163, 164, 165, 169, 171], "bca": 58, "4d": [58, 100, 101, 152, 161], "bacd": 58, "bcda": 58, "5d": [58, 152, 157, 162], "abdec": 58, "acbd": 58, "bcdea": 58, "6d": 58, "acbdef": 58, "cn": 58, "chwn": 58, "owi": 58, "iwo": 58, "ohwi": 58, "ihwo": 58, "iohw": 58, "odhwi": 58, "iodhw": 58, "idhwo": 58, "giohw": 58, "giodhw": 58, "seq_length": 58, "num_lay": 58, "num_direct": 58, "input_channel": 58, "num_gat": 58, "output_channel": 58, "lstm": [58, 150, 151, 159, 160], "gru": [58, 150, 159], "num_channels_in_hidden_st": 58, "num_channels_in_recurrent_project": 58, "forc": [59, 63, 842], "plain": [59, 151, 152, 157, 161, 164, 168], "yet": [60, 170, 175, 566, 744, 772, 784, 843, 844, 846], "chose": [60, 152], "proper": [60, 160, 349, 350, 362, 367, 380, 410, 577], "match": [60, 67, 77, 85, 98, 106, 109, 110, 113, 130, 143, 149, 155, 156, 159, 168, 179, 254, 257, 478, 483, 542, 547, 561, 763, 779], "inequ": 60, "along": [60, 77, 86, 87, 121, 122, 123, 124, 125, 126, 127, 135, 149, 152, 171, 172, 254, 257, 581, 781], "ordinari": [60, 817], "being": [60, 149, 168, 170, 171, 176, 178, 254, 257, 259, 307, 483, 565, 778, 830], "volum": [60, 141], "numpi": [60, 63, 67, 85, 109, 110, 113, 130, 140, 141, 143], "concaten": [60, 77, 156, 159, 170, 561, 566], "ill": [60, 675, 690, 704, 718, 808], "clear": [60, 548, 562, 583, 591, 604, 619, 633, 646, 654, 662, 675, 690, 704, 718, 732, 770, 781, 851, 852, 857], "implicitli": [60, 62, 170, 254, 255, 259, 414, 415, 416, 422, 423, 455, 559, 563, 585, 594, 606, 621, 635, 648, 656, 664, 678, 693, 707, 721, 735, 787, 804, 820, 842, 843], "adim": [60, 63], "adata_typ": 60, "aformat_tag": 60, "allow_empti": [60, 151, 154, 155, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "signifi": [60, 154, 155, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544], "area": 60, "encompass": 60, "reshap": 60, "imposs": 60, "constant": [60, 63, 71, 100, 101, 102, 141, 152, 154, 162, 408, 507, 547, 583, 591, 604, 619, 633, 654, 662, 675, 690, 704, 718, 732, 768, 771, 819, 833], "join": [60, 554, 557, 565, 566, 754, 766, 811, 844, 845, 846], "consecut": [60, 177, 181, 191, 201, 526, 527, 559, 565, 566, 846], "counterpart": [60, 159], "And": [60, 170], "adjust": [60, 764, 786, 810, 838], "ndim": [60, 63, 162], "new_desc": 60, "in_md": 60, "expect_out_md": 60, "involv": [60, 256], "is_zero": 60, "etc": [60, 61, 63, 150, 151, 159, 169, 174, 177, 179, 257, 362, 410, 535, 841], "md": 60, "aengin": [60, 61, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173], "dnnl_memory_non": 60, "doesn": [60, 152, 170], "dnnl_memory_alloc": 60, "memory_kind": 60, "astream": [60, 61, 159, 168], "hint": [60, 154, 157, 158, 161, 162, 163, 165, 166, 169, 170, 171, 172, 176, 426, 569, 572, 604, 615, 619, 629, 633, 643, 662, 672, 675, 687, 690, 701, 704, 715, 718, 729, 756], "even": [60, 146, 154, 170, 179, 240, 241, 242, 257, 258, 259, 455, 519, 520, 525, 542, 554, 566, 732, 747, 787, 841, 844, 846], "map_data": 60, "exclus": [60, 392, 401, 553, 794, 795, 798, 802, 829, 832, 835], "unmap": 60, "unmap_data": 60, "mainli": [60, 179, 352, 387], "debug": [60, 553, 575, 836], "suboptim": [60, 157, 162], "mapped_ptr": 60, "previous": [60, 152, 153, 179, 252, 253, 254, 295, 329, 763, 849], "make_memori": 60, "adesc": 60, "akind": [60, 61, 63], "ahandl": 60, "thrown": [60, 149, 252, 253, 254, 257, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 345, 347, 348, 351, 356, 359, 360, 369, 370, 371, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 391, 392, 393, 397, 398, 400, 404, 405, 407, 408, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 546, 554, 732, 757, 780, 829, 842, 844, 845], "attach": [60, 153, 833, 835, 838, 843, 844, 846], "withing": 60, "abuff": 60, "impli": [60, 141, 176, 558], "get_memory_kind": 60, "amemori": 60, "said": 60, "make_engin": [61, 150], "adevic": 61, "acontext": 61, "ti": [61, 149, 151], "ephemer": 61, "relev": [61, 179, 252, 253, 254, 255, 257, 258, 259, 364, 428, 429, 430], "portion": [61, 817, 844], "explan": [61, 342, 364, 837], "bitwis": [61, 154, 162, 428, 429, 430, 476, 483, 501, 528, 757], "OR": [61, 154, 162, 476, 483, 501, 528], "in_ord": 61, "out_of_ord": 61, "default_flag": 61, "aflag": 61, "make_stream": [61, 150], "aqueu": 61, "get_queu": 61, "suggest": [62, 573, 615, 629, 643, 672, 687, 701, 715, 729], "logical_tensor": [62, 63], "boolean": [62, 63, 130, 151, 566, 615, 629, 643, 672, 687, 701, 715, 729, 803, 830], "z": [62, 226, 255, 258, 283, 285, 316, 318, 360, 462, 479, 489, 515, 530, 531, 535, 537, 539, 546, 551, 552, 566], "s0": 62, "s1": [62, 707, 721], "s2": [62, 707, 721], "suppos": [62, 844], "strictli": [62, 306, 309, 340, 415, 416, 422, 423], "scheme": 62, "insert": [62, 106, 176, 581, 591, 593, 602, 604, 605, 607, 616, 619, 620, 630, 633, 634, 644, 662, 663, 673, 675, 677, 679, 688, 690, 692, 702, 704, 716, 718, 720, 730], "honor": 62, "faithfulli": [62, 566], "elimin": [62, 766], "don": [62, 149, 153, 757], "recogn": 62, "subgraph": [62, 149], "fewer": 62, "vice": [62, 106, 153, 254], "versa": [62, 106, 153, 254], "clearli": [62, 179], "underneath": [62, 63], "decid": [63, 149, 154, 157, 158, 161, 162, 163, 165, 166, 169, 170, 171, 172, 566], "unchang": [63, 177, 208, 209, 213, 214, 854], "dnnl_dim_t": 63, "tid": 63, "ltype": 63, "ptype": 63, "inlin": [63, 159, 176, 765, 775], "deleg": 63, "deduc": [63, 169, 585, 594, 606, 621, 635, 648, 656, 664, 678, 693, 707, 721, 735], "lid": 63, "get_dim": 63, "get_id": [63, 852], "get_property_typ": 63, "get_layout_typ": 63, "get_layout_id": 63, "rais": [63, 523, 543, 547, 553, 589, 844], "get_strid": [63, 157, 159, 165], "get_mem_s": 63, "is_equ": 63, "lt": 63, "tenor": 63, "regard": [63, 151, 557, 841], "eg": 63, "absbackward": [63, 148], "avgpool": [63, 148], "avgpoolbackward": [63, 108, 148], "batchnormforwardtrain": [63, 148], "batchnorminfer": [63, 70, 148], "batchnormtrainingbackward": [63, 148], "biasadd": [63, 74, 148], "biasaddbackward": [63, 148], "clamp": [63, 76, 148], "clampbackward": [63, 148], "convolutionbackwarddata": [63, 78, 148], "convolutionbackwardweight": [63, 148], "convtranspos": [63, 148], "convtransposebackwarddata": [63, 148], "convtransposebackwardweight": [63, 148], "dynamicdequant": [63, 148], "dynamicquant": [63, 148], "elu": [63, 89, 148, 150, 159], "elubackward": [63, 148], "exp": [63, 148, 258, 347, 348, 351, 376, 378, 379, 382, 384, 386, 400, 407, 485, 486, 488, 493, 547], "gelu": [63, 93, 148, 159], "gelubackward": [63, 148], "hardsigmoid": [63, 95, 148, 158, 159], "hardsigmoidbackward": [63, 148], "hardswish": [63, 97, 148, 159], "hardswishbackward": [63, 148], "interpol": [63, 99, 148, 169], "interpolatebackward": [63, 148], "layernorm": [63, 101, 148], "layernormbackward": [63, 148], "leakyrelu": [63, 148], "log": [63, 104, 148, 481, 489, 490, 491, 493, 510, 512, 533, 557, 559, 565, 567], "logsoftmax": [63, 105, 148, 159, 172], "logsoftmaxbackward": [63, 148], "maxpool": [63, 148], "maxpoolbackward": [63, 148], "mish": [63, 112, 148, 159], "mishbackward": [63, 148], "pow": [63, 148, 159, 523, 524, 547], "prelu": [63, 102, 115, 148, 159, 160], "prelubackward": [63, 148], "reciproc": [63, 148], "reducel1": [63, 148], "reducel2": [63, 148], "reducemax": [63, 148], "reducemean": [63, 148], "reducemin": [63, 148], "reduceprod": [63, 148], "reducesum": [63, 148], "relubackward": [63, 148], "sigmoid": [63, 132, 148, 159, 170], "sigmoidbackward": [63, 148], "softmaxbackward": [63, 148], "softplu": [63, 111, 134, 148], "softplusbackward": [63, 148], "sqrtbackward": [63, 148], "squareddiffer": [63, 148], "statictranspos": [63, 148], "tanhbackward": [63, 148], "wildcard": [63, 148, 149, 159, 164], "lastsymbol": 63, "illeg": [63, 261, 263, 264, 267, 269, 271, 272, 275, 276, 279, 280, 283, 285, 287, 289, 292, 294, 295, 298, 300, 302, 304, 306, 307, 310, 312, 313, 316, 318, 320, 322, 324, 326, 328, 329, 332, 334, 336, 338], "lead": [63, 153, 157, 168, 179, 191, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 217, 218, 220, 221, 222, 223, 224, 229, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 254, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 417, 424, 847], "weight_shap": 63, "same_upp": [63, 68, 69, 78, 79, 80, 81, 82, 83, 107, 108], "same_low": [63, 68, 69, 78, 79, 80, 81, 82, 83, 107, 108], "half_pixel": [63, 98, 99], "align_corn": [63, 98, 99], "ncx": [63, 68, 69, 70, 71, 72, 73, 74, 78, 79, 80, 81, 82, 83, 98, 99, 107, 108, 114, 115], "nxc": [63, 68, 69, 70, 71, 72, 73, 74, 78, 79, 80, 81, 82, 83, 98, 99, 107, 108, 114, 115], "bilinear": [63, 98, 99, 159], "trilinear": [63, 98, 99, 159, 169], "per_channel": [63, 84, 86, 87, 114, 117], "per_tensor": [63, 84, 86, 87, 117], "ceil": [63, 68, 107, 547], "floor": [63, 68, 82, 107, 547, 768], "oix": [63, 81, 82, 83], "xio": [63, 81, 82, 83], "iox": [63, 78, 79, 80], "xoi": [63, 78, 79, 80], "add_input": 63, "add_output": 63, "set_attr": 63, "self": [63, 258, 259], "engine_kind": 63, "fpmath_mod": [63, 152], "allow_except": [63, 149], "dag": 63, "alreadi": [63, 258, 422, 423, 424, 425, 598, 744, 781, 787, 789, 791, 802, 830, 842, 844, 845, 851, 852, 856], "schema": [63, 149], "success": [63, 159, 163, 254, 258, 259, 345, 369, 371, 381, 476, 483, 501, 528], "similarli": [63, 149, 165, 170, 177, 254, 258, 749, 803], "un": [63, 483], "is_fin": [63, 816], "polici": [63, 152, 174, 175, 591, 675, 690, 704, 718, 745, 746, 751, 754, 755, 762, 767], "fusion": [63, 64, 149, 151, 154], "claim": 63, "scalabl": [64, 149, 151, 745, 784, 785, 789, 790, 791], "awar": [64, 149, 151, 559], "wise": [65, 67, 85, 91, 103, 109, 110, 111, 113, 114, 116, 120, 129, 137, 139, 140, 143, 146, 159, 269, 545], "ge": [65, 88, 102, 114, 261, 263, 264, 267, 269, 294, 295, 304, 305, 324, 325, 326, 327, 328, 329, 338, 339, 359, 360, 365, 369, 370, 371, 374, 376, 377, 381, 383, 384, 393, 397, 398, 400, 404, 405, 407], "overlin": [67, 77, 85, 109, 110, 113, 143, 155, 156, 157, 158, 168, 171, 172, 173, 193, 355, 396], "_0": [67, 85, 109, 110, 113, 130, 143, 254], "mathbin": [67, 85, 155], "_1": [67, 85, 109, 110, 113, 130, 143, 153, 254], "src_0": [67, 85, 109, 110, 113, 130, 140, 143, 155], "src_1": [67, 85, 109, 110, 113, 130, 140, 143, 155], "denom": [68, 165], "limits_": [68, 70, 100, 107, 121, 122, 124, 126, 127, 152, 154, 162, 163, 165, 167, 172, 173], "sh": [68, 81, 82, 107, 157, 165], "ph_l": [68, 81, 82, 107, 157, 165], "sw": [68, 81, 82, 107, 157, 165], "pw_l": [68, 81, 82, 107, 157, 165], "overlap": [68, 165, 220, 221, 255, 291, 840], "window": [68, 69, 107, 108, 165, 576, 577], "s64": [68, 69, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 98, 99, 100, 101, 104, 105, 107, 108, 117, 121, 122, 123, 124, 125, 126, 127, 133, 134, 135, 136, 142], "front": [68, 69, 78, 79, 80, 81, 82, 83, 107, 108, 157, 165, 732, 736], "left": [68, 69, 78, 79, 80, 81, 82, 83, 100, 101, 106, 107, 108, 130, 156, 157, 158, 159, 163, 164, 165, 169, 170, 171, 172, 179, 191, 206, 225, 235, 236, 247, 249, 250, 254, 255, 258, 259, 269, 270, 300, 301, 302, 303, 304, 305, 334, 335, 336, 337, 338, 339, 340, 343, 348, 351, 359, 360, 365, 369, 370, 371, 374, 376, 377, 381, 383, 384, 386, 390, 391, 393, 397, 398, 400, 401, 404, 405, 407, 414, 415, 416, 472, 485, 486, 488, 553, 559, 561, 562, 565, 566, 573, 581, 584, 589, 593, 598, 605, 615, 620, 629, 634, 643, 647, 651, 655, 660, 663, 672, 677, 687, 692, 701, 706, 715, 720, 729, 733, 734, 815, 851, 854], "bottom": [68, 69, 78, 79, 80, 81, 82, 83, 107, 108, 157, 165, 340, 753], "right": [68, 69, 78, 79, 80, 81, 82, 83, 100, 101, 106, 107, 108, 130, 152, 156, 157, 158, 159, 163, 164, 165, 169, 170, 171, 172, 179, 191, 206, 225, 235, 236, 246, 247, 249, 250, 251, 254, 255, 258, 259, 269, 279, 280, 281, 282, 291, 300, 301, 302, 303, 304, 305, 312, 313, 314, 315, 324, 325, 334, 335, 336, 337, 338, 339, 340, 343, 348, 351, 359, 360, 365, 369, 370, 371, 374, 376, 377, 381, 383, 384, 386, 390, 391, 393, 394, 397, 398, 400, 401, 403, 404, 405, 407, 414, 472, 485, 486, 488, 553, 559, 562, 565, 566, 573, 756, 815, 865], "srcshape": 69, "mu": [70, 71, 100, 101, 154, 162, 412], "nhw": [70, 154], "gamma": [70, 71, 72, 100, 101, 154, 157, 162, 364, 365, 374, 506, 543, 547], "neither": [70, 72, 565, 567, 829], "running_mean": 70, "running_vari": 70, "batch_mean": 70, "batch_vari": 70, "batch_norm": [71, 159], "stabil": [71, 100, 101, 154, 162], "diff_gamma": [72, 101], "diff_beta": [72, 101], "clip": [75, 159], "src_i": [75, 77, 104, 116, 135, 156, 173], "_valu": 75, "smaller": [75, 76, 106, 152, 168, 258, 415, 416, 417, 418, 422, 423, 424, 425, 497, 514, 547, 772, 784], "upper": [75, 76, 152, 179, 188, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 229, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 261, 263, 264, 267, 269, 271, 272, 283, 284, 285, 286, 287, 288, 289, 290, 298, 299, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 332, 333, 338, 339, 340, 426, 553, 570, 786], "ou": [77, 156, 171, 172], "c_": [77, 156, 170, 355, 368, 396], "stretch": [78, 79, 80, 81, 82, 83], "_channel": [78, 79, 80, 81, 82, 83], "_shape": [78, 79, 80, 81, 82, 83], "furthermor": [81, 151, 152, 153, 157], "comment": [81, 82, 157], "pd_l": [81, 82, 157], "pd_r": [81, 82, 157], "ph_r": [81, 82, 157], "pw_r": [81, 82, 157], "sd": [81, 82, 157], "dd": [81, 82, 157, 158], "dh": [81, 82, 107, 157], "dw": [81, 82, 107, 157], "fist": 81, "rest": [81, 412, 753, 842], "lfloor": [81, 157, 169, 254, 258, 356, 371, 381, 383, 393, 397, 398, 405, 495, 499, 515, 544], "rfloor": [81, 157, 169, 254, 258, 356, 371, 381, 383, 393, 397, 398, 405, 495, 499, 515, 544], "oc_g": [81, 157], "ic_g": [81, 157], "dkh": [81, 157], "dkw": [81, 157], "firstli": [82, 106], "_pad": 82, "_h": 82, "_padding_h": 82, "src_h": 82, "dst_h": 82, "zps_i": [84, 86], "scale_i": [84, 87, 117], "unlik": [86, 102, 128, 162, 179, 426, 557, 569, 744, 759, 844], "scales_i": 86, "channelnum": [86, 121, 122, 123, 124, 125, 126, 127], "zp_i": [87, 117], "exponenti": [91, 159, 179, 260, 342, 343, 364, 365, 489, 490, 491, 492, 493, 545, 547], "erf": [92, 158, 159, 472, 486, 487, 488, 547], "sqrt2": 92, "dev_guide_convent": 94, "terpol": [98, 99], "resiz": [98, 99, 732, 786], "x_resiz": [98, 99], "differenti": [98, 566], "modul": [100, 101], "affin": [100, 101, 569, 572, 845], "span": [100, 101, 197, 294, 295, 328, 329], "diffgamma": [101, 154, 162], "diffbeta": [101, 154, 162], "mark": [101, 149, 154, 162, 341, 383, 547, 763, 837], "asterisk": [101, 154, 162], "small": [102, 352, 387, 571, 572, 756, 787, 852], "slope": [102, 114, 115, 153, 154, 157, 170], "coeffici": [102, 244, 246, 251, 279, 280, 291, 312, 324, 430, 445, 448, 573], "leakag": 102, "natur": [103, 159, 257, 391, 506, 508, 510, 547, 860], "logarithm": [103, 159, 506, 508, 509, 510, 511, 545, 547], "formul": [104, 133, 134, 157], "dst_i": [104, 116, 135, 140], "src_j": [104, 135], "unsqueez": 106, "effect": [106, 153, 176, 177, 257, 529, 551, 552, 553, 559, 562, 744, 754, 756, 786, 830, 843, 844, 845, 851, 853], "ln": [111, 133, 172, 343, 351, 386, 509, 547], "omega": [112, 158], "delta": [112, 158, 258, 732, 733], "parametr": 114, "uni": [114, 115], "direction": [114, 115], "met": [114, 115, 553, 585, 594, 606, 621, 635, 648, 656, 664, 675, 678, 689, 690, 693, 704, 707, 717, 718, 721, 735, 799, 800, 808, 843], "rightmost": 114, "nd": [114, 115], "shape_i": 114, "pytorch": 115, "tensorflow": 115, "slope_shap": 115, "input_forward_shap": 115, "diff_slop": 115, "power": [116, 120, 167, 179, 260, 365, 520, 523, 524, 547], "infin": [120, 474, 495, 526, 535, 547], "neq": 120, "infti": [120, 347, 348, 359, 378, 458, 472, 486, 492, 508, 509], "l1": 121, "ident": [121, 122, 123, 124, 125, 126, 127, 149, 156, 173, 177, 221, 254, 255, 258, 362, 385, 402, 410, 412, 557, 565, 566, 844, 846], "shapeof": [121, 122, 123, 124, 125, 126, 127], "l2": 122, "backend": [128, 149, 256, 413, 426, 428, 429, 430], "pleas": [128, 254, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544], "op_typecast": 128, "op_dequant": 128, "cond": 130, "invalid_shap": 130, "_0_i": 140, "_1_i": 140, "overal": [141, 768], "rearrang": 142, "substract": 143, "bind": [149, 756], "benefit": [149, 151, 572, 787], "offload": [149, 175], "dnn": 149, "know": [149, 455, 566, 837, 843], "anymor": 149, "wild": 149, "conduct": 149, "aliv": 149, "analyz": 149, "topolog": 149, "port": [149, 572, 749, 759, 761, 762, 763, 764, 765, 766, 767, 769, 775, 779, 827, 836, 864], "cycl": 149, "put": [149, 157, 355, 368, 396, 763, 766], "among": [149, 151, 472, 473, 485, 486, 487, 488, 550, 772], "down": [149, 152, 157, 576], "isa": 149, "incomplet": [149, 413, 428, 429, 430], "succe": [149, 787, 843], "predecessor": [149, 746, 747, 748, 751, 753, 755, 756, 759, 760, 762, 763, 764, 765, 767, 770, 772, 773, 775, 778, 779], "amort": [149, 151, 160], "fall": [149, 151, 152, 153, 258, 526, 545, 789], "summar": [149, 170, 258, 546, 576, 829, 830, 837], "arrow": 149, "critic": [149, 157, 161, 768, 799, 800, 864], "exchang": [149, 581], "toward": [149, 474, 495, 526, 544, 547, 559], "against": [149, 179, 579, 792], "appear": [149, 171, 566, 567], "twice": [149, 358, 566], "prevent": [149, 157, 254, 786, 843], "cyclic": 149, "safe": [149, 151, 152, 158, 160, 179, 583, 586, 590, 591, 596, 597, 601, 603, 604, 609, 617, 619, 623, 631, 633, 637, 645, 646, 653, 654, 657, 661, 662, 666, 674, 675, 676, 682, 689, 690, 691, 696, 703, 704, 705, 710, 717, 718, 719, 724, 731, 743, 792, 842, 843, 844, 851, 852, 854, 858], "unit": [149, 159, 170, 179, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 271, 272, 289, 322, 324, 325, 385, 394, 403, 427, 535, 547, 768, 855], "captur": [149, 151, 258, 841, 842, 844], "under": [149, 254, 258, 399, 409, 736, 745, 843, 865], "abl": [149, 153, 164, 168, 257, 262, 265, 266, 268, 270, 273, 274, 277, 278, 281, 282, 284, 286, 288, 290, 293, 296, 297, 299, 301, 303, 305, 308, 309, 311, 314, 315, 317, 319, 321, 323, 325, 327, 330, 331, 333, 335, 337, 339, 746, 753, 763, 811], "lifecycl": 149, "invok": [149, 176, 257, 258, 557, 559, 561, 564, 565, 566, 580, 746, 751, 753, 755, 760, 767, 808, 842, 844, 845, 854, 859, 860], "prepack": 149, "late": [149, 559], "trivial": [149, 254], "shallow": 149, "vanilla": 150, "ctx": 150, "buf_src": 150, "static_cast": [150, 255, 373, 376, 377, 378, 382, 384, 386, 400, 407], "malloc_devic": [150, 179, 255, 256, 455], "buf_dst": 150, "mem_src": 150, "mem_dst": 150, "publish": 150, "apach": 150, "licens": [150, 865], "profil": 150, "intention": [150, 151], "extent": 150, "futur": [150, 179, 415, 416, 549, 754], "cooper": 150, "co": [150, 179, 198, 341, 343, 365, 480, 481, 482, 533, 535, 547], "comprehens": 150, "suit": [150, 218, 221, 224, 864], "consult": 150, "readm": 150, "although": 151, "open": [151, 551, 552, 553, 584, 593, 598, 605, 615, 617, 620, 629, 631, 634, 643, 645, 647, 655, 663, 672, 674, 677, 687, 689, 692, 701, 703, 706, 715, 717, 720, 729, 731, 733, 734, 859, 863, 865], "tile": 151, "functor": [151, 160, 176, 561, 562, 564, 566, 613, 627, 641, 670, 760, 844, 846, 851, 853], "thing": 151, "pure": [151, 160, 762], "approach": [151, 160, 551, 552, 793, 798, 803], "inspect": [151, 153, 160, 260, 746, 751, 755, 760, 767], "instanti": [151, 160, 177, 252, 253, 254, 257, 749, 753, 762, 779, 780, 790, 794, 795], "transpar": [151, 455, 786, 864], "effort": [151, 565, 566], "resid": 151, "extra": [152, 154, 565, 787, 788], "equival": [152, 177, 179, 254, 426, 557, 558, 565, 567, 581, 582, 584, 587, 588, 593, 596, 597, 598, 599, 600, 605, 607, 609, 612, 615, 617, 620, 623, 626, 629, 631, 633, 634, 637, 640, 643, 645, 647, 649, 650, 655, 658, 659, 663, 666, 669, 672, 674, 677, 679, 682, 683, 684, 687, 689, 692, 696, 697, 698, 701, 703, 704, 706, 710, 711, 712, 715, 717, 720, 724, 725, 726, 729, 731, 733, 734, 740, 756, 780, 847], "im2col": 152, "longer": [152, 179, 557, 768], "too": [152, 520, 561, 571], "proport": [152, 550, 551, 552, 553, 569, 570, 572, 817, 818], "contrast": [152, 789], "littl": [152, 756], "summand": 152, "though": [152, 170, 176, 414, 519, 566, 787], "op_pd": [152, 153], "param": [152, 153, 227, 228, 257, 786, 840], "much": [152, 358, 571, 787], "query_s64": [152, 159], "memory_consumption_s64": 152, "zero_md": 152, "get_scratchpad_mod": 152, "op_d": 152, "scratchpad_md": 152, "scratchpad_desc": [152, 159], "prim": 152, "scratchpad_ptr": 152, "user_memory_manag": 152, "explain": [152, 259], "d_0": 152, "d_": [152, 289, 322], "d_i": 152, "le": [152, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339], "mathtt": 152, "wei_plain_f32_md": 152, "wei_scal": 152, "conv_pd": 152, "wei_conv_s8_md": 152, "weights_desc": [152, 154, 157, 159, 161, 162, 164], "quantization_mask": 152, "wei_s8": 152, "wei_f32": 152, "wei_reorder_pd": 152, "wei_reord": 152, "complementari": [152, 472, 473, 485, 486, 487, 488, 547], "ideal": [152, 553, 732, 817], "sai": [152, 179], "src_scale": 152, "src_f32": 152, "src_s8": 152, "dst_scale": 152, "dst_f32": 152, "dst_s8": 152, "src_conv_s8_any_md": 152, "wei_conv_s8_any_md": 152, "dst_conv_s8_any_md": 152, "ditto": 152, "data_mask": 152, "wei_mask": 152, "padding_l": [152, 157, 165], "padding_r": [152, 157, 165], "padding_kind": 152, "fp32": [152, 255, 258, 259], "notic": 152, "narrow": 152, "tf32": 152, "strict": [152, 507], "disabl": [152, 157, 457, 458, 459, 460, 462, 464, 468, 472, 473, 475, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 498, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 516, 517, 519, 520, 521, 522, 523, 524, 525, 530, 531, 532, 533, 534, 537, 538, 539, 540, 542, 543, 576, 786, 845], "environ": [152, 179, 783, 786], "delai": 152, "successfulli": [152, 179, 252, 253, 254, 257, 258, 352, 387, 476, 483, 501, 528, 732, 747, 754, 762], "whatev": 152, "try": [152, 577, 843], "get_fpmath_mod": 152, "get_scales_mask": 152, "set_output_scal": [152, 157], "get_post_op": 152, "set_rnn_data_qparam": 152, "mb": [152, 164], "sic": 152, "slc": 152, "dic": 152, "dlc": 152, "op_desc": 152, "rnn_d": 152, "src_layer": 152, "src_iter": 152, "dst_iter": 152, "dst_layer": 152, "set_rnn_weights_qparam": 152, "five": [152, 365, 753], "weights_lay": 152, "weights_iter": 152, "append": [153, 732, 733, 743], "po": [153, 520, 604, 617, 619, 631, 633, 645, 662, 674, 675, 689, 690, 703, 704, 717, 718, 731], "preserv": [153, 259, 567, 776, 846], "suitabl": [153, 177, 257, 483], "sketch": [153, 558, 845], "append_someth": 153, "append_something_els": 153, "other_param": 153, "matter": [153, 557], "pd": [153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173], "robust": 153, "magnitud": [153, 180, 185, 498, 513, 514, 547], "reinterpret": [153, 179], "as_data_typ": 153, "p_op": 153, "summand_md": 153, "pretti": 153, "resnet": 153, "famili": [153, 355, 368, 396, 472, 473, 485, 486, 487, 488, 786], "unus": [153, 158, 743, 786], "conv_d": 153, "conv": [153, 157], "entri": [153, 179, 191, 197, 201, 218, 221, 224, 227, 228, 242, 247, 249, 250, 254, 255, 258, 259, 340, 349, 367, 380, 414, 415, 416, 422, 423, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 845], "residu": 153, "simplest": [153, 414], "get_params_sum": 153, "aalgorithm": [153, 155, 157, 158, 163, 165, 167, 169, 172], "eltwise_op": 153, "get_params_eltwis": 153, "src1_desc": [153, 155], "binary_op": [153, 176], "another_input": 153, "operand": [153, 561], "get_params_binari": 153, "straightforward": [154, 157, 162, 165, 166, 169], "flavor": [154, 162, 310], "popul": 154, "unbias": 154, "mu_i": 154, "2_i": 154, "mu_": 154, "2_": 154, "clariti": [154, 162], "Not": [154, 162, 844, 848], "data_desc": [154, 158], "diff_data_desc": 154, "overwritten": [154, 155, 158, 162, 172, 183, 190, 191, 196, 197, 198, 199, 201, 206, 210, 211, 217, 218, 220, 221, 222, 223, 224, 236, 240, 241, 242, 247, 249, 250, 261, 263, 267, 269, 270, 271, 275, 279, 283, 285, 287, 289, 292, 294, 298, 300, 302, 304, 306, 310, 312, 316, 318, 320, 322, 324, 326, 328, 329, 332, 334, 336, 338, 483, 770, 781], "sp_n": 154, "sp_0": 154, "0d": [154, 161, 163], "aprop_kind": [154, 157, 158, 161, 162, 163, 165, 166, 169, 170, 171, 172], "src_desc": [154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173], "dst_desc": [154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173], "default_attr": [154, 155, 157, 158, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172], "mean_desc": [154, 162], "variance_desc": [154, 162], "get_prop_kind": [154, 157, 158, 159, 161, 162, 163, 165, 166, 170, 171, 172], "get_epsilon": [154, 159, 162, 167], "get_flag": [154, 159, 162], "batch_normalization_backward": [154, 159], "diff_src_desc": [154, 157, 158, 159, 161, 162, 163, 165, 166, 169, 171, 172], "diff_dst_desc": [154, 157, 158, 159, 161, 162, 163, 165, 166, 169, 171, 172], "hint_fwd_pd": [154, 157, 158, 161, 162, 163, 165, 166, 169, 170, 171, 172], "diff": [154, 157, 158, 159, 161, 162, 163, 165, 166, 169, 170, 171, 172], "diff_weights_desc": [154, 157, 159, 161, 162, 166], "x_0": [155, 158, 168, 352, 353, 387, 388, 408], "overwrit": [155, 157, 161, 164, 168, 259, 300, 302, 304, 334, 336, 338, 770, 781], "src0": 155, "src1": 155, "pdx": [155, 156, 159, 173], "src0_desc": 155, "get_algorithm": [155, 157, 158, 159, 163, 165, 167, 172], "concat_dimens": 156, "sum_i": 156, "c_i": 156, "_l": 157, "_r": 157, "broken": [157, 732, 736], "exposit": [157, 343, 581], "realiti": 157, "depthwis": 157, "diffbia": [157, 161, 170], "kd": [157, 161], "feasibl": 157, "pseudo": [157, 168, 177, 341, 412, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 824, 825, 826, 827, 828, 831], "eta": 157, "simd": [157, 341, 366, 401], "notabl": 157, "winograd": [157, 159, 168], "loss": 157, "fast": [157, 341, 364, 366, 401, 433, 434, 435, 436, 438, 439, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 479, 480, 482, 530, 531, 532, 534, 539, 540, 542], "lavin": 157, "grai": [157, 394, 403], "heurist": 157, "bias_desc": [157, 159, 161, 164, 170], "get_dil": [157, 159, 165], "get_padding_l": [157, 159, 165], "get_padding_r": [157, 159, 165], "convolution_backward_data": [157, 159], "convolution_backward_weight": [157, 159], "diff_bias_desc": [157, 159, 161, 170], "deconvolution_forward": [157, 159], "deconvolution_backward_data": [157, 159], "deconvolution_backward_weight": [157, 159], "pi": [158, 258, 343, 348, 351, 365, 373, 378, 379, 386, 392, 458, 472, 485, 486, 487, 488, 508, 509], "044715": 158, "log_": 158, "rl": 158, "134145": 158, "dnnl_forward_train": 158, "dnnl_forward_infer": 158, "benefici": 158, "rather": [158, 817], "tip": 158, "unari": [158, 176, 851, 853], "get_alpha": [158, 159, 163, 170], "get_beta": [158, 159, 163, 170], "use_dst_for_bwd": 158, "subclass": 159, "inner_product_backward_data": [159, 161], "inner_product_backward_weight": [159, 161], "inner_product_forward": [159, 161], "layer_normalization_backward": [159, 162], "lrn_backward": [159, 163], "lrn_forward": [159, 163], "pooling_backward": [159, 165], "prelu_backward": [159, 166], "prelu_forward": [159, 166], "resampling_backward": [159, 169], "resampling_forward": [159, 169], "shuffle_backward": [159, 171], "softmax_backward": [159, 172], "softmax_forward": [159, 172], "layer_norm": 159, "inner_product": 159, "resampl": [159, 160], "unordered_map": 159, "dnnl_arg_": 159, "query_md": 159, "exec_arg_md": 159, "rh": [159, 562, 565, 583, 587, 588, 591, 599, 600, 604, 610, 611, 612, 618, 619, 624, 625, 626, 632, 633, 638, 639, 640, 646, 649, 650, 654, 658, 659, 662, 667, 668, 669, 675, 683, 684, 690, 697, 698, 704, 711, 712, 718, 725, 726, 732, 738, 739, 740, 811], "aprimit": 159, "impl_info_str": 159, "get_axi": [159, 171, 172], "get_local_s": [159, 163], "get_k": [159, 163], "get_p": [159, 167], "get_factor": 159, "get_cell_kind": [159, 170], "rnn_direct": [159, 170], "get_direct": [159, 170], "get_activation_kind": [159, 170], "get_kernel": [159, 165], "get_group_s": [159, 171], "src_md": [159, 168], "dst_md": [159, 168], "weights_md": 159, "scratchpad_engin": 159, "get_primitive_attr": 159, "frequent": [159, 786], "src_layer_desc": [159, 170], "src_iter_desc": [159, 170], "src_iter_c_desc": [159, 170], "weights_layer_desc": [159, 170], "weights_iter_desc": [159, 170], "weights_peephole_desc": [159, 170], "peephol": 159, "weights_projection_desc": [159, 170], "augru_attention_desc": 159, "augru": 159, "attent": [159, 170], "dst_layer_desc": [159, 170], "dst_iter_desc": [159, 170], "dst_iter_c_desc": [159, 170], "diff_src_layer_desc": [159, 170], "diff_src_iter_desc": [159, 170], "diff_src_iter_c_desc": [159, 170], "diff_weights_layer_desc": [159, 170], "diff_weights_iter_desc": [159, 170], "diff_weights_peephole_desc": [159, 170], "diff_weights_projection_desc": [159, 170], "diff_augru_attention_desc": 159, "diff_dst_layer_desc": [159, 170], "diff_dst_iter_desc": [159, 170], "diff_dst_iter_c_desc": [159, 170], "subsequ": [159, 176, 254, 385, 402, 411, 553, 732, 754, 763, 786], "forward_scor": 159, "backward_weight": 159, "backward_bia": 159, "bounded_relu": 159, "rectifi": 159, "soft_relu": 159, "swish": 159, "hyperbol": [159, 260, 458, 463, 468, 481, 533, 541, 547], "tangent": [159, 465, 466, 467, 468, 469, 539, 540, 541, 542, 547], "exclud": [159, 830], "c_t": [159, 170], "w_c": 159, "x_t": 159, "b_": [159, 170, 261], "c_x": 159, "r_t": [159, 170], "u_c": 159, "h_": [159, 170, 227, 228], "c_h": 159, "lrb": 159, "mul": [159, 167, 547], "binary_div": 159, "div": [159, 547], "binary_sub": 159, "binary_g": 159, "binary_gt": 159, "binary_l": 159, "binary_lt": 159, "binary_eq": 159, "binary_n": 159, "reduction_max": [159, 167], "reduction_min": [159, 167], "reduction_sum": [159, 167], "reduction_mul": [159, 167], "reduction_mean": [159, 167], "reduction_norm_lp_max": [159, 167], "norm_lp_max": 159, "reduction_norm_lp_sum": [159, 167], "norm_lp_sum": 159, "reduction_norm_lp_power_p_max": [159, 167], "norm_lp_power_p_max": 159, "reduction_norm_lp_power_p_sum": [159, 167], "norm_lp_power_p_sum": 159, "softmax_accur": [159, 172], "stabl": [159, 172, 567], "softmax_log": [159, 172], "mnemon": 159, "conceptu": 160, "concret": 160, "prefer": [160, 256, 768, 798, 802, 844], "embodi": 160, "nest": [160, 174, 581, 784, 838, 840, 846], "something_forward": 160, "action": [160, 776, 786, 829], "flatten": [161, 859], "stat_desc": 162, "_ndim": 162, "_dim": [162, 440], "advis": 162, "n_": [163, 254, 258], "local_s": 163, "restor": [165, 844, 846], "leaki": 166, "trainabl": 166, "mbox": 166, "weight_desc": 166, "mathop": 167, "lp": 167, "idl": [167, 570], "ep": [167, 479, 480, 482, 500, 507, 520, 529, 530, 531, 532, 534, 539, 540, 542], "kept": [168, 756, 846], "encount": [168, 215, 216, 535], "bug": 168, "team": 168, "dnnl_s8": 168, "dnnl_f32": 168, "allevi": 168, "fact": 168, "1024": 168, "127": [168, 408, 507], "124": 168, "dt_src": 168, "memory_format": 168, "fmt_src": 168, "dt_dst": 168, "fmt_dst": 168, "output_scal": 168, "src_engin": 168, "dst_engin": 168, "get_src_engin": 168, "get_dst_engin": 168, "upsampl": 169, "downsampl": 169, "f_h": 169, "f_w": 169, "ih_0": 169, "iw_0": 169, "w_": [169, 170, 401, 408], "ih_1": 169, "iw_1": 169, "lceil": [169, 474, 499, 515, 544], "rceil": [169, 474, 499, 515, 544], "_spatial": 169, "_size": [169, 183, 190, 191, 197, 201, 218, 221, 224, 242, 250, 264, 272, 276, 280, 307, 313], "stack": [170, 840, 864], "unrol": 170, "srciter": 170, "dstiter": 170, "four": [170, 225, 252, 253, 255, 343, 355, 365, 396, 466, 467, 547], "evalu": [170, 560, 786, 851, 853, 854], "left2right": 170, "right2left": 170, "decreas": [170, 493, 547, 576, 732, 751, 764, 862], "bidirectional_concat": 170, "dstlayer": 170, "bidirectional_sum": 170, "srclayer": 170, "six": 170, "vanilla_rnn_pd": 170, "aprop": 170, "a_t": 170, "h_t": 170, "lstm_pd": 170, "src_iter_h_desc": 170, "dst_iter_h_desc": 170, "give": [170, 414], "i_t": 170, "w_i": 170, "b_i": [170, 280, 281, 313, 314], "f_t": 170, "w_f": 170, "u_f": 170, "b_f": 170, "u_": [170, 271, 390], "o_t": 170, "w_o": 170, "u_o": 170, "b_o": 170, "weightslay": 170, "weightsit": 170, "srciterc": 170, "dstiterc": 170, "p_i": [170, 272, 392], "p_f": 170, "p_o": 170, "weights_peephol": 170, "simplic": [170, 352, 387], "weights_project": 170, "gru_pd": 170, "u_t": 170, "w_u": 170, "u_u": 170, "b_u": 170, "w_r": 170, "u_r": 170, "b_r": 170, "lbr_gru_pd": 170, "augru_pd": 170, "attention_desc": 170, "lbr_augru_pd": 170, "weightspeephol": 170, "weightsproject": 170, "diffsrclay": 170, "diffsrcit": 170, "diffsrciterc": 170, "diffweightslay": 170, "diffweightsit": 170, "diffweightspeephol": 170, "diffweightsproject": 170, "diffdstlay": 170, "diffdstit": 170, "diffdstiterc": 170, "diff_": 170, "shorten": 170, "variant": [170, 174, 215, 216, 283, 316, 566], "rnn_flag": 170, "unidirectional_left2right": 170, "unidirect": 170, "unidirectional_right2left": 170, "bidirect": 170, "info": [170, 179, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 832, 835, 844], "lbr": 170, "thought": 171, "formal": [171, 177], "group_siz": [171, 183, 190, 191, 197, 201, 218, 221, 224, 242, 250, 264, 265, 272, 273, 276, 277, 280, 281, 295, 296, 307, 308, 313, 314, 329, 330], "essenti": 171, "nu": [172, 365], "dpl": [174, 176, 177], "shorter": 174, "iso": [175, 554, 556, 558, 560, 565, 566, 567, 569, 570, 571, 572, 583, 584, 585, 586, 589, 591, 593, 594, 596, 598, 604, 605, 606, 607, 608, 615, 619, 620, 621, 622, 629, 633, 634, 635, 636, 643, 646, 647, 648, 651, 654, 655, 656, 657, 660, 662, 663, 664, 665, 672, 675, 676, 677, 678, 679, 681, 687, 690, 691, 692, 693, 695, 701, 704, 705, 706, 707, 709, 715, 718, 719, 720, 721, 723, 729, 732, 733, 734, 735, 737, 746, 748, 749, 751, 755, 756, 759, 760, 762, 764, 767, 770, 772, 773, 778, 780, 781, 782, 784, 785, 787, 789, 791, 793, 795, 798, 801, 802, 803, 808, 810, 844, 846, 847, 851, 853, 859], "iec": [175, 785], "14882": [175, 785], "17": [175, 365, 558, 562, 565, 566, 585, 594, 606, 621, 635, 648, 656, 664, 678, 693, 707, 721, 735, 746, 755, 762, 767, 778, 785], "complement": 175, "device_polici": 175, "make_device_polici": 175, "wrapper": [175, 455, 788], "6th": 176, "edit": 176, "20": [176, 770, 844], "sequenced_polici": 176, "parallel_polici": 176, "parallel_unsequenced_polici": 176, "unsequenced_polici": 176, "seq": 176, "par": 176, "par_unseq": 176, "unseq": 176, "is_execution_polici": 176, "is_execution_policy_v": 176, "kernelnam": 176, "dpcpp_default": 176, "newkernelnam": 176, "oldkernelnam": 176, "predefin": [176, 177, 745, 746, 755, 767], "kernel_nam": 176, "othernam": 176, "compliant": [176, 257], "movement": [176, 179], "allocatort": 176, "tagt": 176, "read_writ": 176, "no_init": 176, "helper": [176, 452, 745, 836], "copyconstruct": [176, 556, 565, 566, 746, 748, 749, 751, 755, 756, 759, 760, 762, 767, 772, 773, 778, 780], "copyassign": [176, 565, 566, 651, 748, 760, 762, 770, 772, 773, 778, 781], "deduct": [176, 583, 591, 604, 619, 633, 646, 654, 662, 675, 690, 704, 718, 732], "overridden": [176, 845], "buf_begin": 176, "write_onli": 176, "buf_end_1": 176, "buf_end_2": 176, "42": [176, 340], "counting_iter": 176, "difference_typ": [176, 583, 591, 604, 619, 633, 646, 662, 675, 690, 704, 718, 732, 819, 852, 859], "value_typ": [176, 558, 581, 583, 584, 585, 589, 591, 592, 593, 594, 598, 604, 605, 606, 607, 613, 615, 617, 618, 619, 620, 621, 627, 629, 631, 632, 633, 634, 635, 641, 643, 645, 646, 647, 648, 651, 654, 655, 656, 660, 662, 663, 664, 670, 672, 674, 675, 677, 678, 679, 687, 689, 690, 692, 693, 701, 703, 704, 706, 707, 715, 717, 718, 720, 721, 729, 731, 732, 733, 734, 735, 736, 743, 787, 789, 791, 808, 819, 852, 859], "counter": [176, 344, 355, 366, 368, 396, 764], "dereferenc": [176, 455, 567, 617, 631, 645, 674, 689, 703, 717, 731], "rvalu": [176, 808], "derefer": 176, "discard_iter": 176, "ptrdiff_t": 176, "lvalu": [176, 808], "discard": [176, 746, 747, 751, 754, 755, 759, 764, 767, 779, 825], "sourceiter": 176, "indexmap": 176, "permutation_iter": 176, "iterator_trait": [176, 558, 585, 594, 606, 621, 635, 648, 656, 664, 678, 693, 707, 721, 735, 808], "input1": 176, "input2": 176, "make_permutation_iter": 176, "unaryfunc": [176, 851, 852, 853], "transform_iter": 176, "invoke_result": 176, "remove_refer": 176, "unary_func": 176, "make_transform_iter": 176, "zip_iter": 176, "make_sign": 176, "tupl": [176, 254, 607, 679, 749, 759, 762, 763, 766, 767, 779, 781], "make_zip_iter": 176, "inputkeyit": 176, "inputvalueit": 176, "outputvalueit": 176, "binarypr": 176, "equal_to": [176, 675, 678, 690, 693, 704, 707, 718, 721], "binaryop": 176, "plu": [176, 271, 474, 526, 547, 554], "exclusive_scan_by_seg": 176, "keys_first": 176, "keys_last": 176, "values_first": 176, "values_result": 176, "initial_valu": 176, "binary_pr": 176, "prefix": [176, 566, 834], "scan": [176, 566, 814, 816], "predic": [176, 647, 677, 685, 692, 699, 706, 713, 720, 727], "binarypredc": 176, "inclusive_scan_by_seg": 176, "outputkeyit": 176, "reduce_by_seg": 176, "keys_result": 176, "inputit1": 176, "inputit2": 176, "outputit": 176, "inputit": 176, "binary_search": 176, "value_first": 176, "value_last": 176, "outputiter": 176, "comp": [176, 567, 604, 605, 618, 619, 620, 632, 633, 634, 662, 663], "lower_bound": [176, 604, 619, 633, 662], "lowest": 176, "upper_bound": [176, 604, 619, 633, 662], "linear_congruential_engin": 177, "subtract_with_carry_engin": 177, "adaptor": [177, 859], "discard_block_engin": 177, "minstd_rand0": 177, "minstd_rand": 177, "ranlux24_bas": 177, "ranlux48_bas": 177, "ranlux24": 177, "ranlux48": 177, "uniform_int_distribut": 177, "uniform_real_distribut": 177, "normal_distribut": 177, "exponential_distribut": 177, "bernoulli_distribut": 177, "geometric_distribut": 177, "weibull_distribuion": 177, "lognormal_distribut": 177, "cauchy_distribut": 177, "extreme_value_distribut": 177, "deviat": [177, 348, 351, 378, 384, 386], "random_devic": 177, "seed_seq": 177, "vec": [177, 283, 284, 285, 286, 316, 317, 318, 319, 349, 352, 353, 354, 355, 361, 585, 648, 656], "result_typ": [177, 345, 346, 347, 348, 349, 351, 356, 358, 359, 360, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 392, 393, 397, 398, 400, 404, 405, 406, 407], "scalar_typ": [177, 257], "element_typ": 177, "seed": [177, 352, 353, 354, 355, 361, 368, 385, 387, 388, 389, 390, 391, 396, 399, 401, 402, 408, 409, 412], "meet": [177, 352, 354, 387, 389, 481, 489, 506, 533, 543, 550, 551, 552, 553, 554, 556, 558, 559, 560, 562, 565, 566, 567, 582, 583, 584, 585, 586, 589, 591, 593, 594, 596, 598, 601, 604, 605, 606, 607, 608, 614, 615, 619, 620, 621, 622, 628, 629, 633, 634, 635, 636, 642, 643, 646, 647, 648, 651, 654, 655, 656, 657, 660, 662, 663, 664, 665, 671, 672, 675, 676, 677, 678, 679, 681, 686, 687, 690, 691, 692, 693, 695, 700, 701, 704, 705, 706, 707, 709, 714, 715, 718, 719, 720, 721, 723, 728, 729, 732, 733, 734, 735, 737, 741, 746, 748, 749, 751, 755, 759, 760, 762, 764, 767, 770, 772, 773, 778, 780, 781, 785, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 841, 844, 846, 847, 851, 853, 859], "minstd_rand0_vec": 177, "uint_fast32_t": 177, "16807": 177, "2147483647": 177, "minstd_rand_vec": 177, "48271": 177, "ranlux24_base_vec": 177, "ranlux48_base_vec": 177, "uint_fast64_t": 177, "48": 177, "12": [177, 227, 228, 340, 354, 389, 391], "ranlux24_vec": 177, "223": 177, "ranlux48_vec": 177, "389": 177, "invoc": [177, 746, 756, 771, 844, 845], "analogu": 177, "10000th": 177, "1043618065": 177, "399268537": 177, "7937952": 177, "61839128582725": 177, "9901578": 177, "1112339016": 177, "item": [178, 556, 558, 561, 563, 583, 589, 592, 598, 607, 615, 629, 643, 646, 654, 672, 679, 687, 701, 715, 729, 748, 760, 764, 770, 772, 773, 778, 781, 787, 803, 806, 808, 819, 825, 837], "human": 178, "p1673": 178, "technic": 178, "advisori": 178, "board": 178, "valuabl": 178, "feedback": [178, 366, 390, 399, 865], "thank": 178, "therein": 179, "great": 179, "nonessenti": 179, "enqueu": [179, 252, 253, 257, 258, 840, 844, 846], "standalon": 179, "aid": 179, "rng": [179, 341, 342, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 364, 366, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410], "dft": [179, 252, 253, 254, 255, 256, 257, 260], "setup": 179, "subdevic": 179, "facilit": [179, 792], "likewis": [179, 257, 749, 786], "manual": [179, 256, 385], "launch": [179, 455, 753], "antidepend": 179, "reserv": [179, 675, 680, 690, 694, 704, 708, 718, 722, 732, 748, 754, 763, 770, 772, 773, 778, 781, 786, 834, 844], "deadlock": [179, 559], "link": [179, 748, 772, 773], "in_ev": 179, "consumpt": [179, 256], "paradigm": 179, "elegantli": 179, "burden": 179, "correspondingli": 179, "prerequisit": 179, "secondari": 179, "fourier": [179, 252, 253, 257, 259, 549], "vm": [179, 260, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546], "trigonometr": [179, 260, 479, 480, 530, 531, 532, 539, 540, 547], "act": [179, 788, 841, 852], "constitut": [179, 768], "breadth": 179, "permit": [179, 570, 580, 583, 646, 654, 756, 803, 845, 860], "live": 179, "easili": [179, 864], "intn_t": 179, "uintn_t": 179, "basi": [179, 294, 295, 328, 329, 375], "2020": 179, "fortran": [179, 340, 548], "interchang": [179, 271, 272, 289, 322], "conjug": [179, 185, 186, 193, 203, 223, 240, 241, 242, 258, 477, 517, 547], "tran": [179, 195, 200, 201, 210, 211, 217, 218, 220, 221, 222, 223, 224, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 279, 280, 281, 282, 300, 301, 302, 303, 304, 305, 324, 325, 334, 335, 336, 337, 338, 339, 428, 429, 430, 455], "conjtran": [179, 210, 211, 217, 220, 221, 222, 223, 240, 241, 242, 279, 280, 281, 282, 324, 325, 334, 335, 336, 337, 338, 339, 428, 429, 430], "hermitian": [179, 186, 187, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 283, 285, 287, 289, 291, 306, 307, 310, 312, 313, 332, 338, 427], "uplo": [179, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 229, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 283, 284, 285, 286, 287, 288, 289, 290, 298, 299, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 332, 333, 338, 339, 340, 427], "triangl": [179, 199, 206, 210, 211, 236, 240, 241, 242, 267, 285, 287, 310, 311, 312, 313, 314, 315, 318, 320, 340, 343, 365], "triangular": [179, 186, 187, 188, 199, 205, 207, 208, 209, 212, 213, 214, 229, 232, 233, 234, 237, 238, 239, 243, 244, 245, 246, 247, 248, 249, 250, 251, 263, 264, 267, 271, 272, 283, 284, 285, 286, 287, 288, 289, 290, 291, 306, 307, 308, 309, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 340, 426, 427, 430, 431], "diag": [179, 191, 243, 244, 245, 246, 247, 248, 249, 250, 251, 324, 325, 427], "diagon": [179, 191, 195, 205, 208, 209, 211, 212, 213, 214, 228, 229, 243, 244, 247, 249, 250, 261, 263, 264, 269, 271, 272, 279, 280, 283, 285, 287, 289, 310, 312, 313, 316, 318, 320, 322, 324, 325, 340, 379, 399, 427, 430], "nonunit": [179, 324, 325, 427], "c_offset": [179, 198], "index_bas": [179, 215, 216, 415, 416, 422, 423], "nonzero": [179, 498], "tradition": 179, "col_major": [179, 437], "uniniti": [179, 257, 415, 416, 417, 418, 422, 423, 424, 425, 426, 428, 429, 430], "computation_error": [179, 261, 263, 267, 269, 271, 275, 279, 283, 285, 287, 289, 292, 294, 298, 300, 302, 304, 306, 310, 312, 316, 318, 320, 322, 324, 326, 328, 332, 334, 336, 338, 428, 429, 430], "batch_error": [179, 264, 272, 276, 280, 295, 307, 313, 329], "familiar": 179, "catch": [179, 577, 843], "subroutin": 179, "inconsist": [179, 252, 253, 257], "issu": [179, 559, 865], "experienc": 179, "verif": 179, "imaginari": [180, 208, 209, 211, 212, 213, 214, 252, 253, 254, 255, 258, 460, 481, 484, 489, 516, 520, 533, 535, 538], "im": [180, 215, 216, 456, 457, 458, 460, 461, 463, 468, 481, 489, 508, 509, 516, 520, 533, 535, 538], "tre": [180, 192, 219], "incx": [180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 200, 201, 202, 203, 204, 205, 207, 208, 209, 212, 213, 214, 215, 216, 219, 225, 227, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 243, 244, 245, 246, 248, 251, 340, 455], "topic": [180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548], "leftarrow": [181, 182, 189, 195, 196, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 220, 222, 223, 225, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 247, 248, 249, 428, 429, 430], "inci": [181, 182, 183, 189, 190, 192, 193, 194, 195, 200, 201, 202, 203, 204, 205, 207, 209, 212, 214, 225, 227, 229, 231, 232, 234, 235, 237, 239, 455], "value_or_point": [181, 182, 183, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 220, 221, 222, 223, 224, 225, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 247, 249, 250, 455], "axpi": [183, 185], "batch_siz": [183, 190, 191, 197, 201, 218, 221, 224, 242, 250, 264, 265, 272, 273, 276, 277, 280, 281, 295, 296, 307, 308, 313, 314, 329, 330], "stridex": [183, 190, 191, 201], "stridei": [183, 190, 201], "group_count": [183, 190, 191, 197, 201, 218, 221, 224, 242, 250, 264, 265, 272, 273, 276, 277, 280, 281, 295, 296, 307, 308, 313, 314, 329, 330], "_batch": [183, 190, 191, 197, 201, 218, 221, 224, 242, 250], "_count": [183, 190, 191, 197, 201, 218, 221, 224, 242, 250], "total_batch_count": [183, 190, 191, 197, 201, 218, 221, 224, 242, 250], "subprogram": 184, "level1": 184, "level2": 184, "level3": 184, "asum": 185, "sdsdot": 185, "dotc": 185, "dotu": 185, "unconjug": [185, 186, 204], "nrm2": 185, "rot": 185, "plane": [185, 225, 227], "rotat": [185, 225, 226, 227, 228], "rotg": 185, "rotm": 185, "rotmg": 185, "scal": 185, "iamax": 185, "iamin": 185, "gbmv": 186, "gemv": [186, 201, 455], "ger": 186, "gerc": 186, "geru": 186, "hbmv": 186, "hemv": 186, "her": 186, "her2": 186, "hpmv": 186, "hpr": 186, "hpr2": 186, "sbmv": 186, "spmv": [186, 431], "spr": [186, 234], "spr2": 186, "symv": 186, "syr": 186, "syr2": 186, "tbmv": 186, "tbsv": 186, "solut": [186, 244, 246, 249, 250, 251, 279, 280, 291, 312, 313, 324, 864], "tpmv": 186, "tpsv": 186, "trmv": 186, "trsv": 186, "hemm": 187, "herk": 187, "her2k": 187, "2k": [187, 210, 240], "symm": 187, "syrk": [187, 242], "syr2k": 187, "trmm": 187, "trsm": [187, 250], "axpy_batch": 188, "gemm_batch": 188, "trsm_batch": 188, "gemmt": 188, "gemm_bia": 188, "imatcopi": [188, 218], "omatcopi": [188, 224], "omatcopy2": 188, "omatadd": [188, 221], "imatcopy_batch": 188, "omatcopy_batch": [188, 221], "omatadd_batch": [188, 224], "dgmm": 191, "stridea": [191, 197, 201, 221, 223, 224, 242, 250], "stridec": [191, 197, 221, 242], "left_right": [191, 206, 236, 247, 249, 250], "mxn": 191, "a_arrai": [191, 221, 224], "c_arrai": [191, 221], "x_arrai": 191, "x_iy_i": [192, 194, 231], "kl": [195, 340], "ku": [195, 340], "super": [195, 205, 229, 243, 244, 261, 340], "ta": [196, 197, 198], "tb": [196, 197, 198], "tc": [196, 197, 225, 226, 300, 302, 304], "int8_t": [196, 197, 198], "value_or_poitn": 196, "strideb": [197, 221, 223, 224, 250], "bias": 198, "scriptstyl": [198, 340], "_offset": 198, "a_offset": 198, "ao": 198, "b_offset": 198, "bo": 198, "uint8_t": [198, 428, 429, 430], "offset_typ": 198, "upper_low": [199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 229, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 283, 284, 285, 286, 287, 288, 289, 290, 298, 299, 304, 305, 306, 309, 310, 311, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 332, 333, 338, 339, 340], "treal": [208, 210, 211, 213], "conjg": [209, 210, 214], "nan": [215, 216, 291, 457, 458, 461, 463, 468, 481, 489, 492, 496, 497, 498, 508, 509, 513, 514, 523, 525, 533, 535, 537, 541], "smallest": [216, 254], "matrix_in_out": 217, "ld_in": [217, 218], "ld_out": [217, 218], "seri": [218, 221, 224, 561], "awai": [218, 221, 223, 224, 527, 756], "matrix_array_in_out": 218, "trans_arrai": [218, 224], "m_arrai": [218, 221, 224], "n_arrai": [218, 221, 224], "alpha_arrai": [218, 221, 224], "ld_in_arrai": 218, "ld_out_arrai": 218, "groupsiz": [218, 221, 224], "stride_a": [221, 224, 242, 264, 265, 272, 273, 276, 277, 280, 281, 295, 296, 307, 308, 313, 314, 329, 330], "stride_b": [221, 224, 280, 281, 313, 314], "stride_c": [221, 242], "b_arrai": [221, 224], "transa_arrai": 221, "transb_arrai": 221, "lda_arrai": [221, 224], "beta_arrai": 221, "ldb_arrai": [221, 224], "ldc_arrai": 221, "lapack": [223, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "adjac": 223, "phantom": 225, "conj": [225, 255, 457, 458, 463, 468, 481, 533, 535, 537, 541, 547], "cartesian": [226, 228, 551, 552], "unitari": [226, 261, 267, 269, 283, 287, 291, 295, 300, 302, 320, 326, 328, 329, 332, 334, 336, 338], "bmatrix": [226, 227, 228, 340], "switch": [227, 228, 365, 768, 841], "21": [227, 228, 340, 354, 389, 507], "22": [227, 228, 340, 354, 389, 482, 534], "yparam": 227, "x1": [228, 343, 460, 484, 516, 535, 538], "y1": [228, 460, 484, 516, 535, 538], "d1": 228, "d2": 228, "sb": 231, "incxi": 231, "unit_nonunit": [243, 244, 245, 246, 248, 251], "unit_diag": [247, 249, 250, 324, 325], "specific": [247, 249], "untouch": 249, "commit": [252, 253, 254, 255, 256, 258, 259], "protect": [252, 253, 618, 632, 792, 799, 800, 829, 837], "friend": [252, 253, 257], "config_valu": [252, 253, 254, 255, 256, 257], "real_real": [252, 253, 254, 255, 259], "config_param": [252, 253, 254, 255, 256, 257], "complex_storag": [252, 253, 254, 255, 259], "descriptor_typ": [252, 253], "inout": [252, 253], "inout_r": [252, 253], "inout_im": [252, 253], "input_typ": [252, 253, 746, 747, 751, 767], "output_typ": [252, 253, 746, 747, 751, 759, 762, 778], "in_r": [252, 253], "in_im": [252, 253], "out_r": [252, 253], "out_im": [252, 253], "suffici": [252, 253, 256, 257, 570], "capac": [252, 253, 551, 552, 553, 583, 584, 591, 604, 619, 633, 646, 647, 662, 675, 690, 704, 718, 732, 743, 852], "commit_statu": [252, 253, 259], "fwd_stride": [254, 255, 259], "resp": [254, 255, 257, 258, 259], "bwd_stride": [254, 255, 259], "number_of_transform": [254, 255, 259], "fwd_distanc": [254, 255, 259], "bwd_distanc": [254, 255, 259], "superscript": 254, "fwd": 254, "bwd": 254, "k_1": [254, 255, 258, 259, 355, 396], "k_2": [254, 255, 258, 259], "k_d": [254, 255, 258, 259], "k_": [254, 258, 368, 371, 392, 393], "thereof": [254, 258, 292, 326], "xwd": 254, "_2": 254, "_d": 254, "_j": 254, "foral": [254, 257, 258], "lbrace": [254, 257, 258, 259], "rbrace": [254, 257, 258, 259], "elementari": [254, 255, 261, 263, 264, 267, 287, 292, 294, 295, 296, 297, 300, 301, 302, 303, 320, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339], "consequ": 254, "complex_complex": [254, 255, 259], "unbatch": 254, "break": 254, "displac": [254, 347, 351, 370, 373, 376, 377, 382, 386, 400, 407], "_k": 254, "consider": [254, 258, 549], "inplac": [254, 255, 259], "placement": [254, 255, 257, 259], "abid": 254, "deprec": [254, 259, 744, 835], "input_strid": [254, 259], "output_strid": [254, 259], "caus": [254, 291, 476, 483, 501, 528, 551, 552, 553, 579, 732, 817, 840, 842], "trigger": [254, 257, 751, 841], "attempt": [254, 570, 598, 615, 672, 687, 729, 754, 760, 762, 763, 787, 795, 801, 802, 829, 830], "revers": [254, 566, 737], "set_valu": [254, 255, 256, 258, 259], "fwd_domain_strid": 254, "bwd_domain_strid": 254, "compute_forward": [254, 255, 257, 258], "compute_backward": [254, 257, 258], "warn": [254, 291, 476, 483, 501, 528], "messag": [254, 576, 746, 747, 748, 750, 753, 754, 755, 756, 759, 760, 762, 763, 764, 765, 767, 772, 773, 774, 775, 777, 778, 779, 780, 781, 826, 828, 836], "IN": 254, "put_strid": 254, "wd_stride": 254, "eq": 255, "not_inplac": [255, 259], "snippet": 255, "n_1": [255, 257, 258, 259, 394, 403], "n_2": [255, 258], "n_3": 255, "n1": [255, 340], "n2": [255, 340], "n3": [255, 340], "dist": 255, "k1": [255, 582, 820], "k2": [255, 582, 820], "k3": 255, "zr": 255, "zi": 255, "decltyp": [255, 808, 844, 846], "fwd_dist": 255, "bwd_dist": 255, "complex_data": 255, "whilst": [256, 257], "workspace_automat": [256, 259], "malloc": [256, 455, 789, 791], "set_workspac": [256, 259], "uncommit": [256, 259], "dom": [256, 257, 258, 259], "myqueu": 256, "workspacebyt": [256, 257], "get_valu": [256, 258, 259], "workspace_external_byt": [256, 257, 259], "workspaceusm": [256, 257], "prec": [257, 258, 259], "workspacebuf": 257, "n_d": [257, 258, 259], "workspace_plac": [257, 259], "workspace_extern": [257, 259], "thereaft": 257, "n_j": [257, 258], "insuffici": [257, 261, 263, 264, 267, 269, 271, 272, 275, 276, 279, 280, 283, 285, 287, 289, 292, 294, 295, 298, 300, 302, 304, 306, 307, 310, 312, 313, 316, 318, 320, 322, 324, 326, 328, 329, 332, 334, 336, 338], "larger": [257, 494, 496, 513, 547, 570, 572, 768, 784], "writabl": [257, 258, 259], "latest": 257, "aforement": 257, "tune": [257, 864], "twiddl": 257, "again": [257, 554, 567], "lack": 257, "period": [258, 259, 344, 352, 353, 354, 366, 387, 388, 389, 390, 401, 786, 838], "ell": 258, "displaystyl": 258, "j_d": 258, "j_2": 258, "j_1": 258, "imath": 258, "j_": 258, "fp64": [258, 259], "suffic": 258, "unambigu": 258, "inde": 258, "symmetri": 258, "roughli": 258, "redund": 258, "k_j": [258, 368], "lbrace1": 258, "constrain": 258, "pmod": 258, "explanatori": [258, 259], "deliv": [258, 259], "hotpath": 258, "meant": 259, "forward_domain": 259, "forward_scal": 259, "backward_scal": 259, "fft": 259, "scratch": 259, "sparsiti": 260, "unmodifi": 260, "pseudorandom": [260, 341, 344, 346, 352, 353, 354, 355, 366, 368, 372, 387, 388, 389, 390, 391, 396, 399, 401, 408], "quasi": [260, 341, 366, 394, 403], "qbp": 261, "pmatrix": 261, "b_1": 261, "q_1b_1p_h": 261, "q_": 261, "q_1b_1p_1": 261, "reflector": [261, 263, 264, 267, 287, 292, 294, 295, 296, 297, 300, 301, 302, 303, 320, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339], "orgbr": [261, 291, 293], "ungbr": [261, 291, 327], "realt": [261, 269, 283, 285, 287], "tauq": [261, 292, 326], "taup": [261, 292, 326], "scratchpad_s": [261, 263, 264, 267, 269, 271, 272, 275, 276, 279, 280, 283, 285, 287, 289, 292, 293, 294, 295, 298, 300, 301, 302, 304, 306, 307, 310, 312, 313, 316, 318, 320, 322, 324, 326, 327, 328, 329, 332, 334, 335, 336, 338], "gebrd_scratchpad_s": [261, 291], "superdiagon": [261, 269, 287, 320], "subdiagon": [261, 267, 287, 320], "off": [261, 283, 285, 287, 316, 318, 320, 547, 576, 768, 786], "had": [261, 263, 264, 267, 269, 271, 272, 275, 276, 279, 280, 283, 285, 287, 289, 292, 294, 295, 298, 300, 302, 304, 306, 307, 310, 312, 313, 316, 318, 320, 322, 324, 326, 328, 329, 332, 334, 336, 338, 746, 751, 755, 760, 762, 764, 767, 779], "gebrd": [262, 291, 292, 293, 326, 327], "wrong": [262, 265, 266, 268, 270, 273, 274, 277, 278, 281, 282, 284, 286, 288, 290, 293, 296, 297, 299, 301, 303, 305, 308, 309, 311, 314, 315, 317, 319, 321, 323, 325, 327, 330, 331, 333, 335, 337, 339], "qr": [263, 264, 283, 291, 294, 295, 300, 316, 328, 329, 334], "pivot": [263, 264, 267, 271, 272, 289, 322], "tau": [263, 264, 265, 267, 287, 292, 294, 295, 296, 298, 300, 302, 304, 320, 326, 328, 329, 330, 332, 334, 336, 338], "geqrf_scratchpad_s": [263, 291], "trapezoid": [263, 264, 267, 271, 272, 365], "stride_tau": [264, 265, 295, 296, 329, 330], "a_i": [264, 265, 272, 273, 276, 277, 280, 281, 295, 296, 307, 308, 313, 314, 329, 330, 474, 495, 499, 515, 544], "tau_i": [264, 265, 295, 296, 329, 330], "geqrf_batch_scratchpad_s": [264, 291], "r_i": [264, 368], "q_i": [264, 291, 295, 296, 329, 330], "q_ir_i": 264, "m_g": [264, 265, 272, 273, 295, 296, 329, 330], "n_g": [264, 265, 272, 273, 276, 277, 280, 281, 295, 296, 307, 308, 313, 314, 329, 330], "_g": [264, 273, 276, 277, 280, 281, 307, 308, 313, 314], "geqrf_batch": [265, 291, 295, 329], "lda_g": [265, 272], "geqrf": [266, 291, 294, 300, 328, 334], "rq": [267, 291, 300, 302, 334, 336], "gerqf_scratchpad_s": [267, 291], "subarrai": 267, "gerqf": [268, 291, 300, 302, 334, 336], "rectangular": [269, 291, 300, 302, 334, 336, 365], "svd": 269, "job": [269, 270, 283, 284, 285, 286, 316, 317, 318, 319], "jobu": [269, 270], "jobvt": [269, 270], "ldu": [269, 270], "vt": [269, 270], "ldvt": [269, 270], "allvec": [269, 270], "somevec": [269, 270], "overwritevec": [269, 270], "novec": [269, 270, 283, 284, 285, 286, 316, 317, 318, 319], "gesvd_scratchpad_s": [269, 291], "columnwis": 269, "rowwis": 269, "ne": 269, "referenc": [269, 286, 288, 306, 309, 317, 324, 325, 340, 749, 782, 841, 843], "bdsqr": 269, "did": [269, 283, 285, 316, 318], "converg": [269, 283, 285, 316, 318], "unconverg": 269, "ubv": 269, "gesvd": [270, 291], "lu": [271, 272, 275, 276, 279, 280, 291, 307, 313], "ipiv": [271, 272, 273, 275, 276, 277, 279, 280, 281, 289, 322], "getrf_scratchpad_s": [271, 291], "ii": [271, 289, 322], "p_il_iu_i": 272, "l_i": [272, 307, 313, 314], "stride_ipiv": [272, 273, 276, 277, 280, 281], "ipiv_i": [272, 277, 281], "getrf_batch_scratchpad_s": [272, 291], "getrf_batch": [273, 276, 280, 291], "getrf": [274, 275, 279, 291], "invers": [275, 276, 291, 310, 343, 365, 457, 458, 459, 462, 463, 464, 465, 466, 467, 468, 469, 473, 485, 486, 487, 488, 503, 504, 505, 547], "getri_scratchpad_s": [275, 291], "getri_batch_scratchpad_s": [276, 291], "getri_batch": [277, 291], "getri": [278, 291], "hx": [279, 282, 324, 325], "nrh": [279, 280, 281, 282, 312, 313, 314, 315, 324, 325], "getrs_scratchpad_s": [279, 291], "a_ix_i": [280, 281, 313], "tx_i": [280, 281], "hx_i": [280, 281], "xi": 280, "getrs_batch_scratchpad_s": [280, 291], "trans_g": 280, "onemkl_lapack_getrf_batch_usm": 280, "getrs_batch": [281, 291], "a_ihx_i": 281, "nrhsg": 281, "getr": [282, 291], "z_": [283, 316, 408, 566], "az_i": 283, "z_i": [283, 316, 515], "pal": [283, 316], "walker": [283, 316], "ql": [283, 316], "jobz": [283, 284, 285, 286, 316, 317, 318, 319], "butter": 283, "heevd_scratchpad_s": [283, 291], "ascend": [283, 285, 316, 318, 426], "tridiagon": [283, 285, 287, 291, 298, 304, 316, 318, 320, 332, 338], "submatrix": [283, 285, 316, 318], "ly": [283, 285, 316, 318, 364], "mod": [283, 285, 316, 318, 341, 352, 353, 354, 368, 387, 388, 389, 399, 408], "heevd": [284, 291], "eigenproblem": [285, 291, 318], "bx": [285, 286, 318, 319], "abx": [285, 286, 318, 319], "bax": [285, 286, 318, 319], "ityp": [285, 286, 318, 319], "hegvd_scratchpad_s": [285, 291], "bz": [285, 318], "choleski": [285, 291, 306, 307, 310, 312, 313, 318], "ll": [285, 306, 312, 315, 318], "minor": [285, 306, 307, 318, 577, 579], "hegvd": [286, 291], "chetrd": 287, "zhetrd": 287, "qtq": [287, 298, 304, 320, 332, 338], "hetrd_scratchpad_s": [287, 291], "hetrd": [288, 291, 332, 333, 338, 339], "kaufman": [289, 291, 322], "udu": [289, 290, 322, 323], "ldl": [289, 290, 322, 323], "int_64": [289, 322], "hetrf_scratchpad_s": [289, 291], "hetrf": [290, 291], "packag": [291, 749, 864], "invert": [291, 547], "orgqr": [291, 297], "orgqr_scratchpad_s": [291, 294], "ormqr": [291, 301], "ormqr_scratchpad_s": [291, 300], "ormrq": [291, 303], "ormrq_scratchpad_s": [291, 302], "potrf": [291, 309, 310, 312], "potrf_scratchpad_s": [291, 306], "potri": [291, 311], "potri_scratchpad_s": [291, 310], "potr": [291, 315], "potrs_scratchpad_s": [291, 312], "sytrf": [291, 323], "sytrf_scratchpad_s": [291, 322], "trtr": [291, 325], "trtrs_scratchpad_s": [291, 324], "ungqr": [291, 331], "ungqr_scratchpad_s": [291, 328], "unmqr": [291, 335], "unmqr_scratchpad_s": [291, 334], "unmrq": [291, 337], "unmrq_scratchpad_s": [291, 336], "orgbr_scratchpad_s": [291, 292], "orgtr": [291, 299], "orgtr_scratchpad_s": [291, 298], "sytrd": [291, 298, 299, 304, 305, 321], "ormtr": [291, 305], "ormtr_scratchpad_s": [291, 304], "syevd": [291, 317], "syevd_scratchpad_s": [291, 316], "sygvd": [291, 319], "sygvd_scratchpad_s": [291, 318], "sytrd_scratchpad_s": [291, 320], "ungbr_scratchpad_s": [291, 326], "ungtr": [291, 333], "ungtr_scratchpad_s": [291, 332], "unmtr": [291, 339], "unmtr_scratchpad_s": [291, 338], "orgqr_batch": [291, 296], "orgqr_batch_scratchpad_s": [291, 295], "potrf_batch": [291, 308, 313], "potrf_batch_scratchpad_s": [291, 307], "potrs_batch": [291, 314], "potrs_batch_scratchpad_s": [291, 313], "ungqr_batch": [291, 330], "ungqr_batch_scratchpad_s": [291, 329], "754": [291, 470, 507, 535], "inf": [291, 476, 483, 501, 528], "unexpect": 291, "unstabl": 291, "gen": [292, 293, 326, 327], "constraint": [292, 293, 326, 327, 783, 787, 844, 864], "orthonorm": [294, 295, 328, 329], "k_g": [295, 296, 329, 330], "kg": 296, "ai": [296, 498, 525], "qc": [300, 302, 304, 334, 336, 338], "cq": [300, 302, 304, 334, 336, 338], "onemkl_lapack_sytrd": 304, "tu_i": [307, 313, 314], "hu_i": [307, 313, 314], "l_il_i": [307, 313, 314], "ng": 308, "ldag": 308, "tu": 312, "hu": 312, "rhs_g": 314, "hh": [334, 336], "hc": [334, 336], "visual": [340, 864], "a_": [340, 354, 389, 390, 391, 408], "13": [340, 344, 353, 354, 366, 388, 389, 542, 553], "1n": 340, "2n": 340, "31": [340, 344, 352, 366, 387, 390, 391, 399], "33": 340, "3n": 340, "vdot": 340, "ddot": 340, "m1": [340, 678, 693], "m2": [340, 678, 693], "m3": 340, "mn": 340, "underbrac": 340, "smallmatrix": 340, "34": [340, 391], "35": 340, "43": 340, "53": [340, 507], "scriptscriptstyl": 340, "ldm": 340, "sequenti": [340, 366, 557, 565, 566, 745, 817, 851, 853], "bratley88": [341, 366, 403], "bratlei": [341, 394, 403], "fox": [341, 394, 403], "sobol": [341, 366], "quasirandom": 341, "vol": 341, "14": [341, 402, 553], "88": 341, "march": 341, "1988": 341, "bratley92": [341, 366, 394], "niederreit": [341, 366], "discrep": 341, "simul": [341, 366, 390, 391], "195": 341, "213": [341, 479, 530, 531, 539], "juli": 341, "1992": 341, "coddington94": [341, 366], "coddington": 341, "mont": [341, 366, 391], "carlo": [341, 366, 391], "phy": 341, "547": 341, "1994": 341, "ecuyer99": [341, 344, 352, 366, 387], "ecuy": 341, "pierr": 341, "congruenti": [341, 344, 352, 353, 366, 387, 388, 408], "good": [341, 352, 354, 387, 389], "lattic": 341, "68": 341, "225": 341, "249": [341, 399], "260": 341, "1999": 341, "ecuyer99a": [341, 344, 352, 354, 366, 389], "recurs": [341, 344, 354, 366, 389, 551, 552, 553, 557, 559, 565, 571, 793, 796, 797, 799, 800, 801, 817, 829, 830], "research": 341, "47": 341, "159": 341, "164": 341, "kirkpatrick81": [341, 366, 399], "kirkpatrick": 341, "stoll": 341, "journal": 341, "40": [341, 403], "517": 341, "526": 341, "1981": 341, "matsumoto98": [341, 366, 390, 391], "matsumoto": 341, "nishimura": 341, "mersenn": [341, 366, 390, 391, 401], "twister": [341, 366, 390, 391, 401], "623": [341, 390], "equidistribut": [341, 390], "30": [341, 365, 390, 391], "januari": 341, "1998": 341, "matsumoto00": [341, 366, 391], "56": 341, "69": [341, 391], "ed": 341, "spanier": 341, "2000": 341, "http": 341, "www": 341, "hiroshima": 341, "ac": 341, "jp": 341, "7em": 341, "mat": 341, "mt": 341, "dc": 341, "html": 341, "nag": [341, 344, 353, 366, 388, 408], "uk": 341, "numerical_librari": 341, "asp": 341, "saito08": [341, 366, 401], "saito": 341, "128": [341, 344, 354, 355, 366, 368, 396, 401], "2006": 341, "607": 341, "622": 341, "2008": [341, 470, 507], "articl": 341, "earticl": 341, "salmon11": [341, 344, 355, 366, 368, 396], "salmon": 341, "john": 341, "moral": 341, "dror": 341, "ron": 341, "shaw": 341, "david": 341, "easi": [341, 565], "sc": 341, "2011": 341, "sobol76": [341, 366], "levitan": 341, "yu": 341, "uniformli": [341, 342, 343, 358, 359, 360, 364, 365, 404, 405, 406, 572], "cube": [341, 365, 471, 504, 521, 522, 547, 756, 766], "preprint": 341, "institut": 341, "ussr": 341, "academi": 341, "1976": 341, "russian": 341, "mt2203": [341, 366, 390], "mt2002": 341, "emt19937ar": 341, "fip": [341, 368], "197": [341, 368], "feder": 341, "encrypt": [341, 368], "ae": [341, 366, 368], "brng": [342, 343, 346, 355, 364, 368, 396], "gaussian": [342, 343, 362, 364, 365, 409, 410], "lognorm": [342, 343, 347, 364, 365], "uniform_bit": [342, 364], "poisson": [342, 343, 364, 365, 398], "bernoulli": [342, 343, 364, 365, 371], "uniform_method": [343, 359, 360, 365, 404, 405], "gaussian_method": [343, 348, 365, 378], "box_muller2": [343, 348, 351, 365, 378, 379, 386], "x2": [343, 460, 484, 516, 535, 538], "u1": 343, "u2": 343, "u_1": [343, 365], "sin": [343, 365, 481, 532, 533, 534, 535, 547], "u_2": [343, 365], "exponential_method": [343, 347, 364, 365, 376], "icdf": [343, 345, 347, 365, 369, 373, 376, 378, 379, 381, 382, 384, 386, 400, 407], "icdf_accur": [343, 347, 364, 365, 376, 386, 400, 407], "cumul": [343, 345, 347, 348, 351, 356, 359, 360, 365, 369, 370, 371, 373, 374, 376, 377, 378, 381, 382, 383, 384, 386, 393, 397, 398, 400, 404, 405, 407, 472, 473, 485, 486, 488, 547], "lognormal_method": [343, 351, 364, 365, 386], "bernoulli_method": [343, 345, 365, 369], "poisson_method": [343, 356, 365, 397], "devroy": [343, 356], "27": [343, 365], "parallelogram": [343, 365], "tail": [343, 365, 753], "mrg32k3a": [344, 346, 366, 402], "philox4x32x10": [344, 346, 358, 361, 366, 409], "philox4x32": [344, 355, 366], "mcg31m1": [344, 346, 366, 385, 402], "mcg": [344, 352, 353, 366, 387], "1132489760": [344, 352, 366, 387], "mcg59": [344, 346, 358, 366], "59": [344, 353, 366, 388], "trial": [345, 369, 371, 381, 383, 392], "f_p": 345, "inttyp": [345, 356, 369, 371, 381, 383, 392, 393, 397, 398], "method_typ": [345, 347, 348, 351, 356, 359, 360, 369, 370, 371, 373, 374, 376, 377, 378, 379, 381, 382, 383, 384, 386, 392, 393, 397, 398, 400, 404, 405, 407], "uint32_t": [345, 346, 352, 353, 354, 355, 356, 358, 360, 369, 372, 379, 381, 383, 387, 389, 390, 391, 392, 393, 394, 399, 401, 403, 406, 408], "uinttyp": [346, 358, 372, 406], "scalefactor": [347, 351, 370, 373, 376, 382, 384, 386, 400, 407], "densiti": [347, 348, 351, 359, 379], "realtyp": [347, 348, 351, 359, 370, 373, 374, 376, 377, 378, 379, 382, 384, 386, 400, 404, 407], "stddev": [348, 378], "dy": [348, 370, 374, 377, 378], "int_": [348, 472], "phi": [348, 351, 386, 485, 486, 488], "distr": [349, 361, 380, 409], "vec_siz": [349, 352, 353, 354, 355, 361], "subject": [351, 386, 865], "displ": [351, 386], "earlier": [352, 387, 566, 768, 814], "possess": [352, 387, 399], "ax_": [352, 353, 387, 388], "u_n": [352, 353, 354, 355, 368, 387, 388, 389, 394, 396, 399, 401, 403, 408], "vecsiz": [352, 353, 354, 355], "default_se": [352, 353, 354, 355, 368, 387, 388, 389, 390, 391, 396, 399, 401, 408], "0x7fffffff": [352, 387, 390], "57": [353, 388], "approx": [354, 389], "191": [354, 389], "m_": [354, 389, 408], "y_": [354, 389, 390, 391, 408, 566], "m_2": [354, 389, 408], "z_n": [354, 389, 408], "m_1": [354, 389, 408], "1403580": [354, 389], "810728": [354, 389], "209": [354, 389], "527612": [354, 389], "1370589": [354, 389], "22853": [354, 389], "initializer_list": [354, 355, 357, 368, 389, 390, 391, 396, 401, 402, 408, 583, 584, 591, 593, 594, 598, 604, 605, 606, 615, 619, 620, 621, 629, 633, 634, 635, 643, 646, 647, 648, 654, 655, 662, 663, 664, 672, 675, 677, 678, 687, 690, 692, 693, 701, 704, 706, 707, 715, 718, 720, 721, 729, 732, 733, 734, 735], "geqslant": [354, 389, 399, 408], "prove": [354, 389], "num_to_skip": [354, 355, 357, 402], "k_0": [355, 368, 396], "c_n": [355, 368, 396], "omega_n": [355, 396], "l_1": [355, 396], "r_1": [355, 396], "l_0": [355, 396], "r_0": [355, 396], "96": [355, 396], "mullo": [355, 396], "0xd2511f53": [355, 396], "mulhi": [355, 396], "0xcd9e8d57": [355, 396], "oplu": [355, 368, 390, 391, 394, 396, 399, 401, 403], "0xbb67ae85": [355, 396], "0x9e3779b9": [355, 396], "r_": [355, 396, 401], "4n": [355, 396, 401], "quadrupl": [355, 396, 401], "r_n": [355, 368, 396, 401], "\u03bb": 356, "num": [357, 402], "_skip": [357, 402], "notin": [359, 404], "numeric_limit": [360, 405], "callabl": [362, 412, 841], "your": [362, 394, 403, 578, 782, 786, 845, 864, 865], "binomi": [362, 364, 365, 393, 410], "skip_ahead": [363, 409, 411], "laplac": 364, "weibul": [364, 365, 400], "cauchi": [364, 365], "rayleigh": [364, 365], "gumbel": [364, 365], "extrem": 364, "chi_squar": [364, 365], "chi": [364, 365, 374], "gaussian_mv": [364, 365], "multivari": [364, 379], "geometr": [364, 365], "hypergeometr": [364, 365], "poisson_v": [364, 365], "negative_binomi": [364, 365], "pascal": 364, "multinomi": [364, 365], "demand": [364, 850, 864], "irrespect": 364, "unform_method": 364, "weibull_method": [364, 365, 407], "rayleigh_method": [364, 365, 400], "box_muller2_accur": [364, 365, 386], "gamma_method": [364, 365, 377], "marsaglia_accur": [364, 365, 377], "beta_method": [364, 365, 370], "cja_accur": [364, 365, 370], "standard_accur": 365, "box_mul": [365, 378, 379], "thru": 365, "2lnu_1": 365, "cauchy_method": [365, 373], "geometric_method": [365, 381], "gumbel_method": [365, 382], "marsaglia": [365, 377], "properli": 365, "cja": [365, 370], "cheng": 365, "jonhnk": 365, "atkinson": 365, "johnk": 365, "p2": 365, "852": 365, "956": 365, "chi_square_method": [365, 374], "gamma_bas": [365, 374], "odd": [365, 520, 542], "15": [365, 390, 391], "binomial_method": [365, 371], "btpe": [365, 371], "ntrial": [365, 371, 392], "ptpe": [365, 397], "gaussian_icdf_bas": [365, 397, 398], "cdf": 365, "lookup": [365, 583, 591, 598, 604, 615, 619, 629, 633, 643, 646, 654, 662, 672, 675, 687, 690, 701, 704, 715, 718, 729, 732, 787, 789, 791, 862], "poisson_v_method": [365, 398], "hypergeometric_method": [365, 383], "h2pe": [365, 383], "negative_binomial_method": [365, 393], "nbar": [365, 393], "multinomial_method": [365, 392], "poisson_icdf_bas": [365, 392], "gaussian_mv_method": [365, 379], "boxmul": 365, "boxmuller2": 365, "default_engin": 366, "231": [366, 387], "r250": 366, "gfsr": [366, 399], "250": [366, 399], "103": [366, 399], "wichmann_hil": 366, "wichmann": [366, 408], "hill": [366, 408], "273": [366, 408], "19937": [366, 390, 401], "6024": [366, 391], "2203": 366, "mutual": [366, 392, 794, 795, 829, 832, 835], "sfmt19937": 366, "ars5": 366, "ni": 366, "nondeterminist": [366, 565], "leapfrog": [366, 409, 411], "1313": 366, "259": 366, "c_0": 368, "subbyt": 368, "shiftrow": 368, "mixcolumn": 368, "addroundkei": 368, "lo": 368, "0x9e3779b97f4a7c15": 368, "hi": 368, "0xbb67ae8584caa73b": 368, "rcl": [369, 370, 371, 374, 376, 377, 381, 383, 384, 386, 393, 397, 398, 400, 404, 405, 407], "variat": [371, 379, 412, 445, 448], "truli": 372, "arctan": 373, "degre": [374, 480, 532, 817], "freedom": 374, "x_a": 377, "dxd": 379, "det": 379, "dimen": [379, 394, 403], "distrtyp": 380, "enginetyp": [380, 385, 402], "lot": 383, "bigcup": 383, "unmark": [383, 763], "k_mc": 383, "s_l": 383, "laplace_method": 384, "particularli": 385, "engine_1": [385, 402], "engine_2": [385, 402], "engine_3": [385, 402], "twist": 390, "624": 390, "397": 390, "0x80000000": 390, "0x9d2c5680": 390, "0xefc60000": 390, "18": [390, 391], "a_j": [390, 391], "32x32": [390, 391], "ccccc": [390, 391], "0x9908b0df": 390, "0xffffffe0": 391, "0x1f": 391, "b_j": 391, "engine_idx": [391, 408], "outcom": 392, "x_k": 392, "theoret": [394, 399], "asymptot": 394, "318": 394, "irreduc": 394, "polynomi": 394, "v_c": [394, 403], "hypercub": [394, 403], "default_dimensions_numb": [394, 403], "irred_polynomi": 394, "ke": [397, 398], "ampl": [399, 570], "foundat": [399, 865], "cryptograph": 399, "69069x_": 399, "7k": 399, "247": 399, "156": 401, "w_n": [401, 408], "w_0": [401, 408], "w_m": 401, "wb": 401, "wc": 401, "wd": 401, "0xbffffff6": 401, "0xdffaffff": 401, "0xddfecb7f": 401, "0xdfffffef": 401, "2nd": [402, 433, 434, 435, 436, 446, 447, 460, 466, 467, 478, 484, 494, 496, 497, 498, 502, 507, 513, 514, 516, 517, 519, 520, 523, 525, 538], "3rd": [402, 433, 434, 435, 436, 446, 447], "1st": [402, 460, 466, 467, 478, 484, 494, 496, 497, 498, 502, 505, 507, 512, 513, 514, 516, 517, 519, 520, 523, 524, 525, 537, 538], "direction_numb": 403, "372": 408, "112": 408, "prime": 408, "16718909": 408, "16776917": 408, "y_0": 408, "z_0": 408, "m_3": 408, "m_4": 408, "sycl_buff": 409, "usm_ptr": 409, "finit": [412, 460, 481, 484, 489, 498, 516, 519, 520, 525, 533, 535, 538, 851, 852, 854], "s_0": 412, "rightarrow": 412, "transit": 412, "symbol": [412, 579], "u_0": 412, "s_": 412, "prng": 412, "imit": 412, "dense_vector_handl": 413, "dense_vector_handle_t": [413, 418, 420, 425, 429, 430], "init_dense_vector": [413, 420, 425], "set_dense_vector_data": [413, 418], "release_dense_vector": [413, 418, 425], "dense_matrix_handl": 413, "dense_matrix_handle_t": [413, 417, 419, 424, 428], "init_dense_matrix": [413, 419, 424], "set_dense_matrix_data": [413, 417], "release_dense_matrix": [413, 417, 424], "matrix_handl": 413, "matrix_handle_t": [413, 415, 416, 421, 422, 423, 426, 428, 429, 430], "init_coo_matrix": [413, 421, 422], "init_csr_matrix": [413, 421, 423], "set_coo_matrix_data": [413, 415], "set_csr_matrix_data": [413, 416], "set_matrix_properti": 413, "release_sparse_matrix": [413, 415, 416, 422, 423], "coo": [414, 415, 422, 426], "onemkl_sparse_supported_typ": 414, "row_ind": [414, 415, 422], "col_ind": [414, 415, 416, 422, 423], "val": [414, 415, 416, 417, 418, 422, 423, 424, 425, 554, 591, 604, 619, 633, 662, 675, 690, 704, 718, 780], "subordin": [414, 842], "num_row": [414, 415, 416, 417, 422, 423, 424], "num_col": [414, 415, 416, 417, 422, 423, 424], "nnz": [414, 415, 416, 422, 423], "row_ptr": [414, 416, 423], "clarifi": [415, 416], "indextyp": [415, 416, 422, 423, 432], "p_smhandl": [415, 416], "null": [415, 416, 422, 423, 829], "p_dmhandl": 417, "ld": [417, 424], "dense_layout": [417, 424], "p_dvhandl": 418, "dmhandl": [419, 424], "upon": [419, 420, 421, 428, 429, 430, 581, 844], "dvhandl": [420, 425], "smhandl": [421, 422, 423, 426], "matrix_properti": 426, "strong": 426, "matrix_view": [426, 428, 429, 430], "type_view": [427, 430], "uplo_view": 427, "diag_view": 427, "matrix_desc": 427, "mathsf": [428, 429, 430], "spmm_descr_t": 428, "p_spmm_descr": 428, "default_alg": [428, 429, 430], "no_optimize_alg": [428, 429, 430], "coo_alg1": [428, 429], "coo_alg2": [428, 429], "coo_alg3": 428, "coo_alg4": 428, "csr_alg1": [428, 429], "csr_alg2": [428, 429], "csr_alg3": [428, 429], "reproduc": [428, 429, 430, 865], "atom": [428, 429, 430, 476, 501, 528], "sorted": [428, 429, 430], "spmm_buffer_s": 428, "opa": [428, 429, 430], "opb": 428, "a_view": [428, 429, 430], "a_handl": [428, 429, 430], "b_handl": 428, "c_handl": 428, "alg": [428, 429, 430, 567, 604, 619, 633, 646, 662, 772], "temp_buffer_s": [428, 429, 430], "spmm_optim": 428, "spmv_descr_t": 429, "p_spmv_descr": 429, "spmv_buffer_s": 429, "x_handl": [429, 430], "y_handl": [429, 430], "spmv_optim": 429, "spsv_descr_t": 430, "p_spsv_descr": 430, "spsv_buffer_s": 430, "spsv_optim": 430, "matrix_descr": 430, "spmm": 431, "spsv": 431, "4th": [433, 434, 435, 436, 446, 447], "observationslayout": [433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454], "central_moment_2": [433, 434], "central_moment_3": [433, 434], "central_moment_4": [433, 434], "one_pass": [433, 435, 438, 442, 446, 447, 450, 453], "central_sum_2": [435, 436], "central_sum_3": [435, 436], "central_sum_4": [435, 436], "consolid": [437, 445], "n_dims_": 437, "n_observations_": 437, "observations_": 437, "indices_": 437, "n_dim": [437, 440, 452], "n_observ": [437, 440, 452], "nt64_t": 440, "_observ": 440, "fourth": [445, 448], "skew": [445, 448], "excess": 445, "kurtosi": [445, 448], "raw_moment_2": 446, "raw_moment_3": 446, "raw_moment_4": 446, "raw_sum_2": 447, "raw_sum_3": 447, "raw_sum_4": 447, "raw_sum": 448, "central_sum": 448, "raw_moment": 448, "central_mo": 448, "min_max": 448, "make_dataset": [449, 452], "1000": [452, 554, 566, 579], "dataset_ptr": 452, "mean_ptr": 452, "alpha_ptr": 455, "beta_ptr": 455, "liter": [455, 837], "malloc_host": 455, "anyth": [455, 753], "slightli": 455, "not_defin": [456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544], "qnan": [456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 499, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 515, 516, 518, 520, 521, 522, 523, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544], "snan": [456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 499, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 515, 516, 518, 520, 521, 522, 523, 526, 527, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544], "hypot": [456, 547], "set_mod": [456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 548], "cosin": [457, 458, 459, 475, 479, 480, 481, 482, 531, 545, 547], "error_handl": [457, 458, 459, 460, 462, 464, 468, 472, 473, 475, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 498, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 516, 517, 519, 520, 522, 523, 524, 525, 530, 531, 532, 533, 534, 537, 538, 539, 540, 542, 543], "errhandl": [457, 458, 459, 460, 462, 464, 468, 472, 473, 475, 479, 480, 481, 482, 484, 486, 487, 488, 489, 490, 491, 492, 493, 498, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 516, 517, 519, 520, 521, 522, 523, 524, 525, 530, 531, 532, 533, 534, 537, 538, 539, 540, 542, 543], "\u03c0": [457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 480, 482, 508, 532, 534, 540, 542, 547], "errdom": [457, 458, 459, 462, 464, 468, 473, 475, 476, 479, 480, 482, 483, 487, 488, 492, 501, 505, 508, 509, 510, 511, 512, 520, 522, 523, 525, 528, 530, 531, 532, 534, 537, 539, 540, 542, 543], "create_error_handl": [457, 458, 459, 460, 462, 464, 468, 472, 473, 475, 479, 480, 481, 482, 484, 486, 487, 488, 489, 490, 491, 492, 493, 498, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 516, 517, 519, 520, 521, 522, 523, 524, 525, 530, 531, 532, 533, 534, 537, 538, 539, 540, 542, 543, 548], "nonneg": [458, 523], "aco": [459, 547], "y2": [460, 484, 516, 535, 538], "la": [460, 479, 480, 482, 500, 507, 516, 520, 529, 530, 531, 532, 534, 538, 539, 540, 542], "accuracy_warn": [460, 476, 483, 501, 507, 516, 520, 528, 538], "atan2": [461, 547], "sine": [462, 463, 464, 475, 530, 531, 532, 533, 534, 545, 547], "asinh": [462, 547], "atanh": [465, 547], "quadrant": [466, 467, 547], "ad2d": 466, "arctang": [466, 467], "sing": [468, 473, 476, 483, 484, 487, 488, 492, 498, 501, 503, 504, 505, 506, 508, 509, 510, 511, 528, 543], "atan": [469, 547], "ieee754": 470, "ansi": [470, 507], "erfc": [472, 485, 488, 547], "cdfnorm": [473, 485, 486, 547], "erfcinv": [473, 488, 547], "erfinv": [473, 487, 547], "2x": [473, 485, 486, 487, 488], "old_statu": [476, 528], "216": [479, 530, 531, 539], "enhanc": [479, 480, 482, 500, 529, 530, 531, 532, 534, 539, 540, 542], "cosh": [479, 547], "180": [480, 532, 540, 547], "52": [480, 532], "flt_max": [481, 489, 490, 491, 493, 502, 522, 523, 533, 547], "log2": [481, 547], "dbl_max": [481, 489, 490, 491, 493, 502, 523, 533, 547], "ci": [481, 533, 535, 547], "51": [482, 534], "status_arrai": 483, "fixup": 483, "copysign": [483, 542, 547], "errarrai": 483, "status_cod": 483, "int_0": [485, 486, 487, 488], "int_x": [486, 492], "complimentari": 487, "cdfnorminv": [487, 488, 547], "e_1": 492, "int_1": 492, "xt": 492, "minu": [495, 526, 547], "modulu": [498, 547], "trunc": [498, 547], "provis": 500, "beyond": [506, 543], "scalea": 507, "shifta": 507, "scaleb": 507, "shiftb": 507, "addend": 507, "correct": [507, 559], "2emin": 507, "emax": 507, "2emax": 507, "\u03b41": 507, "\u03b42": 507, "emin": 507, "126": 507, "1022": 507, "1023": 507, "ifscalea": 507, "ifscaleb": 507, "fmax": [513, 547], "fmin": [514, 547], "truncat": [515, 764], "infinit": 519, "subnorm": 519, "treatment": [523, 524], "halfwai": 527, "new_statu": 528, "former": [528, 529], "new_mod": 529, "old_mod": 529, "sinh": [530, 547], "z1": 535, "z2": 535, "i2": [535, 561], "quiet": 535, "intersect": 535, "cpp": 538, "tan": [540, 541, 542, 547], "38": 540, "67": [540, 542], "erro": 541, "nonlinear": 545, "graphic": 545, "sinco": [546, 547], "sqr": 547, "mulbyconj": 547, "linearfrac": 547, "fmod": 547, "remaind": [547, 551, 552, 553], "inv": 547, "invsqrt": 547, "cbrt": 547, "invcbrt": 547, "pow2o3": 547, "pow3o2": 547, "powx": 547, "powr": 547, "exp2": 547, "exp10": 547, "expm1": 547, "log10": 547, "log1p": 547, "logb": 547, "asin": 547, "cospi": 547, "sinpi": 547, "tanpi": 547, "acospi": 547, "asinpi": 547, "atanpi": 547, "atan2pi": 547, "cosd": 547, "sind": 547, "tand": 547, "acosh": 547, "lgamma": 547, "tgamma": 547, "expint1": 547, "nearbyint": 547, "rint": 547, "inexact": 547, "modf": 547, "nextaft": 547, "fdim": 547, "maxmag": 547, "minmag": 547, "get_mod": 548, "set_statu": 548, "get_statu": 548, "clear_statu": 548, "subdivid": [549, 570, 571, 817], "worth": 549, "acknowledg": 549, "collaborative_call_onc": [550, 555], "collaborative_once_flag": 550, "parallel_reduc": [550, 553, 554, 557, 566, 573, 574, 804, 811, 812, 813, 817], "parallel_deterministic_reduc": 550, "parallel_scan": [550, 553, 568, 573, 574, 814, 815, 816, 817], "pre_scan_tag": [550, 566, 814], "final_scan_tag": [550, 566, 814], "parallel_for_each": [550, 556, 805, 808], "feeder": [550, 808], "parallel_invok": 550, "parallel_pipelin": [550, 562, 563, 564], "filter_mod": [550, 561], "flow_control": [550, 562, 770, 806, 825], "parallel_sort": [550, 805], "blocked_rang": [550, 551, 552, 554, 565, 566, 570, 571, 573, 574, 804, 817, 837], "blocked_range2d": [550, 552, 573, 574, 804, 817], "blocked_range3d": [550, 573, 574, 804, 817], "loop": [550, 553, 559, 569, 570, 571, 572, 745, 753, 817], "auto_partition": [550, 559, 565, 566], "affinity_partition": [550, 559, 565], "static_partition": [550, 557, 559, 565], "simple_partition": [550, 557, 559, 565, 566, 570], "i0": 551, "j0": 551, "i1": [551, 561], "j1": 551, "tbb": [551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 579, 582, 583, 585, 589, 591, 592, 594, 604, 606, 610, 618, 619, 621, 624, 632, 633, 635, 638, 646, 648, 654, 656, 662, 664, 667, 675, 678, 690, 693, 704, 707, 718, 721, 732, 735, 744, 746, 747, 748, 749, 750, 751, 752, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 783, 786, 787, 788, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 806, 808, 825, 831, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 851, 852, 859, 862], "rowvalu": [551, 552], "colvalu": [551, 552], "row_range_typ": [551, 552], "col_range_typ": [551, 552], "row_begin": [551, 552], "row_end": [551, 552], "size_typ": [551, 552, 553, 583, 589, 590, 591, 593, 595, 597, 602, 604, 609, 616, 617, 619, 623, 630, 631, 633, 637, 644, 645, 646, 647, 652, 654, 661, 662, 666, 673, 674, 675, 676, 677, 678, 680, 682, 688, 689, 690, 691, 692, 693, 694, 696, 702, 703, 704, 705, 706, 707, 708, 710, 716, 717, 718, 719, 720, 721, 722, 724, 730, 731, 732, 733, 734, 736, 741, 742, 743, 787, 789, 791, 819, 852, 857, 859], "row_grains": [551, 552], "col_begin": [551, 552], "col_end": [551, 552], "col_grains": [551, 552], "proportional_split": [551, 552, 553, 573, 817, 818], "is_divis": [551, 552, 553, 559, 565, 570, 571, 817], "statement": [551, 552, 553, 617, 631, 645, 674, 703, 731, 829, 830], "9": [551, 552, 577], "subrang": [551, 552, 553, 557, 559, 565, 566, 570, 571, 572, 617, 631, 645, 674, 689, 703, 717, 731, 811, 812, 817, 818], "repeat": [551, 552, 567, 837], "pagevalu": 552, "page_range_typ": 552, "page_begin": 552, "page_end": 552, "page_grains": 552, "splittabl": [553, 803, 817], "const_iter": [553, 583, 586, 591, 596, 601, 604, 608, 609, 614, 615, 617, 619, 622, 623, 628, 629, 631, 633, 636, 637, 642, 643, 645, 654, 657, 662, 665, 666, 671, 672, 674, 675, 681, 682, 686, 687, 689, 690, 695, 696, 700, 701, 703, 704, 709, 710, 714, 715, 717, 718, 723, 724, 728, 729, 731, 732, 737, 741, 852, 855, 859], "grainsiz": [553, 591, 601, 732, 741, 817, 819, 852, 855], "blockedrangevalu": [553, 803], "measur": [553, 862], "despit": 553, "mere": 553, "lazi": 554, "cachedproperti": 554, "foo": [554, 837, 854], "lazydata": 554, "getproperti": 554, "serial": [554, 559, 561, 565, 566, 586, 590, 596, 603, 617, 631, 645, 653, 657, 661, 674, 676, 689, 691, 703, 705, 717, 719, 731, 743, 760, 766, 771, 778, 781, 817, 840, 858], "collabor": 554, "inlet": 556, "moveconstruct": [556, 567], "bodi": [556, 557, 558, 559, 562, 565, 566, 570, 746, 751, 752, 753, 755, 756, 760, 762, 767, 768, 771, 776, 778, 781, 806, 807, 808, 811, 814, 818, 821, 822, 823, 825, 827, 831, 837], "termin": [556, 558, 840, 843, 844, 845], "partition": [557, 559, 565, 566, 569, 570, 571, 572, 573, 574, 836, 850], "task_group_context": [557, 558, 559, 560, 561, 565, 757, 838, 847], "imper": 557, "react": 557, "steal": [557, 570], "coarsen": 557, "nearli": [557, 559, 565, 817], "piec": [557, 558, 559, 565, 818], "inputiter": [558, 583, 584, 585, 591, 593, 594, 598, 604, 605, 606, 615, 619, 620, 621, 629, 633, 634, 635, 643, 646, 647, 648, 654, 655, 656, 662, 663, 664, 672, 675, 677, 678, 687, 690, 692, 693, 701, 704, 706, 707, 715, 718, 720, 721, 729, 732, 733, 734, 735, 808], "parallelforeachbodi": [558, 803], "containerbasedsequ": [558, 567, 803], "mybodi": 558, "item_t": 558, "parallel_do_feed": 558, "new_item": 558, "parallelforbodi": [559, 803, 808], "parallelforindex": [559, 803, 809], "parallelforfunc": [559, 803], "around": [559, 753, 766], "lesser": 559, "someth": [559, 565], "look": [559, 566, 768, 803, 837], "trace": 559, "effici": [559, 571, 784, 817, 864], "tend": 559, "algortihm": 560, "bar": [560, 837], "myfunctor": 560, "runfunctionsinparallel": 560, "strongli": [561, 562], "max_number_of_live_token": 561, "filter_chain": 561, "make_filt": [561, 562], "mode0": 561, "g0": 561, "mode1": 561, "g1": 561, "i3": 561, "mode2": 561, "g2": 561, "moden": 561, "gn": 561, "notifi": [561, 824], "fc": [561, 564, 760, 770, 806, 825], "dummi": [561, 564, 568, 818], "rootmeansquar": 561, "serial_in_ord": [561, 563], "compos": [562, 780], "inputtyp": [562, 749, 767, 806], "outputtyp": [562, 749, 806], "firstfilterbodi": [562, 806], "lastfilterbodi": [562, 806], "middlefilterbodi": [562, 806], "singlefilterbodi": [562, 806], "composit": [562, 564], "filter_input": 562, "filter_output": 562, "serial_out_of_ord": 563, "filterbodi": [564, 803], "requiremnt": 564, "parallelreducebodi": [565, 803], "parallelreducefunc": [565, 803], "parallelreducereduct": [565, 803], "commut": 565, "noncommut": 565, "temp": [565, 566], "parallelsum": 565, "occurr": 565, "parallelscanbodi": [566, 803], "parallelscanfunc": [566, 803], "parallelscancombin": [566, 803], "inher": 566, "reassoci": 566, "outperform": 566, "prescan": 566, "why": 566, "get_sum": 566, "is_final_scan": [566, 568], "reverse_join": [566, 814], "doparallelscan": 566, "crucial": 566, "somewhat": 566, "understand": 566, "analog": [566, 786], "randomaccessiter": [567, 732, 737], "valueswapp": 567, "swappabl": 567, "moveassign": [567, 589, 651, 660], "scan_tag": 568, "phase": 568, "copyconstructib": [569, 570, 571, 572], "subdivis": [570, 817], "opportun": [570, 572, 844], "global_contol": [570, 572], "task_arena": [570, 572, 783, 833, 835, 838, 839, 840, 841, 843, 845, 846], "stolen": [570, 845], "balanc": [570, 572], "bring": 572, "overhead": [572, 756], "openmp": 572, "_left": 573, "_right": 573, "macro": [575, 579, 782, 836], "debug_featur": 576, "tbb_use_debug": 576, "_debug": 576, "slow": 576, "stderr": [576, 579], "abort": [576, 583], "breakpoint": 576, "assertion_failur": 576, "inspector": 576, "xe": 576, "vtune": 576, "amplifi": 576, "advisor": 576, "feature_macro": 577, "microsoft": [577, 786], "linux": [577, 786], "maco": 577, "gnu": 577, "libstdc": 577, "10000": [577, 843], "patch": 577, "gcc": 577, "dumpvers": 577, "40902": 577, "incl": 578, "version_inform": 579, "reveal": 579, "tbb_version_major": 579, "tbb_version_minor": 579, "tbb_version_str": 579, "tbb_interface_version_major": 579, "tbb_interface_version_minor": 579, "tbb_interface_vers": 579, "decim": 579, "xyyz": 579, "concurrent_vector": [580, 734, 735, 737, 738, 739, 740, 741, 743], "concurrent_queu": [580, 583, 585, 655, 656, 657, 658, 659, 661], "concurrent_bounded_queu": [580, 584, 585, 586, 587, 588, 590], "concurrent_priority_queu": [580, 647, 648, 649, 650, 653], "concurrent_hash_map": [580, 582, 592, 593, 594, 596, 599, 600, 601, 603], "concurrent_unordered_map": [580, 581, 676, 677, 678, 680, 681, 683, 684, 686, 687, 689, 690, 693, 701], "concurrent_unordered_multimap": [580, 581, 675, 687, 691, 692, 693, 694, 695, 697, 698, 700, 701, 703], "concurrent_unordered_set": [580, 581, 704, 707, 715, 719, 720, 721, 722, 723, 725, 726, 728, 729, 731], "concurrent_unordered_multiset": [580, 581, 705, 706, 707, 708, 709, 711, 712, 714, 715, 717, 718, 729], "concurrent_map": [580, 581, 605, 606, 608, 610, 611, 612, 614, 615, 617, 618, 619, 621, 629], "concurrent_multimap": [580, 581, 604, 615, 620, 621, 622, 624, 625, 626, 628, 629, 631, 632], "concurrent_set": [580, 581, 633, 635, 643, 663, 664, 665, 667, 668, 669, 671, 672, 674], "concurrent_multiset": [580, 581, 634, 635, 636, 638, 639, 640, 642, 643, 645, 662, 672], "tbb_hash_compar": [580, 591, 594, 762, 763], "node_handl": 581, "key_typ": [581, 591, 593, 596, 597, 598, 604, 605, 607, 609, 617, 619, 620, 623, 631, 633, 634, 637, 645, 662, 663, 666, 674, 675, 676, 677, 679, 682, 689, 690, 691, 692, 696, 703, 704, 705, 706, 710, 717, 718, 719, 720, 724, 731], "mapped_typ": [581, 591, 598, 604, 619, 675, 690], "allocator_typ": [581, 583, 584, 585, 589, 590, 591, 593, 594, 603, 604, 605, 606, 613, 617, 619, 620, 621, 627, 631, 633, 634, 635, 641, 645, 646, 647, 648, 653, 654, 655, 656, 660, 661, 662, 663, 664, 670, 674, 675, 677, 678, 685, 689, 690, 692, 693, 699, 703, 704, 706, 707, 713, 717, 718, 720, 721, 727, 731, 732, 734, 735, 743, 791, 852, 859], "nh": [581, 604, 615, 619, 629, 633, 643, 662, 672, 675, 687, 690, 701, 704, 715, 718, 729], "node_typ": [581, 604, 615, 617, 619, 629, 631, 633, 643, 645, 662, 672, 674, 675, 687, 689, 690, 701, 703, 704, 715, 717, 718, 729, 731], "unsafe_extract": [581, 604, 617, 619, 631, 633, 645, 662, 674, 675, 689, 690, 703, 704, 717, 718, 731], "allocator_trait": [581, 583, 584, 590, 591, 593, 603, 604, 605, 617, 619, 620, 631, 633, 634, 645, 647, 653, 654, 655, 661, 662, 663, 674, 675, 677, 689, 690, 692, 703, 704, 706, 717, 718, 720, 731, 732, 734, 743], "propagate_on_container_move_assign": [581, 584, 593, 605, 620, 634, 647, 655, 663, 677, 692, 706, 720, 734, 787, 789, 791], "propagate_on_container_swap": [581, 590, 603, 617, 631, 645, 653, 661, 674, 689, 703, 717, 731, 743], "hash": [582, 591, 593, 675, 677, 678, 683, 684, 685, 690, 692, 693, 697, 698, 699, 704, 706, 707, 711, 712, 713, 718, 720, 721, 725, 726, 727, 763, 820, 826], "hashcompar": [582, 591, 592, 594, 599, 600, 762, 803], "pop": [583, 646, 654], "cache_aligned_alloc": [583, 585, 646, 648, 654, 656, 732, 735, 785, 788, 852], "const_refer": [583, 591, 604, 619, 633, 646, 654, 662, 675, 690, 704, 718, 732, 819, 852, 859], "const_point": [583, 591, 604, 619, 633, 654, 662, 675, 690, 704, 718, 732, 859], "forwarditer": [583, 586, 591, 596, 604, 608, 619, 622, 633, 636, 654, 657, 662, 665, 675, 676, 681, 690, 691, 695, 704, 705, 709, 718, 719, 723], "get_alloc": [583, 584, 590, 591, 603, 604, 605, 615, 617, 619, 620, 629, 631, 633, 634, 643, 645, 646, 647, 653, 654, 655, 661, 662, 663, 672, 674, 675, 677, 687, 689, 690, 692, 701, 703, 704, 706, 715, 717, 718, 720, 729, 731, 732, 743], "try_push": [583, 589], "emplac": [583, 589, 591, 604, 619, 633, 646, 651, 654, 660, 662, 675, 690, 704, 718], "try_emplac": [583, 589], "try_pop": [583, 589, 646, 651, 652, 654, 660], "set_capac": [583, 589], "new_capac": [583, 589], "unsafe_begin": [583, 654, 675, 676, 690, 691, 704, 705, 718, 719], "unsafe_cbegin": [583, 654, 675, 676, 690, 691, 704, 705, 718, 719], "unsafe_end": [583, 654, 675, 676, 690, 691, 704, 705, 718, 719], "unsafe_cend": [583, 654, 675, 676, 690, 691, 704, 705, 718, 719], "eras": [583, 591, 646, 654, 732], "impos": [583, 591, 604, 619, 633, 646, 654, 662, 675, 690, 704, 718, 732, 805], "stricter": [583, 591, 604, 619, 633, 646, 654, 662, 675, 690, 704, 718, 732, 805], "unsaf": [583, 591, 604, 619, 633, 646, 654, 662, 675, 690, 704, 718, 732, 757, 838, 852, 860], "reachabl": [583, 591, 604, 619, 633, 646, 654, 662, 675, 690, 704, 718, 732, 787, 789, 791, 862], "lh": [583, 587, 588, 591, 599, 600, 604, 610, 611, 612, 618, 619, 624, 625, 626, 632, 633, 638, 639, 640, 646, 649, 650, 654, 658, 659, 662, 667, 668, 669, 675, 683, 684, 690, 697, 698, 704, 711, 712, 718, 725, 726, 732, 738, 739, 740], "unbound": [584, 646, 654, 748, 763], "select_on_container_copy_construct": [584, 593, 605, 620, 634, 647, 655, 663, 677, 692, 706, 720, 734], "propagate_on_container_copy_assign": [584, 593, 605, 620, 634, 647, 655, 663, 677, 692, 706, 720, 734], "iterator_value_t": [585, 635, 648, 656, 664, 707, 721, 735], "resolut": [585, 594, 596, 597, 598, 606, 609, 615, 617, 621, 623, 629, 631, 635, 637, 645, 648, 656, 664, 666, 674, 678, 682, 687, 689, 693, 696, 701, 703, 707, 710, 717, 721, 724, 731, 733, 734, 735, 854, 862], "cq1": [585, 656], "cq2": [585, 656], "copyinsert": [589, 598, 615, 629, 643, 651, 660, 672, 687, 729, 733], "moveinsert": [589, 598, 615, 629, 643, 651, 660, 672, 687, 729, 733], "emplaceconstruct": [589, 598, 607, 615, 629, 643, 651, 660, 672, 679, 687, 729, 733], "wake": 589, "user_abort": 589, "unord": [591, 675, 690, 704, 718, 836], "erasur": [591, 602, 604, 619, 633, 662, 675, 690, 704, 718], "tbb_alloc": [591, 594, 604, 606, 619, 621, 633, 635, 662, 664, 675, 678, 690, 693, 704, 707, 718, 721, 785, 789], "hash_compare_typ": [591, 593, 596, 597, 598], "range_typ": [591, 601, 604, 614, 619, 628, 633, 642, 662, 671, 675, 686, 690, 700, 704, 714, 718, 728, 732, 741, 852, 855], "containerrang": [591, 601, 614, 628, 642, 671, 675, 686, 690, 700, 704, 714, 718, 728, 732, 741, 803, 855], "const_range_typ": [591, 601, 604, 614, 619, 628, 633, 642, 662, 671, 675, 686, 690, 700, 704, 714, 718, 728, 732, 741, 852, 855], "const_accessor": [591, 597, 598], "rehash": [591, 675, 690, 704, 718], "sz": 591, "bucket_count": [591, 675, 677, 690, 692, 704, 706, 718, 720], "max_siz": [591, 604, 619, 633, 662, 675, 690, 704, 718, 732, 743, 787], "item_accessor": [591, 598], "cbegin": [591, 604, 619, 633, 662, 675, 690, 704, 718, 732], "cend": [591, 604, 619, 633, 662, 675, 690, 704, 718, 732], "equal_rang": [591, 604, 619, 633, 662, 675, 690, 704, 718], "prealloc": 593, "iterator_key_t": [594, 606, 621, 678, 693], "iterator_alloc_value_t": [594, 606, 621, 678, 693], "iterator_mapped_t": [594, 606, 621, 678, 693], "first_typ": [594, 606, 621, 678, 693], "second_typ": [594, 606, 621, 678, 693], "add_const_t": [594, 606, 621, 678, 693], "chmap1": 594, "chmap2": 594, "is_transpar": [596, 597, 598, 609, 617, 623, 631, 637, 645, 666, 674, 675, 690, 704, 718], "defaultconstruct": [598, 733, 746, 755, 760, 762, 764, 767, 770, 781], "is_construct": [598, 615, 629, 687, 701], "wherea": [601, 614, 628, 642, 671, 686, 700, 714, 728, 741, 855], "pend": [602, 616, 630, 644, 652, 673, 688, 702, 716, 730], "key_compar": [604, 605, 609, 613, 617, 618, 619, 620, 623, 627, 631, 632, 633, 634, 637, 641, 645, 662, 663, 666, 670, 674], "value_compar": [604, 613, 619, 627, 633, 641, 662, 670], "emplace_hint": [604, 615, 619, 629, 633, 643, 662, 672, 675, 687, 690, 701, 704, 715, 718, 729], "srccompar": [604, 615, 619, 629, 633, 643, 662, 672], "unsafe_eras": [604, 617, 619, 631, 633, 645, 662, 674, 675, 689, 690, 703, 704, 717, 718, 731], "key_comp": [604, 619, 633, 662], "value_comp": [604, 619, 633, 662], "lexicograph": [604, 619, 633, 662, 732], "cm1": [606, 621], "cm2": [606, 621], "3f": [606, 621], "piecewise_construct": [607, 679], "forward_as_tupl": [607, 679], "took": [615, 672, 687, 729], "is_convert": [617, 631, 645, 674, 689, 703, 717, 731], "concurrent_mutlimap": 619, "cs1": [635, 664], "cs2": [635, 664], "init_capac": [646, 647], "cpq1": 648, "cpq2": 648, "unsafe_s": [654, 661], "keyequ": [675, 678, 683, 684, 690, 693, 697, 698, 704, 707, 711, 712, 718, 721, 725, 726], "hasher": [675, 677, 682, 685, 689, 690, 692, 696, 699, 703, 704, 706, 710, 713, 717, 718, 720, 724, 727, 731], "key_equ": [675, 677, 685, 689, 690, 692, 699, 703, 704, 706, 713, 717, 718, 720, 727, 731], "local_iter": [675, 676, 690, 691, 704, 705, 718, 719], "const_local_iter": [675, 676, 690, 691, 704, 705, 718, 719], "srchash": [675, 687, 690, 701, 704, 715, 718, 729], "srckeyequ": [675, 687, 690, 701, 704, 715, 718, 729], "unsafe_bucket_count": [675, 676, 680, 690, 691, 694, 704, 705, 708, 718, 719, 722], "unsafe_max_bucket_bount": [675, 690, 704, 718], "unsafe_bucket_s": [675, 676, 690, 691, 704, 705, 718, 719], "unsafe_bucket": [675, 676, 690, 691, 704, 705, 718, 719], "load_factor": [675, 680, 690, 694, 704, 708, 718, 722], "max_load_factor": [675, 680, 690, 694, 704, 708, 718, 722], "ml": [675, 680, 690, 694, 704, 708, 718, 722], "hash_funct": [675, 690, 704, 718], "key_eq": [675, 690, 704, 718], "binarypred": [675, 690, 704, 718], "transparent_key_equ": [675, 682, 689, 690, 696, 703, 704, 710, 717, 718, 724, 731], "unsafe_max_bucket_count": [676, 691, 705, 719], "is_always_equ": [677, 689, 692, 703, 706, 717, 720, 731, 734, 743, 787, 789, 791], "is_nothrow_move_assign": [677, 692, 706, 720], "map_size_typ": [678, 693], "customhash": [678, 693, 707, 721], "exceed": [680, 694, 708, 722, 786], "is_nothrow_swapp": [689, 703, 717, 731], "set_size_typ": [707, 721], "grown": 732, "reverse_iter": [732, 737], "const_reverse_iter": [732, 737], "growth": [732, 736], "grow_bi": 732, "grow_to_at_least": 732, "emplace_back": 732, "rbegin": 732, "crbegin": 732, "rend": 732, "crend": 732, "shrink_to_fit": 732, "grow": 732, "nonetheless": 732, "unalloc": [732, 736], "unbroken": 732, "arr": 735, "cv1": 735, "cv2": 735, "length_error": 743, "reorgan": 743, "task_arena_attach_tag": 744, "arena": [744, 836, 844, 845, 846], "flow_graph": [745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781], "behalf": 745, "reset_flag": 745, "graph_nod": [745, 746, 747, 748, 749, 751, 755, 759, 760, 762, 764, 767, 770, 772, 773, 778, 779, 781], "sender": [745, 746, 747, 748, 749, 750, 751, 755, 759, 760, 762, 764, 765, 767, 770, 772, 773, 775, 778, 779, 781], "successor": [745, 746, 747, 748, 753, 754, 755, 759, 760, 762, 763, 764, 765, 767, 770, 772, 773, 775, 778, 779, 781, 824], "continue_nod": [745, 752, 753, 754, 756, 764, 768, 822], "function_nod": [745, 752, 754, 756, 766, 768, 770, 771, 778, 781, 823], "input_nod": [745, 752, 754, 770, 778, 825], "multifunction_nod": [745, 752, 754, 756, 768, 769, 771, 827], "async_nod": [745, 752, 756, 768, 771, 821, 824], "copy_bodi": [745, 746, 751, 755, 760, 767], "overwrite_nod": [745, 754, 781], "write_once_nod": [745, 754, 770], "buffer_nod": [745, 754, 773, 781], "queue_nod": [745, 754], "priority_queue_nod": [745, 754], "sequencer_nod": [745, 754, 772, 828], "reusabl": 745, "limiter_nod": [745, 754], "broadcast_nod": [745, 753, 754, 766, 768, 779], "join_nod": [745, 754, 759, 761, 766, 770, 781, 826], "split_nod": [745, 754, 769], "indexer_nod": [745, 754, 761, 769, 780], "composite_nod": [745, 761, 769], "input_port": [745, 749, 759, 762, 766, 781], "output_port": [745, 749, 767, 779], "make_edg": [745, 751, 753, 756, 766, 768, 770, 778, 781], "remove_edg": [745, 751], "continue_msg": [745, 751, 753, 755, 764, 768, 822], "tagged_msg": [745, 759], "implemet": 746, "node_priority_t": [746, 751, 755, 767, 768], "no_prior": [746, 751, 755, 767, 768], "gateway_typ": [746, 821, 824], "gatewai": [746, 821], "try_put": [746, 747, 748, 751, 753, 755, 756, 764, 766, 767, 768, 770, 772, 773, 778, 779, 781, 824, 827], "try_get": [746, 747, 748, 751, 754, 755, 759, 760, 762, 763, 764, 770, 772, 773, 778, 781], "asyncnodebodi": [746, 803], "incom": [746, 747, 751, 755, 763, 766, 767, 779, 781], "settabl": [746, 755, 767], "held": [746, 751, 755, 760, 767, 770, 780, 781, 793, 795, 798, 801, 802, 830], "gatewaytyp": [746, 803, 821], "immedi": [747, 755, 825, 844, 846, 847], "unabl": [747, 763], "tri": [748, 754, 763, 764, 772, 773, 778, 793, 794, 798], "inputtupl": 749, "outputtupl": [749, 762, 826], "input_ports_typ": [749, 759, 762, 765, 775], "output_ports_typ": [749, 765, 767, 775, 779, 827], "set_external_port": 749, "input_ports_tupl": 749, "output_ports_tupl": 749, "border": 749, "mandatori": 749, "nth": 749, "number_of_predecessor": 751, "continuenodebodi": [751, 803], "continue_output_t": 751, "invoke_result_t": 751, "head": [753, 763], "cstdio": [753, 766], "my_nam": 753, "printf": [753, 766, 770, 778, 837], "c_str": 753, "wait_for_al": [753, 756, 757, 766, 768, 770, 778, 781, 841], "forwarding_and_buff": 754, "fate": 754, "resend": 754, "tag_match": [754, 762, 763], "fuction_nod": 755, "functionnodebodi": [755, 803], "decay_t": [755, 760, 762, 778], "input_t": [755, 760, 762, 778], "output_t": [755, 762], "function_node_polici": 756, "queueing_lightweight": 756, "rejecting_lightweight": 756, "rf_reset_protocol": [757, 776], "cancel": [757, 842, 847, 848], "is_cancel": 757, "exception_thrown": 757, "t0": 759, "implementation_defin": 759, "distinct": [759, 762, 787, 852, 857], "arriv": 759, "inputnodebodi": [760, 803], "toggl": 760, "inact": [760, 845], "nodetyp": [761, 769], "tag_valu": [762, 763], "joinpolici": 762, "khash": [762, 763], "key_match": [762, 763], "b0": 762, "b1": 762, "b2": 762, "b3": 762, "b4": 762, "b5": 762, "b6": 762, "b7": 762, "b8": 762, "b9": 762, "joinnodefunctionobject": [762, 803], "bn": 762, "join_node_polici": 763, "decrementtyp": 764, "embed": 764, "multioutputnod": [765, 775], "multiinputnod": [765, 775], "enter": [766, 844, 845], "squarer": 766, "cuber": 766, "summer": 766, "lock": [766, 793, 794, 795, 796, 797, 798, 799, 801, 802, 829, 830], "my_sum": 766, "multifunctionnodebodi": [767, 803], "node_prior": 768, "f1": 768, "f3": 768, "f2": 768, "fe": 768, "cmath": 768, "tick_count": [768, 861], "global_control": [768, 838, 843], "spin_for": 768, "delta_second": 768, "unit_of_tim": 768, "max_thread": 768, "max_allowed_parallel": [768, 840], "heavi": 768, "elaps": 768, "is_valid": [770, 781], "data_limit": 770, "data_set_prepar": 770, "overwrite_storag": 770, "data_gener": 770, "data_from_storag": 770, "concurrency_limit": 771, "enforc": [772, 829, 840], "fifo": 773, "taken": [773, 801, 802, 837], "rf_reset_bodi": 776, "rf_clear_edg": 776, "reiniti": [776, 842], "duplic": 778, "msg": [778, 781], "writer": [778, 798, 800, 802, 829, 830], "reciev": 778, "tupletyp": 779, "tagtyp": 780, "cast_to": 780, "is_a": 780, "static_result_computer_n": 781, "write_once_n": 781, "buffer_n": 781, "join_n": 781, "consumer_n": 781, "precomput": 781, "precomputed_result": 781, "dynamic_data": 781, "underscore_styl": 782, "pascalcas": 782, "__tbb": 782, "info_namespac": 783, "numa_node_id": [783, 844], "core_type_id": [783, 844], "numa_nod": [783, 844], "core_typ": [783, 844], "default_concurr": 783, "numa": [783, 844], "pars": 783, "intro": 784, "newer": 784, "multithread": 784, "memory_alloc": [785, 786, 787, 788, 789, 790, 791], "scalable_alloc": [785, 786, 790], "pmr": [785, 788, 790], "polymorphic_alloc": [785, 790], "mem": 785, "poli": 785, "memory_resourc": [785, 788, 790], "cache_aligned_resourc": 785, "scalable_memory_resourc": 785, "scalable_alloc_c_interfac": 786, "scalable_malloc": 786, "scalable_fre": [786, 790], "ptr": 786, "scalable_calloc": 786, "nobj": 786, "scalable_realloc": 786, "_msize": 786, "malloc_s": 786, "malloc_usable_s": 786, "scalable_ms": 786, "posix_memalign": 786, "scalable_posix_memalign": 786, "memptr": 786, "scalable_aligned_malloc": [786, 790], "scalable_aligned_fre": 786, "scalable_aligned_realloc": 786, "scalable_allocation_": 786, "tbbmalloc_ok": 786, "tbbmalloc_invalid_param": 786, "tbbmalloc_unsupport": 786, "tbbmalloc_no_memori": 786, "tbbmalloc_no_effect": 786, "scalableallocationresult": 786, "huge": 786, "tbbmalloc_use_huge_pag": 786, "forcefulli": 786, "clean": [786, 845], "tbbmalloc_set_soft_heap_limit": 786, "cleanup": 786, "tbbmalloc_set_huge_size_threshold": 786, "allocationmodeparam": 786, "scalable_allocation_mod": 786, "intptr_t": 786, "tbbmalloc_clean_all_buff": 786, "tbbmalloc_clean_thread_buff": 786, "scalableallocationcmd": 786, "scalable_allocation_command": 786, "cmd": 786, "scalable_x": 786, "posix": 786, "succeed": [786, 793, 798], "tell": 786, "tbb_malloc_use_huge_pag": 786, "ask": 786, "administr": 786, "urg": 786, "bigger": 786, "tbb_malloc_set_huge_size_threshold": 786, "long_max": 786, "care": 786, "boundari": [787, 788], "hurt": 787, "net": 787, "traffic": 787, "inappropri": 787, "true_typ": [787, 789, 791], "upstream_resourc": 788, "do_alloc": 788, "do_dealloc": 788, "do_is_equ": 788, "get_default_resourc": 788, "beforehand": 788, "upstream": 788, "revert": 791, "malloc_typ": 791, "race": 792, "rw_mutex": [792, 830], "spin_mutex": [792, 799, 829], "spin_rw_mutex": [792, 800, 830], "speculative_spin_mutex": [792, 829], "speculative_spin_rw_mutex": [792, 830], "queuing_mutex": [792, 829], "queuing_rw_mutex": [792, 830], "null_mutex": [792, 829], "null_rw_mutex": [792, 830], "adapt": [793, 798], "spin": [793, 798, 799, 801, 802], "fair": [793, 796, 797, 799, 800, 801, 829, 830], "scoped_lock": [793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 829, 830], "try_lock": [793, 794, 795, 798, 801, 802], "unlock": [793, 794, 795, 796, 797, 798, 799, 800, 801, 802], "is_rw_mutex": [793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 829, 830], "is_recursive_mutex": [793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 829, 830], "is_fair_mutex": [793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 829, 830], "busi": [793, 798], "mutex": [794, 795, 796, 797, 798, 799, 800, 801, 802, 832, 834], "syntact": [794, 795, 803, 837], "readerwritermutex": [795, 797, 798, 800, 802, 803], "sharedmutex": [795, 798, 802], "lock_shar": [795, 798, 802], "try_lock_shar": [795, 798, 802], "unlock_shar": [795, 798, 802], "unfair": [798, 802], "reader": [798, 800, 802, 829, 830], "tsx": [799, 800], "contend": [799, 800], "specul": [799, 800], "conflict": [799, 800], "wors": [799, 800], "backoff": 802, "named_requir": 803, "chapter": 803, "cpprefer": 803, "com": 803, "site": 803, "sortabl": 803, "drawback": 803, "releg": 803, "concis": 803, "past": [803, 805], "deal": 803, "suspendfunc": [803, 841], "req": [804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831], "blocked_range_valu": 804, "container_based_sequ": 805, "filter_bodi": 806, "parallel_for_bodi": 807, "parallel_for_each_bodi": 808, "itemtyp": 808, "spawn": [808, 844, 845], "volatil": 808, "parallel_for_func": 809, "parallel_for_index": 810, "quotient": 810, "_note": 810, "parallel_reduce_bodi": [811, 812], "parallel_determinstic_reduc": [811, 812, 813], "parallel_reduce_reduct": 813, "parallel_scan_combin": 815, "parallel_scan_func": 816, "evenli": 817, "yield": 817, "biggest": 817, "indivis": 817, "fork": 818, "container_rang": 819, "cr": 819, "hash_compar": 820, "keytyp": 820, "returntyp": 820, "async_node_bodi": 821, "enclos": [821, 837], "continue_node_bodi": 822, "function_node_bodi": 823, "reserve_wait": 824, "release_wait": 824, "input_node_bodi": 825, "join_node_function_object": 826, "multifunction_node_bodi": 827, "outputportstyp": 827, "spartan": 829, "rememb": [829, 845], "mylock": 829, "mymutex": 829, "try_acquir": [829, 830], "copyabl": 829, "movabl": 829, "reentrant": [829, 830], "opposit": [829, 830], "rational": 829, "rwm": 830, "upgrade_to_writ": 830, "downgrade_to_read": 830, "superset": 830, "reacquir": 830, "suspend_func": 831, "suspend_point": [831, 841], "resum": [831, 838], "enumerable_thread_specif": [836, 850, 851, 853, 854, 855, 859], "flattened2d": [836, 850], "notational_convent": 837, "ital": 837, "titl": 837, "filenam": 837, "basenam": 837, "monospac": 837, "directori": 837, "alt": 837, "okcreateobj": 837, "hello": 837, "world": 837, "bold": 837, "emphas": 837, "0xf": 837, "bracket": 837, "fa": 837, "fac": 837, "brace": 837, "vertic": 837, "xk": 837, "xw": 837, "xp": 837, "metacharact": 837, "quotat": 837, "negat": 837, "ellipsi": 837, "seem": 837, "client": [837, 845], "foobas": 837, "foo_v3": 837, "internal_stuff": 837, "depart": 837, "distract": 837, "clutter": 837, "drive": 838, "quanta": 838, "worker": [838, 840, 843, 844, 845, 846], "preemptiv": 838, "unrel": 838, "task_scheduler_handl": [838, 839], "task_group": [838, 842, 844, 848], "task_group_statu": [838, 847], "task_handl": [838, 844, 846, 847], "this_task_arena": [838, 845], "task_scheduler_observ": [838, 844], "thread_stack_s": 840, "terminate_on_except": 840, "active_valu": 840, "parameter_valu": 840, "disjunct": 840, "rethrow": 840, "resumable_task": 841, "suspend": [841, 852], "async": 841, "async_act": 841, "forest": 842, "isol": [842, 846], "subtre": 842, "kind_t": 842, "traits_typ": 842, "fp_set": 842, "default_trait": 842, "relation_with_par": 842, "uintptr_t": 842, "cancel_group_execut": 842, "is_group_execution_cancel": 842, "capture_fp_set": 842, "child": 842, "relation_to_par": 842, "extant": [842, 845], "uncancel": 842, "nothrow_t": 843, "prematur": 843, "deactiv": 843, "unsafe_wait": 843, "cerr": 843, "not_initi": [844, 846], "numa_node_": 844, "max_concurrency_": 844, "set_numa_id": 844, "set_max_concurr": 844, "maximal_concurr": 844, "set_core_typ": 844, "set_max_threads_per_cor": 844, "threads_numb": 844, "numa_id": 844, "max_concurr": [844, 846], "max_threads_per_cor": 844, "reserved_for_mast": 844, "a_prior": 844, "a_constraint": 844, "is_act": 844, "lazili": [844, 850, 852], "pin": [844, 845], "eventu": 844, "ever": 844, "interest": 845, "is_observ": 845, "on_scheduler_entri": 845, "is_work": 845, "on_scheduler_exit": 845, "notif": 845, "whenev": 845, "owner": 845, "pinning_observ": 845, "affinity_mask_t": 845, "m_mask": 845, "hw": 845, "set_thread_affin": 845, "current_thread_index": [845, 846], "restore_thread_affin": 845, "outer": [846, 859], "reference_wrapp": 846, "defer": [847, 849], "run_and_wait": 847, "is_current_task_group_cancel": 847, "not_complet": 848, "nullptr_t": 849, "thread_local_storag": 850, "tl": [850, 851, 852, 854, 859], "flatten2d": [850, 859], "assist": 850, "idiom": 850, "binaryfunc": [851, 852, 853], "combine_each": [851, 852, 853], "intact": [851, 854], "ets_key_usage_typ": [852, 854], "ets_key_per_inst": 852, "ets_no_kei": 852, "ets_suspend_awar": 852, "ets_key_typ": 852, "exemplar": [852, 854, 856], "cachetyp": [852, 854], "freshli": 852, "this_thread": 852, "life": 852, "fairli": 852, "viewabl": 859, "thread_safeti": 860, "departur": 860, "liber": 860, "wall": [861, 862], "clock": [861, 862], "interval_t": 861, "durat": 862, "nonmemb": 862, "behind": 864, "matur": 864, "attain": 864, "divers": 864, "scientif": 864, "artifici": 864, "intellig": 864, "systol": 864, "middlewar": 864, "contributor": 864, "ecosystem": 864, "seek": 864, "conform": 864, "recompil": 864, "rfc": 864, "2119": 864, "creativ": 865, "mit": 865, "uxl": 865, "disclos": 865, "sole": 865, "oblig": 865, "intellectu": 865}, "objects": {"": [[159, 0, 1, "c.DNNL_ARG_ATTR_SCALES", "DNNL_ARG_ATTR_SCALES"], [159, 0, 1, "c.DNNL_ARG_ATTR_ZERO_POINTS", "DNNL_ARG_ATTR_ZERO_POINTS"], [159, 0, 1, "c.DNNL_ARG_BIAS", "DNNL_ARG_BIAS"], [159, 0, 1, "c.DNNL_ARG_DIFF_BIAS", "DNNL_ARG_DIFF_BIAS"], [159, 0, 1, "c.DNNL_ARG_DIFF_DST", "DNNL_ARG_DIFF_DST"], [159, 0, 1, "c.DNNL_ARG_DIFF_DST_0", "DNNL_ARG_DIFF_DST_0"], [159, 0, 1, "c.DNNL_ARG_DIFF_DST_1", "DNNL_ARG_DIFF_DST_1"], [159, 0, 1, "c.DNNL_ARG_DIFF_DST_2", "DNNL_ARG_DIFF_DST_2"], [159, 0, 1, "c.DNNL_ARG_DIFF_DST_ITER", "DNNL_ARG_DIFF_DST_ITER"], [159, 0, 1, "c.DNNL_ARG_DIFF_DST_ITER_C", "DNNL_ARG_DIFF_DST_ITER_C"], [159, 0, 1, "c.DNNL_ARG_DIFF_DST_LAYER", "DNNL_ARG_DIFF_DST_LAYER"], [159, 0, 1, "c.DNNL_ARG_DIFF_SCALE", "DNNL_ARG_DIFF_SCALE"], [159, 0, 1, "c.DNNL_ARG_DIFF_SHIFT", "DNNL_ARG_DIFF_SHIFT"], [159, 0, 1, "c.DNNL_ARG_DIFF_SRC", "DNNL_ARG_DIFF_SRC"], [159, 0, 1, "c.DNNL_ARG_DIFF_SRC_0", "DNNL_ARG_DIFF_SRC_0"], [159, 0, 1, "c.DNNL_ARG_DIFF_SRC_1", "DNNL_ARG_DIFF_SRC_1"], [159, 0, 1, "c.DNNL_ARG_DIFF_SRC_2", "DNNL_ARG_DIFF_SRC_2"], [159, 0, 1, "c.DNNL_ARG_DIFF_SRC_ITER", "DNNL_ARG_DIFF_SRC_ITER"], [159, 0, 1, "c.DNNL_ARG_DIFF_SRC_ITER_C", "DNNL_ARG_DIFF_SRC_ITER_C"], [159, 0, 1, "c.DNNL_ARG_DIFF_SRC_LAYER", "DNNL_ARG_DIFF_SRC_LAYER"], [159, 0, 1, "c.DNNL_ARG_DIFF_WEIGHTS", "DNNL_ARG_DIFF_WEIGHTS"], [159, 0, 1, "c.DNNL_ARG_DIFF_WEIGHTS_0", "DNNL_ARG_DIFF_WEIGHTS_0"], [159, 0, 1, "c.DNNL_ARG_DIFF_WEIGHTS_1", "DNNL_ARG_DIFF_WEIGHTS_1"], [159, 0, 1, "c.DNNL_ARG_DIFF_WEIGHTS_ITER", "DNNL_ARG_DIFF_WEIGHTS_ITER"], [159, 0, 1, "c.DNNL_ARG_DIFF_WEIGHTS_LAYER", "DNNL_ARG_DIFF_WEIGHTS_LAYER"], [159, 0, 1, "c.DNNL_ARG_DST", "DNNL_ARG_DST"], [159, 0, 1, "c.DNNL_ARG_DST_0", "DNNL_ARG_DST_0"], [159, 0, 1, "c.DNNL_ARG_DST_1", "DNNL_ARG_DST_1"], [159, 0, 1, "c.DNNL_ARG_DST_2", "DNNL_ARG_DST_2"], [159, 0, 1, "c.DNNL_ARG_DST_ITER", "DNNL_ARG_DST_ITER"], [159, 0, 1, "c.DNNL_ARG_DST_ITER_C", "DNNL_ARG_DST_ITER_C"], [159, 0, 1, "c.DNNL_ARG_DST_LAYER", "DNNL_ARG_DST_LAYER"], [159, 0, 1, "c.DNNL_ARG_FROM", "DNNL_ARG_FROM"], [159, 0, 1, "c.DNNL_ARG_MEAN", "DNNL_ARG_MEAN"], [159, 0, 1, "c.DNNL_ARG_MULTIPLE_DST", "DNNL_ARG_MULTIPLE_DST"], [159, 0, 1, "c.DNNL_ARG_MULTIPLE_SRC", "DNNL_ARG_MULTIPLE_SRC"], [159, 0, 1, "c.DNNL_ARG_SCALE", "DNNL_ARG_SCALE"], [159, 0, 1, "c.DNNL_ARG_SCRATCHPAD", "DNNL_ARG_SCRATCHPAD"], [159, 0, 1, "c.DNNL_ARG_SHIFT", "DNNL_ARG_SHIFT"], [159, 0, 1, "c.DNNL_ARG_SRC", "DNNL_ARG_SRC"], [159, 0, 1, "c.DNNL_ARG_SRC_0", "DNNL_ARG_SRC_0"], [159, 0, 1, "c.DNNL_ARG_SRC_1", "DNNL_ARG_SRC_1"], [159, 0, 1, "c.DNNL_ARG_SRC_2", "DNNL_ARG_SRC_2"], [159, 0, 1, "c.DNNL_ARG_SRC_ITER", "DNNL_ARG_SRC_ITER"], [159, 0, 1, "c.DNNL_ARG_SRC_ITER_C", "DNNL_ARG_SRC_ITER_C"], [159, 0, 1, "c.DNNL_ARG_SRC_LAYER", "DNNL_ARG_SRC_LAYER"], [159, 0, 1, "c.DNNL_ARG_TO", "DNNL_ARG_TO"], [159, 0, 1, "c.DNNL_ARG_VARIANCE", "DNNL_ARG_VARIANCE"], [159, 0, 1, "c.DNNL_ARG_WEIGHTS", "DNNL_ARG_WEIGHTS"], [159, 0, 1, "c.DNNL_ARG_WEIGHTS_0", "DNNL_ARG_WEIGHTS_0"], [159, 0, 1, "c.DNNL_ARG_WEIGHTS_1", "DNNL_ARG_WEIGHTS_1"], [159, 0, 1, "c.DNNL_ARG_WEIGHTS_ITER", "DNNL_ARG_WEIGHTS_ITER"], [159, 0, 1, "c.DNNL_ARG_WEIGHTS_LAYER", "DNNL_ARG_WEIGHTS_LAYER"], [159, 0, 1, "c.DNNL_ARG_WORKSPACE", "DNNL_ARG_WORKSPACE"], [63, 0, 1, "c.DNNL_GRAPH_UNKNOWN_DIM", "DNNL_GRAPH_UNKNOWN_DIM"], [63, 0, 1, "c.DNNL_GRAPH_UNKNOWN_NDIMS", "DNNL_GRAPH_UNKNOWN_NDIMS"], [60, 0, 1, "c.DNNL_MEMORY_ALLOCATE", "DNNL_MEMORY_ALLOCATE"], [60, 0, 1, "c.DNNL_MEMORY_NONE", "DNNL_MEMORY_NONE"], [159, 0, 1, "c.DNNL_RUNTIME_DIM_VAL", "DNNL_RUNTIME_DIM_VAL"], [159, 0, 1, "c.DNNL_RUNTIME_F32_VAL", "DNNL_RUNTIME_F32_VAL"], [159, 0, 1, "c.DNNL_RUNTIME_S32_VAL", "DNNL_RUNTIME_S32_VAL"], [159, 0, 1, "c.DNNL_RUNTIME_SIZE_VAL", "DNNL_RUNTIME_SIZE_VAL"], [786, 0, 1, "c.TBBMALLOC_CLEAN_ALL_BUFFERS", "TBBMALLOC_CLEAN_ALL_BUFFERS"], [786, 0, 1, "c.TBBMALLOC_CLEAN_THREAD_BUFFERS", "TBBMALLOC_CLEAN_THREAD_BUFFERS"], [786, 0, 1, "c.TBBMALLOC_SET_HUGE_SIZE_THRESHOLD", "TBBMALLOC_SET_HUGE_SIZE_THRESHOLD"], [786, 0, 1, "c.TBBMALLOC_SET_SOFT_HEAP_LIMIT", "TBBMALLOC_SET_SOFT_HEAP_LIMIT"], [786, 0, 1, "c.TBBMALLOC_USE_HUGE_PAGES", "TBBMALLOC_USE_HUGE_PAGES"], [848, 0, 1, "c.canceled", "canceled"], [848, 0, 1, "c.complete", "complete"], [848, 0, 1, "c.not_complete", "not_complete"], [786, 1, 1, "c.scalable_allocation_command", "scalable_allocation_command"], [821, 3, 1, "_CPPv4N13AsyncNodeBody4Body4BodyERK4Body", "AsyncNodeBody::Body::Body"], [821, 3, 1, "_CPPv4N13AsyncNodeBody4BodyclERK5InputR11GatewayType", "AsyncNodeBody::Body::operator()"], [821, 4, 1, "_CPPv4N13AsyncNodeBody4BodyclERK5InputR11GatewayType", "AsyncNodeBody::Body::operator()::gateway"], [821, 4, 1, "_CPPv4N13AsyncNodeBody4BodyclERK5InputR11GatewayType", "AsyncNodeBody::Body::operator()::v"], [821, 3, 1, "_CPPv4N13AsyncNodeBody4BodyD0Ev", "AsyncNodeBody::Body::~Body"], [807, 3, 1, "_CPPv4N4Body4BodyERK4Body", "Body::Body"], [814, 3, 1, "_CPPv4N4Body4BodyER4Body5split", "Body::Body"], [814, 4, 1, "_CPPv4N4Body4BodyER4Body5split", "Body::Body::b"], [814, 3, 1, "_CPPv4N4Body6assignER4Body", "Body::assign"], [814, 4, 1, "_CPPv4N4Body6assignER4Body", "Body::assign::b"], [807, 3, 1, "_CPPv4NK4BodyclER5Range", "Body::operator()"], [808, 3, 1, "_CPPv4NK4BodyclE8ItemType", "Body::operator()"], [808, 3, 1, "_CPPv4NK4BodyclE8ItemTypeRN6oneapi3tbb6feederI8ItemTypeEE", "Body::operator()"], [814, 3, 1, "_CPPv4N4BodyclERK5Range12pre_scan_tag", "Body::operator()"], [814, 3, 1, "_CPPv4N4BodyclERK5Range14final_scan_tag", "Body::operator()"], [808, 4, 1, "_CPPv4NK4BodyclE8ItemTypeRN6oneapi3tbb6feederI8ItemTypeEE", "Body::operator()::feeder"], [808, 4, 1, "_CPPv4NK4BodyclE8ItemType", "Body::operator()::item"], [808, 4, 1, "_CPPv4NK4BodyclE8ItemTypeRN6oneapi3tbb6feederI8ItemTypeEE", "Body::operator()::item"], [814, 4, 1, "_CPPv4N4BodyclERK5Range12pre_scan_tag", "Body::operator()::r"], [814, 4, 1, "_CPPv4N4BodyclERK5Range14final_scan_tag", "Body::operator()::r"], [807, 4, 1, "_CPPv4NK4BodyclER5Range", "Body::operator()::range"], [814, 3, 1, "_CPPv4N4Body12reverse_joinER4Body", "Body::reverse_join"], [814, 4, 1, "_CPPv4N4Body12reverse_joinER4Body", "Body::reverse_join::b"], [807, 3, 1, "_CPPv4N4BodyD0Ev", "Body::~Body"], [819, 3, 1, "_CPPv4N2CR5beginEv", "CR::begin"], [819, 5, 1, "_CPPv4N2CR15const_referenceE", "CR::const_reference"], [819, 5, 1, "_CPPv4N2CR15difference_typeE", "CR::difference_type"], [819, 3, 1, "_CPPv4N2CR3endEv", "CR::end"], [819, 3, 1, "_CPPv4NK2CR9grainsizeEv", "CR::grainsize"], [819, 5, 1, "_CPPv4N2CR8iteratorE", "CR::iterator"], [819, 5, 1, "_CPPv4N2CR9referenceE", "CR::reference"], [819, 5, 1, "_CPPv4N2CR9size_typeE", "CR::size_type"], [819, 5, 1, "_CPPv4N2CR10value_typeE", "CR::value_type"], [815, 3, 1, "_CPPv4NK7CombineclERK5ValueRK5Value", "Combine::operator()"], [815, 4, 1, "_CPPv4NK7CombineclERK5ValueRK5Value", "Combine::operator()::left"], [815, 4, 1, "_CPPv4NK7CombineclERK5ValueRK5Value", "Combine::operator()::right"], [822, 3, 1, "_CPPv4N16ContinueNodeBody4Body4BodyERK4Body", "ContinueNodeBody::Body::Body"], [822, 3, 1, "_CPPv4N16ContinueNodeBody4BodyclERK12continue_msg", "ContinueNodeBody::Body::operator()"], [822, 4, 1, "_CPPv4N16ContinueNodeBody4BodyclERK12continue_msg", "ContinueNodeBody::Body::operator()::v"], [822, 3, 1, "_CPPv4N16ContinueNodeBody4BodyD0Ev", "ContinueNodeBody::Body::~Body"], [809, 3, 1, "_CPPv4NK1FclE5Index", "F::operator()"], [809, 4, 1, "_CPPv4NK1FclE5Index", "F::operator()::index"], [806, 3, 1, "_CPPv4NK15FirstFilterBody4BodyclERN6oneapi3tbb12flow_controlE", "FirstFilterBody::Body::operator()"], [806, 4, 1, "_CPPv4NK15FirstFilterBody4BodyclERN6oneapi3tbb12flow_controlE", "FirstFilterBody::Body::operator()::fc"], [826, 3, 1, "_CPPv4N4Func4FuncERK4Func", "Func::Func"], [812, 3, 1, "_CPPv4NK4FuncclERK5RangeRK5Value", "Func::operator()"], [826, 3, 1, "_CPPv4N4FuncclERK5Input", "Func::operator()"], [812, 4, 1, "_CPPv4NK4FuncclERK5RangeRK5Value", "Func::operator()::range"], [826, 4, 1, "_CPPv4N4FuncclERK5Input", "Func::operator()::v"], [812, 4, 1, "_CPPv4NK4FuncclERK5RangeRK5Value", "Func::operator()::x"], [826, 3, 1, "_CPPv4N4FuncD0Ev", "Func::~Func"], [823, 3, 1, "_CPPv4N16FunctionNodeBody4Body4BodyERK4Body", "FunctionNodeBody::Body::Body"], [823, 3, 1, "_CPPv4N16FunctionNodeBody4BodyclERK5Input", "FunctionNodeBody::Body::operator()"], [823, 4, 1, "_CPPv4N16FunctionNodeBody4BodyclERK5Input", "FunctionNodeBody::Body::operator()::v"], [823, 3, 1, "_CPPv4N16FunctionNodeBody4BodyD0Ev", "FunctionNodeBody::Body::~Body"], [820, 3, 1, "_CPPv4N1H1HERK1H", "H::H"], [820, 3, 1, "_CPPv4NK1H5equalERK7KeyTypeRK7KeyType", "H::equal"], [820, 4, 1, "_CPPv4NK1H5equalERK7KeyTypeRK7KeyType", "H::equal::k1"], [820, 4, 1, "_CPPv4NK1H5equalERK7KeyTypeRK7KeyType", "H::equal::k2"], [820, 3, 1, "_CPPv4NK1H4hashERK7KeyType", "H::hash"], [820, 4, 1, "_CPPv4NK1H4hashERK7KeyType", "H::hash::k"], [820, 3, 1, "_CPPv4N1HD0Ev", "H::~H"], [810, 3, 1, "_CPPv4N5Index5IndexERK5Index", "Index::Index"], [810, 3, 1, "_CPPv4N5Index5IndexEi", "Index::Index"], [810, 3, 1, "_CPPv4N5IndexD0Ev", "Index::~Index"], [825, 3, 1, "_CPPv4N13InputNodeBody4Body4BodyERK4Body", "InputNodeBody::Body::Body"], [825, 3, 1, "_CPPv4N13InputNodeBody4BodyclERN6oneapi3tbb12flow_controlE", "InputNodeBody::Body::operator()"], [825, 4, 1, "_CPPv4N13InputNodeBody4BodyclERN6oneapi3tbb12flow_controlE", "InputNodeBody::Body::operator()::fc"], [825, 3, 1, "_CPPv4N13InputNodeBody4BodyD0Ev", "InputNodeBody::Body::~Body"], [806, 3, 1, "_CPPv4NK14LastFilterBody4BodyclE9InputType", "LastFilterBody::Body::operator()"], [806, 4, 1, "_CPPv4NK14LastFilterBody4BodyclE9InputType", "LastFilterBody::Body::operator()::item"], [806, 3, 1, "_CPPv4NK16MiddleFilterBody4BodyclE9InputType", "MiddleFilterBody::Body::operator()"], [806, 4, 1, "_CPPv4NK16MiddleFilterBody4BodyclE9InputType", "MiddleFilterBody::Body::operator()::item"], [827, 3, 1, "_CPPv4N21MultifunctionNodeBody4Body4BodyERK4Body", "MultifunctionNodeBody::Body::Body"], [827, 3, 1, "_CPPv4N21MultifunctionNodeBody4BodyclERK5InputR15OutputPortsType", "MultifunctionNodeBody::Body::operator()"], [827, 4, 1, "_CPPv4N21MultifunctionNodeBody4BodyclERK5InputR15OutputPortsType", "MultifunctionNodeBody::Body::operator()::p"], [827, 4, 1, "_CPPv4N21MultifunctionNodeBody4BodyclERK5InputR15OutputPortsType", "MultifunctionNodeBody::Body::operator()::v"], [827, 3, 1, "_CPPv4N21MultifunctionNodeBody4BodyD0Ev", "MultifunctionNodeBody::Body::~Body"], [811, 3, 1, "_CPPv4N18ParallelReduceBody4Body4BodyER4Body5split", "ParallelReduceBody::Body::Body"], [811, 3, 1, "_CPPv4N18ParallelReduceBody4Body4joinER4Body", "ParallelReduceBody::Body::join"], [811, 4, 1, "_CPPv4N18ParallelReduceBody4Body4joinER4Body", "ParallelReduceBody::Body::join::rhs"], [811, 3, 1, "_CPPv4N18ParallelReduceBody4BodyclERK5Range", "ParallelReduceBody::Body::operator()"], [811, 4, 1, "_CPPv4N18ParallelReduceBody4BodyclERK5Range", "ParallelReduceBody::Body::operator()::range"], [811, 3, 1, "_CPPv4N18ParallelReduceBody4BodyD0Ev", "ParallelReduceBody::Body::~Body"], [817, 3, 1, "_CPPv4N1R1RER1R18proportional_split", "R::R"], [817, 3, 1, "_CPPv4N1R1RER1R5split", "R::R"], [817, 3, 1, "_CPPv4N1R1RERK1R", "R::R"], [817, 4, 1, "_CPPv4N1R1RER1R18proportional_split", "R::R::proportion"], [817, 4, 1, "_CPPv4N1R1RER1R18proportional_split", "R::R::r"], [817, 4, 1, "_CPPv4N1R1RER1R5split", "R::R::r"], [817, 3, 1, "_CPPv4NK1R5emptyEv", "R::empty"], [817, 3, 1, "_CPPv4NK1R12is_divisibleEv", "R::is_divisible"], [817, 3, 1, "_CPPv4N1RD0Ev", "R::~R"], [830, 5, 1, "_CPPv4N3RWM11scoped_lockE", "RWM::scoped_lock"], [830, 6, 1, "_CPPv4N3RWM11scoped_lock1M13is_fair_mutexE", "RWM::scoped_lock::M::is_fair_mutex"], [830, 6, 1, "_CPPv4N3RWM11scoped_lock1M18is_recursive_mutexE", "RWM::scoped_lock::M::is_recursive_mutex"], [830, 6, 1, "_CPPv4N3RWM11scoped_lock1M11is_rw_mutexE", "RWM::scoped_lock::M::is_rw_mutex"], [830, 3, 1, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lockER3RWMb", "RWM::scoped_lock::RWM::scoped_lock"], [830, 3, 1, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lockEv", "RWM::scoped_lock::RWM::scoped_lock"], [830, 3, 1, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock7acquireER3RWMb", "RWM::scoped_lock::RWM::scoped_lock::acquire"], [830, 4, 1, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock7acquireER3RWMb", "RWM::scoped_lock::RWM::scoped_lock::acquire::write"], [830, 3, 1, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock19downgrade_to_readerEv", "RWM::scoped_lock::RWM::scoped_lock::downgrade_to_reader"], [830, 3, 1, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock7releaseEv", "RWM::scoped_lock::RWM::scoped_lock::release"], [830, 3, 1, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock11try_acquireER3RWMb", "RWM::scoped_lock::RWM::scoped_lock::try_acquire"], [830, 4, 1, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock11try_acquireER3RWMb", "RWM::scoped_lock::RWM::scoped_lock::try_acquire::write"], [830, 3, 1, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock17upgrade_to_writerEv", "RWM::scoped_lock::RWM::scoped_lock::upgrade_to_writer"], [830, 4, 1, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lockER3RWMb", "RWM::scoped_lock::RWM::scoped_lock::write"], [830, 3, 1, "_CPPv4N3RWM11scoped_lock3RWMD0Ev", "RWM::scoped_lock::RWM::~scoped_lock"], [813, 3, 1, "_CPPv4NK9ReductionclERK5ValueRK5Value", "Reduction::operator()"], [813, 4, 1, "_CPPv4NK9ReductionclERK5ValueRK5Value", "Reduction::operator()::x"], [813, 4, 1, "_CPPv4NK9ReductionclERK5ValueRK5Value", "Reduction::operator()::y"], [828, 3, 1, "_CPPv4N1S1SERK1S", "S::S"], [828, 3, 1, "_CPPv4N1SclERK1T", "S::operator()"], [828, 4, 1, "_CPPv4N1SclERK1T", "S::operator()::v"], [828, 3, 1, "_CPPv4N1SD0Ev", "S::~S"], [816, 3, 1, "_CPPv4NK4ScanclERK5RangeRK5Valueb", "Scan::operator()"], [816, 4, 1, "_CPPv4NK4ScanclERK5RangeRK5Valueb", "Scan::operator()::is_final"], [816, 4, 1, "_CPPv4NK4ScanclERK5RangeRK5Valueb", "Scan::operator()::r"], [816, 4, 1, "_CPPv4NK4ScanclERK5RangeRK5Valueb", "Scan::operator()::sum"], [806, 3, 1, "_CPPv4NK16SingleFilterBody4BodyclERN6oneapi3tbb12flow_controlE", "SingleFilterBody::Body::operator()"], [806, 4, 1, "_CPPv4NK16SingleFilterBody4BodyclERN6oneapi3tbb12flow_controlE", "SingleFilterBody::Body::operator()::fc"], [831, 3, 1, "_CPPv4N11SuspendFunc4Func4FuncERK4Func", "SuspendFunc::Func::Func"], [831, 3, 1, "_CPPv4N11SuspendFunc4FuncclEN6oneapi3tbb4task13suspend_pointE", "SuspendFunc::Func::operator()"], [824, 3, 1, "_CPPv4N1T12release_waitEv", "T::release_wait"], [824, 3, 1, "_CPPv4N1T12reserve_waitEv", "T::reserve_wait"], [824, 3, 1, "_CPPv4N1T7try_putERK6Output", "T::try_put"], [824, 4, 1, "_CPPv4N1T7try_putERK6Output", "T::try_put::v"], [804, 3, 1, "_CPPv4N5Value5ValueERK5Value", "Value::Value"], [804, 3, 1, "_CPPv4N5ValueD0Ev", "Value::~Value"], [818, 3, 1, "_CPPv4N1X1XER1X5split", "X::X"], [818, 4, 1, "_CPPv4N1X1XER1X5split", "X::X::x"], [760, 3, 1, "_CPPv48activatev", "activate"], [840, 3, 1, "_CPPv412active_value9parameter", "active_value"], [840, 4, 1, "_CPPv412active_value9parameter", "active_value::param"], [556, 3, 1, "_CPPv43addRK4Item", "add"], [556, 3, 1, "_CPPv43addRR4Item", "add"], [556, 4, 1, "_CPPv43addRK4Item", "add::item"], [556, 4, 1, "_CPPv43addRR4Item", "add::item"], [787, 3, 1, "_CPPv48allocate9size_type", "allocate"], [787, 4, 1, "_CPPv48allocate9size_type", "allocate::n"], [744, 7, 1, "_CPPv46attach", "attach"], [844, 6, 1, "_CPPv49automatic", "automatic"], [553, 3, 1, "_CPPv4NK5beginEv", "begin"], [553, 3, 1, "_CPPv413blocked_range5Value5Value9size_type", "blocked_range"], [553, 3, 1, "_CPPv413blocked_rangeR13blocked_range18proportional_split", "blocked_range"], [553, 3, 1, "_CPPv413blocked_rangeR13blocked_range5split", "blocked_range"], [553, 4, 1, "_CPPv413blocked_range5Value5Value9size_type", "blocked_range::begin"], [553, 4, 1, "_CPPv413blocked_range5Value5Value9size_type", "blocked_range::end"], [553, 4, 1, "_CPPv413blocked_range5Value5Value9size_type", "blocked_range::grainsize"], [553, 4, 1, "_CPPv413blocked_rangeR13blocked_range18proportional_split", "blocked_range::proportion"], [553, 4, 1, "_CPPv413blocked_rangeR13blocked_range18proportional_split", "blocked_range::range"], [553, 4, 1, "_CPPv413blocked_rangeR13blocked_range5split", "blocked_range::range"], [747, 3, 1, "_CPPv414broadcast_nodeR5graph", "broadcast_node"], [747, 3, 1, "_CPPv414broadcast_nodeRK14broadcast_node", "broadcast_node"], [747, 4, 1, "_CPPv414broadcast_nodeR5graph", "broadcast_node::g"], [747, 4, 1, "_CPPv414broadcast_nodeRK14broadcast_node", "broadcast_node::src"], [748, 3, 1, "_CPPv411buffer_nodeR5graph", "buffer_node"], [748, 3, 1, "_CPPv411buffer_nodeRK11buffer_node", "buffer_node"], [748, 4, 1, "_CPPv411buffer_nodeR5graph", "buffer_node::g"], [748, 4, 1, "_CPPv411buffer_nodeRK11buffer_node", "buffer_node::src"], [788, 3, 1, "_CPPv422cache_aligned_resourcePNSt3pmr15memory_resourceE", "cache_aligned_resource"], [788, 3, 1, "_CPPv422cache_aligned_resourcev", "cache_aligned_resource"], [788, 4, 1, "_CPPv422cache_aligned_resourcePNSt3pmr15memory_resourceE", "cache_aligned_resource::r"], [757, 3, 1, "_CPPv46cancelv", "cancel"], [842, 3, 1, "_CPPv422cancel_group_executionv", "cancel_group_execution"], [842, 3, 1, "_CPPv419capture_fp_settingsv", "capture_fp_settings"], [780, 3, 1, "_CPPv4I0ENK7cast_toERK1Vv", "cast_to"], [780, 8, 1, "_CPPv4I0ENK7cast_toERK1Vv", "cast_to::V"], [562, 3, 1, "_CPPv45clearv", "clear"], [555, 3, 1, "_CPPv423collaborative_once_flagv", "collaborative_once_flag"], [749, 3, 1, "_CPPv414composite_nodeR5graph", "composite_node"], [749, 4, 1, "_CPPv414composite_nodeR5graph", "composite_node::g"], [553, 5, 1, "_CPPv414const_iterator", "const_iterator"], [844, 7, 1, "_CPPv411constraints", "constraints"], [844, 3, 1, "_CPPv4N11constraints11constraintsE12numa_node_idi", "constraints::constraints"], [844, 4, 1, "_CPPv4N11constraints11constraintsE12numa_node_idi", "constraints::constraints::max_concurrency_"], [844, 4, 1, "_CPPv4N11constraints11constraintsE12numa_node_idi", "constraints::constraints::numa_node_"], [844, 6, 1, "_CPPv4N11constraints9core_typeE", "constraints::core_type"], [844, 6, 1, "_CPPv4N11constraints15max_concurrencyE", "constraints::max_concurrency"], [844, 6, 1, "_CPPv4N11constraints20max_threads_per_coreE", "constraints::max_threads_per_core"], [844, 6, 1, "_CPPv4N11constraints7numa_idE", "constraints::numa_id"], [844, 3, 1, "_CPPv4N11constraints13set_core_typeE12core_type_id", "constraints::set_core_type"], [844, 4, 1, "_CPPv4N11constraints13set_core_typeE12core_type_id", "constraints::set_core_type::id"], [844, 3, 1, "_CPPv4N11constraints19set_max_concurrencyEi", "constraints::set_max_concurrency"], [844, 4, 1, "_CPPv4N11constraints19set_max_concurrencyEi", "constraints::set_max_concurrency::maximal_concurrency"], [844, 3, 1, "_CPPv4N11constraints24set_max_threads_per_coreEi", "constraints::set_max_threads_per_core"], [844, 4, 1, "_CPPv4N11constraints24set_max_threads_per_coreEi", "constraints::set_max_threads_per_core::threads_number"], [844, 3, 1, "_CPPv4N11constraints11set_numa_idE12numa_node_id", "constraints::set_numa_id"], [844, 4, 1, "_CPPv4N11constraints11set_numa_idE12numa_node_id", "constraints::set_numa_id::id"], [783, 3, 1, "_CPPv410core_typesv", "core_types"], [787, 3, 1, "_CPPv410deallocateP1T9size_type", "deallocate"], [787, 4, 1, "_CPPv410deallocateP1T9size_type", "deallocate::n"], [787, 4, 1, "_CPPv410deallocateP1T9size_type", "deallocate::p"], [783, 3, 1, "_CPPv419default_concurrency12numa_node_id", "default_concurrency"], [783, 3, 1, "_CPPv419default_concurrencyN10task_arena11constraintsE", "default_concurrency"], [783, 4, 1, "_CPPv419default_concurrencyN10task_arena11constraintsE", "default_concurrency::c"], [783, 4, 1, "_CPPv419default_concurrency12numa_node_id", "default_concurrency::id"], [159, 9, 1, "_CPPv4N4dnnl9algorithmE", "dnnl::algorithm"], [159, 10, 1, "_CPPv4N4dnnl9algorithm10binary_addE", "dnnl::algorithm::binary_add"], [159, 10, 1, "_CPPv4N4dnnl9algorithm10binary_divE", "dnnl::algorithm::binary_div"], [159, 10, 1, "_CPPv4N4dnnl9algorithm9binary_eqE", "dnnl::algorithm::binary_eq"], [159, 10, 1, "_CPPv4N4dnnl9algorithm9binary_geE", "dnnl::algorithm::binary_ge"], [159, 10, 1, "_CPPv4N4dnnl9algorithm9binary_gtE", "dnnl::algorithm::binary_gt"], [159, 10, 1, "_CPPv4N4dnnl9algorithm9binary_leE", "dnnl::algorithm::binary_le"], [159, 10, 1, "_CPPv4N4dnnl9algorithm9binary_ltE", "dnnl::algorithm::binary_lt"], [159, 10, 1, "_CPPv4N4dnnl9algorithm10binary_maxE", "dnnl::algorithm::binary_max"], [159, 10, 1, "_CPPv4N4dnnl9algorithm10binary_minE", "dnnl::algorithm::binary_min"], [159, 10, 1, "_CPPv4N4dnnl9algorithm10binary_mulE", "dnnl::algorithm::binary_mul"], [159, 10, 1, "_CPPv4N4dnnl9algorithm9binary_neE", "dnnl::algorithm::binary_ne"], [159, 10, 1, "_CPPv4N4dnnl9algorithm10binary_subE", "dnnl::algorithm::binary_sub"], [159, 10, 1, "_CPPv4N4dnnl9algorithm16convolution_autoE", "dnnl::algorithm::convolution_auto"], [159, 10, 1, "_CPPv4N4dnnl9algorithm18convolution_directE", "dnnl::algorithm::convolution_direct"], [159, 10, 1, "_CPPv4N4dnnl9algorithm20convolution_winogradE", "dnnl::algorithm::convolution_winograd"], [159, 10, 1, "_CPPv4N4dnnl9algorithm20deconvolution_directE", "dnnl::algorithm::deconvolution_direct"], [159, 10, 1, "_CPPv4N4dnnl9algorithm22deconvolution_winogradE", "dnnl::algorithm::deconvolution_winograd"], [159, 10, 1, "_CPPv4N4dnnl9algorithm11eltwise_absE", "dnnl::algorithm::eltwise_abs"], [159, 10, 1, "_CPPv4N4dnnl9algorithm20eltwise_bounded_reluE", "dnnl::algorithm::eltwise_bounded_relu"], [159, 10, 1, "_CPPv4N4dnnl9algorithm12eltwise_clipE", "dnnl::algorithm::eltwise_clip"], [159, 10, 1, "_CPPv4N4dnnl9algorithm28eltwise_clip_use_dst_for_bwdE", "dnnl::algorithm::eltwise_clip_use_dst_for_bwd"], [159, 10, 1, "_CPPv4N4dnnl9algorithm11eltwise_eluE", "dnnl::algorithm::eltwise_elu"], [159, 10, 1, "_CPPv4N4dnnl9algorithm27eltwise_elu_use_dst_for_bwdE", "dnnl::algorithm::eltwise_elu_use_dst_for_bwd"], [159, 10, 1, "_CPPv4N4dnnl9algorithm11eltwise_expE", "dnnl::algorithm::eltwise_exp"], [159, 10, 1, "_CPPv4N4dnnl9algorithm27eltwise_exp_use_dst_for_bwdE", "dnnl::algorithm::eltwise_exp_use_dst_for_bwd"], [159, 10, 1, "_CPPv4N4dnnl9algorithm12eltwise_geluE", "dnnl::algorithm::eltwise_gelu"], [159, 10, 1, "_CPPv4N4dnnl9algorithm16eltwise_gelu_erfE", "dnnl::algorithm::eltwise_gelu_erf"], [159, 10, 1, "_CPPv4N4dnnl9algorithm17eltwise_gelu_tanhE", "dnnl::algorithm::eltwise_gelu_tanh"], [159, 10, 1, "_CPPv4N4dnnl9algorithm19eltwise_hardsigmoidE", "dnnl::algorithm::eltwise_hardsigmoid"], [159, 10, 1, "_CPPv4N4dnnl9algorithm17eltwise_hardswishE", "dnnl::algorithm::eltwise_hardswish"], [159, 10, 1, "_CPPv4N4dnnl9algorithm14eltwise_linearE", "dnnl::algorithm::eltwise_linear"], [159, 10, 1, "_CPPv4N4dnnl9algorithm11eltwise_logE", "dnnl::algorithm::eltwise_log"], [159, 10, 1, "_CPPv4N4dnnl9algorithm16eltwise_logisticE", "dnnl::algorithm::eltwise_logistic"], [159, 10, 1, "_CPPv4N4dnnl9algorithm32eltwise_logistic_use_dst_for_bwdE", "dnnl::algorithm::eltwise_logistic_use_dst_for_bwd"], [159, 10, 1, "_CPPv4N4dnnl9algorithm12eltwise_mishE", "dnnl::algorithm::eltwise_mish"], [159, 10, 1, "_CPPv4N4dnnl9algorithm11eltwise_powE", "dnnl::algorithm::eltwise_pow"], [159, 10, 1, "_CPPv4N4dnnl9algorithm12eltwise_reluE", "dnnl::algorithm::eltwise_relu"], [159, 10, 1, "_CPPv4N4dnnl9algorithm28eltwise_relu_use_dst_for_bwdE", "dnnl::algorithm::eltwise_relu_use_dst_for_bwd"], [159, 10, 1, "_CPPv4N4dnnl9algorithm13eltwise_roundE", "dnnl::algorithm::eltwise_round"], [159, 10, 1, "_CPPv4N4dnnl9algorithm17eltwise_soft_reluE", "dnnl::algorithm::eltwise_soft_relu"], [159, 10, 1, "_CPPv4N4dnnl9algorithm12eltwise_sqrtE", "dnnl::algorithm::eltwise_sqrt"], [159, 10, 1, "_CPPv4N4dnnl9algorithm28eltwise_sqrt_use_dst_for_bwdE", "dnnl::algorithm::eltwise_sqrt_use_dst_for_bwd"], [159, 10, 1, "_CPPv4N4dnnl9algorithm14eltwise_squareE", "dnnl::algorithm::eltwise_square"], [159, 10, 1, "_CPPv4N4dnnl9algorithm13eltwise_swishE", "dnnl::algorithm::eltwise_swish"], [159, 10, 1, "_CPPv4N4dnnl9algorithm12eltwise_tanhE", "dnnl::algorithm::eltwise_tanh"], [159, 10, 1, "_CPPv4N4dnnl9algorithm28eltwise_tanh_use_dst_for_bwdE", "dnnl::algorithm::eltwise_tanh_use_dst_for_bwd"], [159, 10, 1, "_CPPv4N4dnnl9algorithm7lbr_gruE", "dnnl::algorithm::lbr_gru"], [159, 10, 1, "_CPPv4N4dnnl9algorithm19lrn_across_channelsE", "dnnl::algorithm::lrn_across_channels"], [159, 10, 1, "_CPPv4N4dnnl9algorithm18lrn_within_channelE", "dnnl::algorithm::lrn_within_channel"], [159, 10, 1, "_CPPv4N4dnnl9algorithm11pooling_avgE", "dnnl::algorithm::pooling_avg"], [159, 10, 1, "_CPPv4N4dnnl9algorithm27pooling_avg_exclude_paddingE", "dnnl::algorithm::pooling_avg_exclude_padding"], [159, 10, 1, "_CPPv4N4dnnl9algorithm27pooling_avg_include_paddingE", "dnnl::algorithm::pooling_avg_include_padding"], [159, 10, 1, "_CPPv4N4dnnl9algorithm11pooling_maxE", "dnnl::algorithm::pooling_max"], [159, 10, 1, "_CPPv4N4dnnl9algorithm13reduction_maxE", "dnnl::algorithm::reduction_max"], [159, 10, 1, "_CPPv4N4dnnl9algorithm14reduction_meanE", "dnnl::algorithm::reduction_mean"], [159, 10, 1, "_CPPv4N4dnnl9algorithm13reduction_minE", "dnnl::algorithm::reduction_min"], [159, 10, 1, "_CPPv4N4dnnl9algorithm13reduction_mulE", "dnnl::algorithm::reduction_mul"], [159, 10, 1, "_CPPv4N4dnnl9algorithm21reduction_norm_lp_maxE", "dnnl::algorithm::reduction_norm_lp_max"], [159, 10, 1, "_CPPv4N4dnnl9algorithm29reduction_norm_lp_power_p_maxE", "dnnl::algorithm::reduction_norm_lp_power_p_max"], [159, 10, 1, "_CPPv4N4dnnl9algorithm29reduction_norm_lp_power_p_sumE", "dnnl::algorithm::reduction_norm_lp_power_p_sum"], [159, 10, 1, "_CPPv4N4dnnl9algorithm21reduction_norm_lp_sumE", "dnnl::algorithm::reduction_norm_lp_sum"], [159, 10, 1, "_CPPv4N4dnnl9algorithm13reduction_sumE", "dnnl::algorithm::reduction_sum"], [159, 10, 1, "_CPPv4N4dnnl9algorithm17resampling_linearE", "dnnl::algorithm::resampling_linear"], [159, 10, 1, "_CPPv4N4dnnl9algorithm18resampling_nearestE", "dnnl::algorithm::resampling_nearest"], [159, 10, 1, "_CPPv4N4dnnl9algorithm16softmax_accurateE", "dnnl::algorithm::softmax_accurate"], [159, 10, 1, "_CPPv4N4dnnl9algorithm11softmax_logE", "dnnl::algorithm::softmax_log"], [159, 10, 1, "_CPPv4N4dnnl9algorithm5undefE", "dnnl::algorithm::undef"], [159, 10, 1, "_CPPv4N4dnnl9algorithm11vanilla_gruE", "dnnl::algorithm::vanilla_gru"], [159, 10, 1, "_CPPv4N4dnnl9algorithm12vanilla_lstmE", "dnnl::algorithm::vanilla_lstm"], [159, 10, 1, "_CPPv4N4dnnl9algorithm11vanilla_rnnE", "dnnl::algorithm::vanilla_rnn"], [154, 7, 1, "_CPPv4N4dnnl28batch_normalization_backwardE", "dnnl::batch_normalization_backward"], [154, 3, 1, "_CPPv4N4dnnl28batch_normalization_backward28batch_normalization_backwardERK14primitive_desc", "dnnl::batch_normalization_backward::batch_normalization_backward"], [154, 3, 1, "_CPPv4N4dnnl28batch_normalization_backward28batch_normalization_backwardEv", "dnnl::batch_normalization_backward::batch_normalization_backward"], [154, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward28batch_normalization_backwardERK14primitive_desc", "dnnl::batch_normalization_backward::batch_normalization_backward::pd"], [154, 7, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_descE", "dnnl::batch_normalization_backward::primitive_desc"], [154, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc13diff_dst_descEv", "dnnl::batch_normalization_backward::primitive_desc::diff_dst_desc"], [154, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc13diff_src_descEv", "dnnl::batch_normalization_backward::primitive_desc::diff_src_desc"], [154, 3, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc17diff_weights_descEv", "dnnl::batch_normalization_backward::primitive_desc::diff_weights_desc"], [154, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc8dst_descEv", "dnnl::batch_normalization_backward::primitive_desc::dst_desc"], [154, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc11get_epsilonEv", "dnnl::batch_normalization_backward::primitive_desc::get_epsilon"], [154, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc9get_flagsEv", "dnnl::batch_normalization_backward::primitive_desc::get_flags"], [154, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc13get_prop_kindEv", "dnnl::batch_normalization_backward::primitive_desc::get_prop_kind"], [154, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc9mean_descEv", "dnnl::batch_normalization_backward::primitive_desc::mean_desc"], [154, 3, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc"], [154, 3, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descEv", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc"], [154, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc::aengine"], [154, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc::allow_empty"], [154, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc::aprop_kind"], [154, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc::attr"], [154, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc::diff_dst_desc"], [154, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc::diff_src_desc"], [154, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc::epsilon"], [154, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc::flags"], [154, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [154, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc::src_desc"], [154, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc8src_descEv", "dnnl::batch_normalization_backward::primitive_desc::src_desc"], [154, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc13variance_descEv", "dnnl::batch_normalization_backward::primitive_desc::variance_desc"], [154, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc12weights_descEv", "dnnl::batch_normalization_backward::primitive_desc::weights_desc"], [154, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc14workspace_descEv", "dnnl::batch_normalization_backward::primitive_desc::workspace_desc"], [154, 7, 1, "_CPPv4N4dnnl27batch_normalization_forwardE", "dnnl::batch_normalization_forward"], [154, 3, 1, "_CPPv4N4dnnl27batch_normalization_forward27batch_normalization_forwardERK14primitive_desc", "dnnl::batch_normalization_forward::batch_normalization_forward"], [154, 3, 1, "_CPPv4N4dnnl27batch_normalization_forward27batch_normalization_forwardEv", "dnnl::batch_normalization_forward::batch_normalization_forward"], [154, 4, 1, "_CPPv4N4dnnl27batch_normalization_forward27batch_normalization_forwardERK14primitive_desc", "dnnl::batch_normalization_forward::batch_normalization_forward::pd"], [154, 7, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_descE", "dnnl::batch_normalization_forward::primitive_desc"], [154, 3, 1, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc8dst_descEv", "dnnl::batch_normalization_forward::primitive_desc::dst_desc"], [154, 3, 1, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc11get_epsilonEv", "dnnl::batch_normalization_forward::primitive_desc::get_epsilon"], [154, 3, 1, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc9get_flagsEv", "dnnl::batch_normalization_forward::primitive_desc::get_flags"], [154, 3, 1, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc13get_prop_kindEv", "dnnl::batch_normalization_forward::primitive_desc::get_prop_kind"], [154, 3, 1, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc9mean_descEv", "dnnl::batch_normalization_forward::primitive_desc::mean_desc"], [154, 3, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::batch_normalization_forward::primitive_desc::primitive_desc"], [154, 3, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descEv", "dnnl::batch_normalization_forward::primitive_desc::primitive_desc"], [154, 4, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::batch_normalization_forward::primitive_desc::primitive_desc::aengine"], [154, 4, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::batch_normalization_forward::primitive_desc::primitive_desc::allow_empty"], [154, 4, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::batch_normalization_forward::primitive_desc::primitive_desc::aprop_kind"], [154, 4, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::batch_normalization_forward::primitive_desc::primitive_desc::attr"], [154, 4, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::batch_normalization_forward::primitive_desc::primitive_desc::dst_desc"], [154, 4, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::batch_normalization_forward::primitive_desc::primitive_desc::epsilon"], [154, 4, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::batch_normalization_forward::primitive_desc::primitive_desc::flags"], [154, 4, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::batch_normalization_forward::primitive_desc::primitive_desc::src_desc"], [154, 3, 1, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc8src_descEv", "dnnl::batch_normalization_forward::primitive_desc::src_desc"], [154, 3, 1, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc13variance_descEv", "dnnl::batch_normalization_forward::primitive_desc::variance_desc"], [154, 3, 1, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc12weights_descEv", "dnnl::batch_normalization_forward::primitive_desc::weights_desc"], [154, 3, 1, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc14workspace_descEv", "dnnl::batch_normalization_forward::primitive_desc::workspace_desc"], [155, 7, 1, "_CPPv4N4dnnl6binaryE", "dnnl::binary"], [155, 3, 1, "_CPPv4N4dnnl6binary6binaryERK14primitive_desc", "dnnl::binary::binary"], [155, 3, 1, "_CPPv4N4dnnl6binary6binaryEv", "dnnl::binary::binary"], [155, 4, 1, "_CPPv4N4dnnl6binary6binaryERK14primitive_desc", "dnnl::binary::binary::pd"], [155, 7, 1, "_CPPv4N4dnnl6binary14primitive_descE", "dnnl::binary::primitive_desc"], [155, 3, 1, "_CPPv4NK4dnnl6binary14primitive_desc8dst_descEv", "dnnl::binary::primitive_desc::dst_desc"], [155, 3, 1, "_CPPv4NK4dnnl6binary14primitive_desc13get_algorithmEv", "dnnl::binary::primitive_desc::get_algorithm"], [155, 3, 1, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::binary::primitive_desc::primitive_desc"], [155, 3, 1, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descEv", "dnnl::binary::primitive_desc::primitive_desc"], [155, 4, 1, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::binary::primitive_desc::primitive_desc::aalgorithm"], [155, 4, 1, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::binary::primitive_desc::primitive_desc::aengine"], [155, 4, 1, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::binary::primitive_desc::primitive_desc::allow_empty"], [155, 4, 1, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::binary::primitive_desc::primitive_desc::attr"], [155, 4, 1, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::binary::primitive_desc::primitive_desc::dst"], [155, 4, 1, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::binary::primitive_desc::primitive_desc::src0"], [155, 4, 1, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::binary::primitive_desc::primitive_desc::src1"], [155, 3, 1, "_CPPv4NK4dnnl6binary14primitive_desc9src0_descEv", "dnnl::binary::primitive_desc::src0_desc"], [155, 3, 1, "_CPPv4NK4dnnl6binary14primitive_desc9src1_descEv", "dnnl::binary::primitive_desc::src1_desc"], [155, 3, 1, "_CPPv4NK4dnnl6binary14primitive_desc8src_descEi", "dnnl::binary::primitive_desc::src_desc"], [155, 4, 1, "_CPPv4NK4dnnl6binary14primitive_desc8src_descEi", "dnnl::binary::primitive_desc::src_desc::idx"], [156, 7, 1, "_CPPv4N4dnnl6concatE", "dnnl::concat"], [156, 3, 1, "_CPPv4N4dnnl6concat6concatERK14primitive_desc", "dnnl::concat::concat"], [156, 3, 1, "_CPPv4N4dnnl6concat6concatEv", "dnnl::concat::concat"], [156, 4, 1, "_CPPv4N4dnnl6concat6concatERK14primitive_desc", "dnnl::concat::concat::pd"], [156, 7, 1, "_CPPv4N4dnnl6concat14primitive_descE", "dnnl::concat::primitive_desc"], [156, 3, 1, "_CPPv4NK4dnnl6concat14primitive_desc8dst_descEv", "dnnl::concat::primitive_desc::dst_desc"], [156, 3, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descERKN6memory4descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc"], [156, 3, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc"], [156, 3, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descEv", "dnnl::concat::primitive_desc::primitive_desc"], [156, 4, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descERKN6memory4descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc::aengine"], [156, 4, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc::aengine"], [156, 4, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descERKN6memory4descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc::attr"], [156, 4, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc::attr"], [156, 4, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descERKN6memory4descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc::concat_dimension"], [156, 4, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc::concat_dimension"], [156, 4, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descERKN6memory4descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc::dst"], [156, 4, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descERKN6memory4descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc::srcs"], [156, 4, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc::srcs"], [156, 3, 1, "_CPPv4NK4dnnl6concat14primitive_desc8src_descEi", "dnnl::concat::primitive_desc::src_desc"], [156, 4, 1, "_CPPv4NK4dnnl6concat14primitive_desc8src_descEi", "dnnl::concat::primitive_desc::src_desc::idx"], [157, 7, 1, "_CPPv4N4dnnl25convolution_backward_dataE", "dnnl::convolution_backward_data"], [157, 3, 1, "_CPPv4N4dnnl25convolution_backward_data25convolution_backward_dataERK14primitive_desc", "dnnl::convolution_backward_data::convolution_backward_data"], [157, 3, 1, "_CPPv4N4dnnl25convolution_backward_data25convolution_backward_dataEv", "dnnl::convolution_backward_data::convolution_backward_data"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data25convolution_backward_dataERK14primitive_desc", "dnnl::convolution_backward_data::convolution_backward_data::pd"], [157, 7, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_descE", "dnnl::convolution_backward_data::primitive_desc"], [157, 3, 1, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13diff_dst_descEv", "dnnl::convolution_backward_data::primitive_desc::diff_dst_desc"], [157, 3, 1, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13diff_src_descEv", "dnnl::convolution_backward_data::primitive_desc::diff_src_desc"], [157, 3, 1, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13get_algorithmEv", "dnnl::convolution_backward_data::primitive_desc::get_algorithm"], [157, 3, 1, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13get_dilationsEv", "dnnl::convolution_backward_data::primitive_desc::get_dilations"], [157, 3, 1, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13get_padding_lEv", "dnnl::convolution_backward_data::primitive_desc::get_padding_l"], [157, 3, 1, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13get_padding_rEv", "dnnl::convolution_backward_data::primitive_desc::get_padding_r"], [157, 3, 1, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13get_prop_kindEv", "dnnl::convolution_backward_data::primitive_desc::get_prop_kind"], [157, 3, 1, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc11get_stridesEv", "dnnl::convolution_backward_data::primitive_desc::get_strides"], [157, 3, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descEv", "dnnl::convolution_backward_data::primitive_desc::primitive_desc"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::diff_dst_desc"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::diff_dst_desc"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::diff_src_desc"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::diff_src_desc"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::dilates"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::hint_fwd_pd"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::hint_fwd_pd"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::padding_l"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::padding_l"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::padding_r"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::padding_r"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::strides"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::strides"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::weights_desc"], [157, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::weights_desc"], [157, 3, 1, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc12weights_descEv", "dnnl::convolution_backward_data::primitive_desc::weights_desc"], [157, 7, 1, "_CPPv4N4dnnl28convolution_backward_weightsE", "dnnl::convolution_backward_weights"], [157, 3, 1, "_CPPv4N4dnnl28convolution_backward_weights28convolution_backward_weightsERK14primitive_desc", "dnnl::convolution_backward_weights::convolution_backward_weights"], [157, 3, 1, "_CPPv4N4dnnl28convolution_backward_weights28convolution_backward_weightsEv", "dnnl::convolution_backward_weights::convolution_backward_weights"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights28convolution_backward_weightsERK14primitive_desc", "dnnl::convolution_backward_weights::convolution_backward_weights::pd"], [157, 7, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_descE", "dnnl::convolution_backward_weights::primitive_desc"], [157, 3, 1, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc14diff_bias_descEv", "dnnl::convolution_backward_weights::primitive_desc::diff_bias_desc"], [157, 3, 1, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13diff_dst_descEv", "dnnl::convolution_backward_weights::primitive_desc::diff_dst_desc"], [157, 3, 1, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc17diff_weights_descEv", "dnnl::convolution_backward_weights::primitive_desc::diff_weights_desc"], [157, 3, 1, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13get_algorithmEv", "dnnl::convolution_backward_weights::primitive_desc::get_algorithm"], [157, 3, 1, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13get_dilationsEv", "dnnl::convolution_backward_weights::primitive_desc::get_dilations"], [157, 3, 1, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13get_padding_lEv", "dnnl::convolution_backward_weights::primitive_desc::get_padding_l"], [157, 3, 1, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13get_padding_rEv", "dnnl::convolution_backward_weights::primitive_desc::get_padding_r"], [157, 3, 1, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13get_prop_kindEv", "dnnl::convolution_backward_weights::primitive_desc::get_prop_kind"], [157, 3, 1, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc11get_stridesEv", "dnnl::convolution_backward_weights::primitive_desc::get_strides"], [157, 3, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descEv", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::diff_bias_desc"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::diff_bias_desc"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::diff_dst_desc"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::diff_dst_desc"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::diff_dst_desc"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::diff_dst_desc"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::diff_weights_desc"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::diff_weights_desc"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::diff_weights_desc"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::diff_weights_desc"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::dilates"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::dilates"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::hint_fwd_pd"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::hint_fwd_pd"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::hint_fwd_pd"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::hint_fwd_pd"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::padding_l"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::padding_l"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::padding_l"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::padding_l"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::padding_r"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::padding_r"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::padding_r"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::padding_r"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::src_desc"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::src_desc"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::src_desc"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::src_desc"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::strides"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::strides"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::strides"], [157, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::strides"], [157, 3, 1, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc8src_descEv", "dnnl::convolution_backward_weights::primitive_desc::src_desc"], [157, 7, 1, "_CPPv4N4dnnl19convolution_forwardE", "dnnl::convolution_forward"], [157, 3, 1, "_CPPv4N4dnnl19convolution_forward19convolution_forwardERK14primitive_desc", "dnnl::convolution_forward::convolution_forward"], [157, 3, 1, "_CPPv4N4dnnl19convolution_forward19convolution_forwardEv", "dnnl::convolution_forward::convolution_forward"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward19convolution_forwardERK14primitive_desc", "dnnl::convolution_forward::convolution_forward::pd"], [157, 7, 1, "_CPPv4N4dnnl19convolution_forward14primitive_descE", "dnnl::convolution_forward::primitive_desc"], [157, 3, 1, "_CPPv4NK4dnnl19convolution_forward14primitive_desc9bias_descEv", "dnnl::convolution_forward::primitive_desc::bias_desc"], [157, 3, 1, "_CPPv4NK4dnnl19convolution_forward14primitive_desc8dst_descEv", "dnnl::convolution_forward::primitive_desc::dst_desc"], [157, 3, 1, "_CPPv4NK4dnnl19convolution_forward14primitive_desc13get_algorithmEv", "dnnl::convolution_forward::primitive_desc::get_algorithm"], [157, 3, 1, "_CPPv4NK4dnnl19convolution_forward14primitive_desc13get_dilationsEv", "dnnl::convolution_forward::primitive_desc::get_dilations"], [157, 3, 1, "_CPPv4NK4dnnl19convolution_forward14primitive_desc13get_padding_lEv", "dnnl::convolution_forward::primitive_desc::get_padding_l"], [157, 3, 1, "_CPPv4NK4dnnl19convolution_forward14primitive_desc13get_padding_rEv", "dnnl::convolution_forward::primitive_desc::get_padding_r"], [157, 3, 1, "_CPPv4NK4dnnl19convolution_forward14primitive_desc13get_prop_kindEv", "dnnl::convolution_forward::primitive_desc::get_prop_kind"], [157, 3, 1, "_CPPv4NK4dnnl19convolution_forward14primitive_desc11get_stridesEv", "dnnl::convolution_forward::primitive_desc::get_strides"], [157, 3, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descEv", "dnnl::convolution_forward::primitive_desc::primitive_desc"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aprop_kind"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aprop_kind"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aprop_kind"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aprop_kind"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::bias_desc"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::bias_desc"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::dilates"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::dilates"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::dst_desc"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::dst_desc"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::dst_desc"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::dst_desc"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::padding_l"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::padding_l"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::padding_l"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::padding_l"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::padding_r"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::padding_r"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::padding_r"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::padding_r"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::src_desc"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::src_desc"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::src_desc"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::src_desc"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::strides"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::strides"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::strides"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::strides"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::weights_desc"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::weights_desc"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::weights_desc"], [157, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::weights_desc"], [157, 3, 1, "_CPPv4NK4dnnl19convolution_forward14primitive_desc8src_descEv", "dnnl::convolution_forward::primitive_desc::src_desc"], [157, 3, 1, "_CPPv4NK4dnnl19convolution_forward14primitive_desc12weights_descEv", "dnnl::convolution_forward::primitive_desc::weights_desc"], [157, 7, 1, "_CPPv4N4dnnl27deconvolution_backward_dataE", "dnnl::deconvolution_backward_data"], [157, 3, 1, "_CPPv4N4dnnl27deconvolution_backward_data27deconvolution_backward_dataERK14primitive_desc", "dnnl::deconvolution_backward_data::deconvolution_backward_data"], [157, 3, 1, "_CPPv4N4dnnl27deconvolution_backward_data27deconvolution_backward_dataEv", "dnnl::deconvolution_backward_data::deconvolution_backward_data"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data27deconvolution_backward_dataERK14primitive_desc", "dnnl::deconvolution_backward_data::deconvolution_backward_data::pd"], [157, 7, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_descE", "dnnl::deconvolution_backward_data::primitive_desc"], [157, 3, 1, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13diff_dst_descEv", "dnnl::deconvolution_backward_data::primitive_desc::diff_dst_desc"], [157, 3, 1, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13diff_src_descEv", "dnnl::deconvolution_backward_data::primitive_desc::diff_src_desc"], [157, 3, 1, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13get_algorithmEv", "dnnl::deconvolution_backward_data::primitive_desc::get_algorithm"], [157, 3, 1, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13get_dilationsEv", "dnnl::deconvolution_backward_data::primitive_desc::get_dilations"], [157, 3, 1, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13get_padding_lEv", "dnnl::deconvolution_backward_data::primitive_desc::get_padding_l"], [157, 3, 1, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13get_padding_rEv", "dnnl::deconvolution_backward_data::primitive_desc::get_padding_r"], [157, 3, 1, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13get_prop_kindEv", "dnnl::deconvolution_backward_data::primitive_desc::get_prop_kind"], [157, 3, 1, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc11get_stridesEv", "dnnl::deconvolution_backward_data::primitive_desc::get_strides"], [157, 3, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descEv", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::diff_dst_desc"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::diff_dst_desc"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::diff_src_desc"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::diff_src_desc"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::dilates"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::hint_fwd_pd"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::hint_fwd_pd"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::padding_l"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::padding_l"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::padding_r"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::padding_r"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::strides"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::strides"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::weights_desc"], [157, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::weights_desc"], [157, 3, 1, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc12weights_descEv", "dnnl::deconvolution_backward_data::primitive_desc::weights_desc"], [157, 7, 1, "_CPPv4N4dnnl30deconvolution_backward_weightsE", "dnnl::deconvolution_backward_weights"], [157, 3, 1, "_CPPv4N4dnnl30deconvolution_backward_weights30deconvolution_backward_weightsERK14primitive_desc", "dnnl::deconvolution_backward_weights::deconvolution_backward_weights"], [157, 3, 1, "_CPPv4N4dnnl30deconvolution_backward_weights30deconvolution_backward_weightsEv", "dnnl::deconvolution_backward_weights::deconvolution_backward_weights"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights30deconvolution_backward_weightsERK14primitive_desc", "dnnl::deconvolution_backward_weights::deconvolution_backward_weights::pd"], [157, 7, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_descE", "dnnl::deconvolution_backward_weights::primitive_desc"], [157, 3, 1, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc14diff_bias_descEv", "dnnl::deconvolution_backward_weights::primitive_desc::diff_bias_desc"], [157, 3, 1, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13diff_dst_descEv", "dnnl::deconvolution_backward_weights::primitive_desc::diff_dst_desc"], [157, 3, 1, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc17diff_weights_descEv", "dnnl::deconvolution_backward_weights::primitive_desc::diff_weights_desc"], [157, 3, 1, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13get_algorithmEv", "dnnl::deconvolution_backward_weights::primitive_desc::get_algorithm"], [157, 3, 1, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13get_dilationsEv", "dnnl::deconvolution_backward_weights::primitive_desc::get_dilations"], [157, 3, 1, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13get_padding_lEv", "dnnl::deconvolution_backward_weights::primitive_desc::get_padding_l"], [157, 3, 1, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13get_padding_rEv", "dnnl::deconvolution_backward_weights::primitive_desc::get_padding_r"], [157, 3, 1, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13get_prop_kindEv", "dnnl::deconvolution_backward_weights::primitive_desc::get_prop_kind"], [157, 3, 1, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc11get_stridesEv", "dnnl::deconvolution_backward_weights::primitive_desc::get_strides"], [157, 3, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descEv", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::diff_bias_desc"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::diff_bias_desc"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::diff_dst_desc"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::diff_dst_desc"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::diff_dst_desc"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::diff_dst_desc"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::diff_weights_desc"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::diff_weights_desc"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::diff_weights_desc"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::diff_weights_desc"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::dilates"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::dilates"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::hint_fwd_pd"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::hint_fwd_pd"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::hint_fwd_pd"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::hint_fwd_pd"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::padding_l"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::padding_l"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::padding_l"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::padding_l"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::padding_r"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::padding_r"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::padding_r"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::padding_r"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::src_desc"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::src_desc"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::src_desc"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::src_desc"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::strides"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::strides"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::strides"], [157, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::strides"], [157, 3, 1, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc8src_descEv", "dnnl::deconvolution_backward_weights::primitive_desc::src_desc"], [157, 7, 1, "_CPPv4N4dnnl21deconvolution_forwardE", "dnnl::deconvolution_forward"], [157, 3, 1, "_CPPv4N4dnnl21deconvolution_forward21deconvolution_forwardERK14primitive_desc", "dnnl::deconvolution_forward::deconvolution_forward"], [157, 3, 1, "_CPPv4N4dnnl21deconvolution_forward21deconvolution_forwardEv", "dnnl::deconvolution_forward::deconvolution_forward"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward21deconvolution_forwardERK14primitive_desc", "dnnl::deconvolution_forward::deconvolution_forward::pd"], [157, 7, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_descE", "dnnl::deconvolution_forward::primitive_desc"], [157, 3, 1, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc9bias_descEv", "dnnl::deconvolution_forward::primitive_desc::bias_desc"], [157, 3, 1, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc8dst_descEv", "dnnl::deconvolution_forward::primitive_desc::dst_desc"], [157, 3, 1, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc13get_algorithmEv", "dnnl::deconvolution_forward::primitive_desc::get_algorithm"], [157, 3, 1, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc13get_dilationsEv", "dnnl::deconvolution_forward::primitive_desc::get_dilations"], [157, 3, 1, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc13get_padding_lEv", "dnnl::deconvolution_forward::primitive_desc::get_padding_l"], [157, 3, 1, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc13get_padding_rEv", "dnnl::deconvolution_forward::primitive_desc::get_padding_r"], [157, 3, 1, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc13get_prop_kindEv", "dnnl::deconvolution_forward::primitive_desc::get_prop_kind"], [157, 3, 1, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc11get_stridesEv", "dnnl::deconvolution_forward::primitive_desc::get_strides"], [157, 3, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descEv", "dnnl::deconvolution_forward::primitive_desc::primitive_desc"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aprop_kind"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aprop_kind"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aprop_kind"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aprop_kind"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::bias_desc"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::bias_desc"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::dilates"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::dilates"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::dst_desc"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::dst_desc"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::dst_desc"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::dst_desc"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::padding_l"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::padding_l"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::padding_l"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::padding_l"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::padding_r"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::padding_r"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::padding_r"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::padding_r"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::src_desc"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::src_desc"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::src_desc"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::src_desc"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::strides"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::strides"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::strides"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::strides"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::weights_desc"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::weights_desc"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::weights_desc"], [157, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::weights_desc"], [157, 3, 1, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc8src_descEv", "dnnl::deconvolution_forward::primitive_desc::src_desc"], [157, 3, 1, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc12weights_descEv", "dnnl::deconvolution_forward::primitive_desc::weights_desc"], [158, 7, 1, "_CPPv4N4dnnl16eltwise_backwardE", "dnnl::eltwise_backward"], [158, 3, 1, "_CPPv4N4dnnl16eltwise_backward16eltwise_backwardERK14primitive_desc", "dnnl::eltwise_backward::eltwise_backward"], [158, 3, 1, "_CPPv4N4dnnl16eltwise_backward16eltwise_backwardEv", "dnnl::eltwise_backward::eltwise_backward"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward16eltwise_backwardERK14primitive_desc", "dnnl::eltwise_backward::eltwise_backward::pd"], [158, 7, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_descE", "dnnl::eltwise_backward::primitive_desc"], [158, 3, 1, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc13diff_dst_descEv", "dnnl::eltwise_backward::primitive_desc::diff_dst_desc"], [158, 3, 1, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc13diff_src_descEv", "dnnl::eltwise_backward::primitive_desc::diff_src_desc"], [158, 3, 1, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc13get_algorithmEv", "dnnl::eltwise_backward::primitive_desc::get_algorithm"], [158, 3, 1, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc9get_alphaEv", "dnnl::eltwise_backward::primitive_desc::get_alpha"], [158, 3, 1, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc8get_betaEv", "dnnl::eltwise_backward::primitive_desc::get_beta"], [158, 3, 1, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc13get_prop_kindEv", "dnnl::eltwise_backward::primitive_desc::get_prop_kind"], [158, 3, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc"], [158, 3, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc"], [158, 3, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc"], [158, 3, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descEv", "dnnl::eltwise_backward::primitive_desc::primitive_desc"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::aalgorithm"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::aalgorithm"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::aalgorithm"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::aengine"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::aengine"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::aengine"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::allow_empty"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::allow_empty"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::allow_empty"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::alpha"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::alpha"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::attr"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::attr"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::attr"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::beta"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::data_desc"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::data_desc"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::data_desc"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::diff_dst_desc"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::diff_dst_desc"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::diff_dst_desc"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::diff_src_desc"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::diff_src_desc"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::diff_src_desc"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [158, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [158, 3, 1, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc8src_descEv", "dnnl::eltwise_backward::primitive_desc::src_desc"], [158, 7, 1, "_CPPv4N4dnnl15eltwise_forwardE", "dnnl::eltwise_forward"], [158, 3, 1, "_CPPv4N4dnnl15eltwise_forward15eltwise_forwardERK14primitive_desc", "dnnl::eltwise_forward::eltwise_forward"], [158, 3, 1, "_CPPv4N4dnnl15eltwise_forward15eltwise_forwardEv", "dnnl::eltwise_forward::eltwise_forward"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward15eltwise_forwardERK14primitive_desc", "dnnl::eltwise_forward::eltwise_forward::pd"], [158, 7, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_descE", "dnnl::eltwise_forward::primitive_desc"], [158, 3, 1, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc8dst_descEv", "dnnl::eltwise_forward::primitive_desc::dst_desc"], [158, 3, 1, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc13get_algorithmEv", "dnnl::eltwise_forward::primitive_desc::get_algorithm"], [158, 3, 1, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc9get_alphaEv", "dnnl::eltwise_forward::primitive_desc::get_alpha"], [158, 3, 1, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc8get_betaEv", "dnnl::eltwise_forward::primitive_desc::get_beta"], [158, 3, 1, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc13get_prop_kindEv", "dnnl::eltwise_forward::primitive_desc::get_prop_kind"], [158, 3, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc"], [158, 3, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc"], [158, 3, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc"], [158, 3, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descEv", "dnnl::eltwise_forward::primitive_desc::primitive_desc"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::aalgorithm"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::aalgorithm"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::aalgorithm"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::aengine"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::aengine"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::aengine"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::allow_empty"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::allow_empty"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::allow_empty"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::alpha"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::alpha"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::aprop_kind"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::aprop_kind"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::aprop_kind"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::attr"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::attr"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::attr"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::beta"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::dst_desc"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::dst_desc"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::dst_desc"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::src_desc"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::src_desc"], [158, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::src_desc"], [158, 3, 1, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc8src_descEv", "dnnl::eltwise_forward::primitive_desc::src_desc"], [61, 7, 1, "_CPPv4N4dnnl6engineE", "dnnl::engine"], [61, 3, 1, "_CPPv4N4dnnl6engine6engineE4kind6size_t", "dnnl::engine::engine"], [61, 3, 1, "_CPPv4N4dnnl6engine6engineEv", "dnnl::engine::engine"], [61, 4, 1, "_CPPv4N4dnnl6engine6engineE4kind6size_t", "dnnl::engine::engine::akind"], [61, 4, 1, "_CPPv4N4dnnl6engine6engineE4kind6size_t", "dnnl::engine::engine::index"], [61, 3, 1, "_CPPv4N4dnnl6engine9get_countE4kind", "dnnl::engine::get_count"], [61, 4, 1, "_CPPv4N4dnnl6engine9get_countE4kind", "dnnl::engine::get_count::akind"], [61, 3, 1, "_CPPv4NK4dnnl6engine8get_kindEv", "dnnl::engine::get_kind"], [61, 9, 1, "_CPPv4N4dnnl6engine4kindE", "dnnl::engine::kind"], [61, 10, 1, "_CPPv4N4dnnl6engine4kind3anyE", "dnnl::engine::kind::any"], [61, 10, 1, "_CPPv4N4dnnl6engine4kind3cpuE", "dnnl::engine::kind::cpu"], [61, 10, 1, "_CPPv4N4dnnl6engine4kind3gpuE", "dnnl::engine::kind::gpu"], [151, 7, 1, "_CPPv4N4dnnl5errorE", "dnnl::error"], [63, 7, 1, "_CPPv4N4dnnl5graph5graphE", "dnnl::graph::graph"], [63, 3, 1, "_CPPv4N4dnnl5graph5graph6add_opERK2opb", "dnnl::graph::graph::add_op"], [63, 4, 1, "_CPPv4N4dnnl5graph5graph6add_opERK2opb", "dnnl::graph::graph::add_op::allow_exception"], [63, 4, 1, "_CPPv4N4dnnl5graph5graph6add_opERK2opb", "dnnl::graph::graph::add_op::op"], [63, 3, 1, "_CPPv4N4dnnl5graph5graph8finalizeEv", "dnnl::graph::graph::finalize"], [63, 3, 1, "_CPPv4N4dnnl5graph5graph14get_partitionsEN9partition6policyE", "dnnl::graph::graph::get_partitions"], [63, 4, 1, "_CPPv4N4dnnl5graph5graph14get_partitionsEN9partition6policyE", "dnnl::graph::graph::get_partitions::policy"], [63, 3, 1, "_CPPv4N4dnnl5graph5graph5graphEN4dnnl6engine4kindE", "dnnl::graph::graph::graph"], [63, 3, 1, "_CPPv4N4dnnl5graph5graph5graphEN4dnnl6engine4kindEN4dnnl11fpmath_modeE", "dnnl::graph::graph::graph"], [63, 4, 1, "_CPPv4N4dnnl5graph5graph5graphEN4dnnl6engine4kindE", "dnnl::graph::graph::graph::engine_kind"], [63, 4, 1, "_CPPv4N4dnnl5graph5graph5graphEN4dnnl6engine4kindEN4dnnl11fpmath_modeE", "dnnl::graph::graph::graph::engine_kind"], [63, 4, 1, "_CPPv4N4dnnl5graph5graph5graphEN4dnnl6engine4kindEN4dnnl11fpmath_modeE", "dnnl::graph::graph::graph::mode"], [63, 3, 1, "_CPPv4NK4dnnl5graph5graph12is_finalizedEv", "dnnl::graph::graph::is_finalized"], [63, 7, 1, "_CPPv4N4dnnl5graph14logical_tensorE", "dnnl::graph::logical_tensor"], [63, 9, 1, "_CPPv4N4dnnl5graph14logical_tensor9data_typeE", "dnnl::graph::logical_tensor::data_type"], [63, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor9data_type4bf16E", "dnnl::graph::logical_tensor::data_type::bf16"], [63, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor9data_type7booleanE", "dnnl::graph::logical_tensor::data_type::boolean"], [63, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor9data_type3f16E", "dnnl::graph::logical_tensor::data_type::f16"], [63, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor9data_type3f32E", "dnnl::graph::logical_tensor::data_type::f32"], [63, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor9data_type3s32E", "dnnl::graph::logical_tensor::data_type::s32"], [63, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor9data_type2s8E", "dnnl::graph::logical_tensor::data_type::s8"], [63, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor9data_type2u8E", "dnnl::graph::logical_tensor::data_type::u8"], [63, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor9data_type5undefE", "dnnl::graph::logical_tensor::data_type::undef"], [63, 5, 1, "_CPPv4N4dnnl5graph14logical_tensor3dimE", "dnnl::graph::logical_tensor::dim"], [63, 5, 1, "_CPPv4N4dnnl5graph14logical_tensor4dimsE", "dnnl::graph::logical_tensor::dims"], [63, 3, 1, "_CPPv4N4dnnl5graph14logical_tensor13get_data_typeEv", "dnnl::graph::logical_tensor::get_data_type"], [63, 3, 1, "_CPPv4NK4dnnl5graph14logical_tensor8get_dimsEv", "dnnl::graph::logical_tensor::get_dims"], [63, 3, 1, "_CPPv4NK4dnnl5graph14logical_tensor6get_idEv", "dnnl::graph::logical_tensor::get_id"], [63, 3, 1, "_CPPv4NK4dnnl5graph14logical_tensor13get_layout_idEv", "dnnl::graph::logical_tensor::get_layout_id"], [63, 3, 1, "_CPPv4NK4dnnl5graph14logical_tensor15get_layout_typeEv", "dnnl::graph::logical_tensor::get_layout_type"], [63, 3, 1, "_CPPv4NK4dnnl5graph14logical_tensor12get_mem_sizeEv", "dnnl::graph::logical_tensor::get_mem_size"], [63, 3, 1, "_CPPv4NK4dnnl5graph14logical_tensor17get_property_typeEv", "dnnl::graph::logical_tensor::get_property_type"], [63, 3, 1, "_CPPv4NK4dnnl5graph14logical_tensor11get_stridesEv", "dnnl::graph::logical_tensor::get_strides"], [63, 3, 1, "_CPPv4N4dnnl5graph14logical_tensor8is_equalERK14logical_tensor", "dnnl::graph::logical_tensor::is_equal"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor8is_equalERK14logical_tensor", "dnnl::graph::logical_tensor::is_equal::lt"], [63, 9, 1, "_CPPv4N4dnnl5graph14logical_tensor11layout_typeE", "dnnl::graph::logical_tensor::layout_type"], [63, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor11layout_type3anyE", "dnnl::graph::logical_tensor::layout_type::any"], [63, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor11layout_type6opaqueE", "dnnl::graph::logical_tensor::layout_type::opaque"], [63, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor11layout_type7stridedE", "dnnl::graph::logical_tensor::layout_type::strided"], [63, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor11layout_type5undefE", "dnnl::graph::logical_tensor::layout_type::undef"], [63, 3, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type11layout_type", "dnnl::graph::logical_tensor::logical_tensor"], [63, 3, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type7int32_t11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor"], [63, 3, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor"], [63, 3, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims6size_t13property_type", "dnnl::graph::logical_tensor::logical_tensor"], [63, 3, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dimsRK4dims13property_type", "dnnl::graph::logical_tensor::logical_tensor"], [63, 3, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorERK14logical_tensor", "dnnl::graph::logical_tensor::logical_tensor"], [63, 3, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorEv", "dnnl::graph::logical_tensor::logical_tensor"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor::adims"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims6size_t13property_type", "dnnl::graph::logical_tensor::logical_tensor::adims"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dimsRK4dims13property_type", "dnnl::graph::logical_tensor::logical_tensor::adims"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type11layout_type", "dnnl::graph::logical_tensor::logical_tensor::dtype"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type7int32_t11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor::dtype"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor::dtype"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims6size_t13property_type", "dnnl::graph::logical_tensor::logical_tensor::dtype"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dimsRK4dims13property_type", "dnnl::graph::logical_tensor::logical_tensor::dtype"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims6size_t13property_type", "dnnl::graph::logical_tensor::logical_tensor::lid"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type11layout_type", "dnnl::graph::logical_tensor::logical_tensor::ltype"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type7int32_t11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor::ltype"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor::ltype"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type7int32_t11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor::ndims"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorERK14logical_tensor", "dnnl::graph::logical_tensor::logical_tensor::other"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type7int32_t11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor::ptype"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor::ptype"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims6size_t13property_type", "dnnl::graph::logical_tensor::logical_tensor::ptype"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dimsRK4dims13property_type", "dnnl::graph::logical_tensor::logical_tensor::ptype"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dimsRK4dims13property_type", "dnnl::graph::logical_tensor::logical_tensor::strides"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type11layout_type", "dnnl::graph::logical_tensor::logical_tensor::tid"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type7int32_t11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor::tid"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor::tid"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims6size_t13property_type", "dnnl::graph::logical_tensor::logical_tensor::tid"], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dimsRK4dims13property_type", "dnnl::graph::logical_tensor::logical_tensor::tid"], [63, 3, 1, "_CPPv4N4dnnl5graph14logical_tensoraSERK14logical_tensor", "dnnl::graph::logical_tensor::operator="], [63, 4, 1, "_CPPv4N4dnnl5graph14logical_tensoraSERK14logical_tensor", "dnnl::graph::logical_tensor::operator=::other"], [63, 9, 1, "_CPPv4N4dnnl5graph14logical_tensor13property_typeE", "dnnl::graph::logical_tensor::property_type"], [63, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor13property_type8constantE", "dnnl::graph::logical_tensor::property_type::constant"], [63, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor13property_type5undefE", "dnnl::graph::logical_tensor::property_type::undef"], [63, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor13property_type8variableE", "dnnl::graph::logical_tensor::property_type::variable"], [63, 7, 1, "_CPPv4N4dnnl5graph2opE", "dnnl::graph::op"], [63, 3, 1, "_CPPv4N4dnnl5graph2op9add_inputERK14logical_tensor", "dnnl::graph::op::add_input"], [63, 4, 1, "_CPPv4N4dnnl5graph2op9add_inputERK14logical_tensor", "dnnl::graph::op::add_input::t"], [63, 3, 1, "_CPPv4N4dnnl5graph2op10add_inputsERKNSt6vectorI14logical_tensorEE", "dnnl::graph::op::add_inputs"], [63, 4, 1, "_CPPv4N4dnnl5graph2op10add_inputsERKNSt6vectorI14logical_tensorEE", "dnnl::graph::op::add_inputs::ts"], [63, 3, 1, "_CPPv4N4dnnl5graph2op10add_outputERK14logical_tensor", "dnnl::graph::op::add_output"], [63, 4, 1, "_CPPv4N4dnnl5graph2op10add_outputERK14logical_tensor", "dnnl::graph::op::add_output::t"], [63, 3, 1, "_CPPv4N4dnnl5graph2op11add_outputsERKNSt6vectorI14logical_tensorEE", "dnnl::graph::op::add_outputs"], [63, 4, 1, "_CPPv4N4dnnl5graph2op11add_outputsERKNSt6vectorI14logical_tensorEE", "dnnl::graph::op::add_outputs::ts"], [63, 9, 1, "_CPPv4N4dnnl5graph2op4attrE", "dnnl::graph::op::attr"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr5alphaE", "dnnl::graph::op::attr::alpha"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr14auto_broadcastE", "dnnl::graph::op::attr::auto_broadcast"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr8auto_padE", "dnnl::graph::op::attr::auto_pad"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr4axesE", "dnnl::graph::op::attr::axes"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr4axisE", "dnnl::graph::op::attr::axis"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr15begin_norm_axisE", "dnnl::graph::op::attr::begin_norm_axis"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr4betaE", "dnnl::graph::op::attr::beta"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr30coordinate_transformation_modeE", "dnnl::graph::op::attr::coordinate_transformation_mode"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr11data_formatE", "dnnl::graph::op::attr::data_format"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr9dilationsE", "dnnl::graph::op::attr::dilations"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr9dst_shapeE", "dnnl::graph::op::attr::dst_shape"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr7epsilonE", "dnnl::graph::op::attr::epsilon"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr11exclude_padE", "dnnl::graph::op::attr::exclude_pad"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr6groupsE", "dnnl::graph::op::attr::groups"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr9keep_dimsE", "dnnl::graph::op::attr::keep_dims"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr10keep_statsE", "dnnl::graph::op::attr::keep_stats"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr6kernelE", "dnnl::graph::op::attr::kernel"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr3maxE", "dnnl::graph::op::attr::max"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr3minE", "dnnl::graph::op::attr::min"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr4modeE", "dnnl::graph::op::attr::mode"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr8momentumE", "dnnl::graph::op::attr::momentum"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr5orderE", "dnnl::graph::op::attr::order"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr14output_paddingE", "dnnl::graph::op::attr::output_padding"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr10pads_beginE", "dnnl::graph::op::attr::pads_begin"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr8pads_endE", "dnnl::graph::op::attr::pads_end"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr21per_channel_broadcastE", "dnnl::graph::op::attr::per_channel_broadcast"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr5qtypeE", "dnnl::graph::op::attr::qtype"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr13rounding_typeE", "dnnl::graph::op::attr::rounding_type"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr6scalesE", "dnnl::graph::op::attr::scales"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr5shapeE", "dnnl::graph::op::attr::shape"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr5sizesE", "dnnl::graph::op::attr::sizes"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr12special_zeroE", "dnnl::graph::op::attr::special_zero"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr9src_shapeE", "dnnl::graph::op::attr::src_shape"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr7stridesE", "dnnl::graph::op::attr::strides"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr11transpose_aE", "dnnl::graph::op::attr::transpose_a"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr11transpose_bE", "dnnl::graph::op::attr::transpose_b"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr5undefE", "dnnl::graph::op::attr::undef"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr10use_affineE", "dnnl::graph::op::attr::use_affine"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr7use_dstE", "dnnl::graph::op::attr::use_dst"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr14weights_formatE", "dnnl::graph::op::attr::weights_format"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr13weights_shapeE", "dnnl::graph::op::attr::weights_shape"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4attr3zpsE", "dnnl::graph::op::attr::zps"], [63, 9, 1, "_CPPv4N4dnnl5graph2op4kindE", "dnnl::graph::op::kind"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind3AbsE", "dnnl::graph::op::kind::Abs"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind11AbsBackwardE", "dnnl::graph::op::kind::AbsBackward"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind3AddE", "dnnl::graph::op::kind::Add"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind7AvgPoolE", "dnnl::graph::op::kind::AvgPool"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind15AvgPoolBackwardE", "dnnl::graph::op::kind::AvgPoolBackward"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind24BatchNormForwardTrainingE", "dnnl::graph::op::kind::BatchNormForwardTraining"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind18BatchNormInferenceE", "dnnl::graph::op::kind::BatchNormInference"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind25BatchNormTrainingBackwardE", "dnnl::graph::op::kind::BatchNormTrainingBackward"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind7BiasAddE", "dnnl::graph::op::kind::BiasAdd"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind15BiasAddBackwardE", "dnnl::graph::op::kind::BiasAddBackward"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind5ClampE", "dnnl::graph::op::kind::Clamp"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind13ClampBackwardE", "dnnl::graph::op::kind::ClampBackward"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind6ConcatE", "dnnl::graph::op::kind::Concat"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind13ConvTransposeE", "dnnl::graph::op::kind::ConvTranspose"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind25ConvTransposeBackwardDataE", "dnnl::graph::op::kind::ConvTransposeBackwardData"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind28ConvTransposeBackwardWeightsE", "dnnl::graph::op::kind::ConvTransposeBackwardWeights"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind11ConvolutionE", "dnnl::graph::op::kind::Convolution"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind23ConvolutionBackwardDataE", "dnnl::graph::op::kind::ConvolutionBackwardData"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind26ConvolutionBackwardWeightsE", "dnnl::graph::op::kind::ConvolutionBackwardWeights"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind10DequantizeE", "dnnl::graph::op::kind::Dequantize"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind6DivideE", "dnnl::graph::op::kind::Divide"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind17DynamicDequantizeE", "dnnl::graph::op::kind::DynamicDequantize"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind15DynamicQuantizeE", "dnnl::graph::op::kind::DynamicQuantize"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind3EluE", "dnnl::graph::op::kind::Elu"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind11EluBackwardE", "dnnl::graph::op::kind::EluBackward"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind3EndE", "dnnl::graph::op::kind::End"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind3ExpE", "dnnl::graph::op::kind::Exp"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind4GELUE", "dnnl::graph::op::kind::GELU"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind12GELUBackwardE", "dnnl::graph::op::kind::GELUBackward"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind11HardSigmoidE", "dnnl::graph::op::kind::HardSigmoid"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind19HardSigmoidBackwardE", "dnnl::graph::op::kind::HardSigmoidBackward"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind9HardSwishE", "dnnl::graph::op::kind::HardSwish"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind17HardSwishBackwardE", "dnnl::graph::op::kind::HardSwishBackward"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind11InterpolateE", "dnnl::graph::op::kind::Interpolate"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind19InterpolateBackwardE", "dnnl::graph::op::kind::InterpolateBackward"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind10LastSymbolE", "dnnl::graph::op::kind::LastSymbol"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind9LayerNormE", "dnnl::graph::op::kind::LayerNorm"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind17LayerNormBackwardE", "dnnl::graph::op::kind::LayerNormBackward"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind9LeakyReLUE", "dnnl::graph::op::kind::LeakyReLU"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind3LogE", "dnnl::graph::op::kind::Log"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind10LogSoftmaxE", "dnnl::graph::op::kind::LogSoftmax"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind18LogSoftmaxBackwardE", "dnnl::graph::op::kind::LogSoftmaxBackward"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind6MatMulE", "dnnl::graph::op::kind::MatMul"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind7MaxPoolE", "dnnl::graph::op::kind::MaxPool"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind15MaxPoolBackwardE", "dnnl::graph::op::kind::MaxPoolBackward"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind7MaximumE", "dnnl::graph::op::kind::Maximum"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind7MinimumE", "dnnl::graph::op::kind::Minimum"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind4MishE", "dnnl::graph::op::kind::Mish"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind12MishBackwardE", "dnnl::graph::op::kind::MishBackward"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind8MultiplyE", "dnnl::graph::op::kind::Multiply"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind5PReLUE", "dnnl::graph::op::kind::PReLU"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind13PReLUBackwardE", "dnnl::graph::op::kind::PReLUBackward"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind3PowE", "dnnl::graph::op::kind::Pow"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind8QuantizeE", "dnnl::graph::op::kind::Quantize"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind4ReLUE", "dnnl::graph::op::kind::ReLU"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind12ReLUBackwardE", "dnnl::graph::op::kind::ReLUBackward"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind10ReciprocalE", "dnnl::graph::op::kind::Reciprocal"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind8ReduceL1E", "dnnl::graph::op::kind::ReduceL1"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind8ReduceL2E", "dnnl::graph::op::kind::ReduceL2"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind9ReduceMaxE", "dnnl::graph::op::kind::ReduceMax"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind10ReduceMeanE", "dnnl::graph::op::kind::ReduceMean"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind9ReduceMinE", "dnnl::graph::op::kind::ReduceMin"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind10ReduceProdE", "dnnl::graph::op::kind::ReduceProd"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind9ReduceSumE", "dnnl::graph::op::kind::ReduceSum"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind7ReorderE", "dnnl::graph::op::kind::Reorder"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind5RoundE", "dnnl::graph::op::kind::Round"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind6SelectE", "dnnl::graph::op::kind::Select"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind7SigmoidE", "dnnl::graph::op::kind::Sigmoid"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind15SigmoidBackwardE", "dnnl::graph::op::kind::SigmoidBackward"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind7SoftMaxE", "dnnl::graph::op::kind::SoftMax"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind15SoftMaxBackwardE", "dnnl::graph::op::kind::SoftMaxBackward"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind8SoftPlusE", "dnnl::graph::op::kind::SoftPlus"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind16SoftPlusBackwardE", "dnnl::graph::op::kind::SoftPlusBackward"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind4SqrtE", "dnnl::graph::op::kind::Sqrt"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind12SqrtBackwardE", "dnnl::graph::op::kind::SqrtBackward"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind6SquareE", "dnnl::graph::op::kind::Square"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind17SquaredDifferenceE", "dnnl::graph::op::kind::SquaredDifference"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind13StaticReshapeE", "dnnl::graph::op::kind::StaticReshape"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind15StaticTransposeE", "dnnl::graph::op::kind::StaticTranspose"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind8SubtractE", "dnnl::graph::op::kind::Subtract"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind4TanhE", "dnnl::graph::op::kind::Tanh"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind12TanhBackwardE", "dnnl::graph::op::kind::TanhBackward"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind8TypeCastE", "dnnl::graph::op::kind::TypeCast"], [63, 10, 1, "_CPPv4N4dnnl5graph2op4kind8WildcardE", "dnnl::graph::op::kind::Wildcard"], [63, 3, 1, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6stringE", "dnnl::graph::op::op"], [63, 3, 1, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6vectorI14logical_tensorEERKNSt6vectorI14logical_tensorEERKNSt6stringE", "dnnl::graph::op::op"], [63, 4, 1, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6stringE", "dnnl::graph::op::op::akind"], [63, 4, 1, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6vectorI14logical_tensorEERKNSt6vectorI14logical_tensorEERKNSt6stringE", "dnnl::graph::op::op::akind"], [63, 4, 1, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6stringE", "dnnl::graph::op::op::id"], [63, 4, 1, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6vectorI14logical_tensorEERKNSt6vectorI14logical_tensorEERKNSt6stringE", "dnnl::graph::op::op::id"], [63, 4, 1, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6vectorI14logical_tensorEERKNSt6vectorI14logical_tensorEERKNSt6stringE", "dnnl::graph::op::op::inputs"], [63, 4, 1, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6stringE", "dnnl::graph::op::op::name"], [63, 4, 1, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6vectorI14logical_tensorEERKNSt6vectorI14logical_tensorEERKNSt6stringE", "dnnl::graph::op::op::name"], [63, 4, 1, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6vectorI14logical_tensorEERKNSt6vectorI14logical_tensorEERKNSt6stringE", "dnnl::graph::op::op::outputs"], [63, 3, 1, "_CPPv4I0EN4dnnl5graph2op8set_attrER2op4attrRK4Type", "dnnl::graph::op::set_attr"], [63, 8, 1, "_CPPv4I0EN4dnnl5graph2op8set_attrER2op4attrRK4Type", "dnnl::graph::op::set_attr::Type"], [63, 4, 1, "_CPPv4I0EN4dnnl5graph2op8set_attrER2op4attrRK4Type", "dnnl::graph::op::set_attr::name"], [63, 4, 1, "_CPPv4I0EN4dnnl5graph2op8set_attrER2op4attrRK4Type", "dnnl::graph::op::set_attr::value"], [170, 7, 1, "_CPPv4N4dnnl12gru_backwardE", "dnnl::gru_backward"], [170, 3, 1, "_CPPv4N4dnnl12gru_backward12gru_backwardERK14primitive_desc", "dnnl::gru_backward::gru_backward"], [170, 3, 1, "_CPPv4N4dnnl12gru_backward12gru_backwardEv", "dnnl::gru_backward::gru_backward"], [170, 4, 1, "_CPPv4N4dnnl12gru_backward12gru_backwardERK14primitive_desc", "dnnl::gru_backward::gru_backward::pd"], [170, 7, 1, "_CPPv4N4dnnl12gru_backward14primitive_descE", "dnnl::gru_backward::primitive_desc"], [170, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc9bias_descEv", "dnnl::gru_backward::primitive_desc::bias_desc"], [170, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc14diff_bias_descEv", "dnnl::gru_backward::primitive_desc::diff_bias_desc"], [170, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc18diff_dst_iter_descEv", "dnnl::gru_backward::primitive_desc::diff_dst_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc19diff_dst_layer_descEv", "dnnl::gru_backward::primitive_desc::diff_dst_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc18diff_src_iter_descEv", "dnnl::gru_backward::primitive_desc::diff_src_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc19diff_src_layer_descEv", "dnnl::gru_backward::primitive_desc::diff_src_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc22diff_weights_iter_descEv", "dnnl::gru_backward::primitive_desc::diff_weights_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc23diff_weights_layer_descEv", "dnnl::gru_backward::primitive_desc::diff_weights_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc13dst_iter_descEv", "dnnl::gru_backward::primitive_desc::dst_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc14dst_layer_descEv", "dnnl::gru_backward::primitive_desc::dst_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc13get_cell_kindEv", "dnnl::gru_backward::primitive_desc::get_cell_kind"], [170, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc13get_directionEv", "dnnl::gru_backward::primitive_desc::get_direction"], [170, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc13get_prop_kindEv", "dnnl::gru_backward::primitive_desc::get_prop_kind"], [170, 3, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc"], [170, 3, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descEv", "dnnl::gru_backward::primitive_desc::primitive_desc"], [170, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::aengine"], [170, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::allow_empty"], [170, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::aprop_kind"], [170, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::attr"], [170, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::bias_desc"], [170, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::diff_bias_desc"], [170, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::diff_dst_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::diff_dst_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::diff_src_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::diff_src_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::diff_weights_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::diff_weights_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::direction"], [170, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::dst_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::dst_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [170, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::src_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::src_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::weights_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::weights_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc13src_iter_descEv", "dnnl::gru_backward::primitive_desc::src_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc14src_layer_descEv", "dnnl::gru_backward::primitive_desc::src_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc17weights_iter_descEv", "dnnl::gru_backward::primitive_desc::weights_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc18weights_layer_descEv", "dnnl::gru_backward::primitive_desc::weights_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc14workspace_descEv", "dnnl::gru_backward::primitive_desc::workspace_desc"], [170, 7, 1, "_CPPv4N4dnnl11gru_forwardE", "dnnl::gru_forward"], [170, 3, 1, "_CPPv4N4dnnl11gru_forward11gru_forwardERK14primitive_desc", "dnnl::gru_forward::gru_forward"], [170, 3, 1, "_CPPv4N4dnnl11gru_forward11gru_forwardEv", "dnnl::gru_forward::gru_forward"], [170, 4, 1, "_CPPv4N4dnnl11gru_forward11gru_forwardERK14primitive_desc", "dnnl::gru_forward::gru_forward::pd"], [170, 7, 1, "_CPPv4N4dnnl11gru_forward14primitive_descE", "dnnl::gru_forward::primitive_desc"], [170, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc9bias_descEv", "dnnl::gru_forward::primitive_desc::bias_desc"], [170, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc13dst_iter_descEv", "dnnl::gru_forward::primitive_desc::dst_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc14dst_layer_descEv", "dnnl::gru_forward::primitive_desc::dst_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc13get_cell_kindEv", "dnnl::gru_forward::primitive_desc::get_cell_kind"], [170, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc13get_directionEv", "dnnl::gru_forward::primitive_desc::get_direction"], [170, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc13get_prop_kindEv", "dnnl::gru_forward::primitive_desc::get_prop_kind"], [170, 3, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc"], [170, 3, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descEv", "dnnl::gru_forward::primitive_desc::primitive_desc"], [170, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::aengine"], [170, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::allow_empty"], [170, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::aprop_kind"], [170, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::attr"], [170, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::bias_desc"], [170, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::direction"], [170, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::dst_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::dst_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::src_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::src_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::weights_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::weights_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc13src_iter_descEv", "dnnl::gru_forward::primitive_desc::src_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc14src_layer_descEv", "dnnl::gru_forward::primitive_desc::src_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc17weights_iter_descEv", "dnnl::gru_forward::primitive_desc::weights_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc18weights_layer_descEv", "dnnl::gru_forward::primitive_desc::weights_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc14workspace_descEv", "dnnl::gru_forward::primitive_desc::workspace_desc"], [161, 7, 1, "_CPPv4N4dnnl27inner_product_backward_dataE", "dnnl::inner_product_backward_data"], [161, 3, 1, "_CPPv4N4dnnl27inner_product_backward_data27inner_product_backward_dataERK14primitive_desc", "dnnl::inner_product_backward_data::inner_product_backward_data"], [161, 3, 1, "_CPPv4N4dnnl27inner_product_backward_data27inner_product_backward_dataEv", "dnnl::inner_product_backward_data::inner_product_backward_data"], [161, 4, 1, "_CPPv4N4dnnl27inner_product_backward_data27inner_product_backward_dataERK14primitive_desc", "dnnl::inner_product_backward_data::inner_product_backward_data::pd"], [161, 7, 1, "_CPPv4N4dnnl27inner_product_backward_data14primitive_descE", "dnnl::inner_product_backward_data::primitive_desc"], [161, 3, 1, "_CPPv4NK4dnnl27inner_product_backward_data14primitive_desc13diff_dst_descEv", "dnnl::inner_product_backward_data::primitive_desc::diff_dst_desc"], [161, 3, 1, "_CPPv4NK4dnnl27inner_product_backward_data14primitive_desc13diff_src_descEv", "dnnl::inner_product_backward_data::primitive_desc::diff_src_desc"], [161, 3, 1, "_CPPv4NK4dnnl27inner_product_backward_data14primitive_desc13get_prop_kindEv", "dnnl::inner_product_backward_data::primitive_desc::get_prop_kind"], [161, 3, 1, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_data::primitive_desc::primitive_desc"], [161, 3, 1, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descEv", "dnnl::inner_product_backward_data::primitive_desc::primitive_desc"], [161, 4, 1, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_data::primitive_desc::primitive_desc::aengine"], [161, 4, 1, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_data::primitive_desc::primitive_desc::allow_empty"], [161, 4, 1, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_data::primitive_desc::primitive_desc::attr"], [161, 4, 1, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_data::primitive_desc::primitive_desc::diff_dst_desc"], [161, 4, 1, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_data::primitive_desc::primitive_desc::diff_src_desc"], [161, 4, 1, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_data::primitive_desc::primitive_desc::hint_fwd_pd"], [161, 4, 1, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_data::primitive_desc::primitive_desc::weights_desc"], [161, 3, 1, "_CPPv4NK4dnnl27inner_product_backward_data14primitive_desc12weights_descEv", "dnnl::inner_product_backward_data::primitive_desc::weights_desc"], [161, 7, 1, "_CPPv4N4dnnl30inner_product_backward_weightsE", "dnnl::inner_product_backward_weights"], [161, 3, 1, "_CPPv4N4dnnl30inner_product_backward_weights30inner_product_backward_weightsERK14primitive_desc", "dnnl::inner_product_backward_weights::inner_product_backward_weights"], [161, 3, 1, "_CPPv4N4dnnl30inner_product_backward_weights30inner_product_backward_weightsEv", "dnnl::inner_product_backward_weights::inner_product_backward_weights"], [161, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights30inner_product_backward_weightsERK14primitive_desc", "dnnl::inner_product_backward_weights::inner_product_backward_weights::pd"], [161, 7, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_descE", "dnnl::inner_product_backward_weights::primitive_desc"], [161, 3, 1, "_CPPv4NK4dnnl30inner_product_backward_weights14primitive_desc14diff_bias_descEv", "dnnl::inner_product_backward_weights::primitive_desc::diff_bias_desc"], [161, 3, 1, "_CPPv4NK4dnnl30inner_product_backward_weights14primitive_desc13diff_dst_descEv", "dnnl::inner_product_backward_weights::primitive_desc::diff_dst_desc"], [161, 3, 1, "_CPPv4NK4dnnl30inner_product_backward_weights14primitive_desc17diff_weights_descEv", "dnnl::inner_product_backward_weights::primitive_desc::diff_weights_desc"], [161, 3, 1, "_CPPv4NK4dnnl30inner_product_backward_weights14primitive_desc13get_prop_kindEv", "dnnl::inner_product_backward_weights::primitive_desc::get_prop_kind"], [161, 3, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc"], [161, 3, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc"], [161, 3, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descEv", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc"], [161, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::aengine"], [161, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::aengine"], [161, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::allow_empty"], [161, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::allow_empty"], [161, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::attr"], [161, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::attr"], [161, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::diff_bias_desc"], [161, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::diff_dst_desc"], [161, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::diff_dst_desc"], [161, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::diff_weights_desc"], [161, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::diff_weights_desc"], [161, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::hint_fwd_pd"], [161, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::hint_fwd_pd"], [161, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::src_desc"], [161, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::src_desc"], [161, 3, 1, "_CPPv4NK4dnnl30inner_product_backward_weights14primitive_desc8src_descEv", "dnnl::inner_product_backward_weights::primitive_desc::src_desc"], [161, 7, 1, "_CPPv4N4dnnl21inner_product_forwardE", "dnnl::inner_product_forward"], [161, 3, 1, "_CPPv4N4dnnl21inner_product_forward21inner_product_forwardERK14primitive_desc", "dnnl::inner_product_forward::inner_product_forward"], [161, 3, 1, "_CPPv4N4dnnl21inner_product_forward21inner_product_forwardEv", "dnnl::inner_product_forward::inner_product_forward"], [161, 4, 1, "_CPPv4N4dnnl21inner_product_forward21inner_product_forwardERK14primitive_desc", "dnnl::inner_product_forward::inner_product_forward::pd"], [161, 7, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_descE", "dnnl::inner_product_forward::primitive_desc"], [161, 3, 1, "_CPPv4NK4dnnl21inner_product_forward14primitive_desc9bias_descEv", "dnnl::inner_product_forward::primitive_desc::bias_desc"], [161, 3, 1, "_CPPv4NK4dnnl21inner_product_forward14primitive_desc8dst_descEv", "dnnl::inner_product_forward::primitive_desc::dst_desc"], [161, 3, 1, "_CPPv4NK4dnnl21inner_product_forward14primitive_desc13get_prop_kindEv", "dnnl::inner_product_forward::primitive_desc::get_prop_kind"], [161, 3, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc"], [161, 3, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc"], [161, 3, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descEv", "dnnl::inner_product_forward::primitive_desc::primitive_desc"], [161, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::aengine"], [161, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::aengine"], [161, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::allow_empty"], [161, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::allow_empty"], [161, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::aprop_kind"], [161, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::aprop_kind"], [161, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::attr"], [161, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::attr"], [161, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::bias_desc"], [161, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::dst_desc"], [161, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::dst_desc"], [161, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::src_desc"], [161, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::src_desc"], [161, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::weights_desc"], [161, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::weights_desc"], [161, 3, 1, "_CPPv4NK4dnnl21inner_product_forward14primitive_desc8src_descEv", "dnnl::inner_product_forward::primitive_desc::src_desc"], [161, 3, 1, "_CPPv4NK4dnnl21inner_product_forward14primitive_desc12weights_descEv", "dnnl::inner_product_forward::primitive_desc::weights_desc"], [162, 7, 1, "_CPPv4N4dnnl28layer_normalization_backwardE", "dnnl::layer_normalization_backward"], [162, 3, 1, "_CPPv4N4dnnl28layer_normalization_backward28layer_normalization_backwardERK14primitive_desc", "dnnl::layer_normalization_backward::layer_normalization_backward"], [162, 3, 1, "_CPPv4N4dnnl28layer_normalization_backward28layer_normalization_backwardEv", "dnnl::layer_normalization_backward::layer_normalization_backward"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward28layer_normalization_backwardERK14primitive_desc", "dnnl::layer_normalization_backward::layer_normalization_backward::pd"], [162, 7, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_descE", "dnnl::layer_normalization_backward::primitive_desc"], [162, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc13diff_dst_descEv", "dnnl::layer_normalization_backward::primitive_desc::diff_dst_desc"], [162, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc13diff_src_descEv", "dnnl::layer_normalization_backward::primitive_desc::diff_src_desc"], [162, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc17diff_weights_descEv", "dnnl::layer_normalization_backward::primitive_desc::diff_weights_desc"], [162, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc8dst_descEv", "dnnl::layer_normalization_backward::primitive_desc::dst_desc"], [162, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc11get_epsilonEv", "dnnl::layer_normalization_backward::primitive_desc::get_epsilon"], [162, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc9get_flagsEv", "dnnl::layer_normalization_backward::primitive_desc::get_flags"], [162, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc13get_prop_kindEv", "dnnl::layer_normalization_backward::primitive_desc::get_prop_kind"], [162, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc9mean_descEv", "dnnl::layer_normalization_backward::primitive_desc::mean_desc"], [162, 3, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc"], [162, 3, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc"], [162, 3, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descEv", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::aengine"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::aengine"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::allow_empty"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::allow_empty"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::aprop_kind"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::aprop_kind"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::attr"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::attr"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::diff_dst_desc"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::diff_dst_desc"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::diff_src_desc"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::diff_src_desc"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::epsilon"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::epsilon"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::flags"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::flags"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::src_desc"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::src_desc"], [162, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::stat_desc"], [162, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc8src_descEv", "dnnl::layer_normalization_backward::primitive_desc::src_desc"], [162, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc13variance_descEv", "dnnl::layer_normalization_backward::primitive_desc::variance_desc"], [162, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc12weights_descEv", "dnnl::layer_normalization_backward::primitive_desc::weights_desc"], [162, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc14workspace_descEv", "dnnl::layer_normalization_backward::primitive_desc::workspace_desc"], [162, 7, 1, "_CPPv4N4dnnl27layer_normalization_forwardE", "dnnl::layer_normalization_forward"], [162, 3, 1, "_CPPv4N4dnnl27layer_normalization_forward27layer_normalization_forwardERK14primitive_desc", "dnnl::layer_normalization_forward::layer_normalization_forward"], [162, 3, 1, "_CPPv4N4dnnl27layer_normalization_forward27layer_normalization_forwardEv", "dnnl::layer_normalization_forward::layer_normalization_forward"], [162, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward27layer_normalization_forwardERK14primitive_desc", "dnnl::layer_normalization_forward::layer_normalization_forward::pd"], [162, 7, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_descE", "dnnl::layer_normalization_forward::primitive_desc"], [162, 3, 1, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc8dst_descEv", "dnnl::layer_normalization_forward::primitive_desc::dst_desc"], [162, 3, 1, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc11get_epsilonEv", "dnnl::layer_normalization_forward::primitive_desc::get_epsilon"], [162, 3, 1, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc9get_flagsEv", "dnnl::layer_normalization_forward::primitive_desc::get_flags"], [162, 3, 1, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc13get_prop_kindEv", "dnnl::layer_normalization_forward::primitive_desc::get_prop_kind"], [162, 3, 1, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc9mean_descEv", "dnnl::layer_normalization_forward::primitive_desc::mean_desc"], [162, 3, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc"], [162, 3, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc"], [162, 3, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descEv", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc"], [162, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::aengine"], [162, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::aengine"], [162, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::allow_empty"], [162, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::allow_empty"], [162, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::aprop_kind"], [162, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::aprop_kind"], [162, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::attr"], [162, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::attr"], [162, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::dst_desc"], [162, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::dst_desc"], [162, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::epsilon"], [162, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::epsilon"], [162, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::flags"], [162, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::flags"], [162, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::src_desc"], [162, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::src_desc"], [162, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::stat_desc"], [162, 3, 1, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc8src_descEv", "dnnl::layer_normalization_forward::primitive_desc::src_desc"], [162, 3, 1, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc13variance_descEv", "dnnl::layer_normalization_forward::primitive_desc::variance_desc"], [162, 3, 1, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc12weights_descEv", "dnnl::layer_normalization_forward::primitive_desc::weights_desc"], [162, 3, 1, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc14workspace_descEv", "dnnl::layer_normalization_forward::primitive_desc::workspace_desc"], [170, 7, 1, "_CPPv4N4dnnl16lbr_gru_backwardE", "dnnl::lbr_gru_backward"], [170, 3, 1, "_CPPv4N4dnnl16lbr_gru_backward16lbr_gru_backwardERK14primitive_desc", "dnnl::lbr_gru_backward::lbr_gru_backward"], [170, 3, 1, "_CPPv4N4dnnl16lbr_gru_backward16lbr_gru_backwardEv", "dnnl::lbr_gru_backward::lbr_gru_backward"], [170, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward16lbr_gru_backwardERK14primitive_desc", "dnnl::lbr_gru_backward::lbr_gru_backward::pd"], [170, 7, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_descE", "dnnl::lbr_gru_backward::primitive_desc"], [170, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc9bias_descEv", "dnnl::lbr_gru_backward::primitive_desc::bias_desc"], [170, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc14diff_bias_descEv", "dnnl::lbr_gru_backward::primitive_desc::diff_bias_desc"], [170, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc18diff_dst_iter_descEv", "dnnl::lbr_gru_backward::primitive_desc::diff_dst_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc19diff_dst_layer_descEv", "dnnl::lbr_gru_backward::primitive_desc::diff_dst_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc18diff_src_iter_descEv", "dnnl::lbr_gru_backward::primitive_desc::diff_src_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc19diff_src_layer_descEv", "dnnl::lbr_gru_backward::primitive_desc::diff_src_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc22diff_weights_iter_descEv", "dnnl::lbr_gru_backward::primitive_desc::diff_weights_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc23diff_weights_layer_descEv", "dnnl::lbr_gru_backward::primitive_desc::diff_weights_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc13dst_iter_descEv", "dnnl::lbr_gru_backward::primitive_desc::dst_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc14dst_layer_descEv", "dnnl::lbr_gru_backward::primitive_desc::dst_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc13get_cell_kindEv", "dnnl::lbr_gru_backward::primitive_desc::get_cell_kind"], [170, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc13get_directionEv", "dnnl::lbr_gru_backward::primitive_desc::get_direction"], [170, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc13get_prop_kindEv", "dnnl::lbr_gru_backward::primitive_desc::get_prop_kind"], [170, 3, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc"], [170, 3, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descEv", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc"], [170, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::aengine"], [170, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::allow_empty"], [170, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::aprop_kind"], [170, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::attr"], [170, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::bias_desc"], [170, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::diff_bias_desc"], [170, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::diff_dst_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::diff_dst_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::diff_src_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::diff_src_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::diff_weights_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::diff_weights_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::direction"], [170, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::dst_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::dst_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [170, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::src_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::src_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::weights_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::weights_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc13src_iter_descEv", "dnnl::lbr_gru_backward::primitive_desc::src_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc14src_layer_descEv", "dnnl::lbr_gru_backward::primitive_desc::src_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc17weights_iter_descEv", "dnnl::lbr_gru_backward::primitive_desc::weights_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc18weights_layer_descEv", "dnnl::lbr_gru_backward::primitive_desc::weights_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc14workspace_descEv", "dnnl::lbr_gru_backward::primitive_desc::workspace_desc"], [170, 7, 1, "_CPPv4N4dnnl15lbr_gru_forwardE", "dnnl::lbr_gru_forward"], [170, 3, 1, "_CPPv4N4dnnl15lbr_gru_forward15lbr_gru_forwardERK14primitive_desc", "dnnl::lbr_gru_forward::lbr_gru_forward"], [170, 3, 1, "_CPPv4N4dnnl15lbr_gru_forward15lbr_gru_forwardEv", "dnnl::lbr_gru_forward::lbr_gru_forward"], [170, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward15lbr_gru_forwardERK14primitive_desc", "dnnl::lbr_gru_forward::lbr_gru_forward::pd"], [170, 7, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_descE", "dnnl::lbr_gru_forward::primitive_desc"], [170, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc9bias_descEv", "dnnl::lbr_gru_forward::primitive_desc::bias_desc"], [170, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc13dst_iter_descEv", "dnnl::lbr_gru_forward::primitive_desc::dst_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc14dst_layer_descEv", "dnnl::lbr_gru_forward::primitive_desc::dst_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc13get_cell_kindEv", "dnnl::lbr_gru_forward::primitive_desc::get_cell_kind"], [170, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc13get_directionEv", "dnnl::lbr_gru_forward::primitive_desc::get_direction"], [170, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc13get_prop_kindEv", "dnnl::lbr_gru_forward::primitive_desc::get_prop_kind"], [170, 3, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc"], [170, 3, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descEv", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc"], [170, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::aengine"], [170, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::allow_empty"], [170, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::aprop_kind"], [170, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::attr"], [170, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::bias_desc"], [170, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::direction"], [170, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::dst_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::dst_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::src_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::src_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::weights_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::weights_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc13src_iter_descEv", "dnnl::lbr_gru_forward::primitive_desc::src_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc14src_layer_descEv", "dnnl::lbr_gru_forward::primitive_desc::src_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc17weights_iter_descEv", "dnnl::lbr_gru_forward::primitive_desc::weights_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc18weights_layer_descEv", "dnnl::lbr_gru_forward::primitive_desc::weights_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc14workspace_descEv", "dnnl::lbr_gru_forward::primitive_desc::workspace_desc"], [163, 7, 1, "_CPPv4N4dnnl12lrn_backwardE", "dnnl::lrn_backward"], [163, 3, 1, "_CPPv4N4dnnl12lrn_backward12lrn_backwardERK14primitive_desc", "dnnl::lrn_backward::lrn_backward"], [163, 3, 1, "_CPPv4N4dnnl12lrn_backward12lrn_backwardEv", "dnnl::lrn_backward::lrn_backward"], [163, 4, 1, "_CPPv4N4dnnl12lrn_backward12lrn_backwardERK14primitive_desc", "dnnl::lrn_backward::lrn_backward::pd"], [163, 7, 1, "_CPPv4N4dnnl12lrn_backward14primitive_descE", "dnnl::lrn_backward::primitive_desc"], [163, 3, 1, "_CPPv4NK4dnnl12lrn_backward14primitive_desc13diff_dst_descEv", "dnnl::lrn_backward::primitive_desc::diff_dst_desc"], [163, 3, 1, "_CPPv4NK4dnnl12lrn_backward14primitive_desc13diff_src_descEv", "dnnl::lrn_backward::primitive_desc::diff_src_desc"], [163, 3, 1, "_CPPv4NK4dnnl12lrn_backward14primitive_desc13get_algorithmEv", "dnnl::lrn_backward::primitive_desc::get_algorithm"], [163, 3, 1, "_CPPv4NK4dnnl12lrn_backward14primitive_desc9get_alphaEv", "dnnl::lrn_backward::primitive_desc::get_alpha"], [163, 3, 1, "_CPPv4NK4dnnl12lrn_backward14primitive_desc8get_betaEv", "dnnl::lrn_backward::primitive_desc::get_beta"], [163, 3, 1, "_CPPv4NK4dnnl12lrn_backward14primitive_desc5get_kEv", "dnnl::lrn_backward::primitive_desc::get_k"], [163, 3, 1, "_CPPv4NK4dnnl12lrn_backward14primitive_desc14get_local_sizeEv", "dnnl::lrn_backward::primitive_desc::get_local_size"], [163, 3, 1, "_CPPv4NK4dnnl12lrn_backward14primitive_desc13get_prop_kindEv", "dnnl::lrn_backward::primitive_desc::get_prop_kind"], [163, 3, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc"], [163, 3, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descEv", "dnnl::lrn_backward::primitive_desc::primitive_desc"], [163, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::aalgorithm"], [163, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::aengine"], [163, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::allow_empty"], [163, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::alpha"], [163, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::attr"], [163, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::beta"], [163, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::diff_dst_desc"], [163, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::diff_src_desc"], [163, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [163, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::k"], [163, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::local_size"], [163, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::src_desc"], [163, 3, 1, "_CPPv4NK4dnnl12lrn_backward14primitive_desc14workspace_descEv", "dnnl::lrn_backward::primitive_desc::workspace_desc"], [163, 7, 1, "_CPPv4N4dnnl11lrn_forwardE", "dnnl::lrn_forward"], [163, 3, 1, "_CPPv4N4dnnl11lrn_forward11lrn_forwardERK14primitive_desc", "dnnl::lrn_forward::lrn_forward"], [163, 3, 1, "_CPPv4N4dnnl11lrn_forward11lrn_forwardEv", "dnnl::lrn_forward::lrn_forward"], [163, 4, 1, "_CPPv4N4dnnl11lrn_forward11lrn_forwardERK14primitive_desc", "dnnl::lrn_forward::lrn_forward::pd"], [163, 7, 1, "_CPPv4N4dnnl11lrn_forward14primitive_descE", "dnnl::lrn_forward::primitive_desc"], [163, 3, 1, "_CPPv4NK4dnnl11lrn_forward14primitive_desc8dst_descEv", "dnnl::lrn_forward::primitive_desc::dst_desc"], [163, 3, 1, "_CPPv4NK4dnnl11lrn_forward14primitive_desc13get_algorithmEv", "dnnl::lrn_forward::primitive_desc::get_algorithm"], [163, 3, 1, "_CPPv4NK4dnnl11lrn_forward14primitive_desc9get_alphaEv", "dnnl::lrn_forward::primitive_desc::get_alpha"], [163, 3, 1, "_CPPv4NK4dnnl11lrn_forward14primitive_desc8get_betaEv", "dnnl::lrn_forward::primitive_desc::get_beta"], [163, 3, 1, "_CPPv4NK4dnnl11lrn_forward14primitive_desc5get_kEv", "dnnl::lrn_forward::primitive_desc::get_k"], [163, 3, 1, "_CPPv4NK4dnnl11lrn_forward14primitive_desc14get_local_sizeEv", "dnnl::lrn_forward::primitive_desc::get_local_size"], [163, 3, 1, "_CPPv4NK4dnnl11lrn_forward14primitive_desc13get_prop_kindEv", "dnnl::lrn_forward::primitive_desc::get_prop_kind"], [163, 3, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc"], [163, 3, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descEv", "dnnl::lrn_forward::primitive_desc::primitive_desc"], [163, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::aalgorithm"], [163, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::aengine"], [163, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::allow_empty"], [163, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::alpha"], [163, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::aprop_kind"], [163, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::attr"], [163, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::beta"], [163, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::dst_desc"], [163, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::k"], [163, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::local_size"], [163, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::src_desc"], [163, 3, 1, "_CPPv4NK4dnnl11lrn_forward14primitive_desc8src_descEv", "dnnl::lrn_forward::primitive_desc::src_desc"], [163, 3, 1, "_CPPv4NK4dnnl11lrn_forward14primitive_desc14workspace_descEv", "dnnl::lrn_forward::primitive_desc::workspace_desc"], [170, 7, 1, "_CPPv4N4dnnl13lstm_backwardE", "dnnl::lstm_backward"], [170, 3, 1, "_CPPv4N4dnnl13lstm_backward13lstm_backwardERK14primitive_desc", "dnnl::lstm_backward::lstm_backward"], [170, 3, 1, "_CPPv4N4dnnl13lstm_backward13lstm_backwardEv", "dnnl::lstm_backward::lstm_backward"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward13lstm_backwardERK14primitive_desc", "dnnl::lstm_backward::lstm_backward::pd"], [170, 7, 1, "_CPPv4N4dnnl13lstm_backward14primitive_descE", "dnnl::lstm_backward::primitive_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc9bias_descEv", "dnnl::lstm_backward::primitive_desc::bias_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc14diff_bias_descEv", "dnnl::lstm_backward::primitive_desc::diff_bias_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc20diff_dst_iter_c_descEv", "dnnl::lstm_backward::primitive_desc::diff_dst_iter_c_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc18diff_dst_iter_descEv", "dnnl::lstm_backward::primitive_desc::diff_dst_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc19diff_dst_layer_descEv", "dnnl::lstm_backward::primitive_desc::diff_dst_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc20diff_src_iter_c_descEv", "dnnl::lstm_backward::primitive_desc::diff_src_iter_c_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc18diff_src_iter_descEv", "dnnl::lstm_backward::primitive_desc::diff_src_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc19diff_src_layer_descEv", "dnnl::lstm_backward::primitive_desc::diff_src_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc22diff_weights_iter_descEv", "dnnl::lstm_backward::primitive_desc::diff_weights_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc23diff_weights_layer_descEv", "dnnl::lstm_backward::primitive_desc::diff_weights_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc26diff_weights_peephole_descEv", "dnnl::lstm_backward::primitive_desc::diff_weights_peephole_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc28diff_weights_projection_descEv", "dnnl::lstm_backward::primitive_desc::diff_weights_projection_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc15dst_iter_c_descEv", "dnnl::lstm_backward::primitive_desc::dst_iter_c_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc13dst_iter_descEv", "dnnl::lstm_backward::primitive_desc::dst_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc14dst_layer_descEv", "dnnl::lstm_backward::primitive_desc::dst_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc13get_cell_kindEv", "dnnl::lstm_backward::primitive_desc::get_cell_kind"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc13get_directionEv", "dnnl::lstm_backward::primitive_desc::get_direction"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc13get_prop_kindEv", "dnnl::lstm_backward::primitive_desc::get_prop_kind"], [170, 3, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc"], [170, 3, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc"], [170, 3, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc"], [170, 3, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descEv", "dnnl::lstm_backward::primitive_desc::primitive_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::aengine"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::aengine"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::aengine"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::allow_empty"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::allow_empty"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::allow_empty"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::aprop_kind"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::aprop_kind"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::aprop_kind"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::attr"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::attr"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::attr"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::bias_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::bias_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::bias_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_bias_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_bias_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_bias_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_dst_iter_c_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_dst_iter_c_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_dst_iter_c_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_dst_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_dst_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_dst_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_dst_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_dst_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_dst_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_src_iter_c_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_src_iter_c_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_src_iter_c_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_src_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_src_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_src_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_src_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_src_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_src_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_weights_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_weights_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_weights_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_weights_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_weights_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_weights_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_weights_peephole_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_weights_peephole_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_weights_projection_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::direction"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::direction"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::direction"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::dst_iter_c_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::dst_iter_c_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::dst_iter_c_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::dst_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::dst_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::dst_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::dst_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::dst_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::dst_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::src_iter_c_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::src_iter_c_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::src_iter_c_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::src_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::src_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::src_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::src_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::src_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::src_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::weights_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::weights_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::weights_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::weights_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::weights_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::weights_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::weights_peephole_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::weights_peephole_desc"], [170, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::weights_projection_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc15src_iter_c_descEv", "dnnl::lstm_backward::primitive_desc::src_iter_c_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc13src_iter_descEv", "dnnl::lstm_backward::primitive_desc::src_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc14src_layer_descEv", "dnnl::lstm_backward::primitive_desc::src_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc17weights_iter_descEv", "dnnl::lstm_backward::primitive_desc::weights_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc18weights_layer_descEv", "dnnl::lstm_backward::primitive_desc::weights_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc21weights_peephole_descEv", "dnnl::lstm_backward::primitive_desc::weights_peephole_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc23weights_projection_descEv", "dnnl::lstm_backward::primitive_desc::weights_projection_desc"], [170, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc14workspace_descEv", "dnnl::lstm_backward::primitive_desc::workspace_desc"], [170, 7, 1, "_CPPv4N4dnnl12lstm_forwardE", "dnnl::lstm_forward"], [170, 3, 1, "_CPPv4N4dnnl12lstm_forward12lstm_forwardERK14primitive_desc", "dnnl::lstm_forward::lstm_forward"], [170, 3, 1, "_CPPv4N4dnnl12lstm_forward12lstm_forwardEv", "dnnl::lstm_forward::lstm_forward"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward12lstm_forwardERK14primitive_desc", "dnnl::lstm_forward::lstm_forward::pd"], [170, 7, 1, "_CPPv4N4dnnl12lstm_forward14primitive_descE", "dnnl::lstm_forward::primitive_desc"], [170, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc9bias_descEv", "dnnl::lstm_forward::primitive_desc::bias_desc"], [170, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc15dst_iter_c_descEv", "dnnl::lstm_forward::primitive_desc::dst_iter_c_desc"], [170, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc13dst_iter_descEv", "dnnl::lstm_forward::primitive_desc::dst_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc14dst_layer_descEv", "dnnl::lstm_forward::primitive_desc::dst_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc13get_cell_kindEv", "dnnl::lstm_forward::primitive_desc::get_cell_kind"], [170, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc13get_directionEv", "dnnl::lstm_forward::primitive_desc::get_direction"], [170, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc13get_prop_kindEv", "dnnl::lstm_forward::primitive_desc::get_prop_kind"], [170, 3, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc"], [170, 3, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc"], [170, 3, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc"], [170, 3, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descEv", "dnnl::lstm_forward::primitive_desc::primitive_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::aengine"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::aengine"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::aengine"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::allow_empty"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::allow_empty"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::allow_empty"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::aprop_kind"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::aprop_kind"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::aprop_kind"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::attr"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::attr"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::attr"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::bias_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::bias_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::bias_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::direction"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::direction"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::direction"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::dst_iter_c_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::dst_iter_c_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::dst_iter_c_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::dst_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::dst_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::dst_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::dst_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::dst_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::dst_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::src_iter_c_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::src_iter_c_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::src_iter_c_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::src_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::src_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::src_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::src_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::src_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::src_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::weights_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::weights_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::weights_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::weights_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::weights_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::weights_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::weights_peephole_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::weights_peephole_desc"], [170, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::weights_projection_desc"], [170, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc15src_iter_c_descEv", "dnnl::lstm_forward::primitive_desc::src_iter_c_desc"], [170, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc13src_iter_descEv", "dnnl::lstm_forward::primitive_desc::src_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc14src_layer_descEv", "dnnl::lstm_forward::primitive_desc::src_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc17weights_iter_descEv", "dnnl::lstm_forward::primitive_desc::weights_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc18weights_layer_descEv", "dnnl::lstm_forward::primitive_desc::weights_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc21weights_peephole_descEv", "dnnl::lstm_forward::primitive_desc::weights_peephole_desc"], [170, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc23weights_projection_descEv", "dnnl::lstm_forward::primitive_desc::weights_projection_desc"], [170, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc14workspace_descEv", "dnnl::lstm_forward::primitive_desc::workspace_desc"], [164, 7, 1, "_CPPv4N4dnnl6matmulE", "dnnl::matmul"], [164, 3, 1, "_CPPv4N4dnnl6matmul6matmulERK14primitive_desc", "dnnl::matmul::matmul"], [164, 3, 1, "_CPPv4N4dnnl6matmul6matmulEv", "dnnl::matmul::matmul"], [164, 4, 1, "_CPPv4N4dnnl6matmul6matmulERK14primitive_desc", "dnnl::matmul::matmul::pd"], [164, 7, 1, "_CPPv4N4dnnl6matmul14primitive_descE", "dnnl::matmul::primitive_desc"], [164, 3, 1, "_CPPv4NK4dnnl6matmul14primitive_desc9bias_descEv", "dnnl::matmul::primitive_desc::bias_desc"], [164, 3, 1, "_CPPv4NK4dnnl6matmul14primitive_desc8dst_descEv", "dnnl::matmul::primitive_desc::dst_desc"], [164, 3, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc"], [164, 3, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc"], [164, 3, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descEv", "dnnl::matmul::primitive_desc::primitive_desc"], [164, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::aengine"], [164, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::aengine"], [164, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::allow_empty"], [164, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::allow_empty"], [164, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::attr"], [164, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::attr"], [164, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::bias_desc"], [164, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::dst_desc"], [164, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::dst_desc"], [164, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::src_desc"], [164, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::src_desc"], [164, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::weights_desc"], [164, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::weights_desc"], [164, 3, 1, "_CPPv4NK4dnnl6matmul14primitive_desc8src_descEv", "dnnl::matmul::primitive_desc::src_desc"], [164, 3, 1, "_CPPv4NK4dnnl6matmul14primitive_desc12weights_descEv", "dnnl::matmul::primitive_desc::weights_desc"], [60, 7, 1, "_CPPv4N4dnnl6memoryE", "dnnl::memory"], [55, 9, 1, "_CPPv4N4dnnl6memory9data_typeE", "dnnl::memory::data_type"], [55, 10, 1, "_CPPv4N4dnnl6memory9data_type4bf16E", "dnnl::memory::data_type::bf16"], [55, 10, 1, "_CPPv4N4dnnl6memory9data_type3f16E", "dnnl::memory::data_type::f16"], [55, 10, 1, "_CPPv4N4dnnl6memory9data_type3f32E", "dnnl::memory::data_type::f32"], [55, 10, 1, "_CPPv4N4dnnl6memory9data_type3s32E", "dnnl::memory::data_type::s32"], [55, 10, 1, "_CPPv4N4dnnl6memory9data_type2s8E", "dnnl::memory::data_type::s8"], [55, 10, 1, "_CPPv4N4dnnl6memory9data_type2u8E", "dnnl::memory::data_type::u8"], [55, 10, 1, "_CPPv4N4dnnl6memory9data_type5undefE", "dnnl::memory::data_type::undef"], [60, 7, 1, "_CPPv4N4dnnl6memory4descE", "dnnl::memory::desc"], [60, 3, 1, "_CPPv4NK4dnnl6memory4desc9data_typeEv", "dnnl::memory::desc::data_type"], [60, 3, 1, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_type10format_tagb", "dnnl::memory::desc::desc"], [60, 3, 1, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_typeRK4dimsb", "dnnl::memory::desc::desc"], [60, 3, 1, "_CPPv4N4dnnl6memory4desc4descEv", "dnnl::memory::desc::desc"], [60, 4, 1, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_type10format_tagb", "dnnl::memory::desc::desc::adata_type"], [60, 4, 1, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_typeRK4dimsb", "dnnl::memory::desc::desc::adata_type"], [60, 4, 1, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_type10format_tagb", "dnnl::memory::desc::desc::adims"], [60, 4, 1, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_typeRK4dimsb", "dnnl::memory::desc::desc::adims"], [60, 4, 1, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_type10format_tagb", "dnnl::memory::desc::desc::aformat_tag"], [60, 4, 1, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_type10format_tagb", "dnnl::memory::desc::desc::allow_empty"], [60, 4, 1, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_typeRK4dimsb", "dnnl::memory::desc::desc::allow_empty"], [60, 4, 1, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_typeRK4dimsb", "dnnl::memory::desc::desc::strides"], [60, 3, 1, "_CPPv4NK4dnnl6memory4desc4dimsEv", "dnnl::memory::desc::dims"], [60, 3, 1, "_CPPv4NK4dnnl6memory4desc8get_sizeEv", "dnnl::memory::desc::get_size"], [60, 3, 1, "_CPPv4NK4dnnl6memory4desc7is_zeroEv", "dnnl::memory::desc::is_zero"], [60, 3, 1, "_CPPv4NK4dnnl6memory4descneERK4desc", "dnnl::memory::desc::operator!="], [60, 4, 1, "_CPPv4NK4dnnl6memory4descneERK4desc", "dnnl::memory::desc::operator!=::other"], [60, 3, 1, "_CPPv4NK4dnnl6memory4desceqERK4desc", "dnnl::memory::desc::operator=="], [60, 4, 1, "_CPPv4NK4dnnl6memory4desceqERK4desc", "dnnl::memory::desc::operator==::other"], [60, 3, 1, "_CPPv4NK4dnnl6memory4desc12permute_axesERKNSt6vectorIiEEb", "dnnl::memory::desc::permute_axes"], [60, 4, 1, "_CPPv4NK4dnnl6memory4desc12permute_axesERKNSt6vectorIiEEb", "dnnl::memory::desc::permute_axes::allow_empty"], [60, 4, 1, "_CPPv4NK4dnnl6memory4desc12permute_axesERKNSt6vectorIiEEb", "dnnl::memory::desc::permute_axes::permutation"], [60, 3, 1, "_CPPv4NK4dnnl6memory4desc7reshapeERK4dimsb", "dnnl::memory::desc::reshape"], [60, 4, 1, "_CPPv4NK4dnnl6memory4desc7reshapeERK4dimsb", "dnnl::memory::desc::reshape::adims"], [60, 4, 1, "_CPPv4NK4dnnl6memory4desc7reshapeERK4dimsb", "dnnl::memory::desc::reshape::allow_empty"], [60, 3, 1, "_CPPv4NK4dnnl6memory4desc14submemory_descERK4dimsRK4dimsb", "dnnl::memory::desc::submemory_desc"], [60, 4, 1, "_CPPv4NK4dnnl6memory4desc14submemory_descERK4dimsRK4dimsb", "dnnl::memory::desc::submemory_desc::adims"], [60, 4, 1, "_CPPv4NK4dnnl6memory4desc14submemory_descERK4dimsRK4dimsb", "dnnl::memory::desc::submemory_desc::allow_empty"], [60, 4, 1, "_CPPv4NK4dnnl6memory4desc14submemory_descERK4dimsRK4dimsb", "dnnl::memory::desc::submemory_desc::offsets"], [59, 5, 1, "_CPPv4N4dnnl6memory3dimE", "dnnl::memory::dim"], [59, 5, 1, "_CPPv4N4dnnl6memory4dimsE", "dnnl::memory::dims"], [58, 9, 1, "_CPPv4N4dnnl6memory10format_tagE", "dnnl::memory::format_tag"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag1aE", "dnnl::memory::format_tag::a"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag2abE", "dnnl::memory::format_tag::ab"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag3abcE", "dnnl::memory::format_tag::abc"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag4abcdE", "dnnl::memory::format_tag::abcd"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag5abcdeE", "dnnl::memory::format_tag::abcde"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag6abcdefE", "dnnl::memory::format_tag::abcdef"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag4abdcE", "dnnl::memory::format_tag::abdc"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag5abdecE", "dnnl::memory::format_tag::abdec"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag3acbE", "dnnl::memory::format_tag::acb"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag5acbdeE", "dnnl::memory::format_tag::acbde"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag6acbdefE", "dnnl::memory::format_tag::acbdef"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag4acdbE", "dnnl::memory::format_tag::acdb"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag5acdebE", "dnnl::memory::format_tag::acdeb"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag3anyE", "dnnl::memory::format_tag::any"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag2baE", "dnnl::memory::format_tag::ba"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag3bacE", "dnnl::memory::format_tag::bac"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag4bacdE", "dnnl::memory::format_tag::bacd"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag5bacdeE", "dnnl::memory::format_tag::bacde"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag3bcaE", "dnnl::memory::format_tag::bca"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag4bcdaE", "dnnl::memory::format_tag::bcda"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag5bcdeaE", "dnnl::memory::format_tag::bcdea"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag3cbaE", "dnnl::memory::format_tag::cba"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag4cdbaE", "dnnl::memory::format_tag::cdba"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag5cdebaE", "dnnl::memory::format_tag::cdeba"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag4chwnE", "dnnl::memory::format_tag::chwn"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag2cnE", "dnnl::memory::format_tag::cn"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag4dcabE", "dnnl::memory::format_tag::dcab"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag5decabE", "dnnl::memory::format_tag::decab"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag6defcabE", "dnnl::memory::format_tag::defcab"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag6dhwigoE", "dnnl::memory::format_tag::dhwigo"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag5dhwioE", "dnnl::memory::format_tag::dhwio"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag6giodhwE", "dnnl::memory::format_tag::giodhw"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag5giohwE", "dnnl::memory::format_tag::giohw"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag6goidhwE", "dnnl::memory::format_tag::goidhw"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag5goihwE", "dnnl::memory::format_tag::goihw"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag4goiwE", "dnnl::memory::format_tag::goiw"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag5hwigoE", "dnnl::memory::format_tag::hwigo"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag4hwioE", "dnnl::memory::format_tag::hwio"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag5idhwoE", "dnnl::memory::format_tag::idhwo"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag4ihwoE", "dnnl::memory::format_tag::ihwo"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag2ioE", "dnnl::memory::format_tag::io"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag5iodhwE", "dnnl::memory::format_tag::iodhw"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag4iohwE", "dnnl::memory::format_tag::iohw"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag3iwoE", "dnnl::memory::format_tag::iwo"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag4ldgoE", "dnnl::memory::format_tag::ldgo"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag5ldgoiE", "dnnl::memory::format_tag::ldgoi"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag5ldigoE", "dnnl::memory::format_tag::ldigo"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag4ldioE", "dnnl::memory::format_tag::ldio"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag4ldncE", "dnnl::memory::format_tag::ldnc"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag4ldoiE", "dnnl::memory::format_tag::ldoi"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag2ncE", "dnnl::memory::format_tag::nc"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag5ncdhwE", "dnnl::memory::format_tag::ncdhw"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag4nchwE", "dnnl::memory::format_tag::nchw"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag3ncwE", "dnnl::memory::format_tag::ncw"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag5ndhwcE", "dnnl::memory::format_tag::ndhwc"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag4nhwcE", "dnnl::memory::format_tag::nhwc"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag2ntE", "dnnl::memory::format_tag::nt"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag3ntcE", "dnnl::memory::format_tag::ntc"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag3nwcE", "dnnl::memory::format_tag::nwc"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag5odhwiE", "dnnl::memory::format_tag::odhwi"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag4ohwiE", "dnnl::memory::format_tag::ohwi"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag2oiE", "dnnl::memory::format_tag::oi"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag5oidhwE", "dnnl::memory::format_tag::oidhw"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag4oihwE", "dnnl::memory::format_tag::oihw"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag3oiwE", "dnnl::memory::format_tag::oiw"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag3owiE", "dnnl::memory::format_tag::owi"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag2tnE", "dnnl::memory::format_tag::tn"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag3tncE", "dnnl::memory::format_tag::tnc"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag5undefE", "dnnl::memory::format_tag::undef"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag4wigoE", "dnnl::memory::format_tag::wigo"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag3wioE", "dnnl::memory::format_tag::wio"], [58, 10, 1, "_CPPv4N4dnnl6memory10format_tag1xE", "dnnl::memory::format_tag::x"], [60, 3, 1, "_CPPv4NK4dnnl6memory15get_data_handleEv", "dnnl::memory::get_data_handle"], [60, 3, 1, "_CPPv4NK4dnnl6memory8get_descEv", "dnnl::memory::get_desc"], [60, 3, 1, "_CPPv4NK4dnnl6memory10get_engineEv", "dnnl::memory::get_engine"], [60, 3, 1, "_CPPv4I0ENK4dnnl6memory8map_dataEP1Tv", "dnnl::memory::map_data"], [60, 8, 1, "_CPPv4I0ENK4dnnl6memory8map_dataEP1Tv", "dnnl::memory::map_data::T"], [60, 3, 1, "_CPPv4N4dnnl6memory6memoryERK4descRK6engine", "dnnl::memory::memory"], [60, 3, 1, "_CPPv4N4dnnl6memory6memoryERK4descRK6enginePv", "dnnl::memory::memory"], [60, 3, 1, "_CPPv4N4dnnl6memory6memoryEv", "dnnl::memory::memory"], [60, 4, 1, "_CPPv4N4dnnl6memory6memoryERK4descRK6engine", "dnnl::memory::memory::aengine"], [60, 4, 1, "_CPPv4N4dnnl6memory6memoryERK4descRK6enginePv", "dnnl::memory::memory::aengine"], [60, 4, 1, "_CPPv4N4dnnl6memory6memoryERK4descRK6enginePv", "dnnl::memory::memory::handle"], [60, 4, 1, "_CPPv4N4dnnl6memory6memoryERK4descRK6engine", "dnnl::memory::memory::md"], [60, 4, 1, "_CPPv4N4dnnl6memory6memoryERK4descRK6enginePv", "dnnl::memory::memory::md"], [60, 3, 1, "_CPPv4NK4dnnl6memory15set_data_handleEPv", "dnnl::memory::set_data_handle"], [60, 3, 1, "_CPPv4NK4dnnl6memory15set_data_handleEPvRK6stream", "dnnl::memory::set_data_handle"], [60, 4, 1, "_CPPv4NK4dnnl6memory15set_data_handleEPvRK6stream", "dnnl::memory::set_data_handle::astream"], [60, 4, 1, "_CPPv4NK4dnnl6memory15set_data_handleEPv", "dnnl::memory::set_data_handle::handle"], [60, 4, 1, "_CPPv4NK4dnnl6memory15set_data_handleEPvRK6stream", "dnnl::memory::set_data_handle::handle"], [60, 3, 1, "_CPPv4NK4dnnl6memory10unmap_dataEPv", "dnnl::memory::unmap_data"], [60, 4, 1, "_CPPv4NK4dnnl6memory10unmap_dataEPv", "dnnl::memory::unmap_data::mapped_ptr"], [159, 9, 1, "_CPPv4N4dnnl19normalization_flagsE", "dnnl::normalization_flags"], [159, 10, 1, "_CPPv4N4dnnl19normalization_flags14fuse_norm_reluE", "dnnl::normalization_flags::fuse_norm_relu"], [159, 10, 1, "_CPPv4N4dnnl19normalization_flags4noneE", "dnnl::normalization_flags::none"], [159, 10, 1, "_CPPv4N4dnnl19normalization_flags16use_global_statsE", "dnnl::normalization_flags::use_global_stats"], [159, 10, 1, "_CPPv4N4dnnl19normalization_flags9use_scaleE", "dnnl::normalization_flags::use_scale"], [159, 10, 1, "_CPPv4N4dnnl19normalization_flags9use_shiftE", "dnnl::normalization_flags::use_shift"], [165, 7, 1, "_CPPv4N4dnnl16pooling_backwardE", "dnnl::pooling_backward"], [165, 3, 1, "_CPPv4N4dnnl16pooling_backward16pooling_backwardERK14primitive_desc", "dnnl::pooling_backward::pooling_backward"], [165, 3, 1, "_CPPv4N4dnnl16pooling_backward16pooling_backwardEv", "dnnl::pooling_backward::pooling_backward"], [165, 4, 1, "_CPPv4N4dnnl16pooling_backward16pooling_backwardERK14primitive_desc", "dnnl::pooling_backward::pooling_backward::pd"], [165, 7, 1, "_CPPv4N4dnnl16pooling_backward14primitive_descE", "dnnl::pooling_backward::primitive_desc"], [165, 3, 1, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13diff_dst_descEv", "dnnl::pooling_backward::primitive_desc::diff_dst_desc"], [165, 3, 1, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13diff_src_descEv", "dnnl::pooling_backward::primitive_desc::diff_src_desc"], [165, 3, 1, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13get_algorithmEv", "dnnl::pooling_backward::primitive_desc::get_algorithm"], [165, 3, 1, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13get_dilationsEv", "dnnl::pooling_backward::primitive_desc::get_dilations"], [165, 3, 1, "_CPPv4NK4dnnl16pooling_backward14primitive_desc10get_kernelEv", "dnnl::pooling_backward::primitive_desc::get_kernel"], [165, 3, 1, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13get_padding_lEv", "dnnl::pooling_backward::primitive_desc::get_padding_l"], [165, 3, 1, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13get_padding_rEv", "dnnl::pooling_backward::primitive_desc::get_padding_r"], [165, 3, 1, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13get_prop_kindEv", "dnnl::pooling_backward::primitive_desc::get_prop_kind"], [165, 3, 1, "_CPPv4NK4dnnl16pooling_backward14primitive_desc11get_stridesEv", "dnnl::pooling_backward::primitive_desc::get_strides"], [165, 3, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc"], [165, 3, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descEv", "dnnl::pooling_backward::primitive_desc::primitive_desc"], [165, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::aalgorithm"], [165, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::aengine"], [165, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::allow_empty"], [165, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::attr"], [165, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::diff_dst_desc"], [165, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::diff_src_desc"], [165, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::dilation"], [165, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [165, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::kernel"], [165, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::padding_l"], [165, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::padding_r"], [165, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::strides"], [165, 3, 1, "_CPPv4NK4dnnl16pooling_backward14primitive_desc14workspace_descEv", "dnnl::pooling_backward::primitive_desc::workspace_desc"], [165, 7, 1, "_CPPv4N4dnnl15pooling_forwardE", "dnnl::pooling_forward"], [165, 3, 1, "_CPPv4N4dnnl15pooling_forward15pooling_forwardERK14primitive_desc", "dnnl::pooling_forward::pooling_forward"], [165, 3, 1, "_CPPv4N4dnnl15pooling_forward15pooling_forwardEv", "dnnl::pooling_forward::pooling_forward"], [165, 4, 1, "_CPPv4N4dnnl15pooling_forward15pooling_forwardERK14primitive_desc", "dnnl::pooling_forward::pooling_forward::pd"], [165, 7, 1, "_CPPv4N4dnnl15pooling_forward14primitive_descE", "dnnl::pooling_forward::primitive_desc"], [165, 3, 1, "_CPPv4NK4dnnl15pooling_forward14primitive_desc8dst_descEv", "dnnl::pooling_forward::primitive_desc::dst_desc"], [165, 3, 1, "_CPPv4NK4dnnl15pooling_forward14primitive_desc13get_algorithmEv", "dnnl::pooling_forward::primitive_desc::get_algorithm"], [165, 3, 1, "_CPPv4NK4dnnl15pooling_forward14primitive_desc13get_dilationsEv", "dnnl::pooling_forward::primitive_desc::get_dilations"], [165, 3, 1, "_CPPv4NK4dnnl15pooling_forward14primitive_desc10get_kernelEv", "dnnl::pooling_forward::primitive_desc::get_kernel"], [165, 3, 1, "_CPPv4NK4dnnl15pooling_forward14primitive_desc13get_padding_lEv", "dnnl::pooling_forward::primitive_desc::get_padding_l"], [165, 3, 1, "_CPPv4NK4dnnl15pooling_forward14primitive_desc13get_padding_rEv", "dnnl::pooling_forward::primitive_desc::get_padding_r"], [165, 3, 1, "_CPPv4NK4dnnl15pooling_forward14primitive_desc13get_prop_kindEv", "dnnl::pooling_forward::primitive_desc::get_prop_kind"], [165, 3, 1, "_CPPv4NK4dnnl15pooling_forward14primitive_desc11get_stridesEv", "dnnl::pooling_forward::primitive_desc::get_strides"], [165, 3, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc"], [165, 3, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descEv", "dnnl::pooling_forward::primitive_desc::primitive_desc"], [165, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::aalgorithm"], [165, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::aengine"], [165, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::allow_empty"], [165, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::aprop_kind"], [165, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::attr"], [165, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::dilation"], [165, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::dst_desc"], [165, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::kernel"], [165, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::padding_l"], [165, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::padding_r"], [165, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::src_desc"], [165, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::strides"], [165, 3, 1, "_CPPv4NK4dnnl15pooling_forward14primitive_desc8src_descEv", "dnnl::pooling_forward::primitive_desc::src_desc"], [165, 3, 1, "_CPPv4NK4dnnl15pooling_forward14primitive_desc14workspace_descEv", "dnnl::pooling_forward::primitive_desc::workspace_desc"], [153, 7, 1, "_CPPv4N4dnnl8post_opsE", "dnnl::post_ops"], [153, 3, 1, "_CPPv4N4dnnl8post_ops13append_binaryE9algorithmRKN6memory4descE", "dnnl::post_ops::append_binary"], [153, 4, 1, "_CPPv4N4dnnl8post_ops13append_binaryE9algorithmRKN6memory4descE", "dnnl::post_ops::append_binary::aalgorithm"], [153, 4, 1, "_CPPv4N4dnnl8post_ops13append_binaryE9algorithmRKN6memory4descE", "dnnl::post_ops::append_binary::src1_desc"], [153, 3, 1, "_CPPv4N4dnnl8post_ops14append_eltwiseE9algorithmff", "dnnl::post_ops::append_eltwise"], [153, 4, 1, "_CPPv4N4dnnl8post_ops14append_eltwiseE9algorithmff", "dnnl::post_ops::append_eltwise::aalgorithm"], [153, 4, 1, "_CPPv4N4dnnl8post_ops14append_eltwiseE9algorithmff", "dnnl::post_ops::append_eltwise::alpha"], [153, 4, 1, "_CPPv4N4dnnl8post_ops14append_eltwiseE9algorithmff", "dnnl::post_ops::append_eltwise::beta"], [153, 3, 1, "_CPPv4N4dnnl8post_ops10append_sumEN6memory9data_typeE", "dnnl::post_ops::append_sum"], [153, 4, 1, "_CPPv4N4dnnl8post_ops10append_sumEN6memory9data_typeE", "dnnl::post_ops::append_sum::data_type"], [153, 3, 1, "_CPPv4NK4dnnl8post_ops17get_params_binaryEiR9algorithmRN6memory4descE", "dnnl::post_ops::get_params_binary"], [153, 4, 1, "_CPPv4NK4dnnl8post_ops17get_params_binaryEiR9algorithmRN6memory4descE", "dnnl::post_ops::get_params_binary::aalgorithm"], [153, 4, 1, "_CPPv4NK4dnnl8post_ops17get_params_binaryEiR9algorithmRN6memory4descE", "dnnl::post_ops::get_params_binary::index"], [153, 4, 1, "_CPPv4NK4dnnl8post_ops17get_params_binaryEiR9algorithmRN6memory4descE", "dnnl::post_ops::get_params_binary::src1_desc"], [153, 3, 1, "_CPPv4NK4dnnl8post_ops18get_params_eltwiseEiR9algorithmRfRf", "dnnl::post_ops::get_params_eltwise"], [153, 4, 1, "_CPPv4NK4dnnl8post_ops18get_params_eltwiseEiR9algorithmRfRf", "dnnl::post_ops::get_params_eltwise::aalgorithm"], [153, 4, 1, "_CPPv4NK4dnnl8post_ops18get_params_eltwiseEiR9algorithmRfRf", "dnnl::post_ops::get_params_eltwise::alpha"], [153, 4, 1, "_CPPv4NK4dnnl8post_ops18get_params_eltwiseEiR9algorithmRfRf", "dnnl::post_ops::get_params_eltwise::beta"], [153, 4, 1, "_CPPv4NK4dnnl8post_ops18get_params_eltwiseEiR9algorithmRfRf", "dnnl::post_ops::get_params_eltwise::index"], [153, 3, 1, "_CPPv4NK4dnnl8post_ops14get_params_sumEiRf", "dnnl::post_ops::get_params_sum"], [153, 3, 1, "_CPPv4NK4dnnl8post_ops14get_params_sumEiRfRN6memory9data_typeE", "dnnl::post_ops::get_params_sum"], [153, 4, 1, "_CPPv4NK4dnnl8post_ops14get_params_sumEiRfRN6memory9data_typeE", "dnnl::post_ops::get_params_sum::data_type"], [153, 4, 1, "_CPPv4NK4dnnl8post_ops14get_params_sumEiRf", "dnnl::post_ops::get_params_sum::index"], [153, 4, 1, "_CPPv4NK4dnnl8post_ops14get_params_sumEiRfRN6memory9data_typeE", "dnnl::post_ops::get_params_sum::index"], [153, 4, 1, "_CPPv4NK4dnnl8post_ops14get_params_sumEiRf", "dnnl::post_ops::get_params_sum::scale"], [153, 4, 1, "_CPPv4NK4dnnl8post_ops14get_params_sumEiRfRN6memory9data_typeE", "dnnl::post_ops::get_params_sum::scale"], [153, 3, 1, "_CPPv4NK4dnnl8post_ops4kindEi", "dnnl::post_ops::kind"], [153, 4, 1, "_CPPv4NK4dnnl8post_ops4kindEi", "dnnl::post_ops::kind::index"], [153, 3, 1, "_CPPv4NK4dnnl8post_ops3lenEv", "dnnl::post_ops::len"], [153, 3, 1, "_CPPv4N4dnnl8post_ops8post_opsEv", "dnnl::post_ops::post_ops"], [166, 7, 1, "_CPPv4N4dnnl14prelu_backwardE", "dnnl::prelu_backward"], [166, 3, 1, "_CPPv4N4dnnl14prelu_backward14prelu_backwardERK14primitive_desc", "dnnl::prelu_backward::prelu_backward"], [166, 3, 1, "_CPPv4N4dnnl14prelu_backward14prelu_backwardEv", "dnnl::prelu_backward::prelu_backward"], [166, 4, 1, "_CPPv4N4dnnl14prelu_backward14prelu_backwardERK14primitive_desc", "dnnl::prelu_backward::prelu_backward::pd"], [166, 7, 1, "_CPPv4N4dnnl14prelu_backward14primitive_descE", "dnnl::prelu_backward::primitive_desc"], [166, 3, 1, "_CPPv4NK4dnnl14prelu_backward14primitive_desc13diff_dst_descEv", "dnnl::prelu_backward::primitive_desc::diff_dst_desc"], [166, 3, 1, "_CPPv4NK4dnnl14prelu_backward14primitive_desc13diff_src_descEv", "dnnl::prelu_backward::primitive_desc::diff_src_desc"], [166, 3, 1, "_CPPv4NK4dnnl14prelu_backward14primitive_desc13get_prop_kindEv", "dnnl::prelu_backward::primitive_desc::get_prop_kind"], [166, 3, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb", "dnnl::prelu_backward::primitive_desc::primitive_desc"], [166, 3, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descEv", "dnnl::prelu_backward::primitive_desc::primitive_desc"], [166, 4, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb", "dnnl::prelu_backward::primitive_desc::primitive_desc::aengine"], [166, 4, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb", "dnnl::prelu_backward::primitive_desc::primitive_desc::allow_empty"], [166, 4, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb", "dnnl::prelu_backward::primitive_desc::primitive_desc::attr"], [166, 4, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb", "dnnl::prelu_backward::primitive_desc::primitive_desc::diff_dst_desc"], [166, 4, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb", "dnnl::prelu_backward::primitive_desc::primitive_desc::diff_src_desc"], [166, 4, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb", "dnnl::prelu_backward::primitive_desc::primitive_desc::diff_weights_desc"], [166, 4, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb", "dnnl::prelu_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [166, 4, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb", "dnnl::prelu_backward::primitive_desc::primitive_desc::src_desc"], [166, 4, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb", "dnnl::prelu_backward::primitive_desc::primitive_desc::weight_desc"], [166, 3, 1, "_CPPv4NK4dnnl14prelu_backward14primitive_desc8src_descEv", "dnnl::prelu_backward::primitive_desc::src_desc"], [166, 7, 1, "_CPPv4N4dnnl13prelu_forwardE", "dnnl::prelu_forward"], [166, 3, 1, "_CPPv4N4dnnl13prelu_forward13prelu_forwardERK14primitive_desc", "dnnl::prelu_forward::prelu_forward"], [166, 3, 1, "_CPPv4N4dnnl13prelu_forward13prelu_forwardEv", "dnnl::prelu_forward::prelu_forward"], [166, 4, 1, "_CPPv4N4dnnl13prelu_forward13prelu_forwardERK14primitive_desc", "dnnl::prelu_forward::prelu_forward::pd"], [166, 7, 1, "_CPPv4N4dnnl13prelu_forward14primitive_descE", "dnnl::prelu_forward::primitive_desc"], [166, 3, 1, "_CPPv4NK4dnnl13prelu_forward14primitive_desc8dst_descEv", "dnnl::prelu_forward::primitive_desc::dst_desc"], [166, 3, 1, "_CPPv4NK4dnnl13prelu_forward14primitive_desc13get_prop_kindEv", "dnnl::prelu_forward::primitive_desc::get_prop_kind"], [166, 3, 1, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::prelu_forward::primitive_desc::primitive_desc"], [166, 3, 1, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descEv", "dnnl::prelu_forward::primitive_desc::primitive_desc"], [166, 4, 1, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::prelu_forward::primitive_desc::primitive_desc::aengine"], [166, 4, 1, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::prelu_forward::primitive_desc::primitive_desc::allow_empty"], [166, 4, 1, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::prelu_forward::primitive_desc::primitive_desc::aprop_kind"], [166, 4, 1, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::prelu_forward::primitive_desc::primitive_desc::attr"], [166, 4, 1, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::prelu_forward::primitive_desc::primitive_desc::dst_desc"], [166, 4, 1, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::prelu_forward::primitive_desc::primitive_desc::src_desc"], [166, 4, 1, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::prelu_forward::primitive_desc::primitive_desc::weight_desc"], [166, 3, 1, "_CPPv4NK4dnnl13prelu_forward14primitive_desc8src_descEv", "dnnl::prelu_forward::primitive_desc::src_desc"], [159, 7, 1, "_CPPv4N4dnnl9primitiveE", "dnnl::primitive"], [159, 3, 1, "_CPPv4NK4dnnl9primitive7executeERK6streamRKNSt13unordered_mapIi6memoryEE", "dnnl::primitive::execute"], [159, 4, 1, "_CPPv4NK4dnnl9primitive7executeERK6streamRKNSt13unordered_mapIi6memoryEE", "dnnl::primitive::execute::args"], [159, 4, 1, "_CPPv4NK4dnnl9primitive7executeERK6streamRKNSt13unordered_mapIi6memoryEE", "dnnl::primitive::execute::astream"], [159, 3, 1, "_CPPv4NK4dnnl9primitive8get_kindEv", "dnnl::primitive::get_kind"], [159, 9, 1, "_CPPv4N4dnnl9primitive4kindE", "dnnl::primitive::kind"], [159, 10, 1, "_CPPv4N4dnnl9primitive4kind19batch_normalizationE", "dnnl::primitive::kind::batch_normalization"], [159, 10, 1, "_CPPv4N4dnnl9primitive4kind6binaryE", "dnnl::primitive::kind::binary"], [159, 10, 1, "_CPPv4N4dnnl9primitive4kind6concatE", "dnnl::primitive::kind::concat"], [159, 10, 1, "_CPPv4N4dnnl9primitive4kind11convolutionE", "dnnl::primitive::kind::convolution"], [159, 10, 1, "_CPPv4N4dnnl9primitive4kind13deconvolutionE", "dnnl::primitive::kind::deconvolution"], [159, 10, 1, "_CPPv4N4dnnl9primitive4kind7eltwiseE", "dnnl::primitive::kind::eltwise"], [159, 10, 1, "_CPPv4N4dnnl9primitive4kind13inner_productE", "dnnl::primitive::kind::inner_product"], [159, 10, 1, "_CPPv4N4dnnl9primitive4kind19layer_normalizationE", "dnnl::primitive::kind::layer_normalization"], [159, 10, 1, "_CPPv4N4dnnl9primitive4kind3lrnE", "dnnl::primitive::kind::lrn"], [159, 10, 1, "_CPPv4N4dnnl9primitive4kind6matmulE", "dnnl::primitive::kind::matmul"], [159, 10, 1, "_CPPv4N4dnnl9primitive4kind7poolingE", "dnnl::primitive::kind::pooling"], [159, 10, 1, "_CPPv4N4dnnl9primitive4kind5preluE", "dnnl::primitive::kind::prelu"], [159, 10, 1, "_CPPv4N4dnnl9primitive4kind7reorderE", "dnnl::primitive::kind::reorder"], [159, 10, 1, "_CPPv4N4dnnl9primitive4kind10resamplingE", "dnnl::primitive::kind::resampling"], [159, 10, 1, "_CPPv4N4dnnl9primitive4kind3rnnE", "dnnl::primitive::kind::rnn"], [159, 10, 1, "_CPPv4N4dnnl9primitive4kind7shuffleE", "dnnl::primitive::kind::shuffle"], [159, 10, 1, "_CPPv4N4dnnl9primitive4kind7softmaxE", "dnnl::primitive::kind::softmax"], [159, 10, 1, "_CPPv4N4dnnl9primitive4kind3sumE", "dnnl::primitive::kind::sum"], [159, 10, 1, "_CPPv4N4dnnl9primitive4kind5undefE", "dnnl::primitive::kind::undef"], [159, 3, 1, "_CPPv4N4dnnl9primitiveaSERK9primitive", "dnnl::primitive::operator="], [159, 4, 1, "_CPPv4N4dnnl9primitiveaSERK9primitive", "dnnl::primitive::operator=::rhs"], [159, 3, 1, "_CPPv4N4dnnl9primitive9primitiveERK19primitive_desc_base", "dnnl::primitive::primitive"], [159, 3, 1, "_CPPv4N4dnnl9primitive9primitiveEv", "dnnl::primitive::primitive"], [159, 4, 1, "_CPPv4N4dnnl9primitive9primitiveERK19primitive_desc_base", "dnnl::primitive::primitive::pd"], [152, 7, 1, "_CPPv4N4dnnl14primitive_attrE", "dnnl::primitive_attr"], [152, 3, 1, "_CPPv4NK4dnnl14primitive_attr15get_fpmath_modeEv", "dnnl::primitive_attr::get_fpmath_mode"], [152, 3, 1, "_CPPv4NK4dnnl14primitive_attr12get_post_opsEv", "dnnl::primitive_attr::get_post_ops"], [152, 3, 1, "_CPPv4NK4dnnl14primitive_attr15get_scales_maskEi", "dnnl::primitive_attr::get_scales_mask"], [152, 4, 1, "_CPPv4NK4dnnl14primitive_attr15get_scales_maskEi", "dnnl::primitive_attr::get_scales_mask::arg"], [152, 3, 1, "_CPPv4NK4dnnl14primitive_attr19get_scratchpad_modeEv", "dnnl::primitive_attr::get_scratchpad_mode"], [152, 3, 1, "_CPPv4N4dnnl14primitive_attr14primitive_attrEv", "dnnl::primitive_attr::primitive_attr"], [152, 3, 1, "_CPPv4N4dnnl14primitive_attr15set_fpmath_modeE11fpmath_mode", "dnnl::primitive_attr::set_fpmath_mode"], [152, 4, 1, "_CPPv4N4dnnl14primitive_attr15set_fpmath_modeE11fpmath_mode", "dnnl::primitive_attr::set_fpmath_mode::mode"], [152, 3, 1, "_CPPv4N4dnnl14primitive_attr12set_post_opsEK8post_ops", "dnnl::primitive_attr::set_post_ops"], [152, 4, 1, "_CPPv4N4dnnl14primitive_attr12set_post_opsEK8post_ops", "dnnl::primitive_attr::set_post_ops::ops"], [152, 3, 1, "_CPPv4N4dnnl14primitive_attr20set_rnn_data_qparamsEff", "dnnl::primitive_attr::set_rnn_data_qparams"], [152, 4, 1, "_CPPv4N4dnnl14primitive_attr20set_rnn_data_qparamsEff", "dnnl::primitive_attr::set_rnn_data_qparams::scale"], [152, 4, 1, "_CPPv4N4dnnl14primitive_attr20set_rnn_data_qparamsEff", "dnnl::primitive_attr::set_rnn_data_qparams::shift"], [152, 3, 1, "_CPPv4N4dnnl14primitive_attr23set_rnn_weights_qparamsEiRKNSt6vectorIfEE", "dnnl::primitive_attr::set_rnn_weights_qparams"], [152, 4, 1, "_CPPv4N4dnnl14primitive_attr23set_rnn_weights_qparamsEiRKNSt6vectorIfEE", "dnnl::primitive_attr::set_rnn_weights_qparams::mask"], [152, 4, 1, "_CPPv4N4dnnl14primitive_attr23set_rnn_weights_qparamsEiRKNSt6vectorIfEE", "dnnl::primitive_attr::set_rnn_weights_qparams::scales"], [152, 3, 1, "_CPPv4N4dnnl14primitive_attr15set_scales_maskEii", "dnnl::primitive_attr::set_scales_mask"], [152, 4, 1, "_CPPv4N4dnnl14primitive_attr15set_scales_maskEii", "dnnl::primitive_attr::set_scales_mask::arg"], [152, 4, 1, "_CPPv4N4dnnl14primitive_attr15set_scales_maskEii", "dnnl::primitive_attr::set_scales_mask::mask"], [152, 3, 1, "_CPPv4N4dnnl14primitive_attr19set_scratchpad_modeE15scratchpad_mode", "dnnl::primitive_attr::set_scratchpad_mode"], [152, 4, 1, "_CPPv4N4dnnl14primitive_attr19set_scratchpad_modeE15scratchpad_mode", "dnnl::primitive_attr::set_scratchpad_mode::mode"], [152, 3, 1, "_CPPv4N4dnnl14primitive_attr20set_zero_points_maskEii", "dnnl::primitive_attr::set_zero_points_mask"], [152, 4, 1, "_CPPv4N4dnnl14primitive_attr20set_zero_points_maskEii", "dnnl::primitive_attr::set_zero_points_mask::arg"], [152, 4, 1, "_CPPv4N4dnnl14primitive_attr20set_zero_points_maskEii", "dnnl::primitive_attr::set_zero_points_mask::mask"], [159, 7, 1, "_CPPv4N4dnnl14primitive_descE", "dnnl::primitive_desc"], [159, 3, 1, "_CPPv4N4dnnl14primitive_desc9next_implEv", "dnnl::primitive_desc::next_impl"], [159, 3, 1, "_CPPv4N4dnnl14primitive_desc14primitive_descEv", "dnnl::primitive_desc::primitive_desc"], [159, 7, 1, "_CPPv4N4dnnl19primitive_desc_baseE", "dnnl::primitive_desc_base"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base9bias_descEv", "dnnl::primitive_desc_base::bias_desc"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13diff_dst_descEi", "dnnl::primitive_desc_base::diff_dst_desc"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13diff_dst_descEv", "dnnl::primitive_desc_base::diff_dst_desc"], [159, 4, 1, "_CPPv4NK4dnnl19primitive_desc_base13diff_dst_descEi", "dnnl::primitive_desc_base::diff_dst_desc::idx"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13diff_src_descEi", "dnnl::primitive_desc_base::diff_src_desc"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13diff_src_descEv", "dnnl::primitive_desc_base::diff_src_desc"], [159, 4, 1, "_CPPv4NK4dnnl19primitive_desc_base13diff_src_descEi", "dnnl::primitive_desc_base::diff_src_desc::idx"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base17diff_weights_descEi", "dnnl::primitive_desc_base::diff_weights_desc"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base17diff_weights_descEv", "dnnl::primitive_desc_base::diff_weights_desc"], [159, 4, 1, "_CPPv4NK4dnnl19primitive_desc_base17diff_weights_descEi", "dnnl::primitive_desc_base::diff_weights_desc::idx"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base8dst_descEi", "dnnl::primitive_desc_base::dst_desc"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base8dst_descEv", "dnnl::primitive_desc_base::dst_desc"], [159, 4, 1, "_CPPv4NK4dnnl19primitive_desc_base8dst_descEi", "dnnl::primitive_desc_base::dst_desc::idx"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base19get_activation_kindEv", "dnnl::primitive_desc_base::get_activation_kind"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13get_algorithmEv", "dnnl::primitive_desc_base::get_algorithm"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base9get_alphaEv", "dnnl::primitive_desc_base::get_alpha"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base8get_axisEv", "dnnl::primitive_desc_base::get_axis"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base8get_betaEv", "dnnl::primitive_desc_base::get_beta"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13get_cell_kindEv", "dnnl::primitive_desc_base::get_cell_kind"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13get_dilationsEv", "dnnl::primitive_desc_base::get_dilations"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13get_directionEv", "dnnl::primitive_desc_base::get_direction"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base10get_engineEv", "dnnl::primitive_desc_base::get_engine"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base11get_epsilonEv", "dnnl::primitive_desc_base::get_epsilon"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base11get_factorsEv", "dnnl::primitive_desc_base::get_factors"], [159, 3, 1, "_CPPv4I0ENK4dnnl19primitive_desc_base9get_flagsE1Tv", "dnnl::primitive_desc_base::get_flags"], [159, 8, 1, "_CPPv4I0ENK4dnnl19primitive_desc_base9get_flagsE1Tv", "dnnl::primitive_desc_base::get_flags::T"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base14get_group_sizeEv", "dnnl::primitive_desc_base::get_group_size"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base5get_kEv", "dnnl::primitive_desc_base::get_k"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base10get_kernelEv", "dnnl::primitive_desc_base::get_kernel"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base8get_kindEv", "dnnl::primitive_desc_base::get_kind"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base14get_local_sizeEv", "dnnl::primitive_desc_base::get_local_size"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base5get_pEv", "dnnl::primitive_desc_base::get_p"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13get_padding_lEv", "dnnl::primitive_desc_base::get_padding_l"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13get_padding_rEv", "dnnl::primitive_desc_base::get_padding_r"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base18get_primitive_attrEv", "dnnl::primitive_desc_base::get_primitive_attr"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13get_prop_kindEv", "dnnl::primitive_desc_base::get_prop_kind"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base11get_stridesEv", "dnnl::primitive_desc_base::get_strides"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13impl_info_strEv", "dnnl::primitive_desc_base::impl_info_str"], [159, 3, 1, "_CPPv4N4dnnl19primitive_desc_base19primitive_desc_baseEv", "dnnl::primitive_desc_base::primitive_desc_base"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base8query_mdE5queryi", "dnnl::primitive_desc_base::query_md"], [159, 4, 1, "_CPPv4NK4dnnl19primitive_desc_base8query_mdE5queryi", "dnnl::primitive_desc_base::query_md::idx"], [159, 4, 1, "_CPPv4NK4dnnl19primitive_desc_base8query_mdE5queryi", "dnnl::primitive_desc_base::query_md::what"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base9query_s64E5query", "dnnl::primitive_desc_base::query_s64"], [159, 4, 1, "_CPPv4NK4dnnl19primitive_desc_base9query_s64E5query", "dnnl::primitive_desc_base::query_s64::what"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base15scratchpad_descEv", "dnnl::primitive_desc_base::scratchpad_desc"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base17scratchpad_engineEv", "dnnl::primitive_desc_base::scratchpad_engine"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base8src_descEi", "dnnl::primitive_desc_base::src_desc"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base8src_descEv", "dnnl::primitive_desc_base::src_desc"], [159, 4, 1, "_CPPv4NK4dnnl19primitive_desc_base8src_descEi", "dnnl::primitive_desc_base::src_desc::idx"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base12weights_descEi", "dnnl::primitive_desc_base::weights_desc"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base12weights_descEv", "dnnl::primitive_desc_base::weights_desc"], [159, 4, 1, "_CPPv4NK4dnnl19primitive_desc_base12weights_descEi", "dnnl::primitive_desc_base::weights_desc::idx"], [159, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base14workspace_descEv", "dnnl::primitive_desc_base::workspace_desc"], [159, 9, 1, "_CPPv4N4dnnl9prop_kindE", "dnnl::prop_kind"], [159, 10, 1, "_CPPv4N4dnnl9prop_kind8backwardE", "dnnl::prop_kind::backward"], [159, 10, 1, "_CPPv4N4dnnl9prop_kind13backward_biasE", "dnnl::prop_kind::backward_bias"], [159, 10, 1, "_CPPv4N4dnnl9prop_kind13backward_dataE", "dnnl::prop_kind::backward_data"], [159, 10, 1, "_CPPv4N4dnnl9prop_kind16backward_weightsE", "dnnl::prop_kind::backward_weights"], [159, 10, 1, "_CPPv4N4dnnl9prop_kind7forwardE", "dnnl::prop_kind::forward"], [159, 10, 1, "_CPPv4N4dnnl9prop_kind17forward_inferenceE", "dnnl::prop_kind::forward_inference"], [159, 10, 1, "_CPPv4N4dnnl9prop_kind15forward_scoringE", "dnnl::prop_kind::forward_scoring"], [159, 10, 1, "_CPPv4N4dnnl9prop_kind16forward_trainingE", "dnnl::prop_kind::forward_training"], [159, 10, 1, "_CPPv4N4dnnl9prop_kind5undefE", "dnnl::prop_kind::undef"], [167, 7, 1, "_CPPv4N4dnnl9reductionE", "dnnl::reduction"], [167, 7, 1, "_CPPv4N4dnnl9reduction14primitive_descE", "dnnl::reduction::primitive_desc"], [167, 3, 1, "_CPPv4NK4dnnl9reduction14primitive_desc8dst_descEv", "dnnl::reduction::primitive_desc::dst_desc"], [167, 3, 1, "_CPPv4NK4dnnl9reduction14primitive_desc13get_algorithmEv", "dnnl::reduction::primitive_desc::get_algorithm"], [167, 3, 1, "_CPPv4NK4dnnl9reduction14primitive_desc11get_epsilonEv", "dnnl::reduction::primitive_desc::get_epsilon"], [167, 3, 1, "_CPPv4NK4dnnl9reduction14primitive_desc5get_pEv", "dnnl::reduction::primitive_desc::get_p"], [167, 3, 1, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::reduction::primitive_desc::primitive_desc"], [167, 3, 1, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descEv", "dnnl::reduction::primitive_desc::primitive_desc"], [167, 4, 1, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::reduction::primitive_desc::primitive_desc::aalgorithm"], [167, 4, 1, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::reduction::primitive_desc::primitive_desc::aengine"], [167, 4, 1, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::reduction::primitive_desc::primitive_desc::allow_empty"], [167, 4, 1, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::reduction::primitive_desc::primitive_desc::attr"], [167, 4, 1, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::reduction::primitive_desc::primitive_desc::dst_desc"], [167, 4, 1, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::reduction::primitive_desc::primitive_desc::eps"], [167, 4, 1, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::reduction::primitive_desc::primitive_desc::p"], [167, 4, 1, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::reduction::primitive_desc::primitive_desc::src_desc"], [167, 3, 1, "_CPPv4NK4dnnl9reduction14primitive_desc8src_descEv", "dnnl::reduction::primitive_desc::src_desc"], [167, 3, 1, "_CPPv4N4dnnl9reduction9reductionEv", "dnnl::reduction::reduction"], [168, 7, 1, "_CPPv4N4dnnl7reorderE", "dnnl::reorder"], [168, 3, 1, "_CPPv4NK4dnnl7reorder7executeERK6streamR6memoryR6memory", "dnnl::reorder::execute"], [168, 4, 1, "_CPPv4NK4dnnl7reorder7executeERK6streamR6memoryR6memory", "dnnl::reorder::execute::astream"], [168, 4, 1, "_CPPv4NK4dnnl7reorder7executeERK6streamR6memoryR6memory", "dnnl::reorder::execute::dst"], [168, 4, 1, "_CPPv4NK4dnnl7reorder7executeERK6streamR6memoryR6memory", "dnnl::reorder::execute::src"], [168, 7, 1, "_CPPv4N4dnnl7reorder14primitive_descE", "dnnl::reorder::primitive_desc"], [168, 3, 1, "_CPPv4NK4dnnl7reorder14primitive_desc8dst_descEv", "dnnl::reorder::primitive_desc::dst_desc"], [168, 3, 1, "_CPPv4NK4dnnl7reorder14primitive_desc14get_dst_engineEv", "dnnl::reorder::primitive_desc::get_dst_engine"], [168, 3, 1, "_CPPv4NK4dnnl7reorder14primitive_desc14get_src_engineEv", "dnnl::reorder::primitive_desc::get_src_engine"], [168, 3, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6engineRKN6memory4descERK6engineRKN6memory4descERK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc"], [168, 3, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6memoryRK6memoryRK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc"], [168, 3, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descEv", "dnnl::reorder::primitive_desc::primitive_desc"], [168, 4, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6engineRKN6memory4descERK6engineRKN6memory4descERK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc::allow_empty"], [168, 4, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6memoryRK6memoryRK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc::allow_empty"], [168, 4, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6engineRKN6memory4descERK6engineRKN6memory4descERK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc::attr"], [168, 4, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6memoryRK6memoryRK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc::attr"], [168, 4, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6memoryRK6memoryRK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc::dst"], [168, 4, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6engineRKN6memory4descERK6engineRKN6memory4descERK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc::dst_engine"], [168, 4, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6engineRKN6memory4descERK6engineRKN6memory4descERK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc::dst_md"], [168, 4, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6memoryRK6memoryRK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc::src"], [168, 4, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6engineRKN6memory4descERK6engineRKN6memory4descERK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc::src_engine"], [168, 4, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6engineRKN6memory4descERK6engineRKN6memory4descERK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc::src_md"], [168, 3, 1, "_CPPv4NK4dnnl7reorder14primitive_desc8src_descEv", "dnnl::reorder::primitive_desc::src_desc"], [168, 3, 1, "_CPPv4N4dnnl7reorder7reorderERK14primitive_desc", "dnnl::reorder::reorder"], [168, 3, 1, "_CPPv4N4dnnl7reorder7reorderERK6memoryRK6memoryRK14primitive_attr", "dnnl::reorder::reorder"], [168, 3, 1, "_CPPv4N4dnnl7reorder7reorderEv", "dnnl::reorder::reorder"], [168, 4, 1, "_CPPv4N4dnnl7reorder7reorderERK6memoryRK6memoryRK14primitive_attr", "dnnl::reorder::reorder::attr"], [168, 4, 1, "_CPPv4N4dnnl7reorder7reorderERK6memoryRK6memoryRK14primitive_attr", "dnnl::reorder::reorder::dst"], [168, 4, 1, "_CPPv4N4dnnl7reorder7reorderERK14primitive_desc", "dnnl::reorder::reorder::pd"], [168, 4, 1, "_CPPv4N4dnnl7reorder7reorderERK6memoryRK6memoryRK14primitive_attr", "dnnl::reorder::reorder::src"], [169, 7, 1, "_CPPv4N4dnnl19resampling_backwardE", "dnnl::resampling_backward"], [169, 7, 1, "_CPPv4N4dnnl19resampling_backward14primitive_descE", "dnnl::resampling_backward::primitive_desc"], [169, 3, 1, "_CPPv4NK4dnnl19resampling_backward14primitive_desc13diff_dst_descEv", "dnnl::resampling_backward::primitive_desc::diff_dst_desc"], [169, 3, 1, "_CPPv4NK4dnnl19resampling_backward14primitive_desc13diff_src_descEv", "dnnl::resampling_backward::primitive_desc::diff_src_desc"], [169, 3, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc"], [169, 3, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc"], [169, 3, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descEv", "dnnl::resampling_backward::primitive_desc::primitive_desc"], [169, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::aalgorithm"], [169, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::aalgorithm"], [169, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::aengine"], [169, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::aengine"], [169, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::allow_empty"], [169, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::allow_empty"], [169, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::attr"], [169, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::attr"], [169, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::diff_dst_desc"], [169, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::diff_dst_desc"], [169, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::diff_src_desc"], [169, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::diff_src_desc"], [169, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::factors"], [169, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [169, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [169, 3, 1, "_CPPv4N4dnnl19resampling_backward19resampling_backwardERK14primitive_desc", "dnnl::resampling_backward::resampling_backward"], [169, 3, 1, "_CPPv4N4dnnl19resampling_backward19resampling_backwardEv", "dnnl::resampling_backward::resampling_backward"], [169, 4, 1, "_CPPv4N4dnnl19resampling_backward19resampling_backwardERK14primitive_desc", "dnnl::resampling_backward::resampling_backward::pd"], [169, 7, 1, "_CPPv4N4dnnl18resampling_forwardE", "dnnl::resampling_forward"], [169, 7, 1, "_CPPv4N4dnnl18resampling_forward14primitive_descE", "dnnl::resampling_forward::primitive_desc"], [169, 3, 1, "_CPPv4NK4dnnl18resampling_forward14primitive_desc8dst_descEv", "dnnl::resampling_forward::primitive_desc::dst_desc"], [169, 3, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc"], [169, 3, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc"], [169, 3, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc"], [169, 3, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descEv", "dnnl::resampling_forward::primitive_desc::primitive_desc"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::aalgorithm"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::aalgorithm"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::aalgorithm"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::aengine"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::aengine"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::aengine"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::allow_empty"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::allow_empty"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::allow_empty"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::aprop_kind"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::aprop_kind"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::aprop_kind"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::attr"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::attr"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::attr"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::dst_desc"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::dst_desc"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::factors"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::factors"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::src_desc"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::src_desc"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::src_desc"], [169, 3, 1, "_CPPv4NK4dnnl18resampling_forward14primitive_desc8src_descEv", "dnnl::resampling_forward::primitive_desc::src_desc"], [169, 3, 1, "_CPPv4N4dnnl18resampling_forward18resampling_forwardERK14primitive_desc", "dnnl::resampling_forward::resampling_forward"], [169, 3, 1, "_CPPv4N4dnnl18resampling_forward18resampling_forwardEv", "dnnl::resampling_forward::resampling_forward"], [169, 4, 1, "_CPPv4N4dnnl18resampling_forward18resampling_forwardERK14primitive_desc", "dnnl::resampling_forward::resampling_forward::pd"], [170, 9, 1, "_CPPv4N4dnnl13rnn_directionE", "dnnl::rnn_direction"], [170, 10, 1, "_CPPv4N4dnnl13rnn_direction20bidirectional_concatE", "dnnl::rnn_direction::bidirectional_concat"], [170, 10, 1, "_CPPv4N4dnnl13rnn_direction17bidirectional_sumE", "dnnl::rnn_direction::bidirectional_sum"], [170, 10, 1, "_CPPv4N4dnnl13rnn_direction5undefE", "dnnl::rnn_direction::undef"], [170, 10, 1, "_CPPv4N4dnnl13rnn_direction14unidirectionalE", "dnnl::rnn_direction::unidirectional"], [170, 10, 1, "_CPPv4N4dnnl13rnn_direction25unidirectional_left2rightE", "dnnl::rnn_direction::unidirectional_left2right"], [170, 10, 1, "_CPPv4N4dnnl13rnn_direction25unidirectional_right2leftE", "dnnl::rnn_direction::unidirectional_right2left"], [170, 9, 1, "_CPPv4N4dnnl9rnn_flagsE", "dnnl::rnn_flags"], [170, 10, 1, "_CPPv4N4dnnl9rnn_flags5undefE", "dnnl::rnn_flags::undef"], [159, 7, 1, "_CPPv4N4dnnl23rnn_primitive_desc_baseE", "dnnl::rnn_primitive_desc_base"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base20augru_attention_descEv", "dnnl::rnn_primitive_desc_base::augru_attention_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base9bias_descEv", "dnnl::rnn_primitive_desc_base::bias_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base25diff_augru_attention_descEv", "dnnl::rnn_primitive_desc_base::diff_augru_attention_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base14diff_bias_descEv", "dnnl::rnn_primitive_desc_base::diff_bias_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base20diff_dst_iter_c_descEv", "dnnl::rnn_primitive_desc_base::diff_dst_iter_c_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base18diff_dst_iter_descEv", "dnnl::rnn_primitive_desc_base::diff_dst_iter_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base19diff_dst_layer_descEv", "dnnl::rnn_primitive_desc_base::diff_dst_layer_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base20diff_src_iter_c_descEv", "dnnl::rnn_primitive_desc_base::diff_src_iter_c_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base18diff_src_iter_descEv", "dnnl::rnn_primitive_desc_base::diff_src_iter_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base19diff_src_layer_descEv", "dnnl::rnn_primitive_desc_base::diff_src_layer_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base22diff_weights_iter_descEv", "dnnl::rnn_primitive_desc_base::diff_weights_iter_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base23diff_weights_layer_descEv", "dnnl::rnn_primitive_desc_base::diff_weights_layer_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base26diff_weights_peephole_descEv", "dnnl::rnn_primitive_desc_base::diff_weights_peephole_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base28diff_weights_projection_descEv", "dnnl::rnn_primitive_desc_base::diff_weights_projection_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base15dst_iter_c_descEv", "dnnl::rnn_primitive_desc_base::dst_iter_c_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base13dst_iter_descEv", "dnnl::rnn_primitive_desc_base::dst_iter_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base14dst_layer_descEv", "dnnl::rnn_primitive_desc_base::dst_layer_desc"], [159, 3, 1, "_CPPv4N4dnnl23rnn_primitive_desc_base23rnn_primitive_desc_baseEv", "dnnl::rnn_primitive_desc_base::rnn_primitive_desc_base"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base15src_iter_c_descEv", "dnnl::rnn_primitive_desc_base::src_iter_c_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base13src_iter_descEv", "dnnl::rnn_primitive_desc_base::src_iter_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base14src_layer_descEv", "dnnl::rnn_primitive_desc_base::src_layer_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base17weights_iter_descEv", "dnnl::rnn_primitive_desc_base::weights_iter_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base18weights_layer_descEv", "dnnl::rnn_primitive_desc_base::weights_layer_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base21weights_peephole_descEv", "dnnl::rnn_primitive_desc_base::weights_peephole_desc"], [159, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base23weights_projection_descEv", "dnnl::rnn_primitive_desc_base::weights_projection_desc"], [152, 9, 1, "_CPPv4N4dnnl15scratchpad_modeE", "dnnl::scratchpad_mode"], [152, 10, 1, "_CPPv4N4dnnl15scratchpad_mode7libraryE", "dnnl::scratchpad_mode::library"], [152, 10, 1, "_CPPv4N4dnnl15scratchpad_mode4userE", "dnnl::scratchpad_mode::user"], [171, 7, 1, "_CPPv4N4dnnl16shuffle_backwardE", "dnnl::shuffle_backward"], [171, 7, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_descE", "dnnl::shuffle_backward::primitive_desc"], [171, 3, 1, "_CPPv4NK4dnnl16shuffle_backward14primitive_desc13diff_dst_descEv", "dnnl::shuffle_backward::primitive_desc::diff_dst_desc"], [171, 3, 1, "_CPPv4NK4dnnl16shuffle_backward14primitive_desc13diff_src_descEv", "dnnl::shuffle_backward::primitive_desc::diff_src_desc"], [171, 3, 1, "_CPPv4NK4dnnl16shuffle_backward14primitive_desc8get_axisEv", "dnnl::shuffle_backward::primitive_desc::get_axis"], [171, 3, 1, "_CPPv4NK4dnnl16shuffle_backward14primitive_desc14get_group_sizeEv", "dnnl::shuffle_backward::primitive_desc::get_group_size"], [171, 3, 1, "_CPPv4NK4dnnl16shuffle_backward14primitive_desc13get_prop_kindEv", "dnnl::shuffle_backward::primitive_desc::get_prop_kind"], [171, 3, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descEiiRKN15shuffle_forward14primitive_descERK14primitive_attrb", "dnnl::shuffle_backward::primitive_desc::primitive_desc"], [171, 3, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descEv", "dnnl::shuffle_backward::primitive_desc::primitive_desc"], [171, 4, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descEiiRKN15shuffle_forward14primitive_descERK14primitive_attrb", "dnnl::shuffle_backward::primitive_desc::primitive_desc::aengine"], [171, 4, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descEiiRKN15shuffle_forward14primitive_descERK14primitive_attrb", "dnnl::shuffle_backward::primitive_desc::primitive_desc::allow_empty"], [171, 4, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descEiiRKN15shuffle_forward14primitive_descERK14primitive_attrb", "dnnl::shuffle_backward::primitive_desc::primitive_desc::attr"], [171, 4, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descEiiRKN15shuffle_forward14primitive_descERK14primitive_attrb", "dnnl::shuffle_backward::primitive_desc::primitive_desc::axis"], [171, 4, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descEiiRKN15shuffle_forward14primitive_descERK14primitive_attrb", "dnnl::shuffle_backward::primitive_desc::primitive_desc::diff_dst_desc"], [171, 4, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descEiiRKN15shuffle_forward14primitive_descERK14primitive_attrb", "dnnl::shuffle_backward::primitive_desc::primitive_desc::diff_src_desc"], [171, 4, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descEiiRKN15shuffle_forward14primitive_descERK14primitive_attrb", "dnnl::shuffle_backward::primitive_desc::primitive_desc::group_size"], [171, 4, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descEiiRKN15shuffle_forward14primitive_descERK14primitive_attrb", "dnnl::shuffle_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [171, 3, 1, "_CPPv4N4dnnl16shuffle_backward16shuffle_backwardERK14primitive_desc", "dnnl::shuffle_backward::shuffle_backward"], [171, 3, 1, "_CPPv4N4dnnl16shuffle_backward16shuffle_backwardEv", "dnnl::shuffle_backward::shuffle_backward"], [171, 4, 1, "_CPPv4N4dnnl16shuffle_backward16shuffle_backwardERK14primitive_desc", "dnnl::shuffle_backward::shuffle_backward::pd"], [171, 7, 1, "_CPPv4N4dnnl15shuffle_forwardE", "dnnl::shuffle_forward"], [171, 7, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_descE", "dnnl::shuffle_forward::primitive_desc"], [171, 3, 1, "_CPPv4NK4dnnl15shuffle_forward14primitive_desc8dst_descEv", "dnnl::shuffle_forward::primitive_desc::dst_desc"], [171, 3, 1, "_CPPv4NK4dnnl15shuffle_forward14primitive_desc8get_axisEv", "dnnl::shuffle_forward::primitive_desc::get_axis"], [171, 3, 1, "_CPPv4NK4dnnl15shuffle_forward14primitive_desc14get_group_sizeEv", "dnnl::shuffle_forward::primitive_desc::get_group_size"], [171, 3, 1, "_CPPv4NK4dnnl15shuffle_forward14primitive_desc13get_prop_kindEv", "dnnl::shuffle_forward::primitive_desc::get_prop_kind"], [171, 3, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEiiRK14primitive_attrb", "dnnl::shuffle_forward::primitive_desc::primitive_desc"], [171, 3, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descEv", "dnnl::shuffle_forward::primitive_desc::primitive_desc"], [171, 4, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEiiRK14primitive_attrb", "dnnl::shuffle_forward::primitive_desc::primitive_desc::aengine"], [171, 4, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEiiRK14primitive_attrb", "dnnl::shuffle_forward::primitive_desc::primitive_desc::allow_empty"], [171, 4, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEiiRK14primitive_attrb", "dnnl::shuffle_forward::primitive_desc::primitive_desc::aprop_kind"], [171, 4, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEiiRK14primitive_attrb", "dnnl::shuffle_forward::primitive_desc::primitive_desc::attr"], [171, 4, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEiiRK14primitive_attrb", "dnnl::shuffle_forward::primitive_desc::primitive_desc::axis"], [171, 4, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEiiRK14primitive_attrb", "dnnl::shuffle_forward::primitive_desc::primitive_desc::dst_desc"], [171, 4, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEiiRK14primitive_attrb", "dnnl::shuffle_forward::primitive_desc::primitive_desc::group_size"], [171, 4, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEiiRK14primitive_attrb", "dnnl::shuffle_forward::primitive_desc::primitive_desc::src_desc"], [171, 3, 1, "_CPPv4NK4dnnl15shuffle_forward14primitive_desc8src_descEv", "dnnl::shuffle_forward::primitive_desc::src_desc"], [171, 3, 1, "_CPPv4N4dnnl15shuffle_forward15shuffle_forwardERK14primitive_desc", "dnnl::shuffle_forward::shuffle_forward"], [171, 3, 1, "_CPPv4N4dnnl15shuffle_forward15shuffle_forwardEv", "dnnl::shuffle_forward::shuffle_forward"], [171, 4, 1, "_CPPv4N4dnnl15shuffle_forward15shuffle_forwardERK14primitive_desc", "dnnl::shuffle_forward::shuffle_forward::pd"], [172, 7, 1, "_CPPv4N4dnnl16softmax_backwardE", "dnnl::softmax_backward"], [172, 7, 1, "_CPPv4N4dnnl16softmax_backward14primitive_descE", "dnnl::softmax_backward::primitive_desc"], [172, 3, 1, "_CPPv4NK4dnnl16softmax_backward14primitive_desc13diff_dst_descEv", "dnnl::softmax_backward::primitive_desc::diff_dst_desc"], [172, 3, 1, "_CPPv4NK4dnnl16softmax_backward14primitive_desc13diff_src_descEv", "dnnl::softmax_backward::primitive_desc::diff_src_desc"], [172, 3, 1, "_CPPv4NK4dnnl16softmax_backward14primitive_desc8dst_descEv", "dnnl::softmax_backward::primitive_desc::dst_desc"], [172, 3, 1, "_CPPv4NK4dnnl16softmax_backward14primitive_desc13get_algorithmEv", "dnnl::softmax_backward::primitive_desc::get_algorithm"], [172, 3, 1, "_CPPv4NK4dnnl16softmax_backward14primitive_desc8get_axisEv", "dnnl::softmax_backward::primitive_desc::get_axis"], [172, 3, 1, "_CPPv4NK4dnnl16softmax_backward14primitive_desc13get_prop_kindEv", "dnnl::softmax_backward::primitive_desc::get_prop_kind"], [172, 3, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb", "dnnl::softmax_backward::primitive_desc::primitive_desc"], [172, 3, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descEv", "dnnl::softmax_backward::primitive_desc::primitive_desc"], [172, 4, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb", "dnnl::softmax_backward::primitive_desc::primitive_desc::aalgorithm"], [172, 4, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb", "dnnl::softmax_backward::primitive_desc::primitive_desc::aengine"], [172, 4, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb", "dnnl::softmax_backward::primitive_desc::primitive_desc::allow_empty"], [172, 4, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb", "dnnl::softmax_backward::primitive_desc::primitive_desc::attr"], [172, 4, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb", "dnnl::softmax_backward::primitive_desc::primitive_desc::axis"], [172, 4, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb", "dnnl::softmax_backward::primitive_desc::primitive_desc::diff_dst_desc"], [172, 4, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb", "dnnl::softmax_backward::primitive_desc::primitive_desc::diff_src_desc"], [172, 4, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb", "dnnl::softmax_backward::primitive_desc::primitive_desc::dst_desc"], [172, 4, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb", "dnnl::softmax_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [172, 3, 1, "_CPPv4N4dnnl16softmax_backward16softmax_backwardERK14primitive_desc", "dnnl::softmax_backward::softmax_backward"], [172, 3, 1, "_CPPv4N4dnnl16softmax_backward16softmax_backwardEv", "dnnl::softmax_backward::softmax_backward"], [172, 4, 1, "_CPPv4N4dnnl16softmax_backward16softmax_backwardERK14primitive_desc", "dnnl::softmax_backward::softmax_backward::pd"], [172, 7, 1, "_CPPv4N4dnnl15softmax_forwardE", "dnnl::softmax_forward"], [172, 7, 1, "_CPPv4N4dnnl15softmax_forward14primitive_descE", "dnnl::softmax_forward::primitive_desc"], [172, 3, 1, "_CPPv4NK4dnnl15softmax_forward14primitive_desc8dst_descEv", "dnnl::softmax_forward::primitive_desc::dst_desc"], [172, 3, 1, "_CPPv4NK4dnnl15softmax_forward14primitive_desc13get_algorithmEv", "dnnl::softmax_forward::primitive_desc::get_algorithm"], [172, 3, 1, "_CPPv4NK4dnnl15softmax_forward14primitive_desc8get_axisEv", "dnnl::softmax_forward::primitive_desc::get_axis"], [172, 3, 1, "_CPPv4NK4dnnl15softmax_forward14primitive_desc13get_prop_kindEv", "dnnl::softmax_forward::primitive_desc::get_prop_kind"], [172, 3, 1, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEiRK14primitive_attrb", "dnnl::softmax_forward::primitive_desc::primitive_desc"], [172, 3, 1, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descEv", "dnnl::softmax_forward::primitive_desc::primitive_desc"], [172, 4, 1, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEiRK14primitive_attrb", "dnnl::softmax_forward::primitive_desc::primitive_desc::aalgorithm"], [172, 4, 1, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEiRK14primitive_attrb", "dnnl::softmax_forward::primitive_desc::primitive_desc::aengine"], [172, 4, 1, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEiRK14primitive_attrb", "dnnl::softmax_forward::primitive_desc::primitive_desc::allow_empty"], [172, 4, 1, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEiRK14primitive_attrb", "dnnl::softmax_forward::primitive_desc::primitive_desc::aprop_kind"], [172, 4, 1, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEiRK14primitive_attrb", "dnnl::softmax_forward::primitive_desc::primitive_desc::attr"], [172, 4, 1, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEiRK14primitive_attrb", "dnnl::softmax_forward::primitive_desc::primitive_desc::axis"], [172, 4, 1, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEiRK14primitive_attrb", "dnnl::softmax_forward::primitive_desc::primitive_desc::dst_desc"], [172, 4, 1, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEiRK14primitive_attrb", "dnnl::softmax_forward::primitive_desc::primitive_desc::src_desc"], [172, 3, 1, "_CPPv4NK4dnnl15softmax_forward14primitive_desc8src_descEv", "dnnl::softmax_forward::primitive_desc::src_desc"], [172, 3, 1, "_CPPv4N4dnnl15softmax_forward15softmax_forwardERK14primitive_desc", "dnnl::softmax_forward::softmax_forward"], [172, 3, 1, "_CPPv4N4dnnl15softmax_forward15softmax_forwardEv", "dnnl::softmax_forward::softmax_forward"], [172, 4, 1, "_CPPv4N4dnnl15softmax_forward15softmax_forwardERK14primitive_desc", "dnnl::softmax_forward::softmax_forward::pd"], [61, 7, 1, "_CPPv4N4dnnl6streamE", "dnnl::stream"], [61, 9, 1, "_CPPv4N4dnnl6stream5flagsE", "dnnl::stream::flags"], [61, 10, 1, "_CPPv4N4dnnl6stream5flags13default_flagsE", "dnnl::stream::flags::default_flags"], [61, 10, 1, "_CPPv4N4dnnl6stream5flags8in_orderE", "dnnl::stream::flags::in_order"], [61, 10, 1, "_CPPv4N4dnnl6stream5flags12out_of_orderE", "dnnl::stream::flags::out_of_order"], [61, 3, 1, "_CPPv4NK4dnnl6stream10get_engineEv", "dnnl::stream::get_engine"], [61, 3, 1, "_CPPv4N4dnnl6stream6streamERK6engine5flags", "dnnl::stream::stream"], [61, 3, 1, "_CPPv4N4dnnl6stream6streamEv", "dnnl::stream::stream"], [61, 4, 1, "_CPPv4N4dnnl6stream6streamERK6engine5flags", "dnnl::stream::stream::aengine"], [61, 4, 1, "_CPPv4N4dnnl6stream6streamERK6engine5flags", "dnnl::stream::stream::aflags"], [61, 3, 1, "_CPPv4N4dnnl6stream4waitEv", "dnnl::stream::wait"], [173, 7, 1, "_CPPv4N4dnnl3sumE", "dnnl::sum"], [173, 7, 1, "_CPPv4N4dnnl3sum14primitive_descE", "dnnl::sum::primitive_desc"], [173, 3, 1, "_CPPv4NK4dnnl3sum14primitive_desc8dst_descEv", "dnnl::sum::primitive_desc::dst_desc"], [173, 3, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKN6memory4descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc"], [173, 3, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc"], [173, 3, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descEv", "dnnl::sum::primitive_desc::primitive_desc"], [173, 4, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKN6memory4descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc::aengine"], [173, 4, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc::aengine"], [173, 4, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKN6memory4descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc::attr"], [173, 4, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc::attr"], [173, 4, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKN6memory4descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc::dst"], [173, 4, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKN6memory4descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc::scales"], [173, 4, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc::scales"], [173, 4, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKN6memory4descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc::srcs"], [173, 4, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc::srcs"], [173, 3, 1, "_CPPv4NK4dnnl3sum14primitive_desc8src_descEi", "dnnl::sum::primitive_desc::src_desc"], [173, 4, 1, "_CPPv4NK4dnnl3sum14primitive_desc8src_descEi", "dnnl::sum::primitive_desc::src_desc::idx"], [173, 3, 1, "_CPPv4N4dnnl3sum3sumERK14primitive_desc", "dnnl::sum::sum"], [173, 3, 1, "_CPPv4N4dnnl3sum3sumEv", "dnnl::sum::sum"], [173, 4, 1, "_CPPv4N4dnnl3sum3sumERK14primitive_desc", "dnnl::sum::sum::pd"], [159, 3, 1, "_CPPv4N4dnnl12sycl_interop7executeERK9primitiveRK6streamRKNSt13unordered_mapIi6memoryEERKNSt6vectorIN2cl4sycl5eventEEE", "dnnl::sycl_interop::execute"], [159, 4, 1, "_CPPv4N4dnnl12sycl_interop7executeERK9primitiveRK6streamRKNSt13unordered_mapIi6memoryEERKNSt6vectorIN2cl4sycl5eventEEE", "dnnl::sycl_interop::execute::aprimitive"], [159, 4, 1, "_CPPv4N4dnnl12sycl_interop7executeERK9primitiveRK6streamRKNSt13unordered_mapIi6memoryEERKNSt6vectorIN2cl4sycl5eventEEE", "dnnl::sycl_interop::execute::args"], [159, 4, 1, "_CPPv4N4dnnl12sycl_interop7executeERK9primitiveRK6streamRKNSt13unordered_mapIi6memoryEERKNSt6vectorIN2cl4sycl5eventEEE", "dnnl::sycl_interop::execute::astream"], [159, 4, 1, "_CPPv4N4dnnl12sycl_interop7executeERK9primitiveRK6streamRKNSt13unordered_mapIi6memoryEERKNSt6vectorIN2cl4sycl5eventEEE", "dnnl::sycl_interop::execute::dependencies"], [60, 3, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10get_bufferEN2cl4sycl6bufferI1T5ndimsEERK6memory", "dnnl::sycl_interop::get_buffer"], [60, 8, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10get_bufferEN2cl4sycl6bufferI1T5ndimsEERK6memory", "dnnl::sycl_interop::get_buffer::T"], [60, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10get_bufferEN2cl4sycl6bufferI1T5ndimsEERK6memory", "dnnl::sycl_interop::get_buffer::amemory"], [60, 8, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10get_bufferEN2cl4sycl6bufferI1T5ndimsEERK6memory", "dnnl::sycl_interop::get_buffer::ndims"], [61, 3, 1, "_CPPv4N4dnnl12sycl_interop11get_contextERK6engine", "dnnl::sycl_interop::get_context"], [61, 4, 1, "_CPPv4N4dnnl12sycl_interop11get_contextERK6engine", "dnnl::sycl_interop::get_context::aengine"], [61, 3, 1, "_CPPv4N4dnnl12sycl_interop10get_deviceERK6engine", "dnnl::sycl_interop::get_device"], [61, 4, 1, "_CPPv4N4dnnl12sycl_interop10get_deviceERK6engine", "dnnl::sycl_interop::get_device::aengine"], [60, 3, 1, "_CPPv4N4dnnl12sycl_interop15get_memory_kindERK6memory", "dnnl::sycl_interop::get_memory_kind"], [60, 4, 1, "_CPPv4N4dnnl12sycl_interop15get_memory_kindERK6memory", "dnnl::sycl_interop::get_memory_kind::amemory"], [61, 3, 1, "_CPPv4N4dnnl12sycl_interop9get_queueERK6stream", "dnnl::sycl_interop::get_queue"], [61, 4, 1, "_CPPv4N4dnnl12sycl_interop9get_queueERK6stream", "dnnl::sycl_interop::get_queue::astream"], [61, 3, 1, "_CPPv4N4dnnl12sycl_interop11make_engineERKN2cl4sycl6deviceERKN2cl4sycl7contextE", "dnnl::sycl_interop::make_engine"], [61, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_engineERKN2cl4sycl6deviceERKN2cl4sycl7contextE", "dnnl::sycl_interop::make_engine::acontext"], [61, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_engineERKN2cl4sycl6deviceERKN2cl4sycl7contextE", "dnnl::sycl_interop::make_engine::adevice"], [60, 3, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6engineN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory"], [60, 3, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6streamN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory"], [60, 3, 1, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6engine11memory_kindPv", "dnnl::sycl_interop::make_memory"], [60, 3, 1, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6stream11memory_kindPv", "dnnl::sycl_interop::make_memory"], [60, 8, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6engineN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory::T"], [60, 8, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6streamN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory::T"], [60, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6engineN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory::abuffer"], [60, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6streamN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory::abuffer"], [60, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6engineN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory::adesc"], [60, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6streamN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory::adesc"], [60, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6engine11memory_kindPv", "dnnl::sycl_interop::make_memory::adesc"], [60, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6stream11memory_kindPv", "dnnl::sycl_interop::make_memory::adesc"], [60, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6engineN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory::aengine"], [60, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6engine11memory_kindPv", "dnnl::sycl_interop::make_memory::aengine"], [60, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6engine11memory_kindPv", "dnnl::sycl_interop::make_memory::ahandle"], [60, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6stream11memory_kindPv", "dnnl::sycl_interop::make_memory::ahandle"], [60, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6engine11memory_kindPv", "dnnl::sycl_interop::make_memory::akind"], [60, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6stream11memory_kindPv", "dnnl::sycl_interop::make_memory::akind"], [60, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6streamN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory::astream"], [60, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6stream11memory_kindPv", "dnnl::sycl_interop::make_memory::astream"], [60, 8, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6engineN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory::ndims"], [60, 8, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6streamN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory::ndims"], [61, 3, 1, "_CPPv4N4dnnl12sycl_interop11make_streamERK6engineRN2cl4sycl5queueE", "dnnl::sycl_interop::make_stream"], [61, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_streamERK6engineRN2cl4sycl5queueE", "dnnl::sycl_interop::make_stream::aengine"], [61, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_streamERK6engineRN2cl4sycl5queueE", "dnnl::sycl_interop::make_stream::aqueue"], [60, 9, 1, "_CPPv4N4dnnl12sycl_interop11memory_kindE", "dnnl::sycl_interop::memory_kind"], [60, 10, 1, "_CPPv4N4dnnl12sycl_interop11memory_kind6bufferE", "dnnl::sycl_interop::memory_kind::buffer"], [60, 10, 1, "_CPPv4N4dnnl12sycl_interop11memory_kind3usmE", "dnnl::sycl_interop::memory_kind::usm"], [60, 3, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::set_buffer"], [60, 3, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEER6stream", "dnnl::sycl_interop::set_buffer"], [60, 8, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::set_buffer::T"], [60, 8, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEER6stream", "dnnl::sycl_interop::set_buffer::T"], [60, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::set_buffer::abuffer"], [60, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEER6stream", "dnnl::sycl_interop::set_buffer::abuffer"], [60, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::set_buffer::amemory"], [60, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEER6stream", "dnnl::sycl_interop::set_buffer::amemory"], [60, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEER6stream", "dnnl::sycl_interop::set_buffer::astream"], [60, 8, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::set_buffer::ndims"], [60, 8, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEER6stream", "dnnl::sycl_interop::set_buffer::ndims"], [170, 7, 1, "_CPPv4N4dnnl20vanilla_rnn_backwardE", "dnnl::vanilla_rnn_backward"], [170, 7, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_descE", "dnnl::vanilla_rnn_backward::primitive_desc"], [170, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc9bias_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::bias_desc"], [170, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc14diff_bias_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::diff_bias_desc"], [170, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc18diff_dst_iter_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::diff_dst_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc19diff_dst_layer_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::diff_dst_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc18diff_src_iter_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::diff_src_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc19diff_src_layer_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::diff_src_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc22diff_weights_iter_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::diff_weights_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc23diff_weights_layer_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::diff_weights_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc13dst_iter_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::dst_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc14dst_layer_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::dst_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc19get_activation_kindEv", "dnnl::vanilla_rnn_backward::primitive_desc::get_activation_kind"], [170, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc9get_alphaEv", "dnnl::vanilla_rnn_backward::primitive_desc::get_alpha"], [170, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc8get_betaEv", "dnnl::vanilla_rnn_backward::primitive_desc::get_beta"], [170, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc13get_cell_kindEv", "dnnl::vanilla_rnn_backward::primitive_desc::get_cell_kind"], [170, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc13get_directionEv", "dnnl::vanilla_rnn_backward::primitive_desc::get_direction"], [170, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc13get_prop_kindEv", "dnnl::vanilla_rnn_backward::primitive_desc::get_prop_kind"], [170, 3, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc"], [170, 3, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc"], [170, 3, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::activation"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::activation"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::aengine"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::aengine"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::allow_empty"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::allow_empty"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::alpha"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::aprop_kind"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::aprop_kind"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::attr"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::attr"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::bias_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::bias_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_bias_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_bias_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_dst_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_dst_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_dst_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_dst_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_src_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_src_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_src_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_src_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_weights_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_weights_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_weights_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_weights_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::direction"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::direction"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::dst_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::dst_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::dst_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::dst_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::src_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::src_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::src_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::src_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::weights_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::weights_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::weights_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::weights_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc13src_iter_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::src_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc14src_layer_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::src_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc17weights_iter_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::weights_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc18weights_layer_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::weights_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc14workspace_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::workspace_desc"], [170, 3, 1, "_CPPv4N4dnnl20vanilla_rnn_backward20vanilla_rnn_backwardERK14primitive_desc", "dnnl::vanilla_rnn_backward::vanilla_rnn_backward"], [170, 3, 1, "_CPPv4N4dnnl20vanilla_rnn_backward20vanilla_rnn_backwardEv", "dnnl::vanilla_rnn_backward::vanilla_rnn_backward"], [170, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward20vanilla_rnn_backwardERK14primitive_desc", "dnnl::vanilla_rnn_backward::vanilla_rnn_backward::pd"], [170, 7, 1, "_CPPv4N4dnnl19vanilla_rnn_forwardE", "dnnl::vanilla_rnn_forward"], [170, 7, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_descE", "dnnl::vanilla_rnn_forward::primitive_desc"], [170, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc9bias_descEv", "dnnl::vanilla_rnn_forward::primitive_desc::bias_desc"], [170, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc13dst_iter_descEv", "dnnl::vanilla_rnn_forward::primitive_desc::dst_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc14dst_layer_descEv", "dnnl::vanilla_rnn_forward::primitive_desc::dst_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc19get_activation_kindEv", "dnnl::vanilla_rnn_forward::primitive_desc::get_activation_kind"], [170, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc9get_alphaEv", "dnnl::vanilla_rnn_forward::primitive_desc::get_alpha"], [170, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc8get_betaEv", "dnnl::vanilla_rnn_forward::primitive_desc::get_beta"], [170, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc13get_cell_kindEv", "dnnl::vanilla_rnn_forward::primitive_desc::get_cell_kind"], [170, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc13get_directionEv", "dnnl::vanilla_rnn_forward::primitive_desc::get_direction"], [170, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc13get_prop_kindEv", "dnnl::vanilla_rnn_forward::primitive_desc::get_prop_kind"], [170, 3, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc"], [170, 3, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc"], [170, 3, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descEv", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::activation"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::activation"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::aengine"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::aengine"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::allow_empty"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::allow_empty"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::alpha"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::aprop_kind"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::aprop_kind"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::attr"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::attr"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::bias_desc"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::bias_desc"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::direction"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::direction"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::dst_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::dst_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::dst_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::dst_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::src_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::src_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::src_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::src_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::weights_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::weights_iter_desc"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::weights_layer_desc"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::weights_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc13src_iter_descEv", "dnnl::vanilla_rnn_forward::primitive_desc::src_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc14src_layer_descEv", "dnnl::vanilla_rnn_forward::primitive_desc::src_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc17weights_iter_descEv", "dnnl::vanilla_rnn_forward::primitive_desc::weights_iter_desc"], [170, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc18weights_layer_descEv", "dnnl::vanilla_rnn_forward::primitive_desc::weights_layer_desc"], [170, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc14workspace_descEv", "dnnl::vanilla_rnn_forward::primitive_desc::workspace_desc"], [170, 3, 1, "_CPPv4N4dnnl19vanilla_rnn_forward19vanilla_rnn_forwardERK14primitive_desc", "dnnl::vanilla_rnn_forward::vanilla_rnn_forward"], [170, 3, 1, "_CPPv4N4dnnl19vanilla_rnn_forward19vanilla_rnn_forwardEv", "dnnl::vanilla_rnn_forward::vanilla_rnn_forward"], [170, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward19vanilla_rnn_forwardERK14primitive_desc", "dnnl::vanilla_rnn_forward::vanilla_rnn_forward::pd"], [788, 3, 1, "_CPPv411do_allocate6size_t6size_t", "do_allocate"], [788, 4, 1, "_CPPv411do_allocate6size_t6size_t", "do_allocate::alignment"], [788, 4, 1, "_CPPv411do_allocate6size_t6size_t", "do_allocate::n"], [788, 3, 1, "_CPPv413do_deallocatePv6size_t6size_t", "do_deallocate"], [788, 4, 1, "_CPPv413do_deallocatePv6size_t6size_t", "do_deallocate::alignment"], [788, 4, 1, "_CPPv413do_deallocatePv6size_t6size_t", "do_deallocate::n"], [788, 4, 1, "_CPPv413do_deallocatePv6size_t6size_t", "do_deallocate::p"], [788, 3, 1, "_CPPv4NK11do_is_equalERKNSt3pmr15memory_resourceE", "do_is_equal"], [788, 4, 1, "_CPPv4NK11do_is_equalERKNSt3pmr15memory_resourceE", "do_is_equal::other"], [553, 3, 1, "_CPPv4NK5emptyEv", "empty"], [553, 3, 1, "_CPPv4NK3endEv", "end"], [844, 3, 1, "_CPPv47enqueueRR11task_handle", "enqueue"], [844, 3, 1, "_CPPv4I_1FE7enqueuevRR1F", "enqueue"], [844, 4, 1, "_CPPv4I_1FE7enqueuevRR1F", "enqueue::f"], [844, 4, 1, "_CPPv47enqueueRR11task_handle", "enqueue::h"], [852, 9, 1, "_CPPv4N18ets_key_usage_type20ets_key_per_instanceE", "ets_key_usage_type::ets_key_per_instance"], [852, 9, 1, "_CPPv4N18ets_key_usage_type10ets_no_keyE", "ets_key_usage_type::ets_no_key"], [852, 9, 1, "_CPPv4N18ets_key_usage_type17ets_suspend_awareE", "ets_key_usage_type::ets_suspend_aware"], [757, 3, 1, "_CPPv416exception_thrownv", "exception_thrown"], [844, 3, 1, "_CPPv4I_1FE7executeDTcl1fEERR1F", "execute"], [844, 4, 1, "_CPPv4I_1FE7executeDTcl1fEERR1F", "execute::f"], [562, 3, 1, "_CPPv46filterv", "filter"], [562, 3, 1, "_CPPv4I0E6filter11filter_modeRK4Body", "filter"], [562, 8, 1, "_CPPv4I0E6filter11filter_modeRK4Body", "filter::Body"], [562, 4, 1, "_CPPv4I0E6filter11filter_modeRK4Body", "filter::body"], [562, 4, 1, "_CPPv4I0E6filter11filter_modeRK4Body", "filter::mode"], [843, 3, 1, "_CPPv48finalizeR21task_scheduler_handle", "finalize"], [843, 3, 1, "_CPPv48finalizeR21task_scheduler_handleRKNSt9nothrow_tE", "finalize"], [843, 4, 1, "_CPPv48finalizeR21task_scheduler_handle", "finalize::handle"], [843, 4, 1, "_CPPv48finalizeR21task_scheduler_handleRKNSt9nothrow_tE", "finalize::handle"], [840, 3, 1, "_CPPv414global_control9parameter6size_t", "global_control"], [840, 4, 1, "_CPPv414global_control9parameter6size_t", "global_control::param"], [840, 4, 1, "_CPPv414global_control9parameter6size_t", "global_control::value"], [553, 3, 1, "_CPPv4NK9grainsizeEv", "grainsize"], [757, 3, 1, "_CPPv45graphR18task_group_context", "graph"], [757, 4, 1, "_CPPv45graphR18task_group_context", "graph::context"], [744, 3, 1, "_CPPv410initializeN10task_arena6attachE", "initialize"], [844, 3, 1, "_CPPv410initialize11constraintsj8priority", "initialize"], [844, 3, 1, "_CPPv410initializeN6oneapi3tbb6attachE", "initialize"], [844, 3, 1, "_CPPv410initializeij8priority", "initialize"], [844, 3, 1, "_CPPv410initializev", "initialize"], [844, 4, 1, "_CPPv410initialize11constraintsj8priority", "initialize::a_constraints"], [844, 4, 1, "_CPPv410initialize11constraintsj8priority", "initialize::a_priority"], [844, 4, 1, "_CPPv410initializeij8priority", "initialize::a_priority"], [844, 4, 1, "_CPPv410initializeij8priority", "initialize::max_concurrency"], [844, 4, 1, "_CPPv410initialize11constraintsj8priority", "initialize::reserved_for_masters"], [844, 4, 1, "_CPPv410initializeij8priority", "initialize::reserved_for_masters"], [760, 3, 1, "_CPPv410input_nodeRK10input_node", "input_node"], [760, 3, 1, "_CPPv4I0E10input_nodeR5graph4Body", "input_node"], [760, 8, 1, "_CPPv4I0E10input_nodeR5graph4Body", "input_node::Body"], [760, 4, 1, "_CPPv4I0E10input_nodeR5graph4Body", "input_node::body"], [760, 4, 1, "_CPPv4I0E10input_nodeR5graph4Body", "input_node::g"], [760, 4, 1, "_CPPv410input_nodeRK10input_node", "input_node::src"], [749, 3, 1, "_CPPv411input_portsv", "input_ports"], [780, 3, 1, "_CPPv4I0ENK4is_aEbv", "is_a"], [780, 8, 1, "_CPPv4I0ENK4is_aEbv", "is_a::V"], [844, 3, 1, "_CPPv4NK9is_activeEv", "is_active"], [757, 3, 1, "_CPPv412is_cancelledv", "is_cancelled"], [553, 3, 1, "_CPPv4NK12is_divisibleEv", "is_divisible"], [568, 3, 1, "_CPPv413is_final_scanv", "is_final_scan"], [842, 3, 1, "_CPPv4NK28is_group_execution_cancelledEv", "is_group_execution_cancelled"], [845, 3, 1, "_CPPv4NK12is_observingEv", "is_observing"], [842, 9, 1, "_CPPv4N6kind_t5boundE", "kind_t::bound"], [842, 9, 1, "_CPPv4N6kind_t8isolatedE", "kind_t::isolated"], [573, 3, 1, "_CPPv4NK4leftEv", "left"], [794, 3, 1, "_CPPv44lockv", "lock"], [562, 3, 1, "_CPPv4I000E11make_filter6filterI1T1UEN6filter4modeERK4Func", "make_filter"], [562, 8, 1, "_CPPv4I000E11make_filter6filterI1T1UEN6filter4modeERK4Func", "make_filter::Func"], [562, 8, 1, "_CPPv4I000E11make_filter6filterI1T1UEN6filter4modeERK4Func", "make_filter::T"], [562, 8, 1, "_CPPv4I000E11make_filter6filterI1T1UEN6filter4modeERK4Func", "make_filter::U"], [562, 4, 1, "_CPPv4I000E11make_filter6filterI1T1UEN6filter4modeERK4Func", "make_filter::f"], [562, 4, 1, "_CPPv4I000E11make_filter6filterI1T1UEN6filter4modeERK4Func", "make_filter::mode"], [844, 3, 1, "_CPPv4NK15max_concurrencyEv", "max_concurrency"], [787, 3, 1, "_CPPv4NK8max_sizeEv", "max_size"], [829, 6, 1, "_CPPv4N10mutex_func1M13is_fair_mutexE", "mutex_func::M::is_fair_mutex"], [829, 6, 1, "_CPPv4N10mutex_func1M18is_recursive_mutexE", "mutex_func::M::is_recursive_mutex"], [829, 6, 1, "_CPPv4N10mutex_func1M11is_rw_mutexE", "mutex_func::M::is_rw_mutex"], [829, 3, 1, "_CPPv4N10mutex_func1M11scoped_lockER1M", "mutex_func::M::scoped_lock"], [829, 3, 1, "_CPPv4N10mutex_func1M11scoped_lockEv", "mutex_func::M::scoped_lock"], [829, 3, 1, "_CPPv4N10mutex_func1M11scoped_lock7acquireER1M", "mutex_func::M::scoped_lock::acquire"], [829, 3, 1, "_CPPv4N10mutex_func1M11scoped_lock7releaseEv", "mutex_func::M::scoped_lock::release"], [829, 3, 1, "_CPPv4N10mutex_func1M11scoped_lock11try_acquireER1M", "mutex_func::M::scoped_lock::try_acquire"], [829, 3, 1, "_CPPv4N10mutex_func1MD0Ev", "mutex_func::M::~scoped_lock"], [829, 5, 1, "_CPPv4N10mutex_type1M11scoped_lockE", "mutex_type::M::scoped_lock"], [844, 6, 1, "_CPPv415not_initialized", "not_initialized"], [794, 3, 1, "_CPPv410null_mutexv", "null_mutex"], [783, 3, 1, "_CPPv410numa_nodesv", "numa_nodes"], [845, 3, 1, "_CPPv47observeb", "observe"], [845, 4, 1, "_CPPv47observeb", "observe::state"], [845, 3, 1, "_CPPv418on_scheduler_entryb", "on_scheduler_entry"], [845, 4, 1, "_CPPv418on_scheduler_entryb", "on_scheduler_entry::is_worker"], [845, 3, 1, "_CPPv417on_scheduler_exitb", "on_scheduler_exit"], [845, 4, 1, "_CPPv417on_scheduler_exitb", "on_scheduler_exit::is_worker"], [37, 7, 1, "_CPPv4I0EN6oneapi3dal5arrayE", "oneapi::dal::array"], [37, 8, 1, "_CPPv4I0EN6oneapi3dal5arrayE", "oneapi::dal::array::Data"], [37, 3, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::array"], [37, 3, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERKN4sycl5queueEP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::array"], [37, 3, 1, "_CPPv4N6oneapi3dal5array5arrayERK5arrayI4DataE", "oneapi::dal::array::array"], [37, 3, 1, "_CPPv4N6oneapi3dal5array5arrayERR5arrayI4DataE", "oneapi::dal::array::array"], [37, 3, 1, "_CPPv4N6oneapi3dal5array5arrayEv", "oneapi::dal::array::array"], [37, 8, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERKN4sycl5queueEP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::array::Deleter"], [37, 8, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::array::ExtData"], [37, 8, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERKN4sycl5queueEP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::array::ExtData"], [37, 8, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::array::RefData"], [37, 4, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::array::count"], [37, 4, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERKN4sycl5queueEP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::array::count"], [37, 4, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::array::data"], [37, 4, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERKN4sycl5queueEP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::array::data"], [37, 4, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERKN4sycl5queueEP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::array::deleter"], [37, 4, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERKN4sycl5queueEP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::array::dependencies"], [37, 4, 1, "_CPPv4N6oneapi3dal5array5arrayERK5arrayI4DataE", "oneapi::dal::array::array::other"], [37, 4, 1, "_CPPv4N6oneapi3dal5array5arrayERR5arrayI4DataE", "oneapi::dal::array::array::other"], [37, 4, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERKN4sycl5queueEP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::array::queue"], [37, 4, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::array::ref"], [37, 3, 1, "_CPPv4N6oneapi3dal5array5emptyERKN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::empty"], [37, 4, 1, "_CPPv4N6oneapi3dal5array5emptyERKN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::empty::alloc"], [37, 4, 1, "_CPPv4N6oneapi3dal5array5emptyERKN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::empty::count"], [37, 4, 1, "_CPPv4N6oneapi3dal5array5emptyERKN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::empty::queue"], [37, 3, 1, "_CPPv4I0EN6oneapi3dal5array4fullE5arrayI4DataERN4sycl5queueENSt7int64_tERR7ElementRKN4sycl3usm5allocE", "oneapi::dal::array::full"], [37, 8, 1, "_CPPv4I0EN6oneapi3dal5array4fullE5arrayI4DataERN4sycl5queueENSt7int64_tERR7ElementRKN4sycl3usm5allocE", "oneapi::dal::array::full::Element"], [37, 4, 1, "_CPPv4I0EN6oneapi3dal5array4fullE5arrayI4DataERN4sycl5queueENSt7int64_tERR7ElementRKN4sycl3usm5allocE", "oneapi::dal::array::full::alloc"], [37, 4, 1, "_CPPv4I0EN6oneapi3dal5array4fullE5arrayI4DataERN4sycl5queueENSt7int64_tERR7ElementRKN4sycl3usm5allocE", "oneapi::dal::array::full::count"], [37, 4, 1, "_CPPv4I0EN6oneapi3dal5array4fullE5arrayI4DataERN4sycl5queueENSt7int64_tERR7ElementRKN4sycl3usm5allocE", "oneapi::dal::array::full::element"], [37, 4, 1, "_CPPv4I0EN6oneapi3dal5array4fullE5arrayI4DataERN4sycl5queueENSt7int64_tERR7ElementRKN4sycl3usm5allocE", "oneapi::dal::array::full::queue"], [37, 3, 1, "_CPPv4NK6oneapi3dal5array9get_countEv", "oneapi::dal::array::get_count"], [37, 3, 1, "_CPPv4NK6oneapi3dal5array8get_dataEv", "oneapi::dal::array::get_data"], [37, 3, 1, "_CPPv4NK6oneapi3dal5array16get_mutable_dataEv", "oneapi::dal::array::get_mutable_data"], [37, 3, 1, "_CPPv4NK6oneapi3dal5array8get_sizeEv", "oneapi::dal::array::get_size"], [37, 3, 1, "_CPPv4NK6oneapi3dal5array16has_mutable_dataEv", "oneapi::dal::array::has_mutable_data"], [37, 3, 1, "_CPPv4N6oneapi3dal5array17need_mutable_dataERN4sycl5queueERKN4sycl3usm5allocE", "oneapi::dal::array::need_mutable_data"], [37, 4, 1, "_CPPv4N6oneapi3dal5array17need_mutable_dataERN4sycl5queueERKN4sycl3usm5allocE", "oneapi::dal::array::need_mutable_data::alloc"], [37, 4, 1, "_CPPv4N6oneapi3dal5array17need_mutable_dataERN4sycl5queueERKN4sycl3usm5allocE", "oneapi::dal::array::need_mutable_data::queue"], [37, 3, 1, "_CPPv4N6oneapi3dal5arrayaSERK5arrayI4DataE", "oneapi::dal::array::operator="], [37, 3, 1, "_CPPv4N6oneapi3dal5arrayaSERR5arrayI4DataE", "oneapi::dal::array::operator="], [37, 4, 1, "_CPPv4N6oneapi3dal5arrayaSERK5arrayI4DataE", "oneapi::dal::array::operator=::other"], [37, 4, 1, "_CPPv4N6oneapi3dal5arrayaSERR5arrayI4DataE", "oneapi::dal::array::operator=::other"], [37, 3, 1, "_CPPv4NK6oneapi3dal5arrayixENSt7int64_tE", "oneapi::dal::array::operator[]"], [37, 4, 1, "_CPPv4NK6oneapi3dal5arrayixENSt7int64_tE", "oneapi::dal::array::operator[]::index"], [37, 3, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::reset"], [37, 3, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvRK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::reset"], [37, 3, 1, "_CPPv4N6oneapi3dal5array5resetERKN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::reset"], [37, 3, 1, "_CPPv4N6oneapi3dal5array5resetEv", "oneapi::dal::array::reset"], [37, 8, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::reset::Deleter"], [37, 8, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::reset::ExtData"], [37, 8, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvRK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::reset::ExtData"], [37, 8, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvRK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::reset::RefData"], [37, 4, 1, "_CPPv4N6oneapi3dal5array5resetERKN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::reset::alloc"], [37, 4, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::reset::count"], [37, 4, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvRK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::reset::count"], [37, 4, 1, "_CPPv4N6oneapi3dal5array5resetERKN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::reset::count"], [37, 4, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::reset::data"], [37, 4, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvRK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::reset::data"], [37, 4, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::reset::deleter"], [37, 4, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::reset::dependencies"], [37, 4, 1, "_CPPv4N6oneapi3dal5array5resetERKN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::reset::queue"], [37, 4, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvRK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::reset::ref"], [37, 3, 1, "_CPPv4I0EN6oneapi3dal5array4wrapE5arrayI4DataEP7ExtDataNSt7int64_tERKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::wrap"], [37, 8, 1, "_CPPv4I0EN6oneapi3dal5array4wrapE5arrayI4DataEP7ExtDataNSt7int64_tERKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::wrap::ExtData"], [37, 4, 1, "_CPPv4I0EN6oneapi3dal5array4wrapE5arrayI4DataEP7ExtDataNSt7int64_tERKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::wrap::count"], [37, 4, 1, "_CPPv4I0EN6oneapi3dal5array4wrapE5arrayI4DataEP7ExtDataNSt7int64_tERKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::wrap::data"], [37, 4, 1, "_CPPv4I0EN6oneapi3dal5array4wrapE5arrayI4DataEP7ExtDataNSt7int64_tERKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::wrap::dependencies"], [37, 3, 1, "_CPPv4N6oneapi3dal5array5zerosERN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::zeros"], [37, 4, 1, "_CPPv4N6oneapi3dal5array5zerosERN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::zeros::alloc"], [37, 4, 1, "_CPPv4N6oneapi3dal5array5zerosERN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::zeros::count"], [37, 4, 1, "_CPPv4N6oneapi3dal5array5zerosERN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::zeros::queue"], [34, 7, 1, "_CPPv4I0EN6oneapi3dal15column_accessorE", "oneapi::dal::column_accessor"], [34, 8, 1, "_CPPv4I0EN6oneapi3dal15column_accessorE", "oneapi::dal::column_accessor::Data"], [34, 3, 1, "_CPPv4N6oneapi3dal15column_accessor15column_accessorERK5table", "oneapi::dal::column_accessor::column_accessor"], [34, 4, 1, "_CPPv4N6oneapi3dal15column_accessor15column_accessorERK5table", "oneapi::dal::column_accessor::column_accessor::obj"], [34, 3, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull"], [34, 3, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueER5arrayI6data_tENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull"], [34, 4, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull::alloc"], [34, 4, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueER5arrayI6data_tENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull::alloc"], [34, 4, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueER5arrayI6data_tENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull::block"], [34, 4, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull::column_index"], [34, 4, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueER5arrayI6data_tENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull::column_index"], [34, 4, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull::queue"], [34, 4, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueER5arrayI6data_tENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull::queue"], [34, 4, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull::rows"], [34, 4, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueER5arrayI6data_tENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull::rows"], [38, 7, 1, "_CPPv4N6oneapi3dal3csv11data_sourceE", "oneapi::dal::csv::data_source"], [38, 3, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceEPKcc12read_options", "oneapi::dal::csv::data_source::data_source"], [38, 3, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceERKNSt6stringEc12read_options", "oneapi::dal::csv::data_source::data_source"], [38, 4, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceEPKcc12read_options", "oneapi::dal::csv::data_source::data_source::delimiter"], [38, 4, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceERKNSt6stringEc12read_options", "oneapi::dal::csv::data_source::data_source::delimiter"], [38, 4, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceEPKcc12read_options", "oneapi::dal::csv::data_source::data_source::file_name"], [38, 4, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceERKNSt6stringEc12read_options", "oneapi::dal::csv::data_source::data_source::file_name"], [38, 4, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceEPKcc12read_options", "oneapi::dal::csv::data_source::data_source::opts"], [38, 4, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceERKNSt6stringEc12read_options", "oneapi::dal::csv::data_source::data_source::opts"], [38, 6, 1, "_CPPv4N6oneapi3dal3csv11data_source9delimiterE", "oneapi::dal::csv::data_source::delimiter"], [38, 6, 1, "_CPPv4N6oneapi3dal3csv11data_source9file_nameE", "oneapi::dal::csv::data_source::file_name"], [38, 6, 1, "_CPPv4N6oneapi3dal3csv11data_source7optionsE", "oneapi::dal::csv::data_source::options"], [38, 7, 1, "_CPPv4I0EN6oneapi3dal3csv9read_argsE", "oneapi::dal::csv::read_args"], [38, 8, 1, "_CPPv4I0EN6oneapi3dal3csv9read_argsE", "oneapi::dal::csv::read_args::Object"], [38, 3, 1, "_CPPv4N6oneapi3dal3csv9read_args9read_argsEv", "oneapi::dal::csv::read_args::read_args"], [42, 9, 1, "_CPPv4N6oneapi3dal11data_layoutE", "oneapi::dal::data_layout"], [29, 9, 1, "_CPPv4N6oneapi3dal9data_typeE", "oneapi::dal::data_type"], [42, 9, 1, "_CPPv4N6oneapi3dal12feature_typeE", "oneapi::dal::feature_type"], [41, 7, 1, "_CPPv4N6oneapi3dal13homogen_tableE", "oneapi::dal::homogen_table"], [41, 3, 1, "_CPPv4I0ENK6oneapi3dal13homogen_table8get_dataEPK4Datav", "oneapi::dal::homogen_table::get_data"], [41, 3, 1, "_CPPv4NK6oneapi3dal13homogen_table8get_dataEv", "oneapi::dal::homogen_table::get_data"], [41, 8, 1, "_CPPv4I0ENK6oneapi3dal13homogen_table8get_dataEPK4Datav", "oneapi::dal::homogen_table::get_data::Data"], [41, 3, 1, "_CPPv4NK6oneapi3dal13homogen_table8get_kindEv", "oneapi::dal::homogen_table::get_kind"], [41, 3, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::homogen_table"], [41, 3, 1, "_CPPv4N6oneapi3dal13homogen_table13homogen_tableEv", "oneapi::dal::homogen_table::homogen_table"], [41, 8, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::homogen_table::ConstDeleter"], [41, 8, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::homogen_table::Data"], [41, 4, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::homogen_table::column_count"], [41, 4, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::homogen_table::data_deleter"], [41, 4, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::homogen_table::data_pointer"], [41, 4, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::homogen_table::dependencies"], [41, 4, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::homogen_table::layout"], [41, 4, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::homogen_table::queue"], [41, 4, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::homogen_table::row_count"], [41, 3, 1, "_CPPv4N6oneapi3dal13homogen_table4kindEv", "oneapi::dal::homogen_table::kind"], [41, 3, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::wrap"], [41, 8, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::wrap::Data"], [41, 4, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::wrap::column_count"], [41, 4, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::wrap::data_pointer"], [41, 4, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::wrap::dependencies"], [41, 4, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::wrap::layout"], [41, 4, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::wrap::queue"], [41, 4, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::wrap::row_count"], [19, 7, 1, "_CPPv4I000EN6oneapi3dal6kmeans10descriptorE", "oneapi::dal::kmeans::descriptor"], [19, 8, 1, "_CPPv4I000EN6oneapi3dal6kmeans10descriptorE", "oneapi::dal::kmeans::descriptor::Float"], [19, 8, 1, "_CPPv4I000EN6oneapi3dal6kmeans10descriptorE", "oneapi::dal::kmeans::descriptor::Method"], [19, 8, 1, "_CPPv4I000EN6oneapi3dal6kmeans10descriptorE", "oneapi::dal::kmeans::descriptor::Task"], [19, 6, 1, "_CPPv4N6oneapi3dal6kmeans10descriptor18accuracy_thresholdE", "oneapi::dal::kmeans::descriptor::accuracy_threshold"], [19, 6, 1, "_CPPv4N6oneapi3dal6kmeans10descriptor13cluster_countE", "oneapi::dal::kmeans::descriptor::cluster_count"], [19, 3, 1, "_CPPv4N6oneapi3dal6kmeans10descriptor10descriptorENSt7int64_tE", "oneapi::dal::kmeans::descriptor::descriptor"], [19, 4, 1, "_CPPv4N6oneapi3dal6kmeans10descriptor10descriptorENSt7int64_tE", "oneapi::dal::kmeans::descriptor::descriptor::cluster_count"], [19, 6, 1, "_CPPv4N6oneapi3dal6kmeans10descriptor19max_iteration_countE", "oneapi::dal::kmeans::descriptor::max_iteration_count"], [19, 3, 1, "_CPPv4I000EN6oneapi3dal6kmeans5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::kmeans::infer"], [19, 8, 1, "_CPPv4I000EN6oneapi3dal6kmeans5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::kmeans::infer::Float"], [19, 8, 1, "_CPPv4I000EN6oneapi3dal6kmeans5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::kmeans::infer::Method"], [19, 8, 1, "_CPPv4I000EN6oneapi3dal6kmeans5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::kmeans::infer::Task"], [19, 4, 1, "_CPPv4I000EN6oneapi3dal6kmeans5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::kmeans::infer::desc"], [19, 4, 1, "_CPPv4I000EN6oneapi3dal6kmeans5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::kmeans::infer::input"], [19, 7, 1, "_CPPv4I0EN6oneapi3dal6kmeans11infer_inputE", "oneapi::dal::kmeans::infer_input"], [19, 8, 1, "_CPPv4I0EN6oneapi3dal6kmeans11infer_inputE", "oneapi::dal::kmeans::infer_input::Task"], [19, 6, 1, "_CPPv4N6oneapi3dal6kmeans11infer_input4dataE", "oneapi::dal::kmeans::infer_input::data"], [19, 3, 1, "_CPPv4N6oneapi3dal6kmeans11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::kmeans::infer_input::infer_input"], [19, 4, 1, "_CPPv4N6oneapi3dal6kmeans11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::kmeans::infer_input::infer_input::data"], [19, 4, 1, "_CPPv4N6oneapi3dal6kmeans11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::kmeans::infer_input::infer_input::m"], [19, 6, 1, "_CPPv4N6oneapi3dal6kmeans11infer_input5modelE", "oneapi::dal::kmeans::infer_input::model"], [19, 7, 1, "_CPPv4I0EN6oneapi3dal6kmeans12infer_resultE", "oneapi::dal::kmeans::infer_result"], [19, 8, 1, "_CPPv4I0EN6oneapi3dal6kmeans12infer_resultE", "oneapi::dal::kmeans::infer_result::Task"], [19, 3, 1, "_CPPv4NK6oneapi3dal6kmeans12infer_result10get_labelsEv", "oneapi::dal::kmeans::infer_result::get_labels"], [19, 3, 1, "_CPPv4NK6oneapi3dal6kmeans12infer_result28get_objective_function_valueEv", "oneapi::dal::kmeans::infer_result::get_objective_function_value"], [19, 3, 1, "_CPPv4N6oneapi3dal6kmeans12infer_result12infer_resultEv", "oneapi::dal::kmeans::infer_result::infer_result"], [19, 5, 1, "_CPPv4N6oneapi3dal6kmeans6method10by_defaultE", "oneapi::dal::kmeans::method::by_default"], [19, 7, 1, "_CPPv4N6oneapi3dal6kmeans6method5lloydE", "oneapi::dal::kmeans::method::lloyd"], [19, 7, 1, "_CPPv4I0EN6oneapi3dal6kmeans5modelE", "oneapi::dal::kmeans::model"], [19, 8, 1, "_CPPv4I0EN6oneapi3dal6kmeans5modelE", "oneapi::dal::kmeans::model::Task"], [19, 3, 1, "_CPPv4NK6oneapi3dal6kmeans5model13get_centroidsEv", "oneapi::dal::kmeans::model::get_centroids"], [19, 3, 1, "_CPPv4NK6oneapi3dal6kmeans5model17get_cluster_countEv", "oneapi::dal::kmeans::model::get_cluster_count"], [19, 3, 1, "_CPPv4N6oneapi3dal6kmeans5model5modelEv", "oneapi::dal::kmeans::model::model"], [19, 5, 1, "_CPPv4N6oneapi3dal6kmeans4task10by_defaultE", "oneapi::dal::kmeans::task::by_default"], [19, 7, 1, "_CPPv4N6oneapi3dal6kmeans4task10clusteringE", "oneapi::dal::kmeans::task::clustering"], [19, 3, 1, "_CPPv4I000EN6oneapi3dal6kmeans5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::kmeans::train"], [19, 8, 1, "_CPPv4I000EN6oneapi3dal6kmeans5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::kmeans::train::Float"], [19, 8, 1, "_CPPv4I000EN6oneapi3dal6kmeans5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::kmeans::train::Method"], [19, 8, 1, "_CPPv4I000EN6oneapi3dal6kmeans5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::kmeans::train::Task"], [19, 4, 1, "_CPPv4I000EN6oneapi3dal6kmeans5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::kmeans::train::desc"], [19, 4, 1, "_CPPv4I000EN6oneapi3dal6kmeans5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::kmeans::train::input"], [19, 7, 1, "_CPPv4I0EN6oneapi3dal6kmeans11train_inputE", "oneapi::dal::kmeans::train_input"], [19, 8, 1, "_CPPv4I0EN6oneapi3dal6kmeans11train_inputE", "oneapi::dal::kmeans::train_input::Task"], [19, 6, 1, "_CPPv4N6oneapi3dal6kmeans11train_input4dataE", "oneapi::dal::kmeans::train_input::data"], [19, 6, 1, "_CPPv4N6oneapi3dal6kmeans11train_input17initial_centroidsE", "oneapi::dal::kmeans::train_input::initial_centroids"], [19, 3, 1, "_CPPv4N6oneapi3dal6kmeans11train_input11train_inputERK5tableRK5table", "oneapi::dal::kmeans::train_input::train_input"], [19, 4, 1, "_CPPv4N6oneapi3dal6kmeans11train_input11train_inputERK5tableRK5table", "oneapi::dal::kmeans::train_input::train_input::data"], [19, 4, 1, "_CPPv4N6oneapi3dal6kmeans11train_input11train_inputERK5tableRK5table", "oneapi::dal::kmeans::train_input::train_input::initial_centroids"], [19, 7, 1, "_CPPv4I0EN6oneapi3dal6kmeans12train_resultE", "oneapi::dal::kmeans::train_result"], [19, 8, 1, "_CPPv4I0EN6oneapi3dal6kmeans12train_resultE", "oneapi::dal::kmeans::train_result::Task"], [19, 3, 1, "_CPPv4NK6oneapi3dal6kmeans12train_result19get_iteration_countEv", "oneapi::dal::kmeans::train_result::get_iteration_count"], [19, 3, 1, "_CPPv4NK6oneapi3dal6kmeans12train_result10get_labelsEv", "oneapi::dal::kmeans::train_result::get_labels"], [19, 3, 1, "_CPPv4NK6oneapi3dal6kmeans12train_result9get_modelEv", "oneapi::dal::kmeans::train_result::get_model"], [19, 3, 1, "_CPPv4NK6oneapi3dal6kmeans12train_result28get_objective_function_valueEv", "oneapi::dal::kmeans::train_result::get_objective_function_value"], [19, 3, 1, "_CPPv4N6oneapi3dal6kmeans12train_result12train_resultEv", "oneapi::dal::kmeans::train_result::train_result"], [20, 3, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init7computeE14compute_resultI4TaskERK10descriptorI5Float6Method4TaskERK13compute_inputI4TaskE", "oneapi::dal::kmeans_init::compute"], [20, 8, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init7computeE14compute_resultI4TaskERK10descriptorI5Float6Method4TaskERK13compute_inputI4TaskE", "oneapi::dal::kmeans_init::compute::Float"], [20, 8, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init7computeE14compute_resultI4TaskERK10descriptorI5Float6Method4TaskERK13compute_inputI4TaskE", "oneapi::dal::kmeans_init::compute::Method"], [20, 8, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init7computeE14compute_resultI4TaskERK10descriptorI5Float6Method4TaskERK13compute_inputI4TaskE", "oneapi::dal::kmeans_init::compute::Task"], [20, 4, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init7computeE14compute_resultI4TaskERK10descriptorI5Float6Method4TaskERK13compute_inputI4TaskE", "oneapi::dal::kmeans_init::compute::desc"], [20, 4, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init7computeE14compute_resultI4TaskERK10descriptorI5Float6Method4TaskERK13compute_inputI4TaskE", "oneapi::dal::kmeans_init::compute::input"], [20, 7, 1, "_CPPv4I0EN6oneapi3dal11kmeans_init13compute_inputE", "oneapi::dal::kmeans_init::compute_input"], [20, 8, 1, "_CPPv4I0EN6oneapi3dal11kmeans_init13compute_inputE", "oneapi::dal::kmeans_init::compute_input::Task"], [20, 3, 1, "_CPPv4N6oneapi3dal11kmeans_init13compute_input13compute_inputERK5table", "oneapi::dal::kmeans_init::compute_input::compute_input"], [20, 4, 1, "_CPPv4N6oneapi3dal11kmeans_init13compute_input13compute_inputERK5table", "oneapi::dal::kmeans_init::compute_input::compute_input::data"], [20, 6, 1, "_CPPv4N6oneapi3dal11kmeans_init13compute_input4dataE", "oneapi::dal::kmeans_init::compute_input::data"], [20, 7, 1, "_CPPv4I0EN6oneapi3dal11kmeans_init14compute_resultE", "oneapi::dal::kmeans_init::compute_result"], [20, 8, 1, "_CPPv4I0EN6oneapi3dal11kmeans_init14compute_resultE", "oneapi::dal::kmeans_init::compute_result::Task"], [20, 3, 1, "_CPPv4N6oneapi3dal11kmeans_init14compute_result14compute_resultEv", "oneapi::dal::kmeans_init::compute_result::compute_result"], [20, 3, 1, "_CPPv4NK6oneapi3dal11kmeans_init14compute_result13get_centroidsEv", "oneapi::dal::kmeans_init::compute_result::get_centroids"], [20, 7, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init10descriptorE", "oneapi::dal::kmeans_init::descriptor"], [20, 8, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init10descriptorE", "oneapi::dal::kmeans_init::descriptor::Float"], [20, 8, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init10descriptorE", "oneapi::dal::kmeans_init::descriptor::Method"], [20, 8, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init10descriptorE", "oneapi::dal::kmeans_init::descriptor::Task"], [20, 6, 1, "_CPPv4N6oneapi3dal11kmeans_init10descriptor13cluster_countE", "oneapi::dal::kmeans_init::descriptor::cluster_count"], [20, 3, 1, "_CPPv4N6oneapi3dal11kmeans_init10descriptor10descriptorENSt7int64_tE", "oneapi::dal::kmeans_init::descriptor::descriptor"], [20, 4, 1, "_CPPv4N6oneapi3dal11kmeans_init10descriptor10descriptorENSt7int64_tE", "oneapi::dal::kmeans_init::descriptor::descriptor::cluster_count"], [20, 5, 1, "_CPPv4N6oneapi3dal11kmeans_init6method10by_defaultE", "oneapi::dal::kmeans_init::method::by_default"], [20, 7, 1, "_CPPv4N6oneapi3dal11kmeans_init6method5denseE", "oneapi::dal::kmeans_init::method::dense"], [20, 5, 1, "_CPPv4N6oneapi3dal11kmeans_init4task10by_defaultE", "oneapi::dal::kmeans_init::task::by_default"], [20, 7, 1, "_CPPv4N6oneapi3dal11kmeans_init4task4initE", "oneapi::dal::kmeans_init::task::init"], [25, 7, 1, "_CPPv4I000EN6oneapi3dal3knn10descriptorE", "oneapi::dal::knn::descriptor"], [25, 8, 1, "_CPPv4I000EN6oneapi3dal3knn10descriptorE", "oneapi::dal::knn::descriptor::Float"], [25, 8, 1, "_CPPv4I000EN6oneapi3dal3knn10descriptorE", "oneapi::dal::knn::descriptor::Method"], [25, 8, 1, "_CPPv4I000EN6oneapi3dal3knn10descriptorE", "oneapi::dal::knn::descriptor::Task"], [25, 6, 1, "_CPPv4N6oneapi3dal3knn10descriptor11class_countE", "oneapi::dal::knn::descriptor::class_count"], [25, 3, 1, "_CPPv4N6oneapi3dal3knn10descriptor10descriptorENSt7int64_tENSt7int64_tE", "oneapi::dal::knn::descriptor::descriptor"], [25, 4, 1, "_CPPv4N6oneapi3dal3knn10descriptor10descriptorENSt7int64_tENSt7int64_tE", "oneapi::dal::knn::descriptor::descriptor::class_count"], [25, 4, 1, "_CPPv4N6oneapi3dal3knn10descriptor10descriptorENSt7int64_tENSt7int64_tE", "oneapi::dal::knn::descriptor::descriptor::neighbor_count"], [25, 6, 1, "_CPPv4N6oneapi3dal3knn10descriptor14neighbor_countE", "oneapi::dal::knn::descriptor::neighbor_count"], [25, 3, 1, "_CPPv4I000EN6oneapi3dal3knn5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::knn::infer"], [25, 8, 1, "_CPPv4I000EN6oneapi3dal3knn5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::knn::infer::Float"], [25, 8, 1, "_CPPv4I000EN6oneapi3dal3knn5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::knn::infer::Method"], [25, 8, 1, "_CPPv4I000EN6oneapi3dal3knn5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::knn::infer::Task"], [25, 4, 1, "_CPPv4I000EN6oneapi3dal3knn5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::knn::infer::desc"], [25, 4, 1, "_CPPv4I000EN6oneapi3dal3knn5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::knn::infer::input"], [25, 7, 1, "_CPPv4I0EN6oneapi3dal3knn11infer_inputE", "oneapi::dal::knn::infer_input"], [25, 8, 1, "_CPPv4I0EN6oneapi3dal3knn11infer_inputE", "oneapi::dal::knn::infer_input::Task"], [25, 6, 1, "_CPPv4N6oneapi3dal3knn11infer_input4dataE", "oneapi::dal::knn::infer_input::data"], [25, 3, 1, "_CPPv4N6oneapi3dal3knn11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::knn::infer_input::infer_input"], [25, 4, 1, "_CPPv4N6oneapi3dal3knn11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::knn::infer_input::infer_input::data"], [25, 4, 1, "_CPPv4N6oneapi3dal3knn11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::knn::infer_input::infer_input::m"], [25, 6, 1, "_CPPv4N6oneapi3dal3knn11infer_input5modelE", "oneapi::dal::knn::infer_input::model"], [25, 7, 1, "_CPPv4I0EN6oneapi3dal3knn12infer_resultE", "oneapi::dal::knn::infer_result"], [25, 8, 1, "_CPPv4I0EN6oneapi3dal3knn12infer_resultE", "oneapi::dal::knn::infer_result::Task"], [25, 3, 1, "_CPPv4NK6oneapi3dal3knn12infer_result10get_labelsEv", "oneapi::dal::knn::infer_result::get_labels"], [25, 3, 1, "_CPPv4N6oneapi3dal3knn12infer_result12infer_resultEv", "oneapi::dal::knn::infer_result::infer_result"], [25, 7, 1, "_CPPv4N6oneapi3dal3knn6method10bruteforceE", "oneapi::dal::knn::method::bruteforce"], [25, 5, 1, "_CPPv4N6oneapi3dal3knn6method10by_defaultE", "oneapi::dal::knn::method::by_default"], [25, 7, 1, "_CPPv4N6oneapi3dal3knn6method7kd_treeE", "oneapi::dal::knn::method::kd_tree"], [25, 7, 1, "_CPPv4I0EN6oneapi3dal3knn5modelE", "oneapi::dal::knn::model"], [25, 8, 1, "_CPPv4I0EN6oneapi3dal3knn5modelE", "oneapi::dal::knn::model::Task"], [25, 3, 1, "_CPPv4N6oneapi3dal3knn5model5modelEv", "oneapi::dal::knn::model::model"], [25, 5, 1, "_CPPv4N6oneapi3dal3knn4task10by_defaultE", "oneapi::dal::knn::task::by_default"], [25, 7, 1, "_CPPv4N6oneapi3dal3knn4task14classificationE", "oneapi::dal::knn::task::classification"], [25, 3, 1, "_CPPv4I000EN6oneapi3dal3knn5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::knn::train"], [25, 8, 1, "_CPPv4I000EN6oneapi3dal3knn5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::knn::train::Float"], [25, 8, 1, "_CPPv4I000EN6oneapi3dal3knn5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::knn::train::Method"], [25, 8, 1, "_CPPv4I000EN6oneapi3dal3knn5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::knn::train::Task"], [25, 4, 1, "_CPPv4I000EN6oneapi3dal3knn5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::knn::train::desc"], [25, 4, 1, "_CPPv4I000EN6oneapi3dal3knn5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::knn::train::input"], [25, 7, 1, "_CPPv4I0EN6oneapi3dal3knn11train_inputE", "oneapi::dal::knn::train_input"], [25, 8, 1, "_CPPv4I0EN6oneapi3dal3knn11train_inputE", "oneapi::dal::knn::train_input::Task"], [25, 6, 1, "_CPPv4N6oneapi3dal3knn11train_input4dataE", "oneapi::dal::knn::train_input::data"], [25, 6, 1, "_CPPv4N6oneapi3dal3knn11train_input6labelsE", "oneapi::dal::knn::train_input::labels"], [25, 3, 1, "_CPPv4N6oneapi3dal3knn11train_input11train_inputERK5tableRK5table", "oneapi::dal::knn::train_input::train_input"], [25, 4, 1, "_CPPv4N6oneapi3dal3knn11train_input11train_inputERK5tableRK5table", "oneapi::dal::knn::train_input::train_input::data"], [25, 4, 1, "_CPPv4N6oneapi3dal3knn11train_input11train_inputERK5tableRK5table", "oneapi::dal::knn::train_input::train_input::labels"], [25, 7, 1, "_CPPv4I0EN6oneapi3dal3knn12train_resultE", "oneapi::dal::knn::train_result"], [25, 8, 1, "_CPPv4I0EN6oneapi3dal3knn12train_resultE", "oneapi::dal::knn::train_result::Task"], [25, 3, 1, "_CPPv4NK6oneapi3dal3knn12train_result9get_modelEv", "oneapi::dal::knn::train_result::get_model"], [25, 3, 1, "_CPPv4N6oneapi3dal3knn12train_result12train_resultEv", "oneapi::dal::knn::train_result::train_result"], [22, 7, 1, "_CPPv4I000EN6oneapi3dal3pca10descriptorE", "oneapi::dal::pca::descriptor"], [22, 8, 1, "_CPPv4I000EN6oneapi3dal3pca10descriptorE", "oneapi::dal::pca::descriptor::Float"], [22, 8, 1, "_CPPv4I000EN6oneapi3dal3pca10descriptorE", "oneapi::dal::pca::descriptor::Method"], [22, 8, 1, "_CPPv4I000EN6oneapi3dal3pca10descriptorE", "oneapi::dal::pca::descriptor::Task"], [22, 6, 1, "_CPPv4N6oneapi3dal3pca10descriptor15component_countE", "oneapi::dal::pca::descriptor::component_count"], [22, 3, 1, "_CPPv4N6oneapi3dal3pca10descriptor10descriptorENSt7int64_tE", "oneapi::dal::pca::descriptor::descriptor"], [22, 4, 1, "_CPPv4N6oneapi3dal3pca10descriptor10descriptorENSt7int64_tE", "oneapi::dal::pca::descriptor::descriptor::component_count"], [22, 6, 1, "_CPPv4N6oneapi3dal3pca10descriptor13deterministicE", "oneapi::dal::pca::descriptor::deterministic"], [22, 3, 1, "_CPPv4I000EN6oneapi3dal3pca5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::pca::infer"], [22, 8, 1, "_CPPv4I000EN6oneapi3dal3pca5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::pca::infer::Float"], [22, 8, 1, "_CPPv4I000EN6oneapi3dal3pca5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::pca::infer::Method"], [22, 8, 1, "_CPPv4I000EN6oneapi3dal3pca5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::pca::infer::Task"], [22, 4, 1, "_CPPv4I000EN6oneapi3dal3pca5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::pca::infer::desc"], [22, 4, 1, "_CPPv4I000EN6oneapi3dal3pca5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::pca::infer::input"], [22, 7, 1, "_CPPv4I0EN6oneapi3dal3pca11infer_inputE", "oneapi::dal::pca::infer_input"], [22, 8, 1, "_CPPv4I0EN6oneapi3dal3pca11infer_inputE", "oneapi::dal::pca::infer_input::Task"], [22, 6, 1, "_CPPv4N6oneapi3dal3pca11infer_input4dataE", "oneapi::dal::pca::infer_input::data"], [22, 3, 1, "_CPPv4N6oneapi3dal3pca11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::pca::infer_input::infer_input"], [22, 4, 1, "_CPPv4N6oneapi3dal3pca11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::pca::infer_input::infer_input::data"], [22, 4, 1, "_CPPv4N6oneapi3dal3pca11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::pca::infer_input::infer_input::m"], [22, 6, 1, "_CPPv4N6oneapi3dal3pca11infer_input5modelE", "oneapi::dal::pca::infer_input::model"], [22, 7, 1, "_CPPv4I0EN6oneapi3dal3pca12infer_resultE", "oneapi::dal::pca::infer_result"], [22, 8, 1, "_CPPv4I0EN6oneapi3dal3pca12infer_resultE", "oneapi::dal::pca::infer_result::Task"], [22, 3, 1, "_CPPv4NK6oneapi3dal3pca12infer_result20get_transformed_dataEv", "oneapi::dal::pca::infer_result::get_transformed_data"], [22, 3, 1, "_CPPv4N6oneapi3dal3pca12infer_result12infer_resultEv", "oneapi::dal::pca::infer_result::infer_result"], [22, 5, 1, "_CPPv4N6oneapi3dal3pca6method10by_defaultE", "oneapi::dal::pca::method::by_default"], [22, 7, 1, "_CPPv4N6oneapi3dal3pca6method3covE", "oneapi::dal::pca::method::cov"], [22, 7, 1, "_CPPv4N6oneapi3dal3pca6method3svdE", "oneapi::dal::pca::method::svd"], [22, 7, 1, "_CPPv4I0EN6oneapi3dal3pca5modelE", "oneapi::dal::pca::model"], [22, 8, 1, "_CPPv4I0EN6oneapi3dal3pca5modelE", "oneapi::dal::pca::model::Task"], [22, 3, 1, "_CPPv4NK6oneapi3dal3pca5model19get_component_countEv", "oneapi::dal::pca::model::get_component_count"], [22, 3, 1, "_CPPv4NK6oneapi3dal3pca5model16get_eigenvectorsEv", "oneapi::dal::pca::model::get_eigenvectors"], [22, 3, 1, "_CPPv4N6oneapi3dal3pca5model5modelEv", "oneapi::dal::pca::model::model"], [22, 5, 1, "_CPPv4N6oneapi3dal3pca4task10by_defaultE", "oneapi::dal::pca::task::by_default"], [22, 7, 1, "_CPPv4N6oneapi3dal3pca4task13dim_reductionE", "oneapi::dal::pca::task::dim_reduction"], [22, 3, 1, "_CPPv4I000EN6oneapi3dal3pca5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::pca::train"], [22, 8, 1, "_CPPv4I000EN6oneapi3dal3pca5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::pca::train::Float"], [22, 8, 1, "_CPPv4I000EN6oneapi3dal3pca5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::pca::train::Method"], [22, 8, 1, "_CPPv4I000EN6oneapi3dal3pca5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::pca::train::Task"], [22, 4, 1, "_CPPv4I000EN6oneapi3dal3pca5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::pca::train::desc"], [22, 4, 1, "_CPPv4I000EN6oneapi3dal3pca5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::pca::train::input"], [22, 7, 1, "_CPPv4I0EN6oneapi3dal3pca11train_inputE", "oneapi::dal::pca::train_input"], [22, 8, 1, "_CPPv4I0EN6oneapi3dal3pca11train_inputE", "oneapi::dal::pca::train_input::Task"], [22, 6, 1, "_CPPv4N6oneapi3dal3pca11train_input4dataE", "oneapi::dal::pca::train_input::data"], [22, 3, 1, "_CPPv4N6oneapi3dal3pca11train_input11train_inputERK5table", "oneapi::dal::pca::train_input::train_input"], [22, 4, 1, "_CPPv4N6oneapi3dal3pca11train_input11train_inputERK5table", "oneapi::dal::pca::train_input::train_input::data"], [22, 7, 1, "_CPPv4I0EN6oneapi3dal3pca12train_resultE", "oneapi::dal::pca::train_result"], [22, 8, 1, "_CPPv4I0EN6oneapi3dal3pca12train_resultE", "oneapi::dal::pca::train_result::Task"], [22, 3, 1, "_CPPv4NK6oneapi3dal3pca12train_result15get_eigenvaluesEv", "oneapi::dal::pca::train_result::get_eigenvalues"], [22, 3, 1, "_CPPv4NK6oneapi3dal3pca12train_result16get_eigenvectorsEv", "oneapi::dal::pca::train_result::get_eigenvectors"], [22, 3, 1, "_CPPv4NK6oneapi3dal3pca12train_result9get_meansEv", "oneapi::dal::pca::train_result::get_means"], [22, 3, 1, "_CPPv4NK6oneapi3dal3pca12train_result9get_modelEv", "oneapi::dal::pca::train_result::get_model"], [22, 3, 1, "_CPPv4NK6oneapi3dal3pca12train_result13get_variancesEv", "oneapi::dal::pca::train_result::get_variances"], [22, 3, 1, "_CPPv4N6oneapi3dal3pca12train_result12train_resultEv", "oneapi::dal::pca::train_result::train_result"], [29, 7, 1, "_CPPv4N6oneapi3dal5rangeE", "oneapi::dal::range"], [29, 3, 1, "_CPPv4NK6oneapi3dal5range17get_element_countENSt7int64_tE", "oneapi::dal::range::get_element_count"], [29, 4, 1, "_CPPv4NK6oneapi3dal5range17get_element_countENSt7int64_tE", "oneapi::dal::range::get_element_count::max_end_index"], [29, 3, 1, "_CPPv4N6oneapi3dal5range5rangeENSt7int64_tENSt7int64_tE", "oneapi::dal::range::range"], [29, 4, 1, "_CPPv4N6oneapi3dal5range5rangeENSt7int64_tENSt7int64_tE", "oneapi::dal::range::range::end"], [29, 4, 1, "_CPPv4N6oneapi3dal5range5rangeENSt7int64_tENSt7int64_tE", "oneapi::dal::range::range::start"], [38, 3, 1, "_CPPv4I00EN6oneapi3dal4readE6ObjectRK10DataSource", "oneapi::dal::read"], [38, 8, 1, "_CPPv4I00EN6oneapi3dal4readE6ObjectRK10DataSource", "oneapi::dal::read::DataSource"], [38, 8, 1, "_CPPv4I00EN6oneapi3dal4readE6ObjectRK10DataSource", "oneapi::dal::read::Object"], [38, 4, 1, "_CPPv4I00EN6oneapi3dal4readE6ObjectRK10DataSource", "oneapi::dal::read::ds"], [35, 7, 1, "_CPPv4I0EN6oneapi3dal12row_accessorE", "oneapi::dal::row_accessor"], [35, 8, 1, "_CPPv4I0EN6oneapi3dal12row_accessorE", "oneapi::dal::row_accessor::Data"], [35, 3, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueER5arrayI6data_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::row_accessor::pull"], [35, 3, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::row_accessor::pull"], [35, 4, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueER5arrayI6data_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::row_accessor::pull::alloc"], [35, 4, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::row_accessor::pull::alloc"], [35, 4, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueER5arrayI6data_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::row_accessor::pull::block"], [35, 4, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueER5arrayI6data_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::row_accessor::pull::queue"], [35, 4, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::row_accessor::pull::queue"], [35, 4, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueER5arrayI6data_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::row_accessor::pull::rows"], [35, 4, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::row_accessor::pull::rows"], [35, 3, 1, "_CPPv4N6oneapi3dal12row_accessor12row_accessorERK5table", "oneapi::dal::row_accessor::row_accessor"], [35, 4, 1, "_CPPv4N6oneapi3dal12row_accessor12row_accessorERK5table", "oneapi::dal::row_accessor::row_accessor::obj"], [42, 7, 1, "_CPPv4N6oneapi3dal5tableE", "oneapi::dal::table"], [42, 3, 1, "_CPPv4NK6oneapi3dal5table16get_column_countEv", "oneapi::dal::table::get_column_count"], [42, 3, 1, "_CPPv4NK6oneapi3dal5table15get_data_layoutEv", "oneapi::dal::table::get_data_layout"], [42, 3, 1, "_CPPv4NK6oneapi3dal5table8get_kindEv", "oneapi::dal::table::get_kind"], [42, 3, 1, "_CPPv4NK6oneapi3dal5table12get_metadataEv", "oneapi::dal::table::get_metadata"], [42, 3, 1, "_CPPv4NK6oneapi3dal5table13get_row_countEv", "oneapi::dal::table::get_row_count"], [42, 3, 1, "_CPPv4NK6oneapi3dal5table8has_dataEv", "oneapi::dal::table::has_data"], [42, 3, 1, "_CPPv4N6oneapi3dal5tableaSERK5table", "oneapi::dal::table::operator="], [42, 3, 1, "_CPPv4N6oneapi3dal5tableaSERR5table", "oneapi::dal::table::operator="], [42, 4, 1, "_CPPv4N6oneapi3dal5tableaSERK5table", "oneapi::dal::table::operator=::other"], [42, 4, 1, "_CPPv4N6oneapi3dal5tableaSERR5table", "oneapi::dal::table::operator=::other"], [42, 3, 1, "_CPPv4N6oneapi3dal5table5tableERK5table", "oneapi::dal::table::table"], [42, 3, 1, "_CPPv4N6oneapi3dal5table5tableERR5table", "oneapi::dal::table::table"], [42, 3, 1, "_CPPv4N6oneapi3dal5table5tableEv", "oneapi::dal::table::table"], [42, 4, 1, "_CPPv4N6oneapi3dal5table5tableERK5table", "oneapi::dal::table::table::other"], [42, 4, 1, "_CPPv4N6oneapi3dal5table5tableERR5table", "oneapi::dal::table::table::other"], [42, 7, 1, "_CPPv4N6oneapi3dal14table_metadataE", "oneapi::dal::table_metadata"], [42, 3, 1, "_CPPv4NK6oneapi3dal14table_metadata13get_data_typeENSt7int64_tE", "oneapi::dal::table_metadata::get_data_type"], [42, 4, 1, "_CPPv4NK6oneapi3dal14table_metadata13get_data_typeENSt7int64_tE", "oneapi::dal::table_metadata::get_data_type::feature_index"], [42, 3, 1, "_CPPv4NK6oneapi3dal14table_metadata17get_feature_countEv", "oneapi::dal::table_metadata::get_feature_count"], [42, 3, 1, "_CPPv4NK6oneapi3dal14table_metadata16get_feature_typeENSt7int64_tE", "oneapi::dal::table_metadata::get_feature_type"], [42, 4, 1, "_CPPv4NK6oneapi3dal14table_metadata16get_feature_typeENSt7int64_tE", "oneapi::dal::table_metadata::get_feature_type::feature_index"], [42, 3, 1, "_CPPv4N6oneapi3dal14table_metadata14table_metadataERK5arrayI9data_typeERK5arrayI12feature_typeE", "oneapi::dal::table_metadata::table_metadata"], [42, 3, 1, "_CPPv4N6oneapi3dal14table_metadata14table_metadataEv", "oneapi::dal::table_metadata::table_metadata"], [42, 4, 1, "_CPPv4N6oneapi3dal14table_metadata14table_metadataERK5arrayI9data_typeERK5arrayI12feature_typeE", "oneapi::dal::table_metadata::table_metadata::dtypes"], [42, 4, 1, "_CPPv4N6oneapi3dal14table_metadata14table_metadataERK5arrayI9data_typeERK5arrayI12feature_typeE", "oneapi::dal::table_metadata::table_metadata::ftypes"], [851, 3, 1, "_CPPv4N6oneapi3tbb10combinable5clearEv", "oneapi::tbb::combinable::clear"], [851, 3, 1, "_CPPv4I0EN6oneapi3tbb10combinable10combinableE5FInit", "oneapi::tbb::combinable::combinable"], [851, 3, 1, "_CPPv4N6oneapi3tbb10combinable10combinableERK10combinable", "oneapi::tbb::combinable::combinable"], [851, 3, 1, "_CPPv4N6oneapi3tbb10combinable10combinableERR10combinable", "oneapi::tbb::combinable::combinable"], [851, 3, 1, "_CPPv4N6oneapi3tbb10combinable10combinableEv", "oneapi::tbb::combinable::combinable"], [851, 8, 1, "_CPPv4I0EN6oneapi3tbb10combinable10combinableE5FInit", "oneapi::tbb::combinable::combinable::FInit"], [851, 4, 1, "_CPPv4I0EN6oneapi3tbb10combinable10combinableE5FInit", "oneapi::tbb::combinable::combinable::finit"], [851, 4, 1, "_CPPv4N6oneapi3tbb10combinable10combinableERK10combinable", "oneapi::tbb::combinable::combinable::other"], [851, 4, 1, "_CPPv4N6oneapi3tbb10combinable10combinableERR10combinable", "oneapi::tbb::combinable::combinable::other"], [851, 3, 1, "_CPPv4I0EN6oneapi3tbb10combinable7combineE1T10BinaryFunc", "oneapi::tbb::combinable::combine"], [851, 8, 1, "_CPPv4I0EN6oneapi3tbb10combinable7combineE1T10BinaryFunc", "oneapi::tbb::combinable::combine::BinaryFunc"], [851, 4, 1, "_CPPv4I0EN6oneapi3tbb10combinable7combineE1T10BinaryFunc", "oneapi::tbb::combinable::combine::f"], [851, 3, 1, "_CPPv4I0EN6oneapi3tbb10combinable12combine_eachEv9UnaryFunc", "oneapi::tbb::combinable::combine_each"], [851, 8, 1, "_CPPv4I0EN6oneapi3tbb10combinable12combine_eachEv9UnaryFunc", "oneapi::tbb::combinable::combine_each::UnaryFunc"], [851, 4, 1, "_CPPv4I0EN6oneapi3tbb10combinable12combine_eachEv9UnaryFunc", "oneapi::tbb::combinable::combine_each::f"], [851, 3, 1, "_CPPv4N6oneapi3tbb10combinable5localERb", "oneapi::tbb::combinable::local"], [851, 3, 1, "_CPPv4N6oneapi3tbb10combinable5localEv", "oneapi::tbb::combinable::local"], [851, 4, 1, "_CPPv4N6oneapi3tbb10combinable5localERb", "oneapi::tbb::combinable::local::exists"], [851, 3, 1, "_CPPv4N6oneapi3tbb10combinableaSERK10combinable", "oneapi::tbb::combinable::operator="], [851, 3, 1, "_CPPv4N6oneapi3tbb10combinableaSERR10combinable", "oneapi::tbb::combinable::operator="], [851, 4, 1, "_CPPv4N6oneapi3tbb10combinableaSERK10combinable", "oneapi::tbb::combinable::operator=::other"], [851, 4, 1, "_CPPv4N6oneapi3tbb10combinableaSERR10combinable", "oneapi::tbb::combinable::operator=::other"], [851, 3, 1, "_CPPv4N6oneapi3tbb10combinableD0Ev", "oneapi::tbb::combinable::~combinable"], [855, 3, 1, "_CPPv4N6oneapi3tbb26enumerable_thread_specific5beginEv", "oneapi::tbb::enumerable_thread_specific::begin"], [855, 3, 1, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific5beginEv", "oneapi::tbb::enumerable_thread_specific::begin"], [853, 3, 1, "_CPPv4I0EN6oneapi3tbb26enumerable_thread_specific7combineE1T10BinaryFunc", "oneapi::tbb::enumerable_thread_specific::combine"], [853, 8, 1, "_CPPv4I0EN6oneapi3tbb26enumerable_thread_specific7combineE1T10BinaryFunc", "oneapi::tbb::enumerable_thread_specific::combine::BinaryFunc"], [853, 4, 1, "_CPPv4I0EN6oneapi3tbb26enumerable_thread_specific7combineE1T10BinaryFunc", "oneapi::tbb::enumerable_thread_specific::combine::f"], [853, 3, 1, "_CPPv4I0EN6oneapi3tbb26enumerable_thread_specific12combine_eachEv9UnaryFunc", "oneapi::tbb::enumerable_thread_specific::combine_each"], [853, 8, 1, "_CPPv4I0EN6oneapi3tbb26enumerable_thread_specific12combine_eachEv9UnaryFunc", "oneapi::tbb::enumerable_thread_specific::combine_each::UnaryFunc"], [853, 4, 1, "_CPPv4I0EN6oneapi3tbb26enumerable_thread_specific12combine_eachEv9UnaryFunc", "oneapi::tbb::enumerable_thread_specific::combine_each::f"], [857, 3, 1, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific5emptyEv", "oneapi::tbb::enumerable_thread_specific::empty"], [855, 3, 1, "_CPPv4N6oneapi3tbb26enumerable_thread_specific3endEv", "oneapi::tbb::enumerable_thread_specific::end"], [855, 3, 1, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific3endEv", "oneapi::tbb::enumerable_thread_specific::end"], [856, 3, 1, "_CPPv4N6oneapi3tbb26enumerable_thread_specific5localERb", "oneapi::tbb::enumerable_thread_specific::local"], [856, 3, 1, "_CPPv4N6oneapi3tbb26enumerable_thread_specific5localEv", "oneapi::tbb::enumerable_thread_specific::local"], [856, 4, 1, "_CPPv4N6oneapi3tbb26enumerable_thread_specific5localERb", "oneapi::tbb::enumerable_thread_specific::local::exists"], [855, 3, 1, "_CPPv4N6oneapi3tbb26enumerable_thread_specific5rangeE6size_t", "oneapi::tbb::enumerable_thread_specific::range"], [855, 3, 1, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific5rangeE6size_t", "oneapi::tbb::enumerable_thread_specific::range"], [855, 4, 1, "_CPPv4N6oneapi3tbb26enumerable_thread_specific5rangeE6size_t", "oneapi::tbb::enumerable_thread_specific::range::grainsize"], [855, 4, 1, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific5rangeE6size_t", "oneapi::tbb::enumerable_thread_specific::range::grainsize"], [857, 3, 1, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific4sizeEv", "oneapi::tbb::enumerable_thread_specific::size"], [859, 3, 1, "_CPPv4N6oneapi3tbb9flatten2d5beginEv", "oneapi::tbb::flatten2d::begin"], [859, 3, 1, "_CPPv4NK6oneapi3tbb9flatten2d5beginEv", "oneapi::tbb::flatten2d::begin"], [859, 3, 1, "_CPPv4N6oneapi3tbb9flatten2d3endEv", "oneapi::tbb::flatten2d::end"], [859, 3, 1, "_CPPv4NK6oneapi3tbb9flatten2d3endEv", "oneapi::tbb::flatten2d::end"], [859, 3, 1, "_CPPv4I0EN6oneapi3tbb9flatten2d9flatten2dE11flattened2dI9ContainerERK9ContainerKN9Container14const_iteratorEKN9Container14const_iteratorE", "oneapi::tbb::flatten2d::flatten2d"], [859, 8, 1, "_CPPv4I0EN6oneapi3tbb9flatten2d9flatten2dE11flattened2dI9ContainerERK9ContainerKN9Container14const_iteratorEKN9Container14const_iteratorE", "oneapi::tbb::flatten2d::flatten2d::Container"], [859, 4, 1, "_CPPv4I0EN6oneapi3tbb9flatten2d9flatten2dE11flattened2dI9ContainerERK9ContainerKN9Container14const_iteratorEKN9Container14const_iteratorE", "oneapi::tbb::flatten2d::flatten2d::b"], [859, 4, 1, "_CPPv4I0EN6oneapi3tbb9flatten2d9flatten2dE11flattened2dI9ContainerERK9ContainerKN9Container14const_iteratorEKN9Container14const_iteratorE", "oneapi::tbb::flatten2d::flatten2d::c"], [859, 4, 1, "_CPPv4I0EN6oneapi3tbb9flatten2d9flatten2dE11flattened2dI9ContainerERK9ContainerKN9Container14const_iteratorEKN9Container14const_iteratorE", "oneapi::tbb::flatten2d::flatten2d::e"], [859, 3, 1, "_CPPv4I0EN6oneapi3tbb9flatten2d11flattened2dERK9Container", "oneapi::tbb::flatten2d::flattened2d"], [859, 3, 1, "_CPPv4N6oneapi3tbb9flatten2d11flattened2dERK9Container", "oneapi::tbb::flatten2d::flattened2d"], [859, 3, 1, "_CPPv4N6oneapi3tbb9flatten2d11flattened2dERK9ContainerN9Container14const_iteratorEN9Container14const_iteratorE", "oneapi::tbb::flatten2d::flattened2d"], [859, 8, 1, "_CPPv4I0EN6oneapi3tbb9flatten2d11flattened2dERK9Container", "oneapi::tbb::flatten2d::flattened2d::Container"], [859, 4, 1, "_CPPv4I0EN6oneapi3tbb9flatten2d11flattened2dERK9Container", "oneapi::tbb::flatten2d::flattened2d::c"], [859, 4, 1, "_CPPv4N6oneapi3tbb9flatten2d11flattened2dERK9Container", "oneapi::tbb::flatten2d::flattened2d::c"], [859, 4, 1, "_CPPv4N6oneapi3tbb9flatten2d11flattened2dERK9ContainerN9Container14const_iteratorEN9Container14const_iteratorE", "oneapi::tbb::flatten2d::flattened2d::c"], [859, 4, 1, "_CPPv4N6oneapi3tbb9flatten2d11flattened2dERK9ContainerN9Container14const_iteratorEN9Container14const_iteratorE", "oneapi::tbb::flatten2d::flattened2d::first"], [859, 4, 1, "_CPPv4N6oneapi3tbb9flatten2d11flattened2dERK9ContainerN9Container14const_iteratorEN9Container14const_iteratorE", "oneapi::tbb::flatten2d::flattened2d::last"], [859, 3, 1, "_CPPv4NK6oneapi3tbb9flatten2d4sizeEv", "oneapi::tbb::flatten2d::size"], [759, 3, 1, "_CPPv4N6oneapi3tbb4flow12indexer_node12indexer_nodeER5graph", "oneapi::tbb::flow::indexer_node::indexer_node"], [759, 3, 1, "_CPPv4N6oneapi3tbb4flow12indexer_node12indexer_nodeERK12indexer_node", "oneapi::tbb::flow::indexer_node::indexer_node"], [759, 4, 1, "_CPPv4N6oneapi3tbb4flow12indexer_node12indexer_nodeER5graph", "oneapi::tbb::flow::indexer_node::indexer_node::g"], [759, 4, 1, "_CPPv4N6oneapi3tbb4flow12indexer_node12indexer_nodeERK12indexer_node", "oneapi::tbb::flow::indexer_node::indexer_node::src"], [759, 3, 1, "_CPPv4N6oneapi3tbb4flow12indexer_node11input_portsEv", "oneapi::tbb::flow::indexer_node::input_ports"], [759, 3, 1, "_CPPv4N6oneapi3tbb4flow12indexer_node7try_getER11output_type", "oneapi::tbb::flow::indexer_node::try_get"], [759, 4, 1, "_CPPv4N6oneapi3tbb4flow12indexer_node7try_getER11output_type", "oneapi::tbb::flow::indexer_node::try_get::v"], [764, 3, 1, "_CPPv4N6oneapi3tbb4flow12limiter_node11decrementerEv", "oneapi::tbb::flow::limiter_node::decrementer"], [764, 3, 1, "_CPPv4N6oneapi3tbb4flow12limiter_node12limiter_nodeER5graph6size_t", "oneapi::tbb::flow::limiter_node::limiter_node"], [764, 3, 1, "_CPPv4N6oneapi3tbb4flow12limiter_node12limiter_nodeERK12limiter_node", "oneapi::tbb::flow::limiter_node::limiter_node"], [764, 4, 1, "_CPPv4N6oneapi3tbb4flow12limiter_node12limiter_nodeER5graph6size_t", "oneapi::tbb::flow::limiter_node::limiter_node::g"], [764, 4, 1, "_CPPv4N6oneapi3tbb4flow12limiter_node12limiter_nodeERK12limiter_node", "oneapi::tbb::flow::limiter_node::limiter_node::src"], [764, 4, 1, "_CPPv4N6oneapi3tbb4flow12limiter_node12limiter_nodeER5graph6size_t", "oneapi::tbb::flow::limiter_node::limiter_node::threshold"], [764, 3, 1, "_CPPv4N6oneapi3tbb4flow12limiter_node7try_getER1T", "oneapi::tbb::flow::limiter_node::try_get"], [764, 4, 1, "_CPPv4N6oneapi3tbb4flow12limiter_node7try_getER1T", "oneapi::tbb::flow::limiter_node::try_get::v"], [764, 3, 1, "_CPPv4N6oneapi3tbb4flow12limiter_node7try_putERK1T", "oneapi::tbb::flow::limiter_node::try_put"], [764, 4, 1, "_CPPv4N6oneapi3tbb4flow12limiter_node7try_putERK1T", "oneapi::tbb::flow::limiter_node::try_put::v"], [770, 3, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_node5clearEv", "oneapi::tbb::flow::overwrite_node::clear"], [770, 3, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_node8is_validEv", "oneapi::tbb::flow::overwrite_node::is_valid"], [770, 3, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_node14overwrite_nodeER5graph", "oneapi::tbb::flow::overwrite_node::overwrite_node"], [770, 3, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_node14overwrite_nodeERK14overwrite_node", "oneapi::tbb::flow::overwrite_node::overwrite_node"], [770, 4, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_node14overwrite_nodeER5graph", "oneapi::tbb::flow::overwrite_node::overwrite_node::g"], [770, 4, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_node14overwrite_nodeERK14overwrite_node", "oneapi::tbb::flow::overwrite_node::overwrite_node::src"], [770, 3, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_node7try_getER1T", "oneapi::tbb::flow::overwrite_node::try_get"], [770, 4, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_node7try_getER1T", "oneapi::tbb::flow::overwrite_node::try_get::v"], [770, 3, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_node7try_putERK1T", "oneapi::tbb::flow::overwrite_node::try_put"], [770, 4, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_node7try_putERK1T", "oneapi::tbb::flow::overwrite_node::try_put::v"], [770, 3, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_nodeD0Ev", "oneapi::tbb::flow::overwrite_node::~overwrite_node"], [772, 3, 1, "_CPPv4N6oneapi3tbb4flow19priority_node_queue19priority_queue_nodeER5graph", "oneapi::tbb::flow::priority_node_queue::priority_queue_node"], [772, 3, 1, "_CPPv4N6oneapi3tbb4flow19priority_node_queue19priority_queue_nodeERK19priority_queue_node", "oneapi::tbb::flow::priority_node_queue::priority_queue_node"], [772, 4, 1, "_CPPv4N6oneapi3tbb4flow19priority_node_queue19priority_queue_nodeER5graph", "oneapi::tbb::flow::priority_node_queue::priority_queue_node::g"], [772, 4, 1, "_CPPv4N6oneapi3tbb4flow19priority_node_queue19priority_queue_nodeERK19priority_queue_node", "oneapi::tbb::flow::priority_node_queue::priority_queue_node::src"], [772, 3, 1, "_CPPv4N6oneapi3tbb4flow19priority_node_queue7try_getER1T", "oneapi::tbb::flow::priority_node_queue::try_get"], [772, 4, 1, "_CPPv4N6oneapi3tbb4flow19priority_node_queue7try_getER1T", "oneapi::tbb::flow::priority_node_queue::try_get::v"], [772, 3, 1, "_CPPv4N6oneapi3tbb4flow19priority_node_queue7try_putERK1T", "oneapi::tbb::flow::priority_node_queue::try_put"], [772, 4, 1, "_CPPv4N6oneapi3tbb4flow19priority_node_queue7try_putERK1T", "oneapi::tbb::flow::priority_node_queue::try_put::v"], [773, 3, 1, "_CPPv4N6oneapi3tbb4flow10queue_node10queue_nodeER5graph", "oneapi::tbb::flow::queue_node::queue_node"], [773, 3, 1, "_CPPv4N6oneapi3tbb4flow10queue_node10queue_nodeERK10queue_node", "oneapi::tbb::flow::queue_node::queue_node"], [773, 4, 1, "_CPPv4N6oneapi3tbb4flow10queue_node10queue_nodeER5graph", "oneapi::tbb::flow::queue_node::queue_node::g"], [773, 4, 1, "_CPPv4N6oneapi3tbb4flow10queue_node10queue_nodeERK10queue_node", "oneapi::tbb::flow::queue_node::queue_node::src"], [773, 3, 1, "_CPPv4N6oneapi3tbb4flow10queue_node7try_getER1T", "oneapi::tbb::flow::queue_node::try_get"], [773, 4, 1, "_CPPv4N6oneapi3tbb4flow10queue_node7try_getER1T", "oneapi::tbb::flow::queue_node::try_get::v"], [773, 3, 1, "_CPPv4N6oneapi3tbb4flow10queue_node7try_putERK1T", "oneapi::tbb::flow::queue_node::try_put"], [773, 4, 1, "_CPPv4N6oneapi3tbb4flow10queue_node7try_putERK1T", "oneapi::tbb::flow::queue_node::try_put::v"], [778, 3, 1, "_CPPv4I0EN6oneapi3tbb4flow14sequencer_node14sequencer_nodeER5graphRK9Sequencer", "oneapi::tbb::flow::sequencer_node::sequencer_node"], [778, 3, 1, "_CPPv4N6oneapi3tbb4flow14sequencer_node14sequencer_nodeERK14sequencer_node", "oneapi::tbb::flow::sequencer_node::sequencer_node"], [778, 8, 1, "_CPPv4I0EN6oneapi3tbb4flow14sequencer_node14sequencer_nodeER5graphRK9Sequencer", "oneapi::tbb::flow::sequencer_node::sequencer_node::Sequencer"], [778, 4, 1, "_CPPv4I0EN6oneapi3tbb4flow14sequencer_node14sequencer_nodeER5graphRK9Sequencer", "oneapi::tbb::flow::sequencer_node::sequencer_node::g"], [778, 4, 1, "_CPPv4I0EN6oneapi3tbb4flow14sequencer_node14sequencer_nodeER5graphRK9Sequencer", "oneapi::tbb::flow::sequencer_node::sequencer_node::s"], [778, 4, 1, "_CPPv4N6oneapi3tbb4flow14sequencer_node14sequencer_nodeERK14sequencer_node", "oneapi::tbb::flow::sequencer_node::sequencer_node::src"], [778, 3, 1, "_CPPv4N6oneapi3tbb4flow14sequencer_node7try_getER1T", "oneapi::tbb::flow::sequencer_node::try_get"], [778, 4, 1, "_CPPv4N6oneapi3tbb4flow14sequencer_node7try_getER1T", "oneapi::tbb::flow::sequencer_node::try_get::v"], [778, 3, 1, "_CPPv4N6oneapi3tbb4flow14sequencer_node7try_putERK1T", "oneapi::tbb::flow::sequencer_node::try_put"], [778, 4, 1, "_CPPv4N6oneapi3tbb4flow14sequencer_node7try_putERK1T", "oneapi::tbb::flow::sequencer_node::try_put::v"], [779, 3, 1, "_CPPv4N6oneapi3tbb4flow10split_node12output_portsEv", "oneapi::tbb::flow::split_node::output_ports"], [779, 3, 1, "_CPPv4N6oneapi3tbb4flow10split_node10split_nodeER5graph", "oneapi::tbb::flow::split_node::split_node"], [779, 3, 1, "_CPPv4N6oneapi3tbb4flow10split_node10split_nodeERK10split_node", "oneapi::tbb::flow::split_node::split_node"], [779, 4, 1, "_CPPv4N6oneapi3tbb4flow10split_node10split_nodeER5graph", "oneapi::tbb::flow::split_node::split_node::g"], [779, 4, 1, "_CPPv4N6oneapi3tbb4flow10split_node10split_nodeERK10split_node", "oneapi::tbb::flow::split_node::split_node::other"], [779, 3, 1, "_CPPv4N6oneapi3tbb4flow10split_node7try_putERK9TupleType", "oneapi::tbb::flow::split_node::try_put"], [779, 4, 1, "_CPPv4N6oneapi3tbb4flow10split_node7try_putERK9TupleType", "oneapi::tbb::flow::split_node::try_put::v"], [779, 3, 1, "_CPPv4N6oneapi3tbb4flow10split_nodeD0Ev", "oneapi::tbb::flow::split_node::~split_node"], [781, 3, 1, "_CPPv4N6oneapi3tbb4flow15write_once_mode5clearEv", "oneapi::tbb::flow::write_once_mode::clear"], [781, 3, 1, "_CPPv4N6oneapi3tbb4flow15write_once_mode8is_validEv", "oneapi::tbb::flow::write_once_mode::is_valid"], [781, 3, 1, "_CPPv4N6oneapi3tbb4flow15write_once_mode7try_getER1T", "oneapi::tbb::flow::write_once_mode::try_get"], [781, 4, 1, "_CPPv4N6oneapi3tbb4flow15write_once_mode7try_getER1T", "oneapi::tbb::flow::write_once_mode::try_get::v"], [781, 3, 1, "_CPPv4N6oneapi3tbb4flow15write_once_mode7try_putERK1T", "oneapi::tbb::flow::write_once_mode::try_put"], [781, 4, 1, "_CPPv4N6oneapi3tbb4flow15write_once_mode7try_putERK1T", "oneapi::tbb::flow::write_once_mode::try_put::v"], [781, 3, 1, "_CPPv4N6oneapi3tbb4flow15write_once_mode15write_once_nodeER5graph", "oneapi::tbb::flow::write_once_mode::write_once_node"], [781, 3, 1, "_CPPv4N6oneapi3tbb4flow15write_once_mode15write_once_nodeERK15write_once_node", "oneapi::tbb::flow::write_once_mode::write_once_node"], [781, 4, 1, "_CPPv4N6oneapi3tbb4flow15write_once_mode15write_once_nodeER5graph", "oneapi::tbb::flow::write_once_mode::write_once_node::g"], [781, 4, 1, "_CPPv4N6oneapi3tbb4flow15write_once_mode15write_once_nodeERK15write_once_node", "oneapi::tbb::flow::write_once_mode::write_once_node::src"], [781, 3, 1, "_CPPv4N6oneapi3tbb4flow15write_once_modeD0Ev", "oneapi::tbb::flow::write_once_mode::~write_once_node"], [793, 3, 1, "_CPPv4N6oneapi3tbb5mutex4lockEv", "oneapi::tbb::mutex::lock"], [793, 3, 1, "_CPPv4N6oneapi3tbb5mutex5mutexEv", "oneapi::tbb::mutex::mutex"], [793, 7, 1, "_CPPv4N6oneapi3tbb5mutex11scoped_lockE", "oneapi::tbb::mutex::scoped_lock"], [793, 3, 1, "_CPPv4N6oneapi3tbb5mutex8try_lockEv", "oneapi::tbb::mutex::try_lock"], [793, 3, 1, "_CPPv4N6oneapi3tbb5mutex6unlockEv", "oneapi::tbb::mutex::unlock"], [793, 3, 1, "_CPPv4N6oneapi3tbb5mutexD0Ev", "oneapi::tbb::mutex::~mutex"], [795, 3, 1, "_CPPv4N6oneapi3tbb13null_rw_mutex4lockEv", "oneapi::tbb::null_rw_mutex::lock"], [795, 3, 1, "_CPPv4N6oneapi3tbb13null_rw_mutex11lock_sharedEv", "oneapi::tbb::null_rw_mutex::lock_shared"], [795, 3, 1, "_CPPv4N6oneapi3tbb13null_rw_mutex13null_rw_mutexEv", "oneapi::tbb::null_rw_mutex::null_rw_mutex"], [795, 7, 1, "_CPPv4N6oneapi3tbb13null_rw_mutex11scoped_lockE", "oneapi::tbb::null_rw_mutex::scoped_lock"], [795, 3, 1, "_CPPv4N6oneapi3tbb13null_rw_mutex8try_lockEv", "oneapi::tbb::null_rw_mutex::try_lock"], [795, 3, 1, "_CPPv4N6oneapi3tbb13null_rw_mutex15try_lock_sharedEv", "oneapi::tbb::null_rw_mutex::try_lock_shared"], [795, 3, 1, "_CPPv4N6oneapi3tbb13null_rw_mutex6unlockEv", "oneapi::tbb::null_rw_mutex::unlock"], [795, 3, 1, "_CPPv4N6oneapi3tbb13null_rw_mutex13unlock_sharedEv", "oneapi::tbb::null_rw_mutex::unlock_shared"], [795, 3, 1, "_CPPv4N6oneapi3tbb13null_rw_mutexD0Ev", "oneapi::tbb::null_rw_mutex::~null_rw_mutex"], [796, 3, 1, "_CPPv4N6oneapi3tbb14queueing_mutex13queuing_mutexEv", "oneapi::tbb::queueing_mutex::queuing_mutex"], [796, 7, 1, "_CPPv4N6oneapi3tbb14queueing_mutex11scoped_lockE", "oneapi::tbb::queueing_mutex::scoped_lock"], [796, 3, 1, "_CPPv4N6oneapi3tbb14queueing_mutexD0Ev", "oneapi::tbb::queueing_mutex::~queuing_mutex"], [797, 3, 1, "_CPPv4N6oneapi3tbb17queueing_rw_mutex16queuing_rw_mutexEv", "oneapi::tbb::queueing_rw_mutex::queuing_rw_mutex"], [797, 7, 1, "_CPPv4N6oneapi3tbb17queueing_rw_mutex11scoped_lockE", "oneapi::tbb::queueing_rw_mutex::scoped_lock"], [797, 3, 1, "_CPPv4N6oneapi3tbb17queueing_rw_mutexD0Ev", "oneapi::tbb::queueing_rw_mutex::~queuing_rw_mutex"], [798, 3, 1, "_CPPv4N6oneapi3tbb8rw_mutex4lockEv", "oneapi::tbb::rw_mutex::lock"], [798, 3, 1, "_CPPv4N6oneapi3tbb8rw_mutex11lock_sharedEv", "oneapi::tbb::rw_mutex::lock_shared"], [798, 3, 1, "_CPPv4N6oneapi3tbb8rw_mutex8rw_mutexEv", "oneapi::tbb::rw_mutex::rw_mutex"], [798, 7, 1, "_CPPv4N6oneapi3tbb8rw_mutex11scoped_lockE", "oneapi::tbb::rw_mutex::scoped_lock"], [798, 3, 1, "_CPPv4N6oneapi3tbb8rw_mutex8try_lockEv", "oneapi::tbb::rw_mutex::try_lock"], [798, 3, 1, "_CPPv4N6oneapi3tbb8rw_mutex15try_lock_sharedEv", "oneapi::tbb::rw_mutex::try_lock_shared"], [798, 3, 1, "_CPPv4N6oneapi3tbb8rw_mutex6unlockEv", "oneapi::tbb::rw_mutex::unlock"], [798, 3, 1, "_CPPv4N6oneapi3tbb8rw_mutex13unlock_sharedEv", "oneapi::tbb::rw_mutex::unlock_shared"], [798, 3, 1, "_CPPv4N6oneapi3tbb8rw_mutexD0Ev", "oneapi::tbb::rw_mutex::~rw_mutex"], [789, 3, 1, "_CPPv4N6oneapi3tbb18scalable_allocator8allocateE9size_type", "oneapi::tbb::scalable_allocator::allocate"], [789, 4, 1, "_CPPv4N6oneapi3tbb18scalable_allocator8allocateE9size_type", "oneapi::tbb::scalable_allocator::allocate::n"], [789, 3, 1, "_CPPv4N6oneapi3tbb18scalable_allocator10deallocateEP10value_type9size_type", "oneapi::tbb::scalable_allocator::deallocate"], [789, 4, 1, "_CPPv4N6oneapi3tbb18scalable_allocator10deallocateEP10value_type9size_type", "oneapi::tbb::scalable_allocator::deallocate::n"], [789, 4, 1, "_CPPv4N6oneapi3tbb18scalable_allocator10deallocateEP10value_type9size_type", "oneapi::tbb::scalable_allocator::deallocate::p"], [789, 3, 1, "_CPPv4I00EN6oneapi3tbb18scalable_allocatorneEbRK18scalable_allocatorI1TERK18scalable_allocatorI1UE", "oneapi::tbb::scalable_allocator::operator!="], [789, 8, 1, "_CPPv4I00EN6oneapi3tbb18scalable_allocatorneEbRK18scalable_allocatorI1TERK18scalable_allocatorI1UE", "oneapi::tbb::scalable_allocator::operator!=::T"], [789, 8, 1, "_CPPv4I00EN6oneapi3tbb18scalable_allocatorneEbRK18scalable_allocatorI1TERK18scalable_allocatorI1UE", "oneapi::tbb::scalable_allocator::operator!=::U"], [789, 3, 1, "_CPPv4I00EN6oneapi3tbb18scalable_allocatoreqEbRK18scalable_allocatorI1TERK18scalable_allocatorI1UE", "oneapi::tbb::scalable_allocator::operator=="], [789, 8, 1, "_CPPv4I00EN6oneapi3tbb18scalable_allocatoreqEbRK18scalable_allocatorI1TERK18scalable_allocatorI1UE", "oneapi::tbb::scalable_allocator::operator==::T"], [789, 8, 1, "_CPPv4I00EN6oneapi3tbb18scalable_allocatoreqEbRK18scalable_allocatorI1TERK18scalable_allocatorI1UE", "oneapi::tbb::scalable_allocator::operator==::U"], [799, 7, 1, "_CPPv4N6oneapi3tbb22speculative_spin_mutex11scoped_lockE", "oneapi::tbb::speculative_spin_mutex::scoped_lock"], [799, 3, 1, "_CPPv4N6oneapi3tbb22speculative_spin_mutex22speculative_spin_mutexEv", "oneapi::tbb::speculative_spin_mutex::speculative_spin_mutex"], [799, 3, 1, "_CPPv4N6oneapi3tbb22speculative_spin_mutexD0Ev", "oneapi::tbb::speculative_spin_mutex::~speculative_spin_mutex"], [800, 7, 1, "_CPPv4N6oneapi3tbb25speculative_spin_rw_mutex11scoped_lockE", "oneapi::tbb::speculative_spin_rw_mutex::scoped_lock"], [800, 3, 1, "_CPPv4N6oneapi3tbb25speculative_spin_rw_mutex25speculative_spin_rw_mutexEv", "oneapi::tbb::speculative_spin_rw_mutex::speculative_spin_rw_mutex"], [800, 3, 1, "_CPPv4N6oneapi3tbb25speculative_spin_rw_mutexD0Ev", "oneapi::tbb::speculative_spin_rw_mutex::~speculative_spin_rw_mutex"], [801, 3, 1, "_CPPv4N6oneapi3tbb10spin_mutex4lockEv", "oneapi::tbb::spin_mutex::lock"], [801, 7, 1, "_CPPv4N6oneapi3tbb10spin_mutex11scoped_lockE", "oneapi::tbb::spin_mutex::scoped_lock"], [801, 3, 1, "_CPPv4N6oneapi3tbb10spin_mutex10spin_mutexEv", "oneapi::tbb::spin_mutex::spin_mutex"], [801, 3, 1, "_CPPv4N6oneapi3tbb10spin_mutex8try_lockEv", "oneapi::tbb::spin_mutex::try_lock"], [801, 3, 1, "_CPPv4N6oneapi3tbb10spin_mutex6unlockEv", "oneapi::tbb::spin_mutex::unlock"], [801, 3, 1, "_CPPv4N6oneapi3tbb10spin_mutexD0Ev", "oneapi::tbb::spin_mutex::~spin_mutex"], [802, 3, 1, "_CPPv4N6oneapi3tbb13spin_rw_mutex4lockEv", "oneapi::tbb::spin_rw_mutex::lock"], [802, 3, 1, "_CPPv4N6oneapi3tbb13spin_rw_mutex11lock_sharedEv", "oneapi::tbb::spin_rw_mutex::lock_shared"], [802, 7, 1, "_CPPv4N6oneapi3tbb13spin_rw_mutex11scoped_lockE", "oneapi::tbb::spin_rw_mutex::scoped_lock"], [802, 3, 1, "_CPPv4N6oneapi3tbb13spin_rw_mutex13spin_rw_mutexEv", "oneapi::tbb::spin_rw_mutex::spin_rw_mutex"], [802, 3, 1, "_CPPv4N6oneapi3tbb13spin_rw_mutex8try_lockEv", "oneapi::tbb::spin_rw_mutex::try_lock"], [802, 3, 1, "_CPPv4N6oneapi3tbb13spin_rw_mutex15try_lock_sharedEv", "oneapi::tbb::spin_rw_mutex::try_lock_shared"], [802, 3, 1, "_CPPv4N6oneapi3tbb13spin_rw_mutex6unlockEv", "oneapi::tbb::spin_rw_mutex::unlock"], [802, 3, 1, "_CPPv4N6oneapi3tbb13spin_rw_mutex13unlock_sharedEv", "oneapi::tbb::spin_rw_mutex::unlock_shared"], [802, 3, 1, "_CPPv4N6oneapi3tbb13spin_rw_mutexD0Ev", "oneapi::tbb::spin_rw_mutex::~spin_rw_mutex"], [847, 3, 1, "_CPPv4N6oneapi3tbb10task_group6cancelEv", "oneapi::tbb::task_group::cancel"], [847, 3, 1, "_CPPv4I0EN6oneapi3tbb10task_group5deferE11task_handleRR1F", "oneapi::tbb::task_group::defer"], [847, 8, 1, "_CPPv4I0EN6oneapi3tbb10task_group5deferE11task_handleRR1F", "oneapi::tbb::task_group::defer::F"], [847, 4, 1, "_CPPv4I0EN6oneapi3tbb10task_group5deferE11task_handleRR1F", "oneapi::tbb::task_group::defer::f"], [847, 3, 1, "_CPPv4N6oneapi3tbb10task_group31is_current_task_group_cancelingEv", "oneapi::tbb::task_group::is_current_task_group_canceling"], [847, 3, 1, "_CPPv4I0EN6oneapi3tbb10task_group3runEvRR4Func", "oneapi::tbb::task_group::run"], [847, 3, 1, "_CPPv4N6oneapi3tbb10task_group3runERR11task_handle", "oneapi::tbb::task_group::run"], [847, 8, 1, "_CPPv4I0EN6oneapi3tbb10task_group3runEvRR4Func", "oneapi::tbb::task_group::run::Func"], [847, 4, 1, "_CPPv4I0EN6oneapi3tbb10task_group3runEvRR4Func", "oneapi::tbb::task_group::run::f"], [847, 4, 1, "_CPPv4N6oneapi3tbb10task_group3runERR11task_handle", "oneapi::tbb::task_group::run::h"], [847, 3, 1, "_CPPv4I0EN6oneapi3tbb10task_group12run_and_waitE17task_group_statusRK4Func", "oneapi::tbb::task_group::run_and_wait"], [847, 8, 1, "_CPPv4I0EN6oneapi3tbb10task_group12run_and_waitE17task_group_statusRK4Func", "oneapi::tbb::task_group::run_and_wait::Func"], [847, 4, 1, "_CPPv4I0EN6oneapi3tbb10task_group12run_and_waitE17task_group_statusRK4Func", "oneapi::tbb::task_group::run_and_wait::f"], [847, 3, 1, "_CPPv4N6oneapi3tbb10task_group10task_groupER18task_group_context", "oneapi::tbb::task_group::task_group"], [847, 3, 1, "_CPPv4N6oneapi3tbb10task_group10task_groupEv", "oneapi::tbb::task_group::task_group"], [847, 4, 1, "_CPPv4N6oneapi3tbb10task_group10task_groupER18task_group_context", "oneapi::tbb::task_group::task_group::context"], [847, 3, 1, "_CPPv4N6oneapi3tbb10task_group4waitEv", "oneapi::tbb::task_group::wait"], [847, 3, 1, "_CPPv4N6oneapi3tbb10task_groupD0Ev", "oneapi::tbb::task_group::~task_group"], [791, 3, 1, "_CPPv4N6oneapi3tbb13tbb_allocator8allocateE9size_type", "oneapi::tbb::tbb_allocator::allocate"], [791, 4, 1, "_CPPv4N6oneapi3tbb13tbb_allocator8allocateE9size_type", "oneapi::tbb::tbb_allocator::allocate::n"], [791, 3, 1, "_CPPv4N6oneapi3tbb13tbb_allocator14allocator_typeEv", "oneapi::tbb::tbb_allocator::allocator_type"], [791, 3, 1, "_CPPv4N6oneapi3tbb13tbb_allocator10deallocateEP1T9size_type", "oneapi::tbb::tbb_allocator::deallocate"], [791, 4, 1, "_CPPv4N6oneapi3tbb13tbb_allocator10deallocateEP1T9size_type", "oneapi::tbb::tbb_allocator::deallocate::n"], [791, 4, 1, "_CPPv4N6oneapi3tbb13tbb_allocator10deallocateEP1T9size_type", "oneapi::tbb::tbb_allocator::deallocate::p"], [791, 3, 1, "_CPPv4I00EN6oneapi3tbb13tbb_allocatorneEbRK13tbb_allocatorI1TERK13tbb_allocatorI1UE", "oneapi::tbb::tbb_allocator::operator!="], [791, 8, 1, "_CPPv4I00EN6oneapi3tbb13tbb_allocatorneEbRK13tbb_allocatorI1TERK13tbb_allocatorI1UE", "oneapi::tbb::tbb_allocator::operator!=::T"], [791, 8, 1, "_CPPv4I00EN6oneapi3tbb13tbb_allocatorneEbRK13tbb_allocatorI1TERK13tbb_allocatorI1UE", "oneapi::tbb::tbb_allocator::operator!=::U"], [791, 3, 1, "_CPPv4I00EN6oneapi3tbb13tbb_allocatoreqEbRK13tbb_allocatorI1TERK13tbb_allocatorI1UE", "oneapi::tbb::tbb_allocator::operator=="], [791, 8, 1, "_CPPv4I00EN6oneapi3tbb13tbb_allocatoreqEbRK13tbb_allocatorI1TERK13tbb_allocatorI1UE", "oneapi::tbb::tbb_allocator::operator==::T"], [791, 8, 1, "_CPPv4I00EN6oneapi3tbb13tbb_allocatoreqEbRK13tbb_allocatorI1TERK13tbb_allocatorI1UE", "oneapi::tbb::tbb_allocator::operator==::U"], [568, 3, 1, "_CPPv4cvbv", "operator bool"], [843, 3, 1, "_CPPv4NKcvbEv", "operator bool"], [573, 3, 1, "_CPPv4NKcv5splitEv", "operator split"], [787, 3, 1, "_CPPv4I00EnebRK23cache_aligned_allocatorI1TERK23cache_aligned_allocatorI1UE", "operator!="], [787, 8, 1, "_CPPv4I00EnebRK23cache_aligned_allocatorI1TERK23cache_aligned_allocatorI1UE", "operator!=::T"], [787, 8, 1, "_CPPv4I00EnebRK23cache_aligned_allocatorI1TERK23cache_aligned_allocatorI1UE", "operator!=::U"], [562, 3, 1, "_CPPv4I000Ean6filterI1T1UERK6filterI1T1VERK6filterI1V1UE", "operator&amp;"], [562, 8, 1, "_CPPv4I000Ean6filterI1T1UERK6filterI1T1VERK6filterI1V1UE", "operator&amp;::T"], [562, 8, 1, "_CPPv4I000Ean6filterI1T1UERK6filterI1T1VERK6filterI1V1UE", "operator&amp;::U"], [562, 8, 1, "_CPPv4I000Ean6filterI1T1UERK6filterI1T1VERK6filterI1V1UE", "operator&amp;::V"], [562, 4, 1, "_CPPv4I000Ean6filterI1T1UERK6filterI1T1VERK6filterI1V1UE", "operator&amp;::left"], [562, 4, 1, "_CPPv4I000Ean6filterI1T1UERK6filterI1T1VERK6filterI1V1UE", "operator&amp;::right"], [810, 3, 1, "_CPPv4mlRK5IndexRK5Index", "operator*"], [810, 4, 1, "_CPPv4mlRK5IndexRK5Index", "operator*::i"], [810, 4, 1, "_CPPv4mlRK5IndexRK5Index", "operator*::j"], [804, 3, 1, "_CPPv4plRK5Value1D", "operator+"], [810, 3, 1, "_CPPv4plRK5Index1D", "operator+"], [810, 3, 1, "_CPPv4plRK5IndexRK5Index", "operator+"], [810, 3, 1, "_CPPv4ppv", "operator++"], [804, 4, 1, "_CPPv4plRK5Value1D", "operator+::i"], [810, 4, 1, "_CPPv4plRK5Index1D", "operator+::i"], [810, 4, 1, "_CPPv4plRK5IndexRK5Index", "operator+::i"], [810, 4, 1, "_CPPv4plRK5IndexRK5Index", "operator+::j"], [804, 4, 1, "_CPPv4plRK5Value1D", "operator+::k"], [810, 4, 1, "_CPPv4plRK5Index1D", "operator+::k"], [804, 3, 1, "_CPPv4miRK5ValueRK5Value", "operator-"], [810, 3, 1, "_CPPv4miRK5IndexRK5Index", "operator-"], [804, 4, 1, "_CPPv4miRK5ValueRK5Value", "operator-::i"], [810, 4, 1, "_CPPv4miRK5IndexRK5Index", "operator-::i"], [804, 4, 1, "_CPPv4miRK5ValueRK5Value", "operator-::j"], [810, 4, 1, "_CPPv4miRK5IndexRK5Index", "operator-::j"], [810, 3, 1, "_CPPv4dvRK5IndexRK5Index", "operator/"], [810, 4, 1, "_CPPv4dvRK5IndexRK5Index", "operator/::i"], [810, 4, 1, "_CPPv4dvRK5IndexRK5Index", "operator/::j"], [803, 3, 1, "_CPPv4ltRK1TRK1T", "operator&lt;"], [804, 3, 1, "_CPPv4ltRK5ValueRK5Value", "operator&lt;"], [810, 3, 1, "_CPPv4ltRK5IndexRK5Index", "operator&lt;"], [804, 4, 1, "_CPPv4ltRK5ValueRK5Value", "operator&lt;::i"], [810, 4, 1, "_CPPv4ltRK5IndexRK5Index", "operator&lt;::i"], [804, 4, 1, "_CPPv4ltRK5ValueRK5Value", "operator&lt;::j"], [810, 4, 1, "_CPPv4ltRK5IndexRK5Index", "operator&lt;::j"], [803, 4, 1, "_CPPv4ltRK1TRK1T", "operator&lt;::x"], [803, 4, 1, "_CPPv4ltRK1TRK1T", "operator&lt;::y"], [810, 3, 1, "_CPPv4leRK5IndexRK5Index", "operator&lt;="], [810, 4, 1, "_CPPv4leRK5IndexRK5Index", "operator&lt;=::i"], [810, 4, 1, "_CPPv4leRK5IndexRK5Index", "operator&lt;=::j"], [804, 3, 1, "_CPPv4aSRK5Value", "operator="], [810, 3, 1, "_CPPv4aSRK5Index", "operator="], [843, 3, 1, "_CPPv4aSRR21task_scheduler_handle", "operator="], [843, 4, 1, "_CPPv4aSRR21task_scheduler_handle", "operator=::other"], [787, 3, 1, "_CPPv4I00EeqbRK23cache_aligned_allocatorI1TERK23cache_aligned_allocatorI1UE", "operator=="], [787, 8, 1, "_CPPv4I00EeqbRK23cache_aligned_allocatorI1TERK23cache_aligned_allocatorI1UE", "operator==::T"], [787, 8, 1, "_CPPv4I00EeqbRK23cache_aligned_allocatorI1TERK23cache_aligned_allocatorI1UE", "operator==::U"], [749, 3, 1, "_CPPv412output_portsv", "output_ports"], [840, 9, 1, "_CPPv4N9parameter23max_allowed_parallelismE", "parameter::max_allowed_parallelism"], [840, 9, 1, "_CPPv4N9parameter22terminate_on_exceptionE", "parameter::terminate_on_exception"], [840, 9, 1, "_CPPv4N9parameter17thread_stack_sizeE", "parameter::thread_stack_size"], [844, 9, 1, "_CPPv4N8priority4highE", "priority::high"], [844, 9, 1, "_CPPv4N8priority3lowE", "priority::low"], [844, 9, 1, "_CPPv4N8priority6normalE", "priority::normal"], [573, 3, 1, "_CPPv418proportional_splitNSt6size_tENSt6size_tE", "proportional_split"], [573, 4, 1, "_CPPv418proportional_splitNSt6size_tENSt6size_tE", "proportional_split::_left"], [573, 4, 1, "_CPPv418proportional_splitNSt6size_tENSt6size_tE", "proportional_split::_right"], [843, 3, 1, "_CPPv47releasev", "release"], [757, 3, 1, "_CPPv45reset11reset_flags", "reset"], [842, 3, 1, "_CPPv45resetv", "reset"], [757, 4, 1, "_CPPv45reset11reset_flags", "reset::f"], [573, 3, 1, "_CPPv4NK5rightEv", "right"], [786, 3, 1, "_CPPv424scalable_allocation_modei8intptr_t", "scalable_allocation_mode"], [786, 4, 1, "_CPPv424scalable_allocation_modei8intptr_t", "scalable_allocation_mode::mode"], [786, 4, 1, "_CPPv424scalable_allocation_modei8intptr_t", "scalable_allocation_mode::value"], [786, 3, 1, "_CPPv414scalable_msizePv", "scalable_msize"], [786, 4, 1, "_CPPv414scalable_msizePv", "scalable_msize::ptr"], [794, 7, 1, "_CPPv411scoped_lock", "scoped_lock"], [749, 3, 1, "_CPPv418set_external_portsRR16input_ports_typeRR17output_ports_type", "set_external_ports"], [749, 4, 1, "_CPPv418set_external_portsRR16input_ports_typeRR17output_ports_type", "set_external_ports::input_ports_tuple"], [749, 4, 1, "_CPPv418set_external_portsRR16input_ports_typeRR17output_ports_type", "set_external_ports::output_ports_tuple"], [553, 3, 1, "_CPPv4NK4sizeEv", "size"], [553, 5, 1, "_CPPv49size_type", "size_type"], [805, 3, 1, "_CPPv4NSt5beginE1c", "std::begin"], [805, 3, 1, "_CPPv4NSt3endE1c", "std::end"], [564, 3, 1, "_CPPv44stopv", "stop"], [803, 3, 1, "_CPPv44swapR1TR1T", "swap"], [803, 4, 1, "_CPPv44swapR1TR1T", "swap::x"], [803, 4, 1, "_CPPv44swapR1TR1T", "swap::y"], [780, 3, 1, "_CPPv4NK3tagEv", "tag"], [780, 3, 1, "_CPPv4I00E10tagged_msgRK1TRK1R", "tagged_msg"], [780, 8, 1, "_CPPv4I00E10tagged_msgRK1TRK1R", "tagged_msg::R"], [780, 8, 1, "_CPPv4I00E10tagged_msgRK1TRK1R", "tagged_msg::T"], [780, 4, 1, "_CPPv4I00E10tagged_msgRK1TRK1R", "tagged_msg::index"], [780, 4, 1, "_CPPv4I00E10tagged_msgRK1TRK1R", "tagged_msg::value"], [744, 3, 1, "_CPPv410task_arenaN10task_arena6attachE", "task_arena"], [844, 3, 1, "_CPPv410task_arena11constraintsj8priority", "task_arena"], [844, 3, 1, "_CPPv410task_arenaN6oneapi3tbb6attachE", "task_arena"], [844, 3, 1, "_CPPv410task_arenaRK10task_arena", "task_arena"], [844, 3, 1, "_CPPv410task_arenaij8priority", "task_arena"], [844, 4, 1, "_CPPv410task_arena11constraintsj8priority", "task_arena::a_constraints"], [844, 4, 1, "_CPPv410task_arena11constraintsj8priority", "task_arena::a_priority"], [844, 4, 1, "_CPPv410task_arenaij8priority", "task_arena::a_priority"], [844, 4, 1, "_CPPv410task_arenaij8priority", "task_arena::max_concurrency"], [844, 4, 1, "_CPPv410task_arena11constraintsj8priority", "task_arena::reserved_for_masters"], [844, 4, 1, "_CPPv410task_arenaij8priority", "task_arena::reserved_for_masters"], [842, 3, 1, "_CPPv418task_group_context6kind_t9uintptr_t", "task_group_context"], [842, 4, 1, "_CPPv418task_group_context6kind_t9uintptr_t", "task_group_context::relation_to_parent"], [842, 4, 1, "_CPPv418task_group_context6kind_t9uintptr_t", "task_group_context::traits"], [843, 3, 1, "_CPPv421task_scheduler_handleN6oneapi3tbb6attachE", "task_scheduler_handle"], [843, 3, 1, "_CPPv421task_scheduler_handleRR21task_scheduler_handle", "task_scheduler_handle"], [843, 3, 1, "_CPPv421task_scheduler_handlev", "task_scheduler_handle"], [843, 4, 1, "_CPPv421task_scheduler_handleRR21task_scheduler_handle", "task_scheduler_handle::other"], [845, 3, 1, "_CPPv423task_scheduler_observerR10task_arena", "task_scheduler_observer"], [845, 3, 1, "_CPPv423task_scheduler_observerv", "task_scheduler_observer"], [849, 3, 1, "_CPPv4NK3tbb11task_handlecvbEv", "tbb::task_handle::operator bool"], [849, 3, 1, "_CPPv4N3tbb11task_handleaSERR11task_handle", "tbb::task_handle::operator="], [849, 4, 1, "_CPPv4N3tbb11task_handleaSERR11task_handle", "tbb::task_handle::operator=::src"], [849, 3, 1, "_CPPv4N3tbb11task_handle11task_handleERR11task_handle", "tbb::task_handle::task_handle"], [849, 3, 1, "_CPPv4N3tbb11task_handle11task_handleEv", "tbb::task_handle::task_handle"], [849, 4, 1, "_CPPv4N3tbb11task_handle11task_handleERR11task_handle", "tbb::task_handle::task_handle::src"], [849, 3, 1, "_CPPv4N3tbb11task_handleD0Ev", "tbb::task_handle::~task_handle"], [846, 3, 1, "_CPPv4N3tbb15this_task_arena20current_thread_indexEv", "tbb::this_task_arena::current_thread_index"], [846, 3, 1, "_CPPv4I0EN3tbb15this_task_arena7enqueueEvRR1F", "tbb::this_task_arena::enqueue"], [846, 3, 1, "_CPPv4N3tbb15this_task_arena7enqueueERR11task_handle", "tbb::this_task_arena::enqueue"], [846, 8, 1, "_CPPv4I0EN3tbb15this_task_arena7enqueueEvRR1F", "tbb::this_task_arena::enqueue::F"], [846, 4, 1, "_CPPv4I0EN3tbb15this_task_arena7enqueueEvRR1F", "tbb::this_task_arena::enqueue::f"], [846, 4, 1, "_CPPv4N3tbb15this_task_arena7enqueueERR11task_handle", "tbb::this_task_arena::enqueue::h"], [846, 3, 1, "_CPPv4I_1FEN3tbb15this_task_arena7isolateEDTcl1fEERR1F", "tbb::this_task_arena::isolate"], [846, 4, 1, "_CPPv4I_1FEN3tbb15this_task_arena7isolateEDTcl1fEERR1F", "tbb::this_task_arena::isolate::f"], [846, 3, 1, "_CPPv4N3tbb15this_task_arena15max_concurrencyEv", "tbb::this_task_arena::max_concurrency"], [844, 3, 1, "_CPPv49terminatev", "terminate"], [842, 3, 1, "_CPPv4NK6traitsEv", "traits"], [842, 9, 1, "_CPPv4N11traits_type11fp_settingsE", "traits_type::fp_settings"], [747, 3, 1, "_CPPv47try_getR11output_type", "try_get"], [748, 3, 1, "_CPPv47try_getR1T", "try_get"], [760, 3, 1, "_CPPv47try_getR6Output", "try_get"], [747, 4, 1, "_CPPv47try_getR11output_type", "try_get::v"], [748, 4, 1, "_CPPv47try_getR1T", "try_get::v"], [760, 4, 1, "_CPPv47try_getR6Output", "try_get::v"], [794, 3, 1, "_CPPv48try_lockv", "try_lock"], [747, 3, 1, "_CPPv47try_putRK10input_type", "try_put"], [748, 3, 1, "_CPPv47try_putRK1T", "try_put"], [747, 4, 1, "_CPPv47try_putRK10input_type", "try_put::v"], [748, 4, 1, "_CPPv47try_putRK1T", "try_put::v"], [794, 3, 1, "_CPPv46unlockv", "unlock"], [788, 3, 1, "_CPPv4NK17upstream_resourceEv", "upstream_resource"], [757, 3, 1, "_CPPv412wait_for_allv", "wait_for_all"], [840, 3, 1, "_CPPv4D0v", "~global_control"], [757, 3, 1, "_CPPv4D0v", "~graph"], [794, 3, 1, "_CPPv4D0v", "~null_mutex"], [844, 3, 1, "_CPPv4D0v", "~task_arena"], [842, 3, 1, "_CPPv4D0v", "~task_group_context"], [843, 3, 1, "_CPPv4D0v", "~task_scheduler_handle"], [845, 3, 1, "_CPPv4D0v", "~task_scheduler_observer"]], "scalable_allocation_command": [[786, 2, 1, "c.scalable_allocation_command", "cmd"], [786, 2, 1, "c.scalable_allocation_command", "reserved"]]}, "objtypes": {"0": "c:macro", "1": "c:function", "2": "c:functionParam", "3": "cpp:function", "4": "cpp:functionParam", "5": "cpp:type", "6": "cpp:member", "7": "cpp:class", "8": "cpp:templateParam", "9": "cpp:enum", "10": "cpp:enumerator"}, "objnames": {"0": ["c", "macro", "C macro"], "1": ["c", "function", "C function"], "2": ["c", "functionParam", "C function parameter"], "3": ["cpp", "function", "C++ function"], "4": ["cpp", "functionParam", "C++ function parameter"], "5": ["cpp", "type", "C++ type"], "6": ["cpp", "member", "C++ member"], "7": ["cpp", "class", "C++ class"], "8": ["cpp", "templateParam", "C++ template parameter"], "9": ["cpp", "enum", "C++ enum"], "10": ["cpp", "enumerator", "C++ enumerator"]}, "titleterms": {"softwar": 0, "architectur": [0, 179], "oneapi": [0, 6, 38, 43, 446, 454, 578, 863], "platform": 0, "api": [0, 2, 58, 60, 149, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 179, 247, 249], "program": [0, 7, 19, 20, 22, 25, 29, 34, 35, 37, 38, 41, 42, 50, 149], "exampl": [0, 19, 20, 22, 25, 34, 35, 37, 38, 40, 49, 56, 152, 153, 157, 361, 409, 452, 554, 558, 560, 561, 565, 566, 745, 751, 753, 755, 756, 766, 768, 770, 772, 773, 778, 781, 841, 843, 844, 845], "direct": 0, "level": [2, 185, 186, 187], "zero": [2, 152], "detail": [2, 36, 39, 40, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "descript": [2, 675, 690, 704, 718, 732], "definit": [3, 29, 39, 51, 63, 159, 258, 864], "oneccl": [4, 12, 17], "introduct": [5, 45, 151, 784, 864], "namespac": [6, 31, 151, 174, 179, 578, 783], "ccl": 6, "model": [7, 19, 22, 25, 50, 56, 57, 61, 62, 149, 179, 361, 409, 452, 829, 830], "collect": 8, "oper": [8, 12, 13, 14, 15, 19, 20, 22, 25, 38, 39, 51, 52, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 257, 584, 593, 605, 607, 620, 634, 647, 655, 663, 677, 679, 692, 706, 720, 734, 743, 854], "allgatherv": 8, "allreduc": 8, "alltoallv": 8, "barrier": 8, "broadcast": [8, 114, 115], "reduc": 8, "reducescatt": 8, "point": [8, 48, 152], "To": 8, "send": 8, "recv": 8, "datatyp": [9, 179], "custom": 9, "error": [10, 30, 149, 151, 152, 179], "handl": [10, 30, 149, 151, 152, 179, 413, 581], "except": [10, 30, 179, 546, 732], "classif": [10, 25, 30, 179], "common": [10, 29, 32, 43, 63, 159, 179], "gener": [11, 51, 149, 151, 177, 260, 344, 349, 350, 361, 362, 366, 367, 380, 410, 412, 834], "workflow": [11, 54, 56], "concept": [12, 40], "devic": [12, 179, 342, 344, 350, 361, 362, 363], "context": 12, "kei": [12, 40, 592], "valu": [12, 291, 535, 592, 598, 615, 629, 643, 672, 687, 701, 715, 729], "store": [12, 581], "commun": [12, 15], "stream": [12, 61, 149], "event": [12, 14], "attribut": [12, 13, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 152, 154, 155, 156, 157, 158, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "progress": 14, "track": 14, "reduct": [16, 167], "current": [17, 33, 179], "version": [17, 33, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 261, 263, 264, 267, 269, 271, 272, 275, 276, 279, 280, 283, 285, 287, 289, 292, 294, 295, 298, 300, 302, 304, 306, 307, 310, 312, 313, 316, 318, 320, 322, 324, 326, 328, 329, 332, 334, 336, 338, 380, 415, 416, 417, 418, 422, 423, 424, 425, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 579], "thi": [17, 33, 179], "specif": [17, 33, 53, 179, 863, 864], "cluster": 18, "k": [19, 20, 25, 27], "mean": [19, 20, 162, 434, 436, 439, 442, 451, 454], "mathemat": [19, 20, 22, 25, 46, 547], "formul": [19, 20, 22, 25], "train": [19, 22, 25, 52, 154, 157, 158, 161, 162, 165, 166, 169, 171, 172], "method": [19, 20, 22, 25, 48, 343, 365], "lloyd": 19, "": 19, "infer": [19, 22, 25, 52, 154, 157, 158, 161, 162, 165, 166, 169, 171, 172], "usag": [19, 20, 22, 25, 34, 35, 37, 38, 179, 256, 258, 361, 409, 452], "interfac": [19, 20, 22, 25, 29, 32, 34, 35, 37, 38, 41, 42, 402, 676, 691, 705, 719, 745, 786, 832, 833, 836], "descriptor": [19, 20, 22, 25, 48, 60, 159, 255, 257], "tag": [19, 20, 22, 25, 58, 550, 839], "task": [19, 20, 22, 25, 48, 803, 838, 841], "input": [19, 20, 22, 25, 51, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147], "result": [19, 20, 22, 25, 39, 51], "initi": 20, "comput": [20, 47, 48, 52], "dens": [20, 260, 413], "decomposit": 21, "princip": 22, "compon": 22, "analysi": 22, "pca": 22, "covari": 22, "svd": 22, "sign": 22, "flip": 22, "techniqu": 22, "algorithm": [23, 157, 176, 177, 550, 803], "nearest": [24, 25, 169], "neighbor": [24, 25, 169], "knn": 24, "nn": 25, "brute": 25, "forc": 25, "d": [25, 27], "tree": [25, 27], "appendix": [26, 178], "relat": [27, 152, 259], "term": [27, 43, 808], "bibliographi": [28, 341, 470], "type": [29, 36, 39, 42, 48, 55, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 259, 375, 432, 551, 552, 744, 745, 746, 759, 762, 767, 783, 838, 839, 840, 842, 844, 852], "scalar": [29, 361, 455], "enum": [29, 63], "class": [29, 159, 176, 257, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 358, 359, 360, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 554, 558, 561, 566, 580, 581, 582, 583, 591, 592, 604, 618, 619, 632, 633, 646, 654, 662, 675, 690, 704, 718, 732, 745, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 861, 862], "data": [29, 37, 38, 39, 40, 42, 55, 57, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 254, 255, 258, 413], "rang": [29, 258, 550, 601, 614, 628, 642, 671, 686, 700, 714, 728, 741, 817], "header": 31, "file": 31, "oned": [33, 43, 44], "column": 34, "accessor": [34, 35, 36, 40, 592], "row": 35, "requir": [36, 37, 42, 732, 803, 829, 830], "arrai": 37, "ownership": 37, "implement": [37, 150], "note": [37, 149, 150, 151], "csv": 38, "sourc": [38, 39, 40, 150, 154, 162, 163, 165, 166, 172, 173], "read": [38, 39], "dal": 38, "object": [38, 40, 60, 63, 177, 618, 632], "arg": [38, 39, 461], "shortcut": [39, 51], "manag": [40, 152], "dataset": [40, 437], "tabl": [40, 41, 42, 258], "metadata": [40, 42], "interact": 40, "between": [40, 154, 157, 158, 161, 162, 165, 166, 169, 171, 172], "homogen": 41, "layout": [42, 171, 254], "featur": [42, 179, 576, 577], "glossari": 43, "machin": 43, "learn": 43, "notat": [46, 53, 535, 837], "mode": [47, 152], "batch": [47, 154], "onlin": 47, "distribut": [47, 342, 343, 364, 365], "float": [48, 152], "end": [49, 90, 596, 608, 622, 636, 665, 676, 681, 691, 695, 705, 709, 719, 723, 737], "support": [51, 52, 54, 56, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 432], "convent": [53, 837], "variabl": [53, 579], "tensor": [53, 63, 149, 154], "name": [53, 803], "rnn": [53, 170], "bfloat16": 54, "int8": 56, "quantiz": [56, 117, 152], "numer": 56, "behavior": 56, "convolut": [56, 81, 152, 157], "per": [56, 152], "channel": [56, 152], "scale": [56, 152, 162], "memori": [58, 59, 60, 179, 785], "format": [58, 414], "plain": 58, "optim": 58, "ani": 58, "propag": 58, "execut": [61, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 179], "engin": [61, 149, 344, 366], "low": 62, "precis": [62, 259], "logic": [63, 149], "kind": 63, "graph": [63, 64, 149, 151, 745, 753, 757, 766, 803], "member": [63, 179, 551, 552, 553, 555, 556, 562, 564, 568, 573, 581, 582, 583, 587, 588, 589, 590, 591, 592, 599, 600, 601, 604, 610, 611, 612, 614, 618, 619, 624, 625, 626, 628, 632, 633, 638, 639, 640, 642, 646, 649, 650, 654, 658, 659, 660, 661, 662, 667, 668, 669, 671, 675, 683, 684, 686, 690, 697, 698, 700, 704, 711, 712, 714, 718, 725, 726, 728, 732, 738, 739, 740, 741, 744, 746, 747, 748, 749, 751, 755, 757, 759, 760, 762, 764, 767, 770, 772, 773, 778, 779, 780, 781, 787, 788, 789, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 840, 842, 843, 844, 845, 847, 848, 849, 851, 852, 859, 862], "function": [63, 170, 176, 177, 179, 258, 547, 548, 550, 551, 552, 553, 555, 556, 562, 564, 568, 573, 579, 581, 582, 583, 589, 590, 591, 592, 601, 604, 614, 618, 619, 628, 632, 633, 642, 646, 654, 660, 661, 662, 671, 675, 686, 690, 700, 704, 714, 718, 728, 732, 741, 744, 745, 746, 747, 748, 749, 751, 755, 756, 757, 759, 760, 762, 764, 767, 770, 772, 773, 778, 779, 780, 781, 783, 785, 787, 788, 789, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 840, 842, 843, 844, 845, 847, 849, 851, 852, 859, 862], "macro": [63, 576, 577], "specifi": 63, "unknown": 63, "shape": 63, "extens": [64, 151, 177, 188, 291], "ab": [65, 456], "argument": [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 455], "output": [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 152], "absbackward": 66, "add": [67, 460], "avgpool": 68, "avgpoolbackward": 69, "batchnormforwardtrain": 70, "batchnorminfer": 71, "batchnormtrainingbackward": 72, "biasadd": 73, "biasaddbackward": 74, "clamp": 75, "clampbackward": 76, "concat": [77, 156], "convtranspos": 78, "convtransposebackwarddata": 79, "convtransposebackwardweight": 80, "regular": [81, 157], "group": [81, 152, 157, 838], "dilat": [81, 157], "convolutionbackwarddata": 82, "convolutionbackwardweight": 83, "dequant": 84, "divid": 85, "dynamicdequant": 86, "dynamicquant": 87, "elu": 88, "elubackward": 89, "exp": [91, 489], "gelu": 92, "gelubackward": 93, "hardsigmoid": 94, "hardsigmoidbackward": 95, "hardswish": 96, "hardswishbackward": 97, "interpol": 98, "interpolatebackward": 99, "layernorm": 100, "layernormbackward": 101, "leakyrelu": 102, "log": 103, "logsoftmax": 104, "logsoftmaxbackward": 105, "matmul": 106, "maxpool": 107, "maxpoolbackward": 108, "maximum": 109, "minimum": 110, "mish": 111, "mishbackward": 112, "multipli": 113, "prelu": [114, 166], "rule": [114, 115], "prelubackward": 115, "pow": [116, 520], "relu": [118, 153], "relubackward": 119, "reciproc": 120, "reducel1": 121, "reducel2": 122, "reducemax": 123, "reducemean": 124, "reducemin": 125, "reduceprod": 126, "reducesum": 127, "reorder": [128, 168], "round": [129, 527], "select": 130, "sigmoid": 131, "sigmoidbackward": 132, "softplu": 133, "softplusbackward": 134, "softmax": [135, 172], "softmaxbackward": 136, "sqrt": [137, 537], "sqrtbackward": 138, "squar": 139, "squareddiffer": 140, "staticreshap": 141, "statictranspos": 142, "subtract": 143, "tanh": [144, 541], "tanhbackward": 145, "typecast": 146, "wildcard": 147, "set": 148, "partit": [149, 402], "compil": 149, "onednn": 150, "open": 150, "test": 150, "scratchpad": 152, "librari": [152, 177, 785], "user": 152, "1": [152, 157, 185], "weight": 152, "2": [152, 157, 186], "implicit": 152, "downconvers": 152, "math": [152, 260, 545], "post": [153, 154, 155, 156, 157, 158, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 179], "op": [153, 154, 155, 156, 157, 158, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "eltwis": 153, "sum": [153, 173], "binari": [153, 155, 587, 599, 610, 624, 638, 649, 658, 667, 683, 697, 711, 725, 738], "chain": 153, "normal": [154, 159, 162, 163], "forward": [154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 169, 171, 172, 754], "differ": [154, 157, 158, 161, 162, 165, 166, 169, 171, 172], "backward": [154, 155, 156, 157, 158, 161, 162, 163, 165, 166, 169, 171, 172, 258], "represent": [154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173], "destin": [154, 162, 163, 165, 166, 172, 173], "Their": [154, 162, 163, 165, 166, 172], "gradient": [154, 162, 163, 165, 166, 172], "statist": [154, 260, 445, 448, 452], "deconvolut": 157, "transpos": 157, "elementwis": 158, "base": [159, 409, 452], "primit": [159, 160], "enumer": [159, 259, 562, 757, 776], "flag": 159, "indic": [159, 258], "inner": 161, "product": 161, "layer": 162, "varianc": 162, "shift": 162, "local": [163, 850], "respons": 163, "matrix": [164, 340, 413, 426, 427], "multipl": 164, "pool": 165, "resampl": 169, "bilinear": 169, "cell": 170, "vanilla": 170, "lstm": 170, "peephol": 170, "project": 170, "gru": 170, "linear": [170, 260, 291], "befor": 170, "reset": 170, "augru": 170, "shuffl": 171, "onedpl": 175, "parallel": [176, 550, 601, 614, 628, 642, 671, 686, 700, 714, 728, 741], "c": [176, 177, 179, 786], "standard": [176, 177, 179], "align": 176, "polici": [176, 595, 680, 694, 708, 722, 756, 763], "dpc": [176, 179], "device_polici": 176, "make_device_polici": 176, "buffer": [176, 179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 261, 263, 264, 267, 269, 271, 272, 275, 276, 279, 280, 283, 285, 287, 289, 292, 294, 295, 298, 300, 302, 304, 306, 307, 310, 312, 313, 316, 318, 320, 322, 324, 326, 328, 329, 332, 334, 336, 338, 380, 409, 415, 416, 417, 418, 422, 423, 424, 425, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 450, 451, 453, 454, 745, 754], "wrapper": 176, "iter": [176, 586, 596, 601, 608, 614, 622, 628, 636, 642, 657, 665, 671, 681, 686, 695, 700, 709, 714, 723, 728, 737, 741, 855], "sycl": 177, "kernel": 177, "random": [177, 260, 344, 361, 362, 366, 410, 412], "number": [177, 260, 344, 361, 362, 366, 402, 410, 412, 590, 661, 676, 691, 705, 719], "limit": [177, 771], "onemkl": [178, 179, 260, 361, 409, 452, 549], "futur": 178, "consider": 178, "acknowledg": 178, "us": 179, "queue": [179, 580, 589, 756], "non": [179, 562, 583, 587, 588, 591, 599, 600, 604, 610, 611, 612, 619, 624, 625, 626, 633, 638, 639, 640, 646, 649, 650, 654, 658, 659, 662, 667, 668, 669, 675, 683, 684, 690, 697, 698, 704, 711, 712, 718, 725, 726, 732, 738, 739, 740, 762, 780, 787, 789, 791, 843, 847, 849, 852, 859, 862], "asynchron": 179, "synchron": 179, "when": 179, "usm": [179, 180, 181, 182, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 261, 263, 264, 267, 269, 271, 272, 275, 276, 279, 280, 283, 285, 287, 289, 292, 294, 295, 298, 300, 302, 304, 306, 307, 310, 312, 313, 316, 318, 320, 322, 324, 326, 328, 329, 332, 334, 336, 338, 380, 409, 415, 416, 417, 418, 422, 423, 424, 425, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 450, 451, 452, 453, 454], "host": [179, 364, 366, 367, 409, 410, 411], "thread": [179, 850, 860], "safeti": [179, 732, 860], "The": [179, 257, 590, 661, 676, 691, 705, 719], "unifi": 179, "share": 179, "design": 179, "defin": 179, "lapack": [179, 291], "other": [179, 583, 591, 604, 619, 633, 646, 654, 662, 675, 690, 704, 718, 732], "pre": 179, "condit": 179, "check": 179, "asum": 180, "axpbi": 181, "axpi": 182, "axpy_batch": 183, "bla": [184, 185, 186, 187, 188, 431, 455], "routin": [184, 185, 186, 187, 291, 350, 362, 363, 367, 410, 411, 448, 449], "3": 187, "like": [188, 291], "copi": [189, 584, 593, 605, 620, 634, 647, 655, 663, 677, 692, 706, 720, 734, 854], "copy_batch": 190, "dgmm_batch": 191, "dot": 192, "dotc": 193, "dotu": 194, "gbmv": 195, "gemm": 196, "gemm_batch": 197, "gemm_bia": 198, "gemmt": 199, "gemv": 200, "gemv_batch": 201, "ger": 202, "gerc": 203, "geru": 204, "hbmv": 205, "hemm": 206, "hemv": 207, "her": 208, "her2": 209, "her2k": 210, "herk": 211, "hpmv": 212, "hpr": 213, "hpr2": 214, "iamax": 215, "iamin": 216, "imatcopi": 217, "imatcopy_batch": 218, "nrm2": 219, "omatadd": 220, "omatadd_batch": 221, "omatcopi": 222, "omatcopy2": 223, "omatcopy_batch": 224, "rot": 225, "rotg": 226, "rotm": 227, "rotmg": 228, "sbmv": 229, "scal": 230, "sdsdot": 231, "spmv": [232, 429], "spr": 233, "spr2": 234, "swap": [235, 581, 588, 590, 600, 603, 612, 617, 626, 631, 640, 645, 650, 653, 659, 661, 669, 674, 684, 689, 698, 703, 712, 717, 726, 731, 740, 743], "symm": 236, "symv": 237, "syr": 238, "syr2": 239, "syr2k": 240, "syrk": 241, "syrk_batch": 242, "tbmv": 243, "tbsv": 244, "tpmv": 245, "tpsv": 246, "trmm": 247, "In": [247, 249], "place": [247, 249], "out": [247, 249], "trmv": 248, "trsm": 249, "trsm_batch": 250, "trsv": 251, "compute_backward": 252, "compute_forward": 253, "configur": [254, 575], "storag": [255, 340, 414, 850], "complex": 255, "real": [255, 258], "workspac": 256, "placement": 256, "workspace_plac": 256, "typic": 256, "workspace_extern": 256, "constructor": [257, 581, 584, 593, 605, 620, 634, 647, 655, 663, 677, 692, 706, 720, 734, 854], "assign": [257, 581, 584, 593, 605, 620, 634, 647, 655, 663, 677, 692, 706, 720, 734, 854], "set_valu": 257, "get_valu": 257, "set_workspac": 257, "commit": 257, "discret": [258, 260, 360, 405], "fourier": [258, 260], "transform": [258, 260], "finit": 258, "elementari": 258, "addit": 258, "constraint": 258, "domain": [258, 259, 260], "dft": [258, 259], "recommend": 258, "summari": [258, 260, 445, 448, 452, 754], "scope": 259, "config_param": 259, "config_valu": 259, "algebra": 260, "spars": [260, 413, 414, 431], "vector": [260, 361, 413, 545], "gebrd": 261, "gebrd_scratchpad_s": 262, "geqrf": 263, "geqrf_batch": 264, "geqrf_batch_scratchpad_s": 265, "geqrf_scratchpad_s": 266, "gerqf": 267, "gerqf_scratchpad_s": 268, "gesvd": 269, "gesvd_scratchpad_s": 270, "getrf": 271, "getrf_batch": 272, "getrf_batch_scratchpad_s": 273, "getrf_scratchpad_s": 274, "getri": 275, "getri_batch": 276, "getri_batch_scratchpad_s": 277, "getri_scratchpad_s": 278, "getr": 279, "getrs_batch": 280, "getrs_batch_scratchpad_s": 281, "getrs_scratchpad_s": 282, "heevd": 283, "heevd_scratchpad_s": 284, "hegvd": 285, "hegvd_scratchpad_s": 286, "hetrd": 287, "hetrd_scratchpad_s": 288, "hetrf": 289, "hetrf_scratchpad_s": 290, "equat": 291, "singular": 291, "eigenvalu": 291, "problem": 291, "orgbr": 292, "orgbr_scratchpad_s": 293, "orgqr": 294, "orgqr_batch": 295, "orgqr_batch_scratchpad_s": 296, "orgqr_scratchpad_s": 297, "orgtr": 298, "orgtr_scratchpad_s": 299, "ormqr": 300, "ormqr_scratchpad_s": 301, "ormrq": 302, "ormrq_scratchpad_s": 303, "ormtr": 304, "ormtr_scratchpad_s": 305, "potrf": 306, "potrf_batch": 307, "potrf_batch_scratchpad_s": 308, "potrf_scratchpad_s": 309, "potri": 310, "potri_scratchpad_s": 311, "potr": 312, "potrs_batch": 313, "potrs_batch_scratchpad_s": 314, "potrs_scratchpad_s": 315, "syevd": 316, "syevd_scratchpad_s": 317, "sygvd": 318, "sygvd_scratchpad_s": 319, "sytrd": 320, "sytrd_scratchpad_s": 321, "sytrf": 322, "sytrf_scratchpad_s": 323, "trtr": 324, "trtrs_scratchpad_s": 325, "ungbr": 326, "ungbr_scratchpad_s": 327, "ungqr": 328, "ungqr_batch": 329, "ungqr_batch_scratchpad_s": 330, "ungqr_scratchpad_s": 331, "ungtr": 332, "ungtr_scratchpad_s": 333, "unmqr": 334, "unmqr_scratchpad_s": 335, "unmrq": 336, "unmrq_scratchpad_s": 337, "unmtr": 338, "unmtr_scratchpad_s": 339, "templat": [343, 365, 432, 561, 582, 583, 591, 604, 619, 633, 646, 654, 662, 675, 690, 704, 718, 732], "paramet": [343, 365], "basic": [344, 366], "bernoulli": [345, 369], "bit": [346, 372], "exponenti": [347, 376], "gaussian": [348, 378], "lognorm": [351, 386], "mcg31m1": [352, 387], "mcg59": [353, 388], "mrg32k3a": [354, 389], "philox4x32x10": [355, 396], "poisson": [356, 397], "skip_ahead": [357, 402], "uniform_bit": [358, 406], "uniform": [359, 360, 404, 405], "continu": [359, 404], "rng": [361, 409, 412], "servic": [363, 411, 449, 548, 745], "ars5": 368, "beta": 370, "binomi": 371, "cauchi": 373, "chi_squar": 374, "default_engin": 375, "alia": 375, "gamma": 377, "gaussian_mv": 379, "geometr": 381, "gumbel": 382, "hypergeometr": 383, "laplac": 384, "leapfrog": 385, "mt19937": 390, "mt2203": 391, "multinomi": 392, "negative_binomi": 393, "niederreit": 394, "nondeterminist": 395, "poisson_v": 398, "r250": 399, "rayleigh": 400, "sfmt19937": 401, "skip": 402, "element": [402, 581, 584, 589, 590, 593, 598, 605, 607, 615, 617, 620, 629, 631, 634, 643, 645, 647, 651, 655, 660, 661, 663, 672, 674, 677, 679, 687, 689, 692, 701, 703, 706, 715, 717, 720, 729, 731, 734, 736], "sobol": 403, "weibul": 407, "wichmann_hil": 408, "init_coo_matrix": 415, "init_csr_matrix": 416, "init_dense_matrix": 417, "init_dense_vector": 418, "release_dense_matrix": 419, "release_dense_vector": 420, "release_sparse_matrix": 421, "set_coo_matrix_data": 422, "set_csr_matrix_data": 423, "set_dense_matrix_data": 424, "set_dense_vector_data": 425, "set_matrix_properti": 426, "properti": [426, 745, 754], "view": 427, "matrix_descr": 427, "matrix_view": 427, "spmm": 428, "spmm_descr": 428, "init_spmm_descr": 428, "release_spmm_descr": 428, "spmm_alg": 428, "spmv_descr": 429, "init_spmv_descr": 429, "release_spmv_descr": 429, "spmv_alg": 429, "spsv": 430, "spsv_descr": 430, "init_spsv_descr": 430, "release_spsv_descr": 430, "spsv_alg": 430, "central_mo": [433, 434], "provid": [434, 436, 439, 451, 454, 829, 830], "central_sum": [435, 436], "structur": 437, "kurtosi": [438, 439], "make_dataset": 440, "max": 441, "min": 443, "min_max": 444, "raw_moment": 446, "mkl": [446, 454], "stat": [446, 454], "raw_sum": 447, "skew": [450, 451], "variat": [453, 454], "aco": 457, "acosh": 458, "acospi": 459, "asin": 462, "asinh": 463, "asinpi": 464, "atan": 465, "atan2": 466, "atan2pi": 467, "atanh": 468, "atanpi": 469, "cbrt": 471, "cdfnorm": 472, "cdfnorminv": 473, "ceil": 474, "ci": 475, "clear_statu": 476, "conj": 477, "copysign": 478, "co": 479, "cosd": 480, "cosh": 481, "cospi": 482, "create_error_handl": 483, "div": 484, "erf": 485, "erfc": 486, "erfcinv": 487, "erfinv": 488, "exp10": 490, "exp2": 491, "expint1": 492, "expm1": 493, "fdim": 494, "floor": 495, "fmax": 496, "fmin": 497, "fmod": 498, "frac": 499, "get_mod": 500, "get_statu": 501, "hypot": 502, "inv": 503, "invcbrt": 504, "invsqrt": 505, "lgamma": 506, "linearfrac": 507, "ln": 508, "log10": 509, "log1p": 510, "log2": 511, "logb": 512, "maxmag": 513, "minmag": 514, "modf": 515, "mul": 516, "mulbyconj": 517, "nearbyint": 518, "nextaft": 519, "pow2o3": 521, "pow3o2": 522, "powr": 523, "powx": 524, "remaind": 525, "rint": 526, "set_statu": 528, "set_mod": 529, "sin": 530, "sinco": 531, "sind": 532, "sinh": 533, "sinpi": 534, "special": [535, 745], "sqr": 536, "sub": 538, "tan": 539, "tand": 540, "tanpi": 542, "tgamma": 543, "trunc": 544, "vm": [547, 548], "block": 550, "partition": 550, "split": [550, 573, 574], "blocked_range2d": 551, "blocked_range3d": 552, "blocked_rang": 553, "collaborative_call_onc": 554, "collaborative_once_flag": [554, 555], "feeder": [556, 558], "parallel_deterministic_reduc": 557, "parallel_for_each": 558, "parallel_for": 559, "parallel_invok": 560, "parallel_pipelin": 561, "filter": [561, 562], "flow_control": [561, 564], "filter_mod": [562, 563], "deduct": [562, 585, 594, 606, 621, 635, 648, 656, 664, 678, 693, 707, 721, 735, 751, 755, 760, 762, 778], "guid": [562, 585, 594, 606, 621, 635, 648, 656, 664, 678, 693, 707, 721, 735, 751, 755, 760, 762, 778], "parallel_reduc": 565, "imper": [565, 566], "form": [565, 566], "lambda": [565, 566], "express": [565, 566], "parallel_scan": 566, "pre_scan": 566, "final_scan": 566, "parallel_sort": 567, "pre_scan_tag": 568, "final_scan_tag": 568, "affinity_partition": 569, "auto_partition": 570, "simple_partition": 571, "static_partition": 572, "proport": 573, "enabl": 576, "debug": 576, "tbb_use_assert": 576, "tbb_use_profiling_tool": 576, "tbb_use_except": 577, "tbb_use_glibcxx_vers": 577, "tbb": 578, "flow": [578, 745, 753, 766, 803], "inform": [579, 834], "tbb_runtime_interface_vers": 579, "tbb_runtime_vers": 579, "tbb_version": 579, "environ": 579, "contain": [580, 584, 593, 605, 609, 620, 623, 629, 634, 637, 643, 647, 655, 663, 666, 672, 677, 682, 692, 696, 701, 706, 710, 715, 720, 724, 729, 734, 803, 854], "sequenc": [580, 584, 593, 598, 605, 615, 617, 620, 629, 631, 634, 643, 645, 647, 655, 663, 672, 674, 677, 687, 689, 692, 701, 703, 706, 715, 717, 720, 729, 731, 734, 828], "unord": 580, "associ": 580, "order": 580, "auxiliari": [580, 832], "node": [581, 615, 617, 629, 631, 643, 645, 672, 674, 687, 689, 701, 703, 715, 717, 729, 731, 745, 756, 768], "synopsi": [581, 582, 583, 591, 604, 618, 619, 632, 633, 646, 654, 662, 675, 690, 704, 718, 732], "destructor": [581, 584, 593, 605, 620, 634, 647, 655, 663, 677, 692, 706, 720, 734, 854], "state": 581, "access": [581, 592, 607, 679, 736], "get_alloc": [581, 589, 593, 613, 627, 641, 660, 670, 685, 699, 713, 727, 734], "tbb_hash_compar": 582, "concurrent_bounded_queu": 583, "construct": [584, 592, 593, 605, 620, 634, 647, 655, 663, 677, 692, 706, 720, 734, 854], "destruct": [584, 592, 593, 605, 620, 634, 647, 655, 663, 677, 692, 706, 720, 734, 854], "empti": [584, 592, 593, 602, 605, 616, 620, 630, 634, 644, 647, 652, 655, 663, 673, 677, 688, 692, 702, 706, 716, 720, 730, 734, 742, 854], "from": [584, 593, 605, 620, 634, 647, 655, 663, 677, 692, 706, 720, 734], "move": [584, 593, 605, 620, 634, 647, 655, 663, 677, 692, 706, 720, 734, 854], "unsafe_begin": [586, 657], "unsafe_cbegin": [586, 657], "unsafe_end": [586, 657], "unsafe_cend": [586, 657], "comparison": [587, 599, 610, 611, 624, 625, 638, 639, 649, 658, 667, 668, 683, 697, 711, 725, 738, 739], "concurr": [589, 590, 598, 603, 615, 617, 629, 631, 643, 645, 651, 653, 660, 661, 672, 674, 687, 689, 701, 703, 715, 717, 729, 731, 733, 743, 771, 856, 858], "safe": [589, 598, 615, 629, 643, 651, 660, 672, 687, 701, 715, 729, 856], "push": [589, 651, 660], "pop": [589, 651, 660], "abort": 589, "capac": [589, 602, 616, 630, 644, 652, 673, 688, 702, 716, 730, 742, 857], "unsaf": [590, 603, 617, 631, 645, 653, 661, 674, 689, 703, 717, 731, 743, 858], "clear": [590, 603, 617, 631, 645, 653, 661, 674, 689, 703, 717, 731, 743, 858], "concurrent_hash_map": 591, "const_accessor": 592, "pair": 592, "releas": 592, "hash": [595, 680, 694, 708, 722], "rehash": [595, 680, 694, 708, 722], "bucket_count": 595, "begin": [596, 608, 622, 636, 665, 676, 681, 691, 695, 705, 709, 719, 723, 737], "cbegin": [596, 608, 622, 636, 665, 681, 695, 709, 723, 737], "cend": [596, 608, 622, 636, 665, 681, 695, 709, 723, 737], "equal_rang": [596, 609, 623, 637, 666, 682, 696, 710, 724], "lookup": [597, 609, 623, 637, 666, 682, 696, 710, 724], "find": [597, 609, 623, 637, 666, 682, 696, 710, 724], "count": [597, 609, 623, 637, 666, 682, 696, 710, 724], "modifi": [598, 603, 615, 617, 629, 631, 643, 645, 651, 653, 672, 674, 687, 689, 701, 703, 715, 717, 729, 731, 856, 858], "insert": [598, 615, 629, 643, 672, 687, 701, 715, 729], "emplac": [598, 615, 629, 643, 672, 687, 701, 715, 729], "eras": [598, 617, 631, 645, 674, 689, 703, 717, 731], "size": [602, 616, 630, 644, 652, 673, 676, 688, 691, 702, 705, 716, 719, 730, 742, 857], "max_siz": [602, 616, 630, 644, 673, 688, 702, 716, 730, 742], "concurrent_map": 604, "lower_bound": [609, 623, 637, 666], "upper_bound": [609, 623, 637, 666], "lexicograph": [611, 625, 639, 668, 739], "observ": [613, 627, 641, 670, 685, 699, 713, 727], "key_comp": [613, 627, 641, 670], "value_comp": [613, 627, 641, 670], "extract": [617, 631, 645, 674, 689, 703, 717, 731], "value_compar": [618, 632], "concurrent_multimap": 619, "merg": [629, 643, 672, 701, 715, 729], "concurrent_multiset": 633, "concurrent_priority_queu": 646, "concurrent_queu": 654, "concurrent_set": 662, "concurrent_unordered_map": 675, "bucket": [676, 691, 705, 719], "load": [680, 694, 708, 722], "factor": [680, 694, 708, 722], "manual": [680, 694, 708, 722], "hash_funct": [685, 699, 713, 727], "key_eq": [685, 699, 713, 727], "concurrent_unordered_multimap": 690, "concurrent_unordered_multiset": 704, "concurrent_unordered_set": 718, "concurrent_vector": 732, "growth": 733, "grow_bi": 733, "grow_to_at_least": 733, "push_back": 733, "emplace_back": 733, "index": 736, "first": 736, "last": 736, "rbegin": 737, "crbegin": 737, "rend": 737, "crend": 737, "reserv": [743, 782], "resiz": 743, "shrink_to_fit": 743, "task_arena": [744, 844], "attach": [744, 839], "constant": [744, 840, 842, 844, 848, 852], "abstract": 745, "port": 745, "edg": 745, "messag": [745, 766], "async_nod": 746, "broadcast_nod": 747, "buffer_nod": 748, "composite_nod": 749, "continue_msg": 750, "continue_nod": 751, "copy_bodi": 752, "depend": 753, "function_nod": 755, "reject": 756, "lightweight": 756, "reset_flag": [757, 776], "graph_nod": 758, "indexer_nod": 759, "input_nod": 760, "input_port": 761, "join_nod": [762, 763], "limiter_nod": 764, "make_edg": 765, "multifunction_nod": 767, "prioriti": 768, "output_port": 769, "overwrite_nod": 770, "predefin": 771, "priority_queue_nod": 772, "queue_nod": 773, "receiv": 774, "remove_edg": 775, "sender": 777, "sequencer_nod": 778, "split_nod": 779, "tagged_msg": 780, "write_once_nod": 781, "identifi": 782, "case": 782, "prefix": 782, "info": 783, "alloc": [785, 786], "resourc": 785, "scalabl": 786, "cache_aligned_alloc": 787, "cache_aligned_resourc": 788, "scalable_alloc": 789, "scalable_memory_resourc": 790, "tbb_alloc": 791, "mutual": 792, "exclus": 792, "mutex": [792, 793, 803, 829, 830], "null_mutex": 794, "null_rw_mutex": 795, "queuing_mutex": 796, "queuing_rw_mutex": 797, "rw_mutex": 798, "speculative_spin_mutex": 799, "speculative_spin_rw_mutex": 800, "spin_mutex": 801, "spin_rw_mutex": 802, "schedul": [803, 838], "blockedrangevalu": 804, "containerbasedsequ": 805, "filterbodi": 806, "parallelforbodi": 807, "parallelforeachbodi": 808, "parallelforfunc": 809, "parallelforindex": 810, "parallelreducebodi": 811, "parallelreducefunc": 812, "parallelreducereduct": 813, "parallelscanbodi": 814, "parallelscancombin": 815, "parallelscanfunc": 816, "splittabl": 818, "containerrang": 819, "hashcompar": 820, "asyncnodebodi": 821, "continuenodebodi": 822, "functionnodebodi": 823, "gatewaytyp": 824, "inputnodebodi": 825, "joinnodefunctionobject": 826, "multifunctionnodebodi": 827, "guarante": [829, 830], "readerwritermutex": 830, "suspendfunc": 831, "onetbb": [832, 833, 835, 836], "deprec": 833, "control": 838, "arena": 838, "helper": 838, "global_control": 840, "resum": 841, "task_group_context": 842, "task_scheduler_handl": 843, "task_scheduler_observ": 845, "this_task_arena": 846, "task_group": 847, "task_group_statu": 848, "task_handl": 849, "combin": [851, 853], "enumerable_thread_specif": 852, "flattened2d": 859, "time": 861, "syntax": 861, "tick_count": 862, "interval_t": 862, "target": 864, "audienc": 864, "goal": 864, "contribut": 864, "guidelin": 864, "legal": 865, "notic": 865, "disclaim": 865}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Software Architecture": [[0, "software-architecture"]], "oneAPI Platform": [[0, "oneapi-platform"]], "API Programming Example": [[0, "api-programming-example"]], "Direct Programming Example": [[0, "direct-programming-example"]], "Level Zero": [[2, "level-zero"]], "Detailed API Descriptions": [[2, "detailed-api-descriptions"]], "Definitions": [[3, "definitions"], [258, "definitions"], [864, "definitions"]], "oneCCL": [[4, "oneccl"]], "Introduction": [[5, "introduction"], [45, "introduction"], [151, "introduction"], [784, "introduction"], [864, "introduction"]], "Namespaces": [[6, "namespaces"], [31, "namespaces"], [151, "namespaces"], [174, "namespaces"], [578, "namespaces"]], "oneapi::ccl namespace": [[6, "oneapi-ccl-namespace"]], "ccl namespace": [[6, "ccl-namespace"]], "Programming Model": [[7, "programming-model"], [149, "programming-model"]], "Collective Operations": [[8, "collective-operations"]], "Allgatherv": [[8, "allgatherv"]], "Allreduce": [[8, "allreduce"]], "Alltoallv": [[8, "alltoallv"]], "Barrier": [[8, "barrier"]], "Broadcast": [[8, "broadcast"]], "Reduce": [[8, "reduce"]], "ReduceScatter": [[8, "reducescatter"]], "Point-To-Point Operations": [[8, "point-to-point-operations"]], "Send": [[8, "send"]], "Recv": [[8, "recv"]], "Datatypes": [[9, "datatypes"]], "Custom Datatypes": [[9, "custom-datatypes"]], "Error handling": [[10, "error-handling"], [30, "error-handling"]], "Exception classification": [[10, "exception-classification"], [30, "exception-classification"], [179, "exception-classification"]], "Common exceptions": [[10, "common-exceptions"], [179, "common-exceptions"]], "Generic Workflow": [[11, "generic-workflow"]], "oneCCL Concepts": [[12, "oneccl-concepts"]], "Device": [[12, "device"]], "Context": [[12, "context"]], "Key-Value Store": [[12, "key-value-store"]], "Communicator": [[12, "communicator"]], "Stream": [[12, "stream"], [61, "stream"], [149, "stream"]], "Event": [[12, "event"], [14, "event"]], "Operation Attributes": [[12, "operation-attributes"], [13, "operation-attributes"], [65, "operation-attributes"], [66, "operation-attributes"], [67, "operation-attributes"], [68, "operation-attributes"], [69, "operation-attributes"], [70, "operation-attributes"], [71, "operation-attributes"], [72, "operation-attributes"], [73, "operation-attributes"], [74, "operation-attributes"], [75, "operation-attributes"], [76, "operation-attributes"], [77, "operation-attributes"], [78, "operation-attributes"], [79, "operation-attributes"], [80, "operation-attributes"], [81, "operation-attributes"], [82, "operation-attributes"], [83, "operation-attributes"], [84, "operation-attributes"], [85, "operation-attributes"], [86, "operation-attributes"], [87, "operation-attributes"], [88, "operation-attributes"], [89, "operation-attributes"], [90, "operation-attributes"], [91, "operation-attributes"], [92, "operation-attributes"], [93, "operation-attributes"], [94, "operation-attributes"], [95, "operation-attributes"], [96, "operation-attributes"], [97, "operation-attributes"], [98, "operation-attributes"], [99, "operation-attributes"], [100, "operation-attributes"], [101, "operation-attributes"], [102, "operation-attributes"], [103, "operation-attributes"], [104, "operation-attributes"], [105, "operation-attributes"], [106, "operation-attributes"], [107, "operation-attributes"], [108, "operation-attributes"], [109, "operation-attributes"], [110, "operation-attributes"], [111, "operation-attributes"], [112, "operation-attributes"], [113, "operation-attributes"], [114, "operation-attributes"], [115, "operation-attributes"], [117, "operation-attributes"], [118, "operation-attributes"], [119, "operation-attributes"], [120, "operation-attributes"], [121, "operation-attributes"], [122, "operation-attributes"], [123, "operation-attributes"], [124, "operation-attributes"], [125, "operation-attributes"], [126, "operation-attributes"], [127, "operation-attributes"], [128, "operation-attributes"], [129, "operation-attributes"], [130, "operation-attributes"], [131, "operation-attributes"], [132, "operation-attributes"], [133, "operation-attributes"], [134, "operation-attributes"], [135, "operation-attributes"], [136, "operation-attributes"], [137, "operation-attributes"], [138, "operation-attributes"], [139, "operation-attributes"], [140, "operation-attributes"], [141, "operation-attributes"], [142, "operation-attributes"], [143, "operation-attributes"], [144, "operation-attributes"], [145, "operation-attributes"], [146, "operation-attributes"], [147, "operation-attributes"]], "Operation Progress Tracking": [[14, "operation-progress-tracking"]], "Communication Operations": [[15, "communication-operations"]], "Reductions": [[16, "reductions"]], "Current Version of this oneCCL Specification": [[17, "current-version-of-this-oneccl-specification"]], "Clustering": [[18, "clustering"]], "K-Means": [[19, "k-means"]], "Mathematical formulation": [[19, "mathematical-formulation"], [20, "mathematical-formulation"], [22, "mathematical-formulation"], [25, "mathematical-formulation"]], "Training": [[19, "training"], [19, "id2"], [22, "training"], [22, "id6"], [25, "training"], [25, "id1"]], "Training method: Lloyd\u2019s": [[19, "training-method-lloyd-s"]], "Inference": [[19, "inference"], [19, "id3"], [22, "inference"], [22, "id7"], [25, "inference"], [25, "id2"]], "Inference method: Lloyd\u2019s": [[19, "inference-method-lloyd-s"]], "Usage example": [[19, "usage-example"], [20, "usage-example"], [22, "usage-example"], [25, "usage-example"], [34, "usage-example"], [35, "usage-example"], [37, "usage-example"], [38, "usage-example"]], "Programming Interface": [[19, "programming-interface"], [20, "programming-interface"], [22, "programming-interface"], [25, "programming-interface"], [38, "programming-interface"]], "Descriptor": [[19, "descriptor"], [20, "descriptor"], [22, "descriptor"], [25, "descriptor"]], "Method tags": [[19, "method-tags"], [20, "method-tags"], [22, "method-tags"], [25, "method-tags"]], "Task tags": [[19, "task-tags"], [20, "task-tags"], [22, "task-tags"], [25, "task-tags"]], "Model": [[19, "model"], [22, "model"], [25, "model"]], "Training train(...)": [[19, "training-train"], [22, "training-train"], [25, "training-train"]], "Input": [[19, "input"], [19, "kmeans-i-api-input"], [20, "input"], [22, "input"], [22, "pca-i-api-input"], [25, "input"], [25, "knn-i-api-input"], [51, "input"]], "Result": [[19, "result"], [19, "kmeans-i-api-result"], [20, "result"], [22, "result"], [22, "pca-i-api-result"], [25, "result"], [25, "knn-i-api-result"], [39, "result"], [51, "result"]], "Operation": [[19, "operation"], [19, "id6"], [20, "operation"], [22, "operation"], [22, "id10"], [25, "operation"], [25, "id5"], [38, "operation"]], "Inference infer(...)": [[19, "inference-infer"], [22, "inference-infer"], [25, "inference-infer"]], "K-Means initialization": [[20, "k-means-initialization"]], "Computing": [[20, "computing"], [20, "id1"]], "Computing method: dense": [[20, "computing-method-dense"]], "Computing compute(...)": [[20, "computing-compute"]], "Decomposition": [[21, "decomposition"]], "Principal Components Analysis (PCA)": [[22, "principal-components-analysis-pca"]], "Training method: Covariance": [[22, "training-method-covariance"]], "Training method: SVD": [[22, "training-method-svd"]], "Sign-flip technique": [[22, "sign-flip-technique"]], "Inference methods: Covariance and SVD": [[22, "inference-methods-covariance-and-svd"]], "Algorithms": [[23, "algorithms"], [157, "algorithms"], [550, "algorithms"], [803, "algorithms"]], "Nearest Neighbors (kNN)": [[24, "nearest-neighbors-knn"]], "k-Nearest Neighbors Classification (k-NN)": [[25, "k-nearest-neighbors-classification-k-nn"]], "Training method: brute-force": [[25, "training-method-brute-force"]], "Training method: k-d tree": [[25, "training-method-k-d-tree"]], "Inference method: brute-force": [[25, "inference-method-brute-force"]], "Inference method: k-d tree": [[25, "inference-method-k-d-tree"]], "Appendix": [[26, "appendix"]], "k-d Tree": [[27, "k-d-tree"]], "Related terms": [[27, "related-terms"]], "Bibliography": [[28, "bibliography"], [341, "bibliography"], [470, "bibliography"]], "Common type definitions": [[29, "common-type-definitions"]], "Programming interface": [[29, "programming-interface"], [34, "programming-interface"], [35, "programming-interface"], [37, "programming-interface"], [41, "programming-interface"], [42, "programming-interface"]], "Scalar types": [[29, "scalar-types"]], "Enum classes": [[29, "enum-classes"]], "Data type": [[29, "data-type"]], "Range": [[29, "range"], [817, "range"]], "Header files": [[31, "header-files"]], "Common Interface": [[32, "common-interface"]], "Current Version of this oneDAL Specification": [[33, "current-version-of-this-dal-short-name-specification"]], "Column accessor": [[34, "column-accessor"]], "Row accessor": [[35, "row-accessor"]], "Accessors": [[36, "accessors"]], "Requirements": [[36, "requirements"], [732, "requirements"]], "Accessor Types": [[36, "accessor-types"]], "Details": [[36, "details"], [39, "details"], [40, "details"]], "Array": [[37, "array"]], "Data ownership requirements": [[37, "data-ownership-requirements"]], "Implementation notes": [[37, "implementation-notes"]], "CSV data source": [[38, "csv-data-source"]], "Reading oneapi::dal::read<Object>(...)": [[38, "reading-oneapi-dal-read-object"]], "Args": [[38, "args"], [39, "args"]], "Data Sources": [[39, "data-sources"]], "Read": [[39, "read"]], "Read operation definition": [[39, "read-operation-definition"]], "Read operation shortcuts": [[39, "read-operation-shortcuts"]], "Data Source Types": [[39, "data-source-types"]], "Data management": [[40, "data-management"]], "Key concepts": [[40, "key-concepts"]], "Dataset": [[40, "dataset"]], "Data source": [[40, "data-source"]], "Table": [[40, "table"], [42, "table"]], "Table metadata": [[40, "table-metadata"], [42, "table-metadata"]], "Accessor": [[40, "accessor"]], "Example of interaction between table and accessor objects": [[40, "example-of-interaction-between-table-and-accessor-objects"]], "Homogeneous table": [[41, "homogeneous-table"]], "Tables": [[42, "tables"]], "Requirements on table types": [[42, "requirements-on-table-types"]], "Table types": [[42, "table-types"]], "Data layout": [[42, "data-layout"]], "Feature type": [[42, "feature-type"]], "Glossary": [[43, "glossary"]], "Machine learning terms": [[43, "machine-learning-terms"]], "oneDAL terms": [[43, "dal-short-name-terms"]], "Common oneAPI terms": [[43, "common-oneapi-terms"]], "oneDAL": [[44, "dal-short-name"]], "Mathematical Notations": [[46, "mathematical-notations"]], "Computational modes": [[47, "computational-modes"]], "Batch": [[47, "batch"]], "Online": [[47, "online"]], "Distributed": [[47, "distributed"]], "Descriptors": [[48, "descriptors"], [60, "descriptors"]], "Floating-point Types": [[48, "floating-point-types"]], "Computational Methods": [[48, "computational-methods"]], "Computational Tasks": [[48, "computational-tasks"]], "End-to-end example": [[49, "end-to-end-example"]], "Programming model": [[50, "programming-model"]], "Operations": [[51, "operations"], [149, "operations"]], "General operation definition": [[51, "general-operation-definition"]], "Operation shortcuts": [[51, "operation-shortcuts"]], "Supported operation": [[51, "supported-operation"]], "Supported operations": [[52, "supported-operations"]], "Train": [[52, "train"]], "Infer": [[52, "infer"]], "Compute": [[52, "compute"]], "Conventions": [[53, "conventions"]], "Variable (Tensor) Names": [[53, "variable-tensor-names"]], "RNN-Specific Notation": [[53, "rnn-specific-notation"]], "Bfloat16": [[54, "bfloat16"]], "Workflow": [[54, "workflow"], [56, "workflow"]], "Support": [[54, "support"], [56, "support"]], "Data types": [[55, "data-types"]], "Int8": [[56, "int8"]], "Quantization Model": [[56, "quantization-model"]], "Numerical behavior": [[56, "numerical-behavior"]], "Example: Convolution Quantization Workflow": [[56, "example-convolution-quantization-workflow"]], "Per-Channel Scaling": [[56, "per-channel-scaling"]], "Data model": [[57, "data-model"]], "Memory Formats": [[58, "memory-formats"]], "Plain Memory Formats": [[58, "plain-memory-formats"]], "Format Tags": [[58, "format-tags"]], "Optimized Format \u2018any\u2019": [[58, "optimized-format-any"]], "Memory Format Propagation": [[58, "memory-format-propagation"]], "API": [[58, "api"], [60, "api"], [152, "api"], [153, "api"], [154, "api"], [155, "api"], [156, "api"], [157, "api"], [158, "api"], [161, "api"], [162, "api"], [163, "api"], [164, "api"], [165, "api"], [166, "api"], [167, "api"], [168, "api"], [169, "api"], [170, "api"], [171, "api"], [172, "api"], [173, "api"]], "Memory": [[59, "memory"]], "Memory Descriptors and Objects": [[60, "memory-descriptors-and-objects"]], "Objects": [[60, "objects"]], "Execution Model": [[61, "execution-model"], [179, "execution-model"]], "Engine": [[61, "engine"], [149, "engine"]], "Data Model": [[62, "data-model"]], "Low Precision Support": [[62, "low-precision-support"]], "Common Definitions": [[63, "common-definitions"], [159, "common-definitions"]], "Logical tensor enums and type": [[63, "logical-tensor-enums-and-type"]], "Operation attributes and kinds": [[63, "operation-attributes-and-kinds"]], "Graph objects member functions": [[63, "graph-objects-member-functions"]], "Macros to specify unknown shapes": [[63, "macros-to-specify-unknown-shapes"]], "Graph extension": [[64, "graph-extension"]], "Abs": [[65, "abs"]], "Execution Arguments": [[65, "execution-arguments"], [66, "execution-arguments"], [67, "execution-arguments"], [68, "execution-arguments"], [69, "execution-arguments"], [70, "execution-arguments"], [71, "execution-arguments"], [72, "execution-arguments"], [73, "execution-arguments"], [74, "execution-arguments"], [75, "execution-arguments"], [76, "execution-arguments"], [77, "execution-arguments"], [78, "execution-arguments"], [79, "execution-arguments"], [80, "execution-arguments"], [81, "execution-arguments"], [82, "execution-arguments"], [83, "execution-arguments"], [84, "execution-arguments"], [85, "execution-arguments"], [86, "execution-arguments"], [87, "execution-arguments"], [88, "execution-arguments"], [89, "execution-arguments"], [90, "execution-arguments"], [91, "execution-arguments"], [92, "execution-arguments"], [93, "execution-arguments"], [94, "execution-arguments"], [95, "execution-arguments"], [96, "execution-arguments"], [97, "execution-arguments"], [98, "execution-arguments"], [99, "execution-arguments"], [100, "execution-arguments"], [101, "execution-arguments"], [102, "execution-arguments"], [103, "execution-arguments"], [104, "execution-arguments"], [105, "execution-arguments"], [106, "execution-arguments"], [107, "execution-arguments"], [108, "execution-arguments"], [109, "execution-arguments"], [110, "execution-arguments"], [111, "execution-arguments"], [112, "execution-arguments"], [113, "execution-arguments"], [114, "execution-arguments"], [115, "execution-arguments"], [117, "execution-arguments"], [118, "execution-arguments"], [119, "execution-arguments"], [120, "execution-arguments"], [121, "execution-arguments"], [122, "execution-arguments"], [123, "execution-arguments"], [124, "execution-arguments"], [125, "execution-arguments"], [126, "execution-arguments"], [127, "execution-arguments"], [128, "execution-arguments"], [129, "execution-arguments"], [130, "execution-arguments"], [131, "execution-arguments"], [132, "execution-arguments"], [133, "execution-arguments"], [134, "execution-arguments"], [135, "execution-arguments"], [136, "execution-arguments"], [137, "execution-arguments"], [138, "execution-arguments"], [139, "execution-arguments"], [140, "execution-arguments"], [141, "execution-arguments"], [142, "execution-arguments"], [143, "execution-arguments"], [144, "execution-arguments"], [145, "execution-arguments"], [146, "execution-arguments"], [147, "execution-arguments"], [154, "execution-arguments"], [155, "execution-arguments"], [156, "execution-arguments"], [157, "execution-arguments"], [158, "execution-arguments"], [161, "execution-arguments"], [162, "execution-arguments"], [163, "execution-arguments"], [164, "execution-arguments"], [165, "execution-arguments"], [166, "execution-arguments"], [167, "execution-arguments"], [168, "execution-arguments"], [169, "execution-arguments"], [170, "execution-arguments"], [171, "execution-arguments"], [172, "execution-arguments"], [173, "execution-arguments"]], "Inputs": [[65, "inputs"], [66, "inputs"], [67, "inputs"], [68, "inputs"], [69, "inputs"], [70, "inputs"], [71, "inputs"], [72, "inputs"], [73, "inputs"], [74, "inputs"], [75, "inputs"], [76, "inputs"], [77, "inputs"], [78, "inputs"], [79, "inputs"], [80, "inputs"], [81, "inputs"], [82, "inputs"], [83, "inputs"], [84, "inputs"], [85, "inputs"], [86, "inputs"], [87, "inputs"], [88, "inputs"], [89, "inputs"], [90, "inputs"], [91, "inputs"], [92, "inputs"], [93, "inputs"], [94, "inputs"], [95, "inputs"], [96, "inputs"], [97, "inputs"], [98, "inputs"], [99, "inputs"], [100, "inputs"], [101, "inputs"], [102, "inputs"], [103, "inputs"], [104, "inputs"], [105, "inputs"], [106, "inputs"], [107, "inputs"], [108, "inputs"], [109, "inputs"], [110, "inputs"], [111, "inputs"], [112, "inputs"], [113, "inputs"], [114, "inputs"], [115, "inputs"], [116, "inputs"], [117, "inputs"], [118, "inputs"], [119, "inputs"], [120, "inputs"], [121, "inputs"], [122, "inputs"], [123, "inputs"], [124, "inputs"], [125, "inputs"], [126, "inputs"], [127, "inputs"], [128, "inputs"], [129, "inputs"], [130, "inputs"], [131, "inputs"], [132, "inputs"], [133, "inputs"], [134, "inputs"], [135, "inputs"], [136, "inputs"], [137, "inputs"], [138, "inputs"], [139, "inputs"], [140, "inputs"], [141, "inputs"], [142, "inputs"], [143, "inputs"], [144, "inputs"], [145, "inputs"], [146, "inputs"], [147, "inputs"]], "Outputs": [[65, "outputs"], [66, "outputs"], [67, "outputs"], [68, "outputs"], [69, "outputs"], [70, "outputs"], [71, "outputs"], [72, "outputs"], [73, "outputs"], [74, "outputs"], [75, "outputs"], [76, "outputs"], [77, "outputs"], [78, "outputs"], [79, "outputs"], [80, "outputs"], [81, "outputs"], [82, "outputs"], [83, "outputs"], [84, "outputs"], [85, "outputs"], [86, "outputs"], [87, "outputs"], [88, "outputs"], [89, "outputs"], [90, "outputs"], [91, "outputs"], [92, "outputs"], [93, "outputs"], [94, "outputs"], [95, "outputs"], [96, "outputs"], [97, "outputs"], [98, "outputs"], [99, "outputs"], [100, "outputs"], [101, "outputs"], [102, "outputs"], [103, "outputs"], [104, "outputs"], [105, "outputs"], [106, "outputs"], [107, "outputs"], [108, "outputs"], [109, "outputs"], [110, "outputs"], [111, "outputs"], [112, "outputs"], [113, "outputs"], [114, "outputs"], [115, "outputs"], [116, "outputs"], [117, "outputs"], [118, "outputs"], [119, "outputs"], [120, "outputs"], [121, "outputs"], [122, "outputs"], [123, "outputs"], [124, "outputs"], [125, "outputs"], [126, "outputs"], [127, "outputs"], [128, "outputs"], [129, "outputs"], [130, "outputs"], [131, "outputs"], [132, "outputs"], [133, "outputs"], [134, "outputs"], [135, "outputs"], [136, "outputs"], [137, "outputs"], [138, "outputs"], [139, "outputs"], [140, "outputs"], [141, "outputs"], [142, "outputs"], [143, "outputs"], [144, "outputs"], [145, "outputs"], [146, "outputs"], [147, "outputs"]], "Supported Data Types": [[65, "supported-data-types"], [66, "supported-data-types"], [67, "supported-data-types"], [68, "supported-data-types"], [69, "supported-data-types"], [70, "supported-data-types"], [71, "supported-data-types"], [72, "supported-data-types"], [73, "supported-data-types"], [74, "supported-data-types"], [75, "supported-data-types"], [76, "supported-data-types"], [77, "supported-data-types"], [78, "supported-data-types"], [79, "supported-data-types"], [80, "supported-data-types"], [81, "supported-data-types"], [82, "supported-data-types"], [83, "supported-data-types"], [84, "supported-data-types"], [85, "supported-data-types"], [86, "supported-data-types"], [87, "supported-data-types"], [88, "supported-data-types"], [89, "supported-data-types"], [90, "supported-data-types"], [91, "supported-data-types"], [92, "supported-data-types"], [93, "supported-data-types"], [94, "supported-data-types"], [95, "supported-data-types"], [96, "supported-data-types"], [97, "supported-data-types"], [98, "supported-data-types"], [99, "supported-data-types"], [100, "supported-data-types"], [101, "supported-data-types"], [102, "supported-data-types"], [103, "supported-data-types"], [104, "supported-data-types"], [105, "supported-data-types"], [106, "supported-data-types"], [107, "supported-data-types"], [108, "supported-data-types"], [109, "supported-data-types"], [110, "supported-data-types"], [111, "supported-data-types"], [112, "supported-data-types"], [113, "supported-data-types"], [114, "supported-data-types"], [115, "supported-data-types"], [116, "supported-data-types"], [117, "supported-data-types"], [118, "supported-data-types"], [119, "supported-data-types"], [120, "supported-data-types"], [121, "supported-data-types"], [122, "supported-data-types"], [123, "supported-data-types"], [124, "supported-data-types"], [125, "supported-data-types"], [126, "supported-data-types"], [127, "supported-data-types"], [128, "supported-data-types"], [129, "supported-data-types"], [130, "supported-data-types"], [131, "supported-data-types"], [132, "supported-data-types"], [133, "supported-data-types"], [134, "supported-data-types"], [135, "supported-data-types"], [136, "supported-data-types"], [137, "supported-data-types"], [138, "supported-data-types"], [139, "supported-data-types"], [140, "supported-data-types"], [141, "supported-data-types"], [142, "supported-data-types"], [143, "supported-data-types"], [144, "supported-data-types"], [145, "supported-data-types"], [146, "supported-data-types"], [147, "supported-data-types"]], "AbsBackward": [[66, "absbackward"]], "Add": [[67, "add"]], "AvgPool": [[68, "avgpool"]], "AvgPoolBackward": [[69, "avgpoolbackward"]], "BatchNormForwardTraining": [[70, "batchnormforwardtraining"]], "BatchNormInference": [[71, "batchnorminference"]], "BatchNormTrainingBackward": [[72, "batchnormtrainingbackward"]], "BiasAdd": [[73, "biasadd"]], "BiasAddBackward": [[74, "biasaddbackward"]], "Clamp": [[75, "clamp"]], "ClampBackward": [[76, "clampbackward"]], "Concat": [[77, "concat"], [156, "concat"]], "ConvTranspose": [[78, "convtranspose"]], "ConvTransposeBackwardData": [[79, "convtransposebackwarddata"]], "ConvTransposeBackwardWeights": [[80, "convtransposebackwardweights"]], "Convolution": [[81, "convolution"]], "Regular Convolution": [[81, "regular-convolution"], [157, "regular-convolution"]], "Convolution with Groups": [[81, "convolution-with-groups"], [157, "convolution-with-groups"]], "Convolution with Dilation": [[81, "convolution-with-dilation"], [157, "convolution-with-dilation"]], "ConvolutionBackwardData": [[82, "convolutionbackwarddata"]], "ConvolutionBackwardWeights": [[83, "convolutionbackwardweights"]], "Dequantize": [[84, "dequantize"]], "Divide": [[85, "divide"]], "DynamicDequantize": [[86, "dynamicdequantize"]], "DynamicQuantize": [[87, "dynamicquantize"]], "Elu": [[88, "elu"]], "EluBackward": [[89, "elubackward"]], "End": [[90, "end"]], "Exp": [[91, "exp"]], "GELU": [[92, "gelu"]], "GELUBackward": [[93, "gelubackward"]], "HardSigmoid": [[94, "hardsigmoid"]], "HardSigmoidBackward": [[95, "hardsigmoidbackward"]], "HardSwish": [[96, "hardswish"]], "HardSwishBackward": [[97, "hardswishbackward"]], "Interpolate": [[98, "interpolate"]], "InterpolateBackward": [[99, "interpolatebackward"]], "LayerNorm": [[100, "layernorm"]], "LayerNormBackward": [[101, "layernormbackward"]], "LeakyReLU": [[102, "leakyrelu"]], "Log": [[103, "log"]], "LogSoftmax": [[104, "logsoftmax"]], "LogSoftmaxBackward": [[105, "logsoftmaxbackward"]], "MatMul": [[106, "matmul"]], "MaxPool": [[107, "maxpool"]], "MaxPoolBackward": [[108, "maxpoolbackward"]], "Maximum": [[109, "maximum"]], "Minimum": [[110, "minimum"]], "Mish": [[111, "mish"]], "MishBackward": [[112, "mishbackward"]], "Multiply": [[113, "multiply"]], "PReLU": [[114, "prelu"]], "Broadcasting Rules": [[114, "broadcasting-rules"], [115, "broadcasting-rules"]], "PReLUBackward": [[115, "prelubackward"]], "Pow": [[116, "pow"]], "Quantize": [[117, "quantize"]], "ReLU": [[118, "relu"]], "ReLUBackward": [[119, "relubackward"]], "Reciprocal": [[120, "reciprocal"]], "ReduceL1": [[121, "reducel1"]], "ReduceL2": [[122, "reducel2"]], "ReduceMax": [[123, "reducemax"]], "ReduceMean": [[124, "reducemean"]], "ReduceMin": [[125, "reducemin"]], "ReduceProd": [[126, "reduceprod"]], "ReduceSum": [[127, "reducesum"]], "Reorder": [[128, "reorder"], [168, "reorder"]], "Round": [[129, "round"]], "Select": [[130, "select"]], "Sigmoid": [[131, "sigmoid"]], "SigmoidBackward": [[132, "sigmoidbackward"]], "SoftPlus": [[133, "softplus"]], "SoftPlusBackward": [[134, "softplusbackward"]], "SoftMax": [[135, "softmax"]], "SoftMaxBackward": [[136, "softmaxbackward"]], "Sqrt": [[137, "sqrt"]], "SqrtBackward": [[138, "sqrtbackward"]], "Square": [[139, "square"]], "SquaredDifference": [[140, "squareddifference"]], "StaticReshape": [[141, "staticreshape"]], "StaticTranspose": [[142, "statictranspose"]], "Subtract": [[143, "subtract"]], "Tanh": [[144, "tanh"]], "TanhBackward": [[145, "tanhbackward"]], "TypeCast": [[146, "typecast"]], "Wildcard": [[147, "wildcard"]], "Operation Set": [[148, "operation-set"]], "Logical Tensor": [[149, "logical-tensor"]], "Graph": [[149, "graph"]], "Partition": [[149, "partition"]], "Tensor": [[149, "tensor"]], "Compiled Partition": [[149, "compiled-partition"]], "General API notes": [[149, "general-api-notes"], [151, "general-api-notes"]], "Error Handling": [[149, "error-handling"], [151, "error-handling"]], "oneDNN": [[150, "onednn"]], "Open Source Implementation": [[150, "id1"]], "Implementation Notes": [[150, "implementation-notes"]], "Testing": [[150, "testing"]], "Graph Extension": [[151, "graph-extension"]], "Attributes": [[152, "attributes"]], "Scratchpad Mode": [[152, "scratchpad-mode"]], "Examples": [[152, "examples"], [745, "examples"], [770, "examples"], [843, "examples"]], "Library Manages Scratchpad": [[152, "library-manages-scratchpad"]], "User Manages Scratchpad": [[152, "user-manages-scratchpad"]], "Quantization": [[152, "quantization"]], "Quantization Attributes (scales and zero-points)": [[152, "quantization-attributes-scales-and-zero-points"]], "Example 1: weights quantization with per-output-channel scaling": [[152, "example-1-weights-quantization-with-per-output-channel-scaling"]], "Example 2: convolution with groups, with per-output-channel quantization": [[152, "example-2-convolution-with-groups-with-per-output-channel-quantization"]], "Implicit downconversions and floating-point math mode": [[152, "implicit-downconversions-and-floating-point-math-mode"]], "Attribute Related Error Handling": [[152, "attribute-related-error-handling"]], "Post-ops": [[153, "post-ops"]], "Supported Post-ops": [[153, "supported-post-ops"]], "Eltwise Post-op": [[153, "eltwise-post-op"]], "Sum Post-op": [[153, "sum-post-op"]], "Binary post-ops": [[153, "binary-post-ops"]], "Examples of Chained Post-ops": [[153, "examples-of-chained-post-ops"]], "Sum -> ReLU": [[153, "sum-relu"]], "Batch Normalization": [[154, "batch-normalization"]], "Forward": [[154, "forward"], [157, "forward"], [158, "forward"], [161, "forward"], [162, "forward"], [163, "forward"], [165, "forward"], [166, "forward"], [169, "forward"], [171, "forward"], [172, "forward"]], "Difference Between Forward Training and Forward Inference": [[154, "difference-between-forward-training-and-forward-inference"], [157, "difference-between-forward-training-and-forward-inference"], [158, "difference-between-forward-training-and-forward-inference"], [161, "difference-between-forward-training-and-forward-inference"], [162, "difference-between-forward-training-and-forward-inference"], [165, "difference-between-forward-training-and-forward-inference"], [166, "difference-between-forward-training-and-forward-inference"], [169, "difference-between-forward-training-and-forward-inference"], [171, "difference-between-forward-training-and-forward-inference"], [172, "difference-between-forward-training-and-forward-inference"]], "Backward": [[154, "backward"], [157, "backward"], [158, "backward"], [161, "backward"], [162, "backward"], [163, "backward"], [165, "backward"], [166, "backward"], [169, "backward"], [171, "backward"], [172, "backward"]], "Operation Details": [[154, "operation-details"], [155, "operation-details"], [156, "operation-details"], [157, "operation-details"], [158, "operation-details"], [161, "operation-details"], [162, "operation-details"], [163, "operation-details"], [164, "operation-details"], [165, "operation-details"], [166, "operation-details"], [167, "operation-details"], [168, "operation-details"], [169, "operation-details"], [170, "operation-details"], [171, "operation-details"], [172, "operation-details"], [173, "operation-details"]], "Data Types Support": [[154, "data-types-support"], [155, "data-types-support"], [156, "data-types-support"], [157, "data-types-support"], [161, "data-types-support"], [162, "data-types-support"], [164, "data-types-support"], [166, "data-types-support"], [167, "data-types-support"], [168, "data-types-support"], [169, "data-types-support"], [170, "data-types-support"], [171, "data-types-support"], [172, "data-types-support"], [173, "data-types-support"]], "Data Representation": [[154, "data-representation"], [155, "data-representation"], [156, "data-representation"], [157, "data-representation"], [158, "data-representation"], [161, "data-representation"], [162, "data-representation"], [163, "data-representation"], [164, "data-representation"], [165, "data-representation"], [166, "data-representation"], [167, "data-representation"], [168, "data-representation"], [170, "data-representation"], [172, "data-representation"], [173, "data-representation"]], "Source, Destination, and Their Gradients": [[154, "source-destination-and-their-gradients"], [162, "source-destination-and-their-gradients"], [163, "source-destination-and-their-gradients"], [165, "source-destination-and-their-gradients"], [166, "source-destination-and-their-gradients"], [172, "source-destination-and-their-gradients"]], "Statistics Tensors": [[154, "statistics-tensors"]], "Post-ops and Attributes": [[154, "post-ops-and-attributes"], [155, "post-ops-and-attributes"], [156, "post-ops-and-attributes"], [157, "post-ops-and-attributes"], [158, "post-ops-and-attributes"], [161, "post-ops-and-attributes"], [163, "post-ops-and-attributes"], [165, "post-ops-and-attributes"], [166, "post-ops-and-attributes"], [168, "post-ops-and-attributes"], [169, "post-ops-and-attributes"], [170, "post-ops-and-attributes"], [171, "post-ops-and-attributes"], [172, "post-ops-and-attributes"], [173, "post-ops-and-attributes"]], "Binary": [[155, "binary"]], "Forward and Backward": [[155, "forward-and-backward"], [156, "forward-and-backward"]], "Convolution and Deconvolution": [[157, "convolution-and-deconvolution"]], "Deconvolution (Transposed Convolution)": [[157, "deconvolution-transposed-convolution"]], "Example 1": [[157, "example-1"]], "Example 2": [[157, "example-2"]], "Elementwise": [[158, "elementwise"]], "Data Type Support": [[158, "data-type-support"], [163, "data-type-support"], [165, "data-type-support"]], "Base Class for Primitives": [[159, "base-class-for-primitives"]], "Base Class for Primitives Descriptors": [[159, "base-class-for-primitives-descriptors"]], "Common Enumerations": [[159, "common-enumerations"]], "Normalization Primitives Flags": [[159, "normalization-primitives-flags"]], "Execution argument indices": [[159, "execution-argument-indices"]], "Primitives": [[160, "primitives"]], "Inner Product": [[161, "inner-product"]], "Layer normalization": [[162, "layer-normalization"]], "Mean and Variance": [[162, "mean-and-variance"]], "Scale and Shift": [[162, "scale-and-shift"]], "Local Response Normalization": [[163, "local-response-normalization"]], "Matrix Multiplication": [[164, "matrix-multiplication"]], "Attributes and Post-ops": [[164, "attributes-and-post-ops"], [167, "attributes-and-post-ops"]], "Pooling": [[165, "pooling"]], "Prelu": [[166, "prelu"]], "Reduction": [[167, "reduction"]], "Resampling": [[169, "resampling"]], "Nearest Neighbor Resampling": [[169, "nearest-neighbor-resampling"]], "Bilinear Resampling": [[169, "bilinear-resampling"]], "RNN": [[170, "rnn"]], "Cell Functions": [[170, "cell-functions"]], "Vanilla RNN": [[170, "vanilla-rnn"]], "LSTM": [[170, "lstm"]], "LSTM (or Vanilla LSTM)": [[170, "lstm-or-vanilla-lstm"]], "LSTM with Peephole": [[170, "lstm-with-peephole"]], "LSTM with Projection": [[170, "lstm-with-projection"]], "GRU": [[170, "gru"]], "Linear-Before-Reset GRU": [[170, "linear-before-reset-gru"]], "AUGRU": [[170, "augru"]], "Linear-Before-Reset AUGRU": [[170, "linear-before-reset-augru"]], "Shuffle": [[171, "shuffle"]], "Data Layouts": [[171, "data-layouts"]], "Softmax": [[172, "softmax"]], "Sum": [[173, "sum"]], "Sources, Destination": [[173, "sources-destination"]], "oneDPL": [[175, "onedpl"]], "Parallel API": [[176, "parallel-api"]], "C++ Standard aligned execution policies": [[176, "c-standard-aligned-execution-policies"]], "DPC++ Execution Policy": [[176, "dpc-execution-policy"]], "device_policy class": [[176, "device-policy-class"]], "make_device_policy function": [[176, "make-device-policy-function"]], "Buffer wrappers": [[176, "buffer-wrappers"]], "Iterators": [[176, "iterators"], [586, "iterators"], [596, "iterators"], [608, "iterators"], [622, "iterators"], [636, "iterators"], [657, "iterators"], [665, "iterators"], [681, "iterators"], [695, "iterators"], [709, "iterators"], [723, "iterators"], [737, "iterators"]], "Parallel Algorithms": [[176, "parallel-algorithms"]], "SYCL Kernels API": [[177, "sycl-kernels-api"]], "Supported C++ Standard Library APIs and Algorithms": [[177, "supported-c-standard-library-apis-and-algorithms"]], "Random Number Generation": [[177, "random-number-generation"]], "Supported functionality:": [[177, "supported-functionality"]], "Limitations:": [[177, "limitations"]], "Extensions:": [[177, "extensions"]], "Function Objects": [[177, "function-objects"]], "oneMKL Appendix": [[178, "onemkl-appendix"]], "Future considerations": [[178, "future-considerations"]], "Acknowledgment": [[178, "acknowledgment"]], "oneMKL Architecture": [[179, "onemkl-architecture"]], "Use of Queues": [[179, "use-of-queues"]], "Non-Member Functions": [[179, "non-member-functions"], [849, "non-member-functions"]], "Member Functions": [[179, "member-functions"], [787, "member-functions"], [788, "member-functions"], [789, "member-functions"], [791, "member-functions"], [843, "member-functions"], [849, "member-functions"]], "Device Usage": [[179, "device-usage"]], "Asynchronous Execution": [[179, "asynchronous-execution"]], "Synchronization When Using Buffers": [[179, "synchronization-when-using-buffers"]], "Synchronization When Using USM APIs": [[179, "synchronization-when-using-usm-apis"]], "Host Thread Safety": [[179, "host-thread-safety"]], "Memory Model": [[179, "memory-model"]], "The Buffer Memory Model": [[179, "the-buffer-memory-model"]], "Unified Shared Memory Model": [[179, "unified-shared-memory-model"]], "API Design": [[179, "api-design"]], "oneMKL namespaces": [[179, "onemkl-namespaces"]], "Standard C++ datatype usage": [[179, "standard-c-datatype-usage"]], "DPC++ datatype usage": [[179, "dpc-datatype-usage"]], "oneMKL defined datatypes": [[179, "onemkl-defined-datatypes"]], "Exceptions and Error Handling": [[179, "exceptions-and-error-handling"]], "LAPACK specific exceptions": [[179, "lapack-specific-exceptions"]], "Other Features": [[179, "other-features"]], "Current Version of this oneMKL Specification": [[179, "current-version-of-this-onemkl-specification"]], "Pre/Post Condition Checking": [[179, "pre-post-condition-checking"]], "asum": [[180, "asum"]], "asum (Buffer Version)": [[180, "asum-buffer-version"]], "asum (USM Version)": [[180, "asum-usm-version"]], "axpby": [[181, "axpby"]], "axpby (Buffer Version)": [[181, "axpby-buffer-version"]], "axpby (USM Version)": [[181, "axpby-usm-version"]], "axpy": [[182, "axpy"]], "axpy (Buffer Version)": [[182, "axpy-buffer-version"]], "axpy (USM Version)": [[182, "axpy-usm-version"]], "axpy_batch": [[183, "axpy-batch"]], "axpy_batch (Buffer Version)": [[183, "axpy-batch-buffer-version"]], "axpy_batch (USM Version)": [[183, "axpy-batch-usm-version"]], "BLAS Routines": [[184, "blas-routines"]], "BLAS Level 1 Routines": [[185, "blas-level-1-routines"]], "BLAS Level 2 Routines": [[186, "blas-level-2-routines"]], "BLAS Level 3 Routines": [[187, "blas-level-3-routines"]], "BLAS-like Extensions": [[188, "blas-like-extensions"]], "copy": [[189, "copy"]], "copy (Buffer Version)": [[189, "copy-buffer-version"]], "copy (USM Version)": [[189, "copy-usm-version"]], "copy_batch": [[190, "copy-batch"]], "copy_batch (Buffer Version)": [[190, "copy-batch-buffer-version"]], "copy_batch (USM Version)": [[190, "copy-batch-usm-version"]], "dgmm_batch": [[191, "dgmm-batch"]], "dgmm_batch (Buffer Version)": [[191, "dgmm-batch-buffer-version"]], "dgmm_batch (USM Version)": [[191, "dgmm-batch-usm-version"]], "dot": [[192, "dot"]], "dot (Buffer Version)": [[192, "dot-buffer-version"]], "dot (USM Version)": [[192, "dot-usm-version"]], "dotc": [[193, "dotc"]], "dotc (Buffer Version)": [[193, "dotc-buffer-version"]], "dotc (USM Version)": [[193, "dotc-usm-version"]], "dotu": [[194, "dotu"]], "dotu (Buffer Version)": [[194, "dotu-buffer-version"]], "dotu (USM Version)": [[194, "dotu-usm-version"]], "gbmv": [[195, "gbmv"]], "gbmv (Buffer Version)": [[195, "gbmv-buffer-version"]], "gbmv (USM Version)": [[195, "gbmv-usm-version"]], "gemm": [[196, "gemm"]], "gemm (Buffer Version)": [[196, "gemm-buffer-version"]], "gemm (USM Version)": [[196, "gemm-usm-version"]], "gemm_batch": [[197, "gemm-batch"]], "gemm_batch (Buffer Version)": [[197, "gemm-batch-buffer-version"]], "gemm_batch (USM Version)": [[197, "gemm-batch-usm-version"]], "gemm_bias": [[198, "gemm-bias"]], "gemm_bias (Buffer Version)": [[198, "gemm-bias-buffer-version"]], "gemm_bias (USM Version)": [[198, "gemm-bias-usm-version"]], "gemmt": [[199, "gemmt"]], "gemmt (Buffer Version)": [[199, "gemmt-buffer-version"]], "gemmt (USM Version)": [[199, "gemmt-usm-version"]], "gemv": [[200, "gemv"]], "gemv (Buffer Version)": [[200, "gemv-buffer-version"]], "gemv (USM Version)": [[200, "gemv-usm-version"]], "gemv_batch": [[201, "gemv-batch"]], "gemv_batch (Buffer Version)": [[201, "gemv-batch-buffer-version"]], "gemv_batch (USM Version)": [[201, "gemv-batch-usm-version"]], "ger": [[202, "ger"]], "ger (Buffer Version)": [[202, "ger-buffer-version"]], "ger (USM Version)": [[202, "ger-usm-version"]], "gerc": [[203, "gerc"]], "gerc (Buffer Version)": [[203, "gerc-buffer-version"]], "gerc (USM Version)": [[203, "gerc-usm-version"]], "geru": [[204, "geru"]], "geru (Buffer Version)": [[204, "geru-buffer-version"]], "geru (USM Version)": [[204, "geru-usm-version"]], "hbmv": [[205, "hbmv"]], "hbmv (Buffer Version)": [[205, "hbmv-buffer-version"]], "hbmv (USM Version)": [[205, "hbmv-usm-version"]], "hemm": [[206, "hemm"]], "hemm (Buffer Version)": [[206, "hemm-buffer-version"]], "hemm (USM Version)": [[206, "hemm-usm-version"]], "hemv": [[207, "hemv"]], "hemv (Buffer Version)": [[207, "hemv-buffer-version"]], "hemv (USM Version)": [[207, "hemv-usm-version"]], "her": [[208, "her"]], "her (Buffer Version)": [[208, "her-buffer-version"]], "her (USM Version)": [[208, "her-usm-version"]], "her2": [[209, "her2"]], "her2 (Buffer Version)": [[209, "her2-buffer-version"]], "her2 (USM Version)": [[209, "her2-usm-version"]], "her2k": [[210, "her2k"]], "her2k (Buffer Version)": [[210, "her2k-buffer-version"]], "her2k (USM Version)": [[210, "her2k-usm-version"]], "herk": [[211, "herk"]], "herk (Buffer Version)": [[211, "herk-buffer-version"]], "herk (USM Version)": [[211, "herk-usm-version"]], "hpmv": [[212, "hpmv"]], "hpmv (Buffer Version)": [[212, "hpmv-buffer-version"]], "hpmv (USM Version)": [[212, "hpmv-usm-version"]], "hpr": [[213, "hpr"]], "hpr (Buffer Version)": [[213, "hpr-buffer-version"]], "hpr (USM Version)": [[213, "hpr-usm-version"]], "hpr2": [[214, "hpr2"]], "hpr2 (Buffer Version)": [[214, "hpr2-buffer-version"]], "hpr2 (USM Version)": [[214, "hpr2-usm-version"]], "iamax": [[215, "iamax"]], "iamax (Buffer Version)": [[215, "iamax-buffer-version"]], "iamax (USM Version)": [[215, "iamax-usm-version"]], "iamin": [[216, "iamin"]], "iamin (Buffer Version)": [[216, "iamin-buffer-version"]], "iamin (USM Version)": [[216, "iamin-usm-version"]], "imatcopy": [[217, "imatcopy"]], "imatcopy (Buffer Version)": [[217, "imatcopy-buffer-version"]], "imatcopy (USM Version)": [[217, "imatcopy-usm-version"]], "imatcopy_batch": [[218, "imatcopy-batch"]], "imatcopy_batch (Buffer Version)": [[218, "imatcopy-batch-buffer-version"]], "imatcopy_batch (USM Version)": [[218, "imatcopy-batch-usm-version"]], "nrm2": [[219, "nrm2"]], "nrm2 (Buffer Version)": [[219, "nrm2-buffer-version"]], "nrm2 (USM Version)": [[219, "nrm2-usm-version"]], "omatadd": [[220, "omatadd"]], "omatadd (Buffer Version)": [[220, "omatadd-buffer-version"]], "omatadd (USM Version)": [[220, "omatadd-usm-version"]], "omatadd_batch": [[221, "omatadd-batch"]], "omatadd_batch (Buffer Version)": [[221, "omatadd-batch-buffer-version"]], "omatadd_batch (USM Version)": [[221, "omatadd-batch-usm-version"]], "omatcopy": [[222, "omatcopy"]], "omatcopy (Buffer Version)": [[222, "omatcopy-buffer-version"]], "omatcopy (USM Version)": [[222, "omatcopy-usm-version"]], "omatcopy2": [[223, "omatcopy2"]], "omatcopy2 (Buffer Version)": [[223, "omatcopy2-buffer-version"]], "omatcopy2 (USM Version)": [[223, "omatcopy2-usm-version"]], "omatcopy_batch": [[224, "omatcopy-batch"]], "omatcopy_batch (Buffer Version)": [[224, "omatcopy-batch-buffer-version"]], "omatcopy_batch (USM Version)": [[224, "omatcopy-batch-usm-version"]], "rot": [[225, "rot"]], "rot (Buffer Version)": [[225, "rot-buffer-version"]], "rot (USM Version)": [[225, "rot-usm-version"]], "rotg": [[226, "rotg"]], "rotg (Buffer Version)": [[226, "rotg-buffer-version"]], "rotg (USM Version)": [[226, "rotg-usm-version"]], "rotm": [[227, "rotm"]], "rotm (Buffer Version)": [[227, "rotm-buffer-version"]], "rotm (USM Version)": [[227, "rotm-usm-version"]], "rotmg": [[228, "rotmg"]], "rotmg (Buffer Version)": [[228, "rotmg-buffer-version"]], "rotmg (USM Version)": [[228, "rotmg-usm-version"]], "sbmv": [[229, "sbmv"]], "sbmv (Buffer Version)": [[229, "sbmv-buffer-version"]], "sbmv (USM Version)": [[229, "sbmv-usm-version"]], "scal": [[230, "scal"]], "scal (Buffer Version)": [[230, "scal-buffer-version"]], "scal (USM Version)": [[230, "scal-usm-version"]], "sdsdot": [[231, "sdsdot"]], "sdsdot (Buffer Version)": [[231, "sdsdot-buffer-version"]], "sdsdot (USM Version)": [[231, "sdsdot-usm-version"]], "spmv": [[232, "spmv"], [429, "spmv"], [429, "onemkl-sparse-spmv"]], "spmv (Buffer Version)": [[232, "spmv-buffer-version"]], "spmv (USM Version)": [[232, "spmv-usm-version"]], "spr": [[233, "spr"]], "spr (Buffer Version)": [[233, "spr-buffer-version"]], "spr (USM Version)": [[233, "spr-usm-version"]], "spr2": [[234, "spr2"]], "spr2 (Buffer Version)": [[234, "spr2-buffer-version"]], "spr2 (USM Version)": [[234, "spr2-usm-version"]], "swap": [[235, "swap"], [590, "swap"], [603, "swap"], [617, "swap"], [631, "swap"], [645, "swap"], [653, "swap"], [661, "swap"], [674, "swap"], [689, "swap"], [703, "swap"], [717, "swap"], [731, "swap"], [743, "swap"]], "swap (Buffer Version)": [[235, "swap-buffer-version"]], "swap (USM Version)": [[235, "swap-usm-version"]], "symm": [[236, "symm"]], "symm (Buffer Version)": [[236, "symm-buffer-version"]], "symm (USM Version)": [[236, "symm-usm-version"]], "symv": [[237, "symv"]], "symv (Buffer Version)": [[237, "symv-buffer-version"]], "symv (USM Version)": [[237, "symv-usm-version"]], "syr": [[238, "syr"]], "syr (Buffer Version)": [[238, "syr-buffer-version"]], "syr (USM Version)": [[238, "syr-usm-version"]], "syr2": [[239, "syr2"]], "syr2 (Buffer Version)": [[239, "syr2-buffer-version"]], "syr2 (USM Version)": [[239, "syr2-usm-version"]], "syr2k": [[240, "syr2k"]], "syr2k (Buffer Version)": [[240, "syr2k-buffer-version"]], "syr2k (USM Version)": [[240, "syr2k-usm-version"]], "syrk": [[241, "syrk"]], "syrk (Buffer Version)": [[241, "syrk-buffer-version"]], "syrk (USM Version)": [[241, "syrk-usm-version"]], "syrk_batch": [[242, "syrk-batch"]], "syrk_batch (Buffer Version)": [[242, "syrk-batch-buffer-version"]], "syrk_batch (USM Version)": [[242, "syrk-batch-usm-version"]], "tbmv": [[243, "tbmv"]], "tbmv (Buffer Version)": [[243, "tbmv-buffer-version"]], "tbmv (USM Version)": [[243, "tbmv-usm-version"]], "tbsv": [[244, "tbsv"]], "tbsv (Buffer Version)": [[244, "tbsv-buffer-version"]], "tbsv (USM Version)": [[244, "tbsv-usm-version"]], "tpmv": [[245, "tpmv"]], "tpmv (Buffer Version)": [[245, "tpmv-buffer-version"]], "tpmv (USM Version)": [[245, "tpmv-usm-version"]], "tpsv": [[246, "tpsv"]], "tpsv (Buffer Version)": [[246, "tpsv-buffer-version"]], "tpsv (USM Version)": [[246, "tpsv-usm-version"]], "trmm": [[247, "trmm"]], "trmm (Buffer Version)": [[247, "trmm-buffer-version"]], "In-place API": [[247, "in-place-api"], [247, "id1"], [249, "in-place-api"], [249, "id1"]], "Out-of-place API": [[247, "out-of-place-api"], [247, "id2"], [249, "out-of-place-api"], [249, "id2"]], "trmm (USM Version)": [[247, "trmm-usm-version"]], "trmv": [[248, "trmv"]], "trmv (Buffer Version)": [[248, "trmv-buffer-version"]], "trmv (USM Version)": [[248, "trmv-usm-version"]], "trsm": [[249, "trsm"]], "trsm (Buffer Version)": [[249, "trsm-buffer-version"]], "trsm (USM Version)": [[249, "trsm-usm-version"]], "trsm_batch": [[250, "trsm-batch"]], "trsm_batch (Buffer Version)": [[250, "trsm-batch-buffer-version"]], "trsm_batch (USM Version)": [[250, "trsm-batch-usm-version"]], "trsv": [[251, "trsv"]], "trsv (Buffer Version)": [[251, "trsv-buffer-version"]], "trsv (USM Version)": [[251, "trsv-usm-version"]], "compute_backward": [[252, "compute-backward"]], "compute_backward (Buffer version)": [[252, "compute-backward-buffer-version"]], "compute_backward (USM version)": [[252, "compute-backward-usm-version"]], "compute_forward": [[253, "compute-forward"]], "compute_forward (Buffer version)": [[253, "compute-forward-buffer-version"]], "compute_forward (USM version)": [[253, "compute-forward-usm-version"]], "Configuration of Data Layouts": [[254, "configuration-of-data-layouts"]], "Data storage": [[255, "data-storage"]], "Complex descriptors": [[255, "complex-descriptors"]], "Real descriptors": [[255, "real-descriptors"]], "Workspace placement": [[256, "workspace-placement"]], "WORKSPACE_PLACEMENT": [[256, "id1"]], "Typical usage of WORKSPACE_EXTERNAL": [[256, "typical-usage-of-workspace-external"]], "The descriptor class": [[257, "the-descriptor-class"]], "Descriptor class constructors": [[257, "descriptor-class-constructors"]], "Descriptor class assignment operators": [[257, "descriptor-class-assignment-operators"]], "set_value": [[257, "set-value"]], "get_value": [[257, "get-value"]], "set_workspace": [[257, "set-workspace"]], "commit": [[257, "commit"]], "Discrete Fourier Transform Functions": [[258, "discrete-fourier-transform-functions"]], "Finite range of indices": [[258, "finite-range-of-indices"]], "Elementary range of indices": [[258, "elementary-range-of-indices"]], "Additional constraints for data in backward domain of real DFTs": [[258, "additional-constraints-for-data-in-backward-domain-of-real-dfts"]], "Recommended usage": [[258, "recommended-usage"]], "Summary table": [[258, "summary-table"]], "DFT-related scoped enumeration types": [[259, "dft-related-scoped-enumeration-types"]], "precision": [[259, "precision"]], "domain": [[259, "domain"]], "config_param": [[259, "config-param"]], "config_value": [[259, "config-value"]], "oneMKL Domains": [[260, "onemkl-domains"]], "Dense Linear Algebra": [[260, "dense-linear-algebra"]], "Sparse Linear Algebra": [[260, "sparse-linear-algebra"]], "Discrete Fourier Transforms": [[260, "discrete-fourier-transforms"]], "Random Number Generators": [[260, "random-number-generators"]], "Summary Statistics": [[260, "summary-statistics"], [445, "summary-statistics"]], "Vector Math": [[260, "vector-math"], [545, "vector-math"]], "gebrd": [[261, "gebrd"]], "gebrd (Buffer Version)": [[261, "gebrd-buffer-version"]], "gebrd (USM Version)": [[261, "gebrd-usm-version"]], "gebrd_scratchpad_size": [[262, "gebrd-scratchpad-size"]], "geqrf": [[263, "geqrf"]], "geqrf (Buffer Version)": [[263, "geqrf-buffer-version"]], "geqrf (USM Version)": [[263, "geqrf-usm-version"]], "geqrf_batch": [[264, "geqrf-batch"]], "geqrf_batch (Buffer Version)": [[264, "geqrf-batch-buffer-version"]], "geqrf_batch (USM Version)": [[264, "geqrf-batch-usm-version"]], "geqrf_batch_scratchpad_size": [[265, "geqrf-batch-scratchpad-size"]], "geqrf_scratchpad_size": [[266, "geqrf-scratchpad-size"]], "gerqf": [[267, "gerqf"]], "gerqf (Buffer Version)": [[267, "gerqf-buffer-version"]], "gerqf (USM Version)": [[267, "gerqf-usm-version"]], "gerqf_scratchpad_size": [[268, "gerqf-scratchpad-size"], [268, "id1"]], "gesvd": [[269, "gesvd"]], "gesvd (Buffer Version)": [[269, "gesvd-buffer-version"]], "gesvd (USM Version)": [[269, "gesvd-usm-version"]], "gesvd_scratchpad_size": [[270, "gesvd-scratchpad-size"], [270, "id1"]], "getrf": [[271, "getrf"]], "getrf (BUFFER Version)": [[271, "getrf-buffer-version"]], "getrf (USM Version)": [[271, "getrf-usm-version"]], "getrf_batch": [[272, "getrf-batch"]], "getrf_batch (Buffer Version)": [[272, "getrf-batch-buffer-version"]], "getrf_batch (USM Version)": [[272, "getrf-batch-usm-version"]], "getrf_batch_scratchpad_size": [[273, "getrf-batch-scratchpad-size"]], "getrf_scratchpad_size": [[274, "getrf-scratchpad-size"], [274, "id1"]], "getri": [[275, "getri"]], "getri (BUFFER Version)": [[275, "getri-buffer-version"]], "getri (USM Version)": [[275, "getri-usm-version"]], "getri_batch": [[276, "getri-batch"]], "getri_batch (Buffer Version)": [[276, "getri-batch-buffer-version"]], "getri_batch (USM Version)": [[276, "getri-batch-usm-version"]], "getri_batch_scratchpad_size": [[277, "getri-batch-scratchpad-size"]], "getri_scratchpad_size": [[278, "getri-scratchpad-size"], [278, "id1"]], "getrs": [[279, "getrs"]], "getrs (Buffer Version)": [[279, "getrs-buffer-version"]], "getrs (USM Version)": [[279, "getrs-usm-version"]], "getrs_batch": [[280, "getrs-batch"]], "getrs_batch (Buffer Version)": [[280, "getrs-batch-buffer-version"]], "getrs_batch (USM Version)": [[280, "getrs-batch-usm-version"]], "getrs_batch_scratchpad_size": [[281, "getrs-batch-scratchpad-size"]], "getrs_scratchpad_size": [[282, "getrs-scratchpad-size"], [282, "id1"]], "heevd": [[283, "heevd"]], "heevd (Buffer Version)": [[283, "heevd-buffer-version"]], "heevd (USM Version)": [[283, "heevd-usm-version"]], "heevd_scratchpad_size": [[284, "heevd-scratchpad-size"], [284, "id1"]], "hegvd": [[285, "hegvd"]], "hegvd (Buffer Version)": [[285, "hegvd-buffer-version"]], "hegvd (USM Version)": [[285, "hegvd-usm-version"]], "hegvd_scratchpad_size": [[286, "hegvd-scratchpad-size"], [286, "id1"]], "hetrd": [[287, "hetrd"]], "hetrd (Buffer Version)": [[287, "hetrd-buffer-version"]], "hetrd (USM Version)": [[287, "hetrd-usm-version"]], "hetrd_scratchpad_size": [[288, "hetrd-scratchpad-size"], [288, "id1"]], "hetrf": [[289, "hetrf"]], "hetrf (Buffer Version)": [[289, "hetrf-buffer-version"]], "hetrf (USM Version)": [[289, "hetrf-usm-version"]], "hetrf_scratchpad_size": [[290, "hetrf-scratchpad-size"], [290, "id1"]], "LAPACK Routines": [[291, "lapack-routines"]], "LAPACK Linear Equation Routines": [[291, "lapack-linear-equation-routines"]], "LAPACK Singular Value and Eigenvalue Problem Routines": [[291, "lapack-singular-value-and-eigenvalue-problem-routines"]], "LAPACK-like Extensions Routines": [[291, "lapack-like-extensions-routines"]], "orgbr": [[292, "orgbr"]], "orgbr (Buffer Version)": [[292, "orgbr-buffer-version"]], "orgbr (USM Version)": [[292, "orgbr-usm-version"]], "orgbr_scratchpad_size": [[293, "orgbr-scratchpad-size"], [293, "id1"]], "orgqr": [[294, "orgqr"]], "orgqr (Buffer Version)": [[294, "orgqr-buffer-version"]], "orgqr (USM Version)": [[294, "orgqr-usm-version"]], "orgqr_batch": [[295, "orgqr-batch"]], "orgqr_batch (Buffer Version)": [[295, "orgqr-batch-buffer-version"]], "orgqr_batch (USM Version)": [[295, "orgqr-batch-usm-version"]], "orgqr_batch_scratchpad_size": [[296, "orgqr-batch-scratchpad-size"]], "orgqr_scratchpad_size": [[297, "orgqr-scratchpad-size"], [297, "id1"]], "orgtr": [[298, "orgtr"]], "orgtr (Buffer Version)": [[298, "orgtr-buffer-version"]], "orgtr (USM Version)": [[298, "orgtr-usm-version"]], "orgtr_scratchpad_size": [[299, "orgtr-scratchpad-size"], [299, "id1"]], "ormqr": [[300, "ormqr"]], "ormqr (Buffer Version)": [[300, "ormqr-buffer-version"]], "ormqr (USM Version)": [[300, "ormqr-usm-version"]], "ormqr_scratchpad_size": [[301, "ormqr-scratchpad-size"], [301, "id1"]], "ormrq": [[302, "ormrq"]], "ormrq (Buffer Version)": [[302, "ormrq-buffer-version"]], "ormrq (USM Version)": [[302, "ormrq-usm-version"]], "ormrq_scratchpad_size": [[303, "ormrq-scratchpad-size"], [303, "id1"]], "ormtr": [[304, "ormtr"]], "ormtr (Buffer Version)": [[304, "ormtr-buffer-version"]], "ormtr (USM Version)": [[304, "ormtr-usm-version"]], "ormtr_scratchpad_size": [[305, "ormtr-scratchpad-size"], [305, "id1"]], "potrf": [[306, "potrf"]], "potrf (Buffer Version)": [[306, "potrf-buffer-version"]], "potrf (USM Version)": [[306, "potrf-usm-version"]], "potrf_batch": [[307, "potrf-batch"]], "potrf_batch (Buffer Version)": [[307, "potrf-batch-buffer-version"]], "potrf_batch (USM Version)": [[307, "potrf-batch-usm-version"]], "potrf_batch_scratchpad_size": [[308, "potrf-batch-scratchpad-size"]], "potrf_scratchpad_size": [[309, "potrf-scratchpad-size"], [309, "id1"]], "potri": [[310, "potri"]], "potri (Buffer Version)": [[310, "potri-buffer-version"]], "potri (USM Version)": [[310, "potri-usm-version"]], "potri_scratchpad_size": [[311, "potri-scratchpad-size"], [311, "id1"]], "potrs": [[312, "potrs"]], "potrs (Buffer Version)": [[312, "potrs-buffer-version"]], "potrs (USM Version)": [[312, "potrs-usm-version"]], "potrs_batch": [[313, "potrs-batch"]], "potrs_batch (Buffer Version)": [[313, "potrs-batch-buffer-version"]], "potrs_batch (USM Version)": [[313, "potrs-batch-usm-version"]], "potrs_batch_scratchpad_size": [[314, "potrs-batch-scratchpad-size"]], "potrs_scratchpad_size": [[315, "potrs-scratchpad-size"], [315, "id1"]], "syevd": [[316, "syevd"]], "syevd (Buffer Version)": [[316, "syevd-buffer-version"]], "syevd (USM Version)": [[316, "syevd-usm-version"]], "syevd_scratchpad_size": [[317, "syevd-scratchpad-size"], [317, "id1"]], "sygvd": [[318, "sygvd"]], "sygvd (Buffer Version)": [[318, "sygvd-buffer-version"]], "sygvd (USM Version)": [[318, "sygvd-usm-version"]], "sygvd_scratchpad_size": [[319, "sygvd-scratchpad-size"], [319, "id1"]], "sytrd": [[320, "sytrd"]], "sytrd (Buffer Version)": [[320, "sytrd-buffer-version"]], "sytrd (USM Version)": [[320, "sytrd-usm-version"]], "sytrd_scratchpad_size": [[321, "sytrd-scratchpad-size"], [321, "id1"]], "sytrf": [[322, "sytrf"]], "sytrf (Buffer Version)": [[322, "sytrf-buffer-version"]], "sytrf (USM Version)": [[322, "sytrf-usm-version"]], "sytrf_scratchpad_size": [[323, "sytrf-scratchpad-size"], [323, "id1"]], "trtrs": [[324, "trtrs"]], "trtrs (Buffer Version)": [[324, "trtrs-buffer-version"]], "trtrs (USM Version)": [[324, "trtrs-usm-version"]], "trtrs_scratchpad_size": [[325, "trtrs-scratchpad-size"], [325, "id1"]], "ungbr": [[326, "ungbr"]], "ungbr (Buffer Version)": [[326, "ungbr-buffer-version"]], "ungbr (USM Version)": [[326, "ungbr-usm-version"]], "ungbr_scratchpad_size": [[327, "ungbr-scratchpad-size"], [327, "id1"]], "ungqr": [[328, "ungqr"]], "ungqr (Buffer Version)": [[328, "ungqr-buffer-version"]], "ungqr (USM Version)": [[328, "ungqr-usm-version"]], "ungqr_batch": [[329, "ungqr-batch"]], "ungqr_batch (Buffer Version)": [[329, "ungqr-batch-buffer-version"]], "ungqr_batch (USM Version)": [[329, "ungqr-batch-usm-version"]], "ungqr_batch_scratchpad_size": [[330, "ungqr-batch-scratchpad-size"]], "ungqr_scratchpad_size": [[331, "ungqr-scratchpad-size"], [331, "id1"]], "ungtr": [[332, "ungtr"]], "ungtr (Buffer Version)": [[332, "ungtr-buffer-version"]], "ungtr (USM Version)": [[332, "ungtr-usm-version"]], "ungtr_scratchpad_size": [[333, "ungtr-scratchpad-size"], [333, "id1"]], "unmqr": [[334, "unmqr"]], "unmqr (Buffer Version)": [[334, "unmqr-buffer-version"]], "unmqr (USM Version)": [[334, "unmqr-usm-version"]], "unmqr_scratchpad_size": [[335, "unmqr-scratchpad-size"], [335, "id1"]], "unmrq": [[336, "unmrq"]], "unmrq (Buffer Version)": [[336, "unmrq-buffer-version"]], "unmrq (USM Version)": [[336, "unmrq-usm-version"]], "unmrq_scratchpad_size": [[337, "unmrq-scratchpad-size"], [337, "id1"]], "unmtr": [[338, "unmtr"]], "unmtr (Buffer Version)": [[338, "unmtr-buffer-version"]], "unmtr (USM Version)": [[338, "unmtr-usm-version"]], "unmtr_scratchpad_size": [[339, "unmtr-scratchpad-size"], [339, "id1"]], "Matrix Storage": [[340, "matrix-storage"]], "Device Distributions": [[342, "device-distributions"]], "Distributions Template Parameter Method": [[343, "distributions-template-parameter-method"], [365, "distributions-template-parameter-method"]], "Device Engines (Basic Random Number Generators)": [[344, "device-engines-basic-random-number-generators"]], "bernoulli": [[345, "bernoulli"], [369, "bernoulli"]], "class bernoulli": [[345, "class-bernoulli"], [369, "class-bernoulli"]], "bits": [[346, "bits"], [372, "bits"]], "class bits": [[346, "class-bits"], [372, "class-bits"]], "exponential": [[347, "exponential"], [376, "exponential"]], "class exponential": [[347, "class-exponential"], [376, "class-exponential"]], "gaussian": [[348, "gaussian"], [378, "gaussian"]], "class gaussian": [[348, "class-gaussian"], [378, "class-gaussian"]], "generate": [[349, "generate"], [380, "generate"]], "Device Generate Routines": [[350, "device-generate-routines"]], "lognormal": [[351, "lognormal"], [386, "lognormal"]], "class lognormal": [[351, "class-lognormal"], [386, "class-lognormal"]], "mcg31m1": [[352, "mcg31m1"], [387, "mcg31m1"]], "class mcg31m1": [[352, "class-mcg31m1"], [387, "class-mcg31m1"]], "mcg59": [[353, "mcg59"], [388, "mcg59"]], "class mcg59": [[353, "class-mcg59"], [388, "class-mcg59"]], "mrg32k3a": [[354, "mrg32k3a"], [389, "mrg32k3a"]], "class mrg32k3a": [[354, "class-mrg32k3a"], [389, "class-mrg32k3a"]], "philox4x32x10": [[355, "philox4x32x10"], [396, "philox4x32x10"]], "class philox4x32x10": [[355, "class-philox4x32x10"], [396, "class-philox4x32x10"]], "poisson": [[356, "poisson"], [397, "poisson"]], "class poisson": [[356, "class-poisson"], [397, "class-poisson"]], "skip_ahead": [[357, "skip-ahead"], [357, "id1"], [402, "skip-ahead"], [402, "onemkl-rng-skip-ahead-common"]], "uniform_bits": [[358, "uniform-bits"], [406, "uniform-bits"]], "class uniform_bits": [[358, "class-uniform-bits"], [406, "class-uniform-bits"]], "uniform (Continuous)": [[359, "uniform-continuous"]], "class uniform": [[359, "class-uniform"], [360, "class-uniform"], [404, "class-uniform"], [405, "class-uniform"]], "uniform (Discrete)": [[360, "uniform-discrete"]], "oneMKL RNG Device Usage Model": [[361, "onemkl-rng-device-usage-model"]], "Example of Scalar Random Numbers Generation": [[361, "example-of-scalar-random-numbers-generation"]], "Example of Vector Random Numbers Generation": [[361, "example-of-vector-random-numbers-generation"]], "Random Number Generators Device Routines": [[362, "random-number-generators-device-routines"]], "Device Service Routines": [[363, "device-service-routines"]], "Host Distributions": [[364, "host-distributions"]], "Host Engines (Basic Random Number Generators)": [[366, "host-engines-basic-random-number-generators"]], "Host Generate Routine": [[367, "host-generate-routine"]], "ars5": [[368, "ars5"]], "class ars5": [[368, "class-ars5"]], "beta": [[370, "beta"]], "class beta": [[370, "class-beta"]], "binomial": [[371, "binomial"]], "class binomial": [[371, "class-binomial"]], "cauchy": [[373, "cauchy"]], "class cauchy": [[373, "class-cauchy"]], "chi_square": [[374, "chi-square"]], "class chi_square": [[374, "class-chi-square"]], "default_engine": [[375, "default-engine"]], "type alias default_engine": [[375, "type-alias-default-engine"]], "gamma": [[377, "gamma"]], "class gamma": [[377, "class-gamma"]], "gaussian_mv": [[379, "gaussian-mv"]], "class gaussian_mv": [[379, "class-gaussian-mv"]], "generate (Buffer version)": [[380, "generate-buffer-version"]], "generate (USM version)": [[380, "generate-usm-version"]], "geometric": [[381, "geometric"]], "class geometric": [[381, "class-geometric"]], "gumbel": [[382, "gumbel"]], "class gumbel": [[382, "class-gumbel"]], "hypergeometric": [[383, "hypergeometric"]], "class hypergeometric": [[383, "class-hypergeometric"]], "laplace": [[384, "laplace"]], "class laplace": [[384, "class-laplace"]], "leapfrog": [[385, "leapfrog"], [385, "onemkl-rng-leapfrog-common"]], "mt19937": [[390, "mt19937"]], "class mt19937": [[390, "class-mt19937"]], "mt2203": [[391, "mt2203"]], "class mt2203": [[391, "class-mt2203"]], "multinomial": [[392, "multinomial"]], "class multinomial": [[392, "class-multinomial"]], "negative_binomial": [[393, "negative-binomial"]], "class negative_binomial": [[393, "class-negative-binomial"]], "niederreiter": [[394, "niederreiter"]], "class niederreiter": [[394, "class-niederreiter"]], "nondeterministic": [[395, "nondeterministic"]], "class nondeterministic": [[395, "class-nondeterministic"]], "poisson_v": [[398, "poisson-v"]], "class poisson_v": [[398, "class-poisson-v"]], "r250": [[399, "r250"]], "class r250": [[399, "class-r250"]], "rayleigh": [[400, "rayleigh"]], "class rayleigh": [[400, "class-rayleigh"]], "sfmt19937": [[401, "sfmt19937"]], "class sfmt19937": [[401, "class-sfmt19937"]], "skip_ahead (Interface with a partitioned number of skipped elements)": [[402, "skip-ahead-interface-with-a-partitioned-number-of-skipped-elements"]], "sobol": [[403, "sobol"]], "class sobol": [[403, "class-sobol"]], "uniform (continuous)": [[404, "uniform-continuous"]], "uniform (discrete)": [[405, "uniform-discrete"]], "weibull": [[407, "weibull"]], "class weibull": [[407, "class-weibull"]], "wichmann_hill": [[408, "wichmann-hill"]], "class wichmann_hill": [[408, "class-wichmann-hill"]], "oneMKL RNG Host Usage Model": [[409, "onemkl-rng-host-usage-model"]], "Buffer-based example": [[409, "buffer-based-example"]], "USM-based example": [[409, "usm-based-example"], [452, "usm-based-example"]], "Random Number Generators Host Routines": [[410, "random-number-generators-host-routines"]], "Host Service Routines": [[411, "host-service-routines"]], "Random Number Generators (RNG)": [[412, "random-number-generators-rng"]], "Data handles": [[413, "data-handles"]], "Dense vector handle": [[413, "dense-vector-handle"]], "Dense matrix handle": [[413, "dense-matrix-handle"]], "Sparse matrix handle": [[413, "sparse-matrix-handle"]], "Sparse storage formats": [[414, "sparse-storage-formats"]], "init_coo_matrix": [[415, "init-coo-matrix"]], "init_coo_matrix (Buffer version)": [[415, "init-coo-matrix-buffer-version"]], "init_coo_matrix (USM version)": [[415, "init-coo-matrix-usm-version"]], "init_csr_matrix": [[416, "init-csr-matrix"]], "init_csr_matrix (Buffer version)": [[416, "init-csr-matrix-buffer-version"]], "init_csr_matrix (USM version)": [[416, "init-csr-matrix-usm-version"]], "init_dense_matrix": [[417, "init-dense-matrix"]], "init_dense_matrix (Buffer version)": [[417, "init-dense-matrix-buffer-version"]], "init_dense_matrix (USM version)": [[417, "init-dense-matrix-usm-version"]], "init_dense_vector": [[418, "init-dense-vector"]], "init_dense_vector (Buffer version)": [[418, "init-dense-vector-buffer-version"]], "init_dense_vector (USM version)": [[418, "init-dense-vector-usm-version"]], "release_dense_matrix": [[419, "release-dense-matrix"]], "release_dense_vector": [[420, "release-dense-vector"]], "release_sparse_matrix": [[421, "release-sparse-matrix"]], "set_coo_matrix_data": [[422, "set-coo-matrix-data"]], "set_coo_matrix_data (Buffer version)": [[422, "set-coo-matrix-data-buffer-version"]], "set_coo_matrix_data (USM version)": [[422, "set-coo-matrix-data-usm-version"]], "set_csr_matrix_data": [[423, "set-csr-matrix-data"]], "set_csr_matrix_data (Buffer version)": [[423, "set-csr-matrix-data-buffer-version"]], "set_csr_matrix_data (USM version)": [[423, "set-csr-matrix-data-usm-version"]], "set_dense_matrix_data": [[424, "set-dense-matrix-data"]], "set_dense_matrix_data (Buffer version)": [[424, "set-dense-matrix-data-buffer-version"]], "set_dense_matrix_data (USM version)": [[424, "set-dense-matrix-data-usm-version"]], "set_dense_vector_data": [[425, "set-dense-vector-data"]], "set_dense_vector_data (Buffer version)": [[425, "set-dense-vector-data-buffer-version"]], "set_dense_vector_data (USM version)": [[425, "set-dense-vector-data-usm-version"]], "set_matrix_property": [[426, "set-matrix-property"], [426, "id1"]], "Matrix properties": [[426, "matrix-properties"]], "Matrix view": [[427, "matrix-view"]], "matrix_descr": [[427, "matrix-descr"]], "matrix_view": [[427, "onemkl-sparse-matrix-view"]], "spmm": [[428, "spmm"], [428, "onemkl-sparse-spmm"]], "spmm_descr": [[428, "spmm-descr"]], "init_spmm_descr": [[428, "init-spmm-descr"]], "release_spmm_descr": [[428, "release-spmm-descr"]], "spmm_alg": [[428, "spmm-alg"]], "spmv_descr": [[429, "spmv-descr"]], "init_spmv_descr": [[429, "init-spmv-descr"]], "release_spmv_descr": [[429, "release-spmv-descr"]], "spmv_alg": [[429, "spmv-alg"]], "spsv": [[430, "spsv"], [430, "onemkl-sparse-spsv"]], "spsv_descr": [[430, "spsv-descr"]], "init_spsv_descr": [[430, "init-spsv-descr"]], "release_spsv_descr": [[430, "release-spsv-descr"]], "spsv_alg": [[430, "spsv-alg"]], "Sparse BLAS": [[431, "sparse-blas"]], "Supported template types": [[432, "supported-template-types"]], "central_moment": [[433, "central-moment"]], "central_moment (buffer version)": [[433, "central-moment-buffer-version"]], "central_moment (USM version)": [[433, "central-moment-usm-version"]], "central_moment with provided mean": [[434, "central-moment-with-provided-mean"]], "central_moment with provided mean (buffer version)": [[434, "central-moment-with-provided-mean-buffer-version"]], "central_moment with provided mean (USM version)": [[434, "central-moment-with-provided-mean-usm-version"]], "central_sum": [[435, "central-sum"]], "central_sum (Buffer version)": [[435, "central-sum-buffer-version"]], "central_sum (USM version)": [[435, "central-sum-usm-version"]], "central_sum with provided mean": [[436, "central-sum-with-provided-mean"]], "central_sum with provided mean (buffer version)": [[436, "central-sum-with-provided-mean-buffer-version"]], "central_sum with provided mean  (USM version)": [[436, "central-sum-with-provided-mean-usm-version"]], "dataset": [[437, "dataset"]], "structure dataset (Buffer version)": [[437, "structure-dataset-buffer-version"]], "structure dataset (USM version)": [[437, "structure-dataset-usm-version"]], "kurtosis": [[438, "kurtosis"]], "kurtosis (buffer version)": [[438, "kurtosis-buffer-version"]], "kurtosis (USM version)": [[438, "kurtosis-usm-version"]], "kurtosis with provided mean": [[439, "kurtosis-with-provided-mean"]], "kurtosis with provided mean (buffer version)": [[439, "kurtosis-with-provided-mean-buffer-version"]], "kurtosis with provided mean (USM version)": [[439, "kurtosis-with-provided-mean-usm-version"]], "make_dataset": [[440, "make-dataset"]], "make_dataset (buffer version)": [[440, "make-dataset-buffer-version"]], "make_dataset (USM version)": [[440, "make-dataset-usm-version"]], "max": [[441, "max"]], "max (buffer version)": [[441, "max-buffer-version"]], "max (USM version)": [[441, "max-usm-version"]], "mean": [[442, "mean"]], "mean (buffer version)": [[442, "mean-buffer-version"]], "mean (USM version)": [[442, "mean-usm-version"]], "min": [[443, "min"]], "min (buffer version)": [[443, "min-buffer-version"]], "min (USM version)": [[443, "min-usm-version"]], "min_max": [[444, "min-max"]], "min_max (buffer version)": [[444, "min-max-buffer-version"]], "min_max (USM version)": [[444, "min-max-usm-version"]], "raw_moment": [[446, "raw-moment"]], "oneapi::mkl::stats::raw_moment (buffer version)": [[446, "oneapi-mkl-stats-raw-moment-buffer-version"]], "raw_moment (USM version)": [[446, "raw-moment-usm-version"]], "raw_sum": [[447, "raw-sum"]], "raw_sum (Buffer version)": [[447, "raw-sum-buffer-version"]], "raw_sum (USM version)": [[447, "raw-sum-usm-version"]], "Summary Statistics Routines": [[448, "summary-statistics-routines"]], "Service Routines": [[449, "service-routines"]], "skewness": [[450, "skewness"]], "skewness (buffer version)": [[450, "skewness-buffer-version"]], "skewness (USM version)": [[450, "skewness-usm-version"]], "skewness with provided mean": [[451, "skewness-with-provided-mean"]], "skewness with provided mean (buffer version)": [[451, "skewness-with-provided-mean-buffer-version"]], "skewness with provided mean (USM version)": [[451, "skewness-with-provided-mean-usm-version"]], "oneMKL Summary Statistics Usage Model": [[452, "onemkl-summary-statistics-usage-model"]], "variation": [[453, "variation"]], "variation (buffer version)": [[453, "variation-buffer-version"]], "variation (USM version)": [[453, "variation-usm-version"]], "variation with provided mean": [[454, "variation-with-provided-mean"]], "oneapi::mkl::stats::variation (buffer version)": [[454, "oneapi-mkl-stats-variation-buffer-version"]], "variation with provided mean (USM version)": [[454, "variation-with-provided-mean-usm-version"]], "Scalar Arguments in BLAS": [[455, "scalar-arguments-in-blas"]], "abs": [[456, "abs"]], "acos": [[457, "acos"]], "acosh": [[458, "acosh"]], "acospi": [[459, "acospi"]], "add": [[460, "add"]], "arg": [[461, "arg"]], "asin": [[462, "asin"]], "asinh": [[463, "asinh"]], "asinpi": [[464, "asinpi"]], "atan": [[465, "atan"]], "atan2": [[466, "atan2"]], "atan2pi": [[467, "atan2pi"]], "atanh": [[468, "atanh"]], "atanpi": [[469, "atanpi"]], "cbrt": [[471, "cbrt"]], "cdfnorm": [[472, "cdfnorm"]], "cdfnorminv": [[473, "cdfnorminv"]], "ceil": [[474, "ceil"]], "cis": [[475, "cis"]], "clear_status": [[476, "clear-status"]], "conj": [[477, "conj"]], "copysign": [[478, "copysign"]], "cos": [[479, "cos"]], "cosd": [[480, "cosd"]], "cosh": [[481, "cosh"]], "cospi": [[482, "cospi"]], "create_error_handler": [[483, "create-error-handler"]], "div": [[484, "div"]], "erf": [[485, "erf"]], "erfc": [[486, "erfc"]], "erfcinv": [[487, "erfcinv"]], "erfinv": [[488, "erfinv"]], "exp": [[489, "exp"]], "exp10": [[490, "exp10"]], "exp2": [[491, "exp2"]], "expint1": [[492, "expint1"]], "expm1": [[493, "expm1"]], "fdim": [[494, "fdim"]], "floor": [[495, "floor"]], "fmax": [[496, "fmax"]], "fmin": [[497, "fmin"]], "fmod": [[498, "fmod"]], "frac": [[499, "frac"]], "get_mode": [[500, "get-mode"]], "get_status": [[501, "get-status"]], "hypot": [[502, "hypot"]], "inv": [[503, "inv"]], "invcbrt": [[504, "invcbrt"]], "invsqrt": [[505, "invsqrt"]], "lgamma": [[506, "lgamma"]], "linearfrac": [[507, "linearfrac"]], "ln": [[508, "ln"]], "log10": [[509, "log10"]], "log1p": [[510, "log1p"]], "log2": [[511, "log2"]], "logb": [[512, "logb"]], "maxmag": [[513, "maxmag"]], "minmag": [[514, "minmag"]], "modf": [[515, "modf"]], "mul": [[516, "mul"]], "mulbyconj": [[517, "mulbyconj"]], "nearbyint": [[518, "nearbyint"]], "nextafter": [[519, "nextafter"]], "pow": [[520, "pow"]], "pow2o3": [[521, "pow2o3"]], "pow3o2": [[522, "pow3o2"]], "powr": [[523, "powr"]], "powx": [[524, "powx"]], "remainder": [[525, "remainder"]], "rint": [[526, "rint"]], "round": [[527, "round"]], "set_status": [[528, "set-status"]], "set_mode": [[529, "set-mode"]], "sin": [[530, "sin"]], "sincos": [[531, "sincos"]], "sind": [[532, "sind"]], "sinh": [[533, "sinh"]], "sinpi": [[534, "sinpi"]], "Special Value Notations": [[535, "special-value-notations"]], "sqr": [[536, "sqr"]], "sqrt": [[537, "sqrt"]], "sub": [[538, "sub"]], "tan": [[539, "tan"]], "tand": [[540, "tand"]], "tanh": [[541, "tanh"]], "tanpi": [[542, "tanpi"]], "tgamma": [[543, "tgamma"]], "trunc": [[544, "trunc"]], "Exceptions": [[546, "exceptions"]], "VM Mathematical Functions": [[547, "vm-mathematical-functions"]], "VM Service Functions": [[548, "vm-service-functions"]], "oneMKL": [[549, "onemkl"]], "Parallel Functions": [[550, "parallel-functions"]], "Blocked Ranges": [[550, "blocked-ranges"]], "Partitioners": [[550, "partitioners"]], "Split Tags": [[550, "split-tags"]], "blocked_range2d": [[551, "blocked-range2d"]], "Member types": [[551, "member-types"], [552, "member-types"], [746, "member-types"], [759, "member-types"], [762, "member-types"], [767, "member-types"]], "Member functions": [[551, "member-functions"], [552, "member-functions"], [553, "member-functions"], [555, "member-functions"], [556, "member-functions"], [562, "member-functions"], [564, "member-functions"], [568, "member-functions"], [573, "member-functions"], [581, "member-functions"], [582, "member-functions"], [583, "member-functions"], [591, "member-functions"], [592, "member-functions"], [604, "member-functions"], [618, "member-functions"], [619, "member-functions"], [632, "member-functions"], [633, "member-functions"], [646, "member-functions"], [654, "member-functions"], [662, "member-functions"], [675, "member-functions"], [690, "member-functions"], [704, "member-functions"], [718, "member-functions"], [732, "member-functions"], [744, "member-functions"], [746, "member-functions"], [747, "member-functions"], [748, "member-functions"], [749, "member-functions"], [751, "member-functions"], [755, "member-functions"], [757, "member-functions"], [759, "member-functions"], [760, "member-functions"], [762, "member-functions"], [764, "member-functions"], [767, "member-functions"], [770, "member-functions"], [772, "member-functions"], [773, "member-functions"], [778, "member-functions"], [779, "member-functions"], [780, "member-functions"], [781, "member-functions"], [793, "member-functions"], [794, "member-functions"], [795, "member-functions"], [796, "member-functions"], [797, "member-functions"], [798, "member-functions"], [799, "member-functions"], [800, "member-functions"], [801, "member-functions"], [802, "member-functions"], [840, "member-functions"], [842, "member-functions"], [844, "member-functions"], [845, "member-functions"], [847, "member-functions"], [851, "member-functions"], [852, "member-functions"], [859, "member-functions"]], "blocked_range3d": [[552, "blocked-range3d"]], "blocked_range": [[553, "blocked-range"]], "collaborative_call_once": [[554, "collaborative-call-once"]], "collaborative_once_flag Class": [[554, "collaborative-once-flag-class"]], "Example": [[554, "example"], [558, "example"], [560, "example"], [561, "example"], [751, "example"], [755, "example"], [756, "example"], [768, "example"], [772, "example"], [773, "example"], [778, "example"], [781, "example"], [841, "example"], [844, "example"], [845, "example"]], "collaborative_once_flag": [[555, "collaborative-once-flag"]], "feeder": [[556, "feeder"]], "parallel_deterministic_reduce": [[557, "parallel-deterministic-reduce"]], "parallel_for_each": [[558, "parallel-for-each"]], "feeder Class": [[558, "feeder-class"]], "parallel_for": [[559, "parallel-for"]], "parallel_invoke": [[560, "parallel-invoke"]], "parallel_pipeline": [[561, "parallel-pipeline"]], "filter Class Template": [[561, "filter-class-template"]], "flow_control Class": [[561, "flow-control-class"]], "filter": [[562, "filter"]], "filter_mode Enumeration": [[562, "filter-mode-enumeration"]], "Non-member functions": [[562, "non-member-functions"], [583, "non-member-functions"], [591, "non-member-functions"], [604, "non-member-functions"], [619, "non-member-functions"], [633, "non-member-functions"], [646, "non-member-functions"], [654, "non-member-functions"], [662, "non-member-functions"], [675, "non-member-functions"], [690, "non-member-functions"], [704, "non-member-functions"], [718, "non-member-functions"], [732, "non-member-functions"], [780, "non-member-functions"], [847, "non-member-functions"], [859, "non-member-functions"], [862, "non-member-functions"]], "Deduction Guides": [[562, "deduction-guides"], [751, "deduction-guides"], [755, "deduction-guides"], [760, "deduction-guides"], [762, "deduction-guides"], [778, "deduction-guides"]], "filter_mode": [[563, "filter-mode"]], "flow_control": [[564, "flow-control"]], "parallel_reduce": [[565, "parallel-reduce"]], "Example (Imperative Form)": [[565, "example-imperative-form"], [566, "example-imperative-form"]], "Example with Lambda Expressions": [[565, "example-with-lambda-expressions"], [566, "example-with-lambda-expressions"]], "parallel_scan": [[566, "parallel-scan"]], "pre_scan and final_scan Classes": [[566, "pre-scan-and-final-scan-classes"]], "parallel_sort": [[567, "parallel-sort"]], "pre_scan_tag and final_scan_tag": [[568, "pre-scan-tag-and-final-scan-tag"]], "affinity_partitioner": [[569, "affinity-partitioner"]], "auto_partitioner": [[570, "auto-partitioner"]], "simple_partitioner": [[571, "simple-partitioner"]], "static_partitioner": [[572, "static-partitioner"]], "proportional split": [[573, "proportional-split"]], "split": [[574, "split"]], "Configuration": [[575, "configuration"]], "Enabling Debugging Features": [[576, "enabling-debugging-features"]], "Debugging Macros": [[576, "id1"]], "TBB_USE_ASSERT Macro": [[576, "tbb-use-assert-macro"]], "TBB_USE_PROFILING_TOOLS Macro": [[576, "tbb-use-profiling-tools-macro"]], "Feature Macros": [[577, "feature-macros"]], "TBB_USE_EXCEPTIONS macro": [[577, "tbb-use-exceptions-macro"]], "TBB_USE_GLIBCXX_VERSION macro": [[577, "tbb-use-glibcxx-version-macro"]], "tbb Namespace": [[578, "tbb-namespace"]], "tbb::flow Namespace": [[578, "tbb-flow-namespace"]], "oneapi::tbb Namespace": [[578, "oneapi-tbb-namespace"]], "Version Information": [[579, "version-information"]], "TBB_runtime_interface_version Function": [[579, "tbb-runtime-interface-version-function"]], "TBB_runtime_version Function": [[579, "tbb-runtime-version-function"]], "TBB_VERSION Environment Variable": [[579, "tbb-version-environment-variable"]], "Containers": [[580, "containers"], [803, "containers"]], "Sequences": [[580, "sequences"]], "Queues": [[580, "queues"]], "Unordered associative containers": [[580, "unordered-associative-containers"]], "Ordered associative containers": [[580, "ordered-associative-containers"]], "Auxiliary classes": [[580, "auxiliary-classes"]], "Node handles": [[581, "node-handles"]], "Class synopsis": [[581, "class-synopsis"]], "Constructors": [[581, "constructors"]], "Assignment": [[581, "assignment"]], "Destructor": [[581, "destructor"], [584, "destructor"], [593, "destructor"], [605, "destructor"], [620, "destructor"], [634, "destructor"], [647, "destructor"], [655, "destructor"], [663, "destructor"], [677, "destructor"], [692, "destructor"], [706, "destructor"], [720, "destructor"], [734, "destructor"], [854, "destructor"]], "Swap": [[581, "swap"]], "State": [[581, "state"]], "Access to the stored element": [[581, "access-to-the-stored-element"]], "get_allocator": [[581, "get-allocator"], [589, "get-allocator"], [593, "get-allocator"], [613, "get-allocator"], [627, "get-allocator"], [641, "get-allocator"], [660, "get-allocator"], [670, "get-allocator"], [685, "get-allocator"], [699, "get-allocator"], [713, "get-allocator"], [727, "get-allocator"], [734, "get-allocator"]], "tbb_hash_compare": [[582, "tbb-hash-compare"]], "Class Template Synopsis": [[582, "class-template-synopsis"], [583, "class-template-synopsis"], [591, "class-template-synopsis"], [604, "class-template-synopsis"], [619, "class-template-synopsis"], [633, "class-template-synopsis"], [646, "class-template-synopsis"], [654, "class-template-synopsis"], [662, "class-template-synopsis"], [675, "class-template-synopsis"], [690, "class-template-synopsis"], [704, "class-template-synopsis"], [718, "class-template-synopsis"], [732, "class-template-synopsis"]], "concurrent_bounded_queue": [[583, "concurrent-bounded-queue"]], "Other": [[583, "other"], [591, "other"], [604, "other"], [619, "other"], [633, "other"], [646, "other"], [654, "other"], [662, "other"], [675, "other"], [690, "other"], [704, "other"], [718, "other"], [732, "other"]], "Construction, destruction, copying": [[584, "construction-destruction-copying"], [593, "construction-destruction-copying"], [605, "construction-destruction-copying"], [620, "construction-destruction-copying"], [634, "construction-destruction-copying"], [647, "construction-destruction-copying"], [655, "construction-destruction-copying"], [663, "construction-destruction-copying"], [677, "construction-destruction-copying"], [692, "construction-destruction-copying"], [706, "construction-destruction-copying"], [720, "construction-destruction-copying"], [734, "construction-destruction-copying"], [854, "construction-destruction-copying"]], "Empty container constructors": [[584, "empty-container-constructors"], [593, "empty-container-constructors"], [605, "empty-container-constructors"], [620, "empty-container-constructors"], [634, "empty-container-constructors"], [647, "empty-container-constructors"], [655, "empty-container-constructors"], [663, "empty-container-constructors"], [677, "empty-container-constructors"], [692, "empty-container-constructors"], [706, "empty-container-constructors"], [720, "empty-container-constructors"], [734, "empty-container-constructors"], [854, "empty-container-constructors"]], "Constructors from the sequence of elements": [[584, "constructors-from-the-sequence-of-elements"], [593, "constructors-from-the-sequence-of-elements"], [605, "constructors-from-the-sequence-of-elements"], [620, "constructors-from-the-sequence-of-elements"], [634, "constructors-from-the-sequence-of-elements"], [647, "constructors-from-the-sequence-of-elements"], [655, "constructors-from-the-sequence-of-elements"], [663, "constructors-from-the-sequence-of-elements"], [677, "constructors-from-the-sequence-of-elements"], [692, "constructors-from-the-sequence-of-elements"], [706, "constructors-from-the-sequence-of-elements"], [720, "constructors-from-the-sequence-of-elements"], [734, "constructors-from-the-sequence-of-elements"]], "Copying constructors": [[584, "copying-constructors"], [593, "copying-constructors"], [605, "copying-constructors"], [620, "copying-constructors"], [634, "copying-constructors"], [647, "copying-constructors"], [655, "copying-constructors"], [663, "copying-constructors"], [677, "copying-constructors"], [692, "copying-constructors"], [706, "copying-constructors"], [720, "copying-constructors"], [734, "copying-constructors"], [854, "copying-constructors"]], "Moving constructors": [[584, "moving-constructors"], [593, "moving-constructors"], [605, "moving-constructors"], [620, "moving-constructors"], [634, "moving-constructors"], [647, "moving-constructors"], [655, "moving-constructors"], [663, "moving-constructors"], [677, "moving-constructors"], [692, "moving-constructors"], [706, "moving-constructors"], [720, "moving-constructors"], [734, "moving-constructors"], [854, "moving-constructors"]], "Assignment operators": [[584, "assignment-operators"], [593, "assignment-operators"], [605, "assignment-operators"], [620, "assignment-operators"], [634, "assignment-operators"], [647, "assignment-operators"], [655, "assignment-operators"], [663, "assignment-operators"], [677, "assignment-operators"], [692, "assignment-operators"], [706, "assignment-operators"], [720, "assignment-operators"], [734, "assignment-operators"], [854, "assignment-operators"]], "assign": [[584, "assign"], [647, "assign"], [655, "assign"], [734, "assign"]], "Deduction guides": [[585, "deduction-guides"], [594, "deduction-guides"], [606, "deduction-guides"], [621, "deduction-guides"], [635, "deduction-guides"], [648, "deduction-guides"], [656, "deduction-guides"], [664, "deduction-guides"], [678, "deduction-guides"], [693, "deduction-guides"], [707, "deduction-guides"], [721, "deduction-guides"], [735, "deduction-guides"]], "unsafe_begin and unsafe_cbegin": [[586, "unsafe-begin-and-unsafe-cbegin"], [657, "unsafe-begin-and-unsafe-cbegin"]], "unsafe_end and unsafe_cend": [[586, "unsafe-end-and-unsafe-cend"], [657, "unsafe-end-and-unsafe-cend"]], "Non-member binary comparisons": [[587, "non-member-binary-comparisons"], [599, "non-member-binary-comparisons"], [610, "non-member-binary-comparisons"], [624, "non-member-binary-comparisons"], [638, "non-member-binary-comparisons"], [649, "non-member-binary-comparisons"], [658, "non-member-binary-comparisons"], [667, "non-member-binary-comparisons"], [683, "non-member-binary-comparisons"], [697, "non-member-binary-comparisons"], [711, "non-member-binary-comparisons"], [725, "non-member-binary-comparisons"], [738, "non-member-binary-comparisons"]], "Non-member swap": [[588, "non-member-swap"], [600, "non-member-swap"], [612, "non-member-swap"], [626, "non-member-swap"], [640, "non-member-swap"], [650, "non-member-swap"], [659, "non-member-swap"], [669, "non-member-swap"], [684, "non-member-swap"], [698, "non-member-swap"], [712, "non-member-swap"], [726, "non-member-swap"], [740, "non-member-swap"]], "Concurrently safe member functions": [[589, "concurrently-safe-member-functions"], [660, "concurrently-safe-member-functions"]], "Pushing elements": [[589, "pushing-elements"], [651, "pushing-elements"], [660, "pushing-elements"]], "Popping elements": [[589, "popping-elements"], [651, "popping-elements"], [660, "popping-elements"]], "abort": [[589, "abort"]], "Capacity of the queue": [[589, "capacity-of-the-queue"]], "Concurrently unsafe member functions": [[590, "concurrently-unsafe-member-functions"], [661, "concurrently-unsafe-member-functions"]], "The number of elements": [[590, "the-number-of-elements"], [661, "the-number-of-elements"]], "clear": [[590, "clear"], [603, "clear"], [653, "clear"], [661, "clear"], [743, "clear"], [858, "clear"]], "concurrent_hash_map": [[591, "concurrent-hash-map"]], "Member classes": [[591, "member-classes"], [604, "member-classes"], [619, "member-classes"], [793, "member-classes"], [794, "member-classes"], [795, "member-classes"], [796, "member-classes"], [797, "member-classes"], [798, "member-classes"], [799, "member-classes"], [800, "member-classes"], [801, "member-classes"], [802, "member-classes"]], "accessor and const_accessor": [[592, "accessor-and-const-accessor"]], "accessor member class": [[592, "accessor-member-class"]], "const_accessor member class": [[592, "const-accessor-member-class"]], "Construction and destruction": [[592, "construction-and-destruction"]], "Emptiness": [[592, "emptiness"]], "Key-value pair access": [[592, "key-value-pair-access"]], "Releasing": [[592, "releasing"]], "Hash policy": [[595, "hash-policy"], [680, "hash-policy"], [694, "hash-policy"], [708, "hash-policy"], [722, "hash-policy"]], "Rehashing": [[595, "rehashing"]], "bucket_count": [[595, "bucket-count"]], "begin and cbegin": [[596, "begin-and-cbegin"], [608, "begin-and-cbegin"], [622, "begin-and-cbegin"], [636, "begin-and-cbegin"], [665, "begin-and-cbegin"], [681, "begin-and-cbegin"], [695, "begin-and-cbegin"], [709, "begin-and-cbegin"], [723, "begin-and-cbegin"], [737, "begin-and-cbegin"]], "end and cend": [[596, "end-and-cend"], [608, "end-and-cend"], [622, "end-and-cend"], [636, "end-and-cend"], [665, "end-and-cend"], [681, "end-and-cend"], [695, "end-and-cend"], [709, "end-and-cend"], [723, "end-and-cend"], [737, "end-and-cend"]], "equal_range": [[596, "equal-range"], [609, "equal-range"], [623, "equal-range"], [637, "equal-range"], [666, "equal-range"], [682, "equal-range"], [696, "equal-range"], [710, "equal-range"], [724, "equal-range"]], "Lookup": [[597, "lookup"], [609, "lookup"], [623, "lookup"], [637, "lookup"], [666, "lookup"], [682, "lookup"], [696, "lookup"], [710, "lookup"], [724, "lookup"]], "find": [[597, "find"], [609, "find"], [623, "find"], [637, "find"], [666, "find"], [682, "find"], [696, "find"], [710, "find"], [724, "find"]], "count": [[597, "count"], [609, "count"], [623, "count"], [637, "count"], [666, "count"], [682, "count"], [696, "count"], [710, "count"], [724, "count"]], "Concurrently safe modifiers": [[598, "concurrently-safe-modifiers"], [615, "concurrently-safe-modifiers"], [629, "concurrently-safe-modifiers"], [643, "concurrently-safe-modifiers"], [651, "concurrently-safe-modifiers"], [672, "concurrently-safe-modifiers"], [687, "concurrently-safe-modifiers"], [701, "concurrently-safe-modifiers"], [715, "concurrently-safe-modifiers"], [729, "concurrently-safe-modifiers"], [856, "concurrently-safe-modifiers"]], "Inserting values": [[598, "inserting-values"], [615, "inserting-values"], [629, "inserting-values"], [643, "inserting-values"], [672, "inserting-values"], [687, "inserting-values"], [701, "inserting-values"], [715, "inserting-values"], [729, "inserting-values"]], "Inserting sequences of elements": [[598, "inserting-sequences-of-elements"], [615, "inserting-sequences-of-elements"], [629, "inserting-sequences-of-elements"], [643, "inserting-sequences-of-elements"], [672, "inserting-sequences-of-elements"], [687, "inserting-sequences-of-elements"], [701, "inserting-sequences-of-elements"], [715, "inserting-sequences-of-elements"], [729, "inserting-sequences-of-elements"]], "Emplacing elements": [[598, "emplacing-elements"], [615, "emplacing-elements"], [629, "emplacing-elements"], [643, "emplacing-elements"], [672, "emplacing-elements"], [687, "emplacing-elements"], [701, "emplacing-elements"], [715, "emplacing-elements"], [729, "emplacing-elements"]], "Erasing elements": [[598, "erasing-elements"], [617, "erasing-elements"], [631, "erasing-elements"], [645, "erasing-elements"], [674, "erasing-elements"], [689, "erasing-elements"], [703, "erasing-elements"], [717, "erasing-elements"], [731, "erasing-elements"]], "Parallel iteration": [[601, "parallel-iteration"], [614, "parallel-iteration"], [628, "parallel-iteration"], [642, "parallel-iteration"], [671, "parallel-iteration"], [686, "parallel-iteration"], [700, "parallel-iteration"], [714, "parallel-iteration"], [728, "parallel-iteration"], [741, "parallel-iteration"]], "range member function": [[601, "range-member-function"], [614, "range-member-function"], [628, "range-member-function"], [642, "range-member-function"], [671, "range-member-function"], [686, "range-member-function"], [700, "range-member-function"], [714, "range-member-function"], [728, "range-member-function"], [741, "range-member-function"]], "Size and capacity": [[602, "size-and-capacity"], [616, "size-and-capacity"], [630, "size-and-capacity"], [644, "size-and-capacity"], [652, "size-and-capacity"], [673, "size-and-capacity"], [688, "size-and-capacity"], [702, "size-and-capacity"], [716, "size-and-capacity"], [730, "size-and-capacity"], [742, "size-and-capacity"], [857, "size-and-capacity"]], "empty": [[602, "empty"], [616, "empty"], [630, "empty"], [644, "empty"], [652, "empty"], [673, "empty"], [688, "empty"], [702, "empty"], [716, "empty"], [730, "empty"], [742, "empty"]], "size": [[602, "size"], [616, "size"], [630, "size"], [644, "size"], [652, "size"], [673, "size"], [688, "size"], [702, "size"], [716, "size"], [730, "size"], [742, "size"]], "max_size": [[602, "max-size"], [616, "max-size"], [630, "max-size"], [644, "max-size"], [673, "max-size"], [688, "max-size"], [702, "max-size"], [716, "max-size"], [730, "max-size"], [742, "max-size"]], "Concurrently unsafe modifiers": [[603, "concurrently-unsafe-modifiers"], [617, "concurrently-unsafe-modifiers"], [631, "concurrently-unsafe-modifiers"], [645, "concurrently-unsafe-modifiers"], [653, "concurrently-unsafe-modifiers"], [674, "concurrently-unsafe-modifiers"], [689, "concurrently-unsafe-modifiers"], [703, "concurrently-unsafe-modifiers"], [717, "concurrently-unsafe-modifiers"], [731, "concurrently-unsafe-modifiers"], [858, "concurrently-unsafe-modifiers"]], "concurrent_map": [[604, "concurrent-map"]], "Element access": [[607, "element-access"], [679, "element-access"], [736, "element-access"]], "at": [[607, "at"], [679, "at"]], "operator[]": [[607, "operator"], [679, "operator"]], "contains": [[609, "contains"], [623, "contains"], [637, "contains"], [666, "contains"], [682, "contains"], [696, "contains"], [710, "contains"], [724, "contains"]], "lower_bound": [[609, "lower-bound"], [623, "lower-bound"], [637, "lower-bound"], [666, "lower-bound"]], "upper_bound": [[609, "upper-bound"], [623, "upper-bound"], [637, "upper-bound"], [666, "upper-bound"]], "Non-member lexicographical comparisons": [[611, "non-member-lexicographical-comparisons"], [625, "non-member-lexicographical-comparisons"], [639, "non-member-lexicographical-comparisons"], [668, "non-member-lexicographical-comparisons"], [739, "non-member-lexicographical-comparisons"]], "Observers": [[613, "observers"], [627, "observers"], [641, "observers"], [670, "observers"], [685, "observers"], [699, "observers"], [713, "observers"], [727, "observers"]], "key_comp": [[613, "key-comp"], [627, "key-comp"], [641, "key-comp"], [670, "key-comp"]], "value_comp": [[613, "value-comp"], [627, "value-comp"], [641, "value-comp"], [670, "value-comp"]], "Inserting nodes": [[615, "inserting-nodes"], [629, "inserting-nodes"], [643, "inserting-nodes"], [672, "inserting-nodes"], [687, "inserting-nodes"], [701, "inserting-nodes"], [715, "inserting-nodes"], [729, "inserting-nodes"]], "Clearing": [[617, "clearing"], [631, "clearing"], [645, "clearing"], [674, "clearing"], [689, "clearing"], [703, "clearing"], [717, "clearing"], [731, "clearing"]], "Erasing sequences": [[617, "erasing-sequences"], [631, "erasing-sequences"], [645, "erasing-sequences"], [674, "erasing-sequences"], [689, "erasing-sequences"], [703, "erasing-sequences"], [717, "erasing-sequences"], [731, "erasing-sequences"]], "Extracting nodes": [[617, "extracting-nodes"], [631, "extracting-nodes"], [645, "extracting-nodes"], [674, "extracting-nodes"], [689, "extracting-nodes"], [703, "extracting-nodes"], [717, "extracting-nodes"], [731, "extracting-nodes"]], "value_compare": [[618, "value-compare"], [632, "value-compare"]], "Class Synopsis": [[618, "class-synopsis"], [632, "class-synopsis"]], "Member objects": [[618, "member-objects"], [632, "member-objects"]], "concurrent_multimap": [[619, "concurrent-multimap"]], "Merging containers": [[629, "merging-containers"], [643, "merging-containers"], [672, "merging-containers"], [701, "merging-containers"], [715, "merging-containers"], [729, "merging-containers"]], "concurrent_multiset": [[633, "concurrent-multiset"]], "concurrent_priority_queue": [[646, "concurrent-priority-queue"]], "concurrent_queue": [[654, "concurrent-queue"]], "concurrent_set": [[662, "concurrent-set"]], "concurrent_unordered_map": [[675, "concurrent-unordered-map"]], "Description": [[675, "description"], [690, "description"], [704, "description"], [718, "description"], [732, "description"]], "Bucket interface": [[676, "bucket-interface"], [691, "bucket-interface"], [705, "bucket-interface"], [719, "bucket-interface"]], "Bucket begin and bucket end": [[676, "bucket-begin-and-bucket-end"], [691, "bucket-begin-and-bucket-end"], [705, "bucket-begin-and-bucket-end"], [719, "bucket-begin-and-bucket-end"]], "The number of buckets": [[676, "the-number-of-buckets"], [691, "the-number-of-buckets"], [705, "the-number-of-buckets"], [719, "the-number-of-buckets"]], "Size of the bucket": [[676, "size-of-the-bucket"], [691, "size-of-the-bucket"], [705, "size-of-the-bucket"], [719, "size-of-the-bucket"]], "Bucket number": [[676, "bucket-number"], [691, "bucket-number"], [705, "bucket-number"], [719, "bucket-number"]], "Load factor": [[680, "load-factor"], [694, "load-factor"], [708, "load-factor"], [722, "load-factor"]], "Manual rehashing": [[680, "manual-rehashing"], [694, "manual-rehashing"], [708, "manual-rehashing"], [722, "manual-rehashing"]], "hash_function": [[685, "hash-function"], [699, "hash-function"], [713, "hash-function"], [727, "hash-function"]], "key_eq": [[685, "key-eq"], [699, "key-eq"], [713, "key-eq"], [727, "key-eq"]], "concurrent_unordered_multimap": [[690, "concurrent-unordered-multimap"]], "concurrent_unordered_multiset": [[704, "concurrent-unordered-multiset"]], "concurrent_unordered_set": [[718, "concurrent-unordered-set"]], "concurrent_vector": [[732, "concurrent-vector"]], "Exception Safety": [[732, "exception-safety"]], "Concurrent growth": [[733, "concurrent-growth"]], "grow_by": [[733, "grow-by"]], "grow_to_at_least": [[733, "grow-to-at-least"]], "push_back": [[733, "push-back"]], "emplace_back": [[733, "emplace-back"]], "Access by index": [[736, "access-by-index"]], "Access the first and the last element": [[736, "access-the-first-and-the-last-element"]], "rbegin and crbegin": [[737, "rbegin-and-crbegin"]], "rend and crend": [[737, "rend-and-crend"]], "capacity": [[742, "capacity"]], "Concurrently unsafe operations": [[743, "concurrently-unsafe-operations"]], "Reserving": [[743, "reserving"]], "Resizing": [[743, "resizing"]], "shrink_to_fit": [[743, "shrink-to-fit"]], "task_arena::attach": [[744, "task-arena-attach"]], "Member types and constants": [[744, "member-types-and-constants"], [840, "member-types-and-constants"], [842, "member-types-and-constants"], [844, "member-types-and-constants"]], "Flow Graph": [[745, "flow-graph"], [803, "flow-graph"]], "Graph Class": [[745, "graph-class"]], "Nodes": [[745, "nodes"]], "Abstract Interfaces": [[745, "abstract-interfaces"]], "Properties": [[745, "properties"]], "Functional Nodes": [[745, "functional-nodes"]], "Buffering Nodes": [[745, "buffering-nodes"]], "Service Nodes": [[745, "service-nodes"]], "Ports and Edges": [[745, "ports-and-edges"]], "Special Messages Types": [[745, "special-messages-types"]], "async_node": [[746, "async-node"]], "broadcast_node": [[747, "broadcast-node"]], "buffer_node": [[748, "buffer-node"]], "composite_node": [[749, "composite-node"]], "continue_msg": [[750, "continue-msg"]], "continue_node": [[751, "continue-node"]], "copy_body": [[752, "copy-body"]], "Dependency Flow Graph Example": [[753, "dependency-flow-graph-example"]], "Forwarding and Buffering": [[754, "forwarding-and-buffering"]], "Forwarding": [[754, "forwarding"]], "Buffering": [[754, "buffering"]], "Buffering and Forwarding properties summary": [[754, "id1"]], "function_node": [[755, "function-node"]], "Function Nodes Policies": [[756, "function-nodes-policies"]], "Queueing": [[756, "queueing"]], "Rejecting": [[756, "rejecting"]], "Lightweight": [[756, "lightweight"]], "graph": [[757, "graph"]], "reset_flags enumeration": [[757, "reset-flags-enumeration"]], "graph_node": [[758, "graph-node"]], "indexer_node": [[759, "indexer-node"]], "input_node": [[760, "input-node"]], "input_port": [[761, "input-port"]], "join_node": [[762, "join-node"]], "Non-Member Types": [[762, "non-member-types"]], "join_node Policies": [[763, "join-node-policies"]], "limiter_node": [[764, "limiter-node"]], "make_edge": [[765, "make-edge"]], "Message Flow Graph Example": [[766, "message-flow-graph-example"]], "multifunction_node": [[767, "multifunction-node"]], "Nodes Priorities": [[768, "nodes-priorities"]], "output_port": [[769, "output-port"]], "overwrite_node": [[770, "overwrite-node"]], "Predefined Concurrency Limits": [[771, "predefined-concurrency-limits"]], "priority_queue_node": [[772, "priority-queue-node"]], "queue_node": [[773, "queue-node"]], "receiver": [[774, "receiver"]], "remove_edge": [[775, "remove-edge"]], "reset_flags Enumeration": [[776, "reset-flags-enumeration"]], "sender": [[777, "sender"]], "sequencer_node": [[778, "sequencer-node"]], "split_node": [[779, "split-node"]], "tagged_msg": [[780, "tagged-msg"]], "write_once_node": [[781, "write-once-node"]], "Identifiers": [[782, "identifiers"]], "Case": [[782, "case"]], "Reserved Identifier Prefixes": [[782, "reserved-identifier-prefixes"]], "info Namespace": [[783, "info-namespace"]], "Types": [[783, "types"]], "Functions": [[783, "functions"]], "Memory Allocation": [[785, "memory-allocation"]], "Allocators": [[785, "allocators"]], "Memory Resources": [[785, "memory-resources"]], "Library Functions": [[785, "library-functions"]], "C Interface to Scalable Allocator": [[786, "c-interface-to-scalable-allocator"], [786, "id1"]], "cache_aligned_allocator": [[787, "cache-aligned-allocator"]], "Non-member Functions": [[787, "non-member-functions"], [789, "non-member-functions"], [791, "non-member-functions"], [843, "non-member-functions"]], "cache_aligned_resource": [[788, "cache-aligned-resource"]], "scalable_allocator": [[789, "scalable-allocator"]], "scalable_memory_resource": [[790, "scalable-memory-resource"]], "tbb_allocator": [[791, "tbb-allocator"]], "Mutual Exclusion": [[792, "mutual-exclusion"]], "Mutex Classes": [[792, "mutex-classes"]], "mutex": [[793, "mutex"]], "null_mutex": [[794, "null-mutex"]], "null_rw_mutex": [[795, "null-rw-mutex"]], "queuing_mutex": [[796, "queuing-mutex"]], "queuing_rw_mutex": [[797, "queuing-rw-mutex"]], "rw_mutex": [[798, "rw-mutex"]], "speculative_spin_mutex": [[799, "speculative-spin-mutex"]], "speculative_spin_rw_mutex": [[800, "speculative-spin-rw-mutex"]], "spin_mutex": [[801, "spin-mutex"]], "spin_rw_mutex": [[802, "spin-rw-mutex"]], "Named Requirements": [[803, "named-requirements"]], "Mutexes": [[803, "mutexes"]], "Task scheduler": [[803, "task-scheduler"]], "BlockedRangeValue": [[804, "blockedrangevalue"]], "ContainerBasedSequence": [[805, "containerbasedsequence"]], "FilterBody": [[806, "filterbody"]], "ParallelForBody": [[807, "parallelforbody"]], "ParallelForEachBody": [[808, "parallelforeachbody"]], "Terms": [[808, "terms"]], "ParallelForFunc": [[809, "parallelforfunc"]], "ParallelForIndex": [[810, "parallelforindex"]], "ParallelReduceBody": [[811, "parallelreducebody"]], "ParallelReduceFunc": [[812, "parallelreducefunc"]], "ParallelReduceReduction": [[813, "parallelreducereduction"]], "ParallelScanBody": [[814, "parallelscanbody"]], "ParallelScanCombine": [[815, "parallelscancombine"]], "ParallelScanFunc": [[816, "parallelscanfunc"]], "Splittable": [[818, "splittable"]], "ContainerRange": [[819, "containerrange"]], "HashCompare": [[820, "hashcompare"]], "AsyncNodeBody": [[821, "asyncnodebody"]], "ContinueNodeBody": [[822, "continuenodebody"]], "FunctionNodeBody": [[823, "functionnodebody"]], "GatewayType": [[824, "gatewaytype"]], "InputNodeBody": [[825, "inputnodebody"]], "JoinNodeFunctionObject": [[826, "joinnodefunctionobject"]], "MultifunctionNodeBody": [[827, "multifunctionnodebody"]], "Sequencer": [[828, "sequencer"]], "Mutex": [[829, "mutex"]], "Provided guarantees for Mutexes that model the Mutex requirement": [[829, "id1"]], "ReaderWriterMutex": [[830, "readerwritermutex"]], "Provided guarantees for Mutexes that model the ReaderWriterMutex requirement": [[830, "id1"]], "SuspendFunc": [[831, "suspendfunc"]], "oneTBB Auxiliary Interfaces": [[832, "onetbb-auxiliary-interfaces"]], "oneTBB Deprecated Interfaces": [[833, "onetbb-deprecated-interfaces"]], "General Information": [[834, "general-information"]], "oneTBB": [[835, "onetbb"]], "oneTBB Interfaces": [[836, "onetbb-interfaces"]], "Notational Conventions": [[837, "notational-conventions"]], "Task Scheduler": [[838, "task-scheduler"]], "Scheduling controls": [[838, "scheduling-controls"]], "Task Group": [[838, "task-group"]], "Task Arena": [[838, "task-arena"]], "Helper types": [[838, "helper-types"]], "attach tag type": [[839, "attach-tag-type"]], "global_control": [[840, "global-control"]], "Resumable tasks": [[841, "resumable-tasks"]], "task_group_context": [[842, "task-group-context"]], "task_scheduler_handle": [[843, "task-scheduler-handle"]], "task_arena": [[844, "task-arena"]], "task_scheduler_observer": [[845, "task-scheduler-observer"]], "this_task_arena": [[846, "this-task-arena"]], "task_group": [[847, "task-group"]], "task_group_status": [[848, "task-group-status"]], "Member constants": [[848, "member-constants"]], "task_handle": [[849, "task-handle"]], "Thread Local Storage": [[850, "thread-local-storage"]], "combinable": [[851, "combinable"]], "enumerable_thread_specific": [[852, "enumerable-thread-specific"]], "Non-member types and constants": [[852, "non-member-types-and-constants"]], "Combining": [[853, "combining"]], "Iteration": [[855, "iteration"]], "flattened2d": [[859, "flattened2d"]], "Thread Safety": [[860, "thread-safety"]], "Timing": [[861, "timing"]], "Syntax": [[861, "syntax"]], "Classes": [[861, "classes"]], "tick_count class": [[862, "tick-count-class"]], "tick_count::interval_t class": [[862, "tick-count-interval-t-class"]], "oneAPI Specification": [[863, "oneapi-specification"]], "Target Audience": [[864, "target-audience"]], "Goals of the Specification": [[864, "goals-of-the-specification"]], "Contribution Guidelines": [[864, "contribution-guidelines"]], "Legal Notices and Disclaimers": [[865, "legal-notices-and-disclaimers"]]}, "indexentries": {"oneapi::dal::kmeans::descriptor (c++ class)": [[19, "_CPPv4I000EN6oneapi3dal6kmeans10descriptorE"]], "oneapi::dal::kmeans::descriptor::accuracy_threshold (c++ member)": [[19, "_CPPv4N6oneapi3dal6kmeans10descriptor18accuracy_thresholdE"]], "oneapi::dal::kmeans::descriptor::cluster_count (c++ member)": [[19, "_CPPv4N6oneapi3dal6kmeans10descriptor13cluster_countE"]], "oneapi::dal::kmeans::descriptor::descriptor (c++ function)": [[19, "_CPPv4N6oneapi3dal6kmeans10descriptor10descriptorENSt7int64_tE"]], "oneapi::dal::kmeans::descriptor::max_iteration_count (c++ member)": [[19, "_CPPv4N6oneapi3dal6kmeans10descriptor19max_iteration_countE"]], "oneapi::dal::kmeans::infer (c++ function)": [[19, "_CPPv4I000EN6oneapi3dal6kmeans5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE"]], "oneapi::dal::kmeans::infer_input (c++ class)": [[19, "_CPPv4I0EN6oneapi3dal6kmeans11infer_inputE"]], "oneapi::dal::kmeans::infer_input::data (c++ member)": [[19, "_CPPv4N6oneapi3dal6kmeans11infer_input4dataE"]], "oneapi::dal::kmeans::infer_input::infer_input (c++ function)": [[19, "_CPPv4N6oneapi3dal6kmeans11infer_input11infer_inputERK5modelI4TaskERK5table"]], "oneapi::dal::kmeans::infer_input::model (c++ member)": [[19, "_CPPv4N6oneapi3dal6kmeans11infer_input5modelE"]], "oneapi::dal::kmeans::infer_result (c++ class)": [[19, "_CPPv4I0EN6oneapi3dal6kmeans12infer_resultE"]], "oneapi::dal::kmeans::infer_result::get_labels (c++ function)": [[19, "_CPPv4NK6oneapi3dal6kmeans12infer_result10get_labelsEv"]], "oneapi::dal::kmeans::infer_result::get_objective_function_value (c++ function)": [[19, "_CPPv4NK6oneapi3dal6kmeans12infer_result28get_objective_function_valueEv"]], "oneapi::dal::kmeans::infer_result::infer_result (c++ function)": [[19, "_CPPv4N6oneapi3dal6kmeans12infer_result12infer_resultEv"]], "oneapi::dal::kmeans::method::by_default (c++ type)": [[19, "_CPPv4N6oneapi3dal6kmeans6method10by_defaultE"]], "oneapi::dal::kmeans::method::lloyd (c++ struct)": [[19, "_CPPv4N6oneapi3dal6kmeans6method5lloydE"]], "oneapi::dal::kmeans::model (c++ class)": [[19, "_CPPv4I0EN6oneapi3dal6kmeans5modelE"]], "oneapi::dal::kmeans::model::get_centroids (c++ function)": [[19, "_CPPv4NK6oneapi3dal6kmeans5model13get_centroidsEv"]], "oneapi::dal::kmeans::model::get_cluster_count (c++ function)": [[19, "_CPPv4NK6oneapi3dal6kmeans5model17get_cluster_countEv"]], "oneapi::dal::kmeans::model::model (c++ function)": [[19, "_CPPv4N6oneapi3dal6kmeans5model5modelEv"]], "oneapi::dal::kmeans::task::by_default (c++ type)": [[19, "_CPPv4N6oneapi3dal6kmeans4task10by_defaultE"]], "oneapi::dal::kmeans::task::clustering (c++ struct)": [[19, "_CPPv4N6oneapi3dal6kmeans4task10clusteringE"]], "oneapi::dal::kmeans::train (c++ function)": [[19, "_CPPv4I000EN6oneapi3dal6kmeans5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE"]], "oneapi::dal::kmeans::train_input (c++ class)": [[19, "_CPPv4I0EN6oneapi3dal6kmeans11train_inputE"]], "oneapi::dal::kmeans::train_input::data (c++ member)": [[19, "_CPPv4N6oneapi3dal6kmeans11train_input4dataE"]], "oneapi::dal::kmeans::train_input::initial_centroids (c++ member)": [[19, "_CPPv4N6oneapi3dal6kmeans11train_input17initial_centroidsE"]], "oneapi::dal::kmeans::train_input::train_input (c++ function)": [[19, "_CPPv4N6oneapi3dal6kmeans11train_input11train_inputERK5tableRK5table"]], "oneapi::dal::kmeans::train_result (c++ class)": [[19, "_CPPv4I0EN6oneapi3dal6kmeans12train_resultE"]], "oneapi::dal::kmeans::train_result::get_iteration_count (c++ function)": [[19, "_CPPv4NK6oneapi3dal6kmeans12train_result19get_iteration_countEv"]], "oneapi::dal::kmeans::train_result::get_labels (c++ function)": [[19, "_CPPv4NK6oneapi3dal6kmeans12train_result10get_labelsEv"]], "oneapi::dal::kmeans::train_result::get_model (c++ function)": [[19, "_CPPv4NK6oneapi3dal6kmeans12train_result9get_modelEv"]], "oneapi::dal::kmeans::train_result::get_objective_function_value (c++ function)": [[19, "_CPPv4NK6oneapi3dal6kmeans12train_result28get_objective_function_valueEv"]], "oneapi::dal::kmeans::train_result::train_result (c++ function)": [[19, "_CPPv4N6oneapi3dal6kmeans12train_result12train_resultEv"]], "oneapi::dal::kmeans_init::compute (c++ function)": [[20, "_CPPv4I000EN6oneapi3dal11kmeans_init7computeE14compute_resultI4TaskERK10descriptorI5Float6Method4TaskERK13compute_inputI4TaskE"]], "oneapi::dal::kmeans_init::compute_input (c++ class)": [[20, "_CPPv4I0EN6oneapi3dal11kmeans_init13compute_inputE"]], "oneapi::dal::kmeans_init::compute_input::compute_input (c++ function)": [[20, "_CPPv4N6oneapi3dal11kmeans_init13compute_input13compute_inputERK5table"]], "oneapi::dal::kmeans_init::compute_input::data (c++ member)": [[20, "_CPPv4N6oneapi3dal11kmeans_init13compute_input4dataE"]], "oneapi::dal::kmeans_init::compute_result (c++ class)": [[20, "_CPPv4I0EN6oneapi3dal11kmeans_init14compute_resultE"]], "oneapi::dal::kmeans_init::compute_result::compute_result (c++ function)": [[20, "_CPPv4N6oneapi3dal11kmeans_init14compute_result14compute_resultEv"]], "oneapi::dal::kmeans_init::compute_result::get_centroids (c++ function)": [[20, "_CPPv4NK6oneapi3dal11kmeans_init14compute_result13get_centroidsEv"]], "oneapi::dal::kmeans_init::descriptor (c++ class)": [[20, "_CPPv4I000EN6oneapi3dal11kmeans_init10descriptorE"]], "oneapi::dal::kmeans_init::descriptor::cluster_count (c++ member)": [[20, "_CPPv4N6oneapi3dal11kmeans_init10descriptor13cluster_countE"]], "oneapi::dal::kmeans_init::descriptor::descriptor (c++ function)": [[20, "_CPPv4N6oneapi3dal11kmeans_init10descriptor10descriptorENSt7int64_tE"]], "oneapi::dal::kmeans_init::method::by_default (c++ type)": [[20, "_CPPv4N6oneapi3dal11kmeans_init6method10by_defaultE"]], "oneapi::dal::kmeans_init::method::dense (c++ struct)": [[20, "_CPPv4N6oneapi3dal11kmeans_init6method5denseE"]], "oneapi::dal::kmeans_init::task::by_default (c++ type)": [[20, "_CPPv4N6oneapi3dal11kmeans_init4task10by_defaultE"]], "oneapi::dal::kmeans_init::task::init (c++ struct)": [[20, "_CPPv4N6oneapi3dal11kmeans_init4task4initE"]], "oneapi::dal::pca::descriptor (c++ class)": [[22, "_CPPv4I000EN6oneapi3dal3pca10descriptorE"]], "oneapi::dal::pca::descriptor::component_count (c++ member)": [[22, "_CPPv4N6oneapi3dal3pca10descriptor15component_countE"]], "oneapi::dal::pca::descriptor::descriptor (c++ function)": [[22, "_CPPv4N6oneapi3dal3pca10descriptor10descriptorENSt7int64_tE"]], "oneapi::dal::pca::descriptor::deterministic (c++ member)": [[22, "_CPPv4N6oneapi3dal3pca10descriptor13deterministicE"]], "oneapi::dal::pca::infer (c++ function)": [[22, "_CPPv4I000EN6oneapi3dal3pca5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE"]], "oneapi::dal::pca::infer_input (c++ class)": [[22, "_CPPv4I0EN6oneapi3dal3pca11infer_inputE"]], "oneapi::dal::pca::infer_input::data (c++ member)": [[22, "_CPPv4N6oneapi3dal3pca11infer_input4dataE"]], "oneapi::dal::pca::infer_input::infer_input (c++ function)": [[22, "_CPPv4N6oneapi3dal3pca11infer_input11infer_inputERK5modelI4TaskERK5table"]], "oneapi::dal::pca::infer_input::model (c++ member)": [[22, "_CPPv4N6oneapi3dal3pca11infer_input5modelE"]], "oneapi::dal::pca::infer_result (c++ class)": [[22, "_CPPv4I0EN6oneapi3dal3pca12infer_resultE"]], "oneapi::dal::pca::infer_result::get_transformed_data (c++ function)": [[22, "_CPPv4NK6oneapi3dal3pca12infer_result20get_transformed_dataEv"]], "oneapi::dal::pca::infer_result::infer_result (c++ function)": [[22, "_CPPv4N6oneapi3dal3pca12infer_result12infer_resultEv"]], "oneapi::dal::pca::method::by_default (c++ type)": [[22, "_CPPv4N6oneapi3dal3pca6method10by_defaultE"]], "oneapi::dal::pca::method::cov (c++ struct)": [[22, "_CPPv4N6oneapi3dal3pca6method3covE"]], "oneapi::dal::pca::method::svd (c++ struct)": [[22, "_CPPv4N6oneapi3dal3pca6method3svdE"]], "oneapi::dal::pca::model (c++ class)": [[22, "_CPPv4I0EN6oneapi3dal3pca5modelE"]], "oneapi::dal::pca::model::get_component_count (c++ function)": [[22, "_CPPv4NK6oneapi3dal3pca5model19get_component_countEv"]], "oneapi::dal::pca::model::get_eigenvectors (c++ function)": [[22, "_CPPv4NK6oneapi3dal3pca5model16get_eigenvectorsEv"]], "oneapi::dal::pca::model::model (c++ function)": [[22, "_CPPv4N6oneapi3dal3pca5model5modelEv"]], "oneapi::dal::pca::task::by_default (c++ type)": [[22, "_CPPv4N6oneapi3dal3pca4task10by_defaultE"]], "oneapi::dal::pca::task::dim_reduction (c++ struct)": [[22, "_CPPv4N6oneapi3dal3pca4task13dim_reductionE"]], "oneapi::dal::pca::train (c++ function)": [[22, "_CPPv4I000EN6oneapi3dal3pca5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE"]], "oneapi::dal::pca::train_input (c++ class)": [[22, "_CPPv4I0EN6oneapi3dal3pca11train_inputE"]], "oneapi::dal::pca::train_input::data (c++ member)": [[22, "_CPPv4N6oneapi3dal3pca11train_input4dataE"]], "oneapi::dal::pca::train_input::train_input (c++ function)": [[22, "_CPPv4N6oneapi3dal3pca11train_input11train_inputERK5table"]], "oneapi::dal::pca::train_result (c++ class)": [[22, "_CPPv4I0EN6oneapi3dal3pca12train_resultE"]], "oneapi::dal::pca::train_result::get_eigenvalues (c++ function)": [[22, "_CPPv4NK6oneapi3dal3pca12train_result15get_eigenvaluesEv"]], "oneapi::dal::pca::train_result::get_eigenvectors (c++ function)": [[22, "_CPPv4NK6oneapi3dal3pca12train_result16get_eigenvectorsEv"]], "oneapi::dal::pca::train_result::get_means (c++ function)": [[22, "_CPPv4NK6oneapi3dal3pca12train_result9get_meansEv"]], "oneapi::dal::pca::train_result::get_model (c++ function)": [[22, "_CPPv4NK6oneapi3dal3pca12train_result9get_modelEv"]], "oneapi::dal::pca::train_result::get_variances (c++ function)": [[22, "_CPPv4NK6oneapi3dal3pca12train_result13get_variancesEv"]], "oneapi::dal::pca::train_result::train_result (c++ function)": [[22, "_CPPv4N6oneapi3dal3pca12train_result12train_resultEv"]], "oneapi::dal::knn::descriptor (c++ class)": [[25, "_CPPv4I000EN6oneapi3dal3knn10descriptorE"]], "oneapi::dal::knn::descriptor::class_count (c++ member)": [[25, "_CPPv4N6oneapi3dal3knn10descriptor11class_countE"]], "oneapi::dal::knn::descriptor::descriptor (c++ function)": [[25, "_CPPv4N6oneapi3dal3knn10descriptor10descriptorENSt7int64_tENSt7int64_tE"]], "oneapi::dal::knn::descriptor::neighbor_count (c++ member)": [[25, "_CPPv4N6oneapi3dal3knn10descriptor14neighbor_countE"]], "oneapi::dal::knn::infer (c++ function)": [[25, "_CPPv4I000EN6oneapi3dal3knn5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE"]], "oneapi::dal::knn::infer_input (c++ class)": [[25, "_CPPv4I0EN6oneapi3dal3knn11infer_inputE"]], "oneapi::dal::knn::infer_input::data (c++ member)": [[25, "_CPPv4N6oneapi3dal3knn11infer_input4dataE"]], "oneapi::dal::knn::infer_input::infer_input (c++ function)": [[25, "_CPPv4N6oneapi3dal3knn11infer_input11infer_inputERK5modelI4TaskERK5table"]], "oneapi::dal::knn::infer_input::model (c++ member)": [[25, "_CPPv4N6oneapi3dal3knn11infer_input5modelE"]], "oneapi::dal::knn::infer_result (c++ class)": [[25, "_CPPv4I0EN6oneapi3dal3knn12infer_resultE"]], "oneapi::dal::knn::infer_result::get_labels (c++ function)": [[25, "_CPPv4NK6oneapi3dal3knn12infer_result10get_labelsEv"]], "oneapi::dal::knn::infer_result::infer_result (c++ function)": [[25, "_CPPv4N6oneapi3dal3knn12infer_result12infer_resultEv"]], "oneapi::dal::knn::method::bruteforce (c++ struct)": [[25, "_CPPv4N6oneapi3dal3knn6method10bruteforceE"]], "oneapi::dal::knn::method::by_default (c++ type)": [[25, "_CPPv4N6oneapi3dal3knn6method10by_defaultE"]], "oneapi::dal::knn::method::kd_tree (c++ struct)": [[25, "_CPPv4N6oneapi3dal3knn6method7kd_treeE"]], "oneapi::dal::knn::model (c++ class)": [[25, "_CPPv4I0EN6oneapi3dal3knn5modelE"]], "oneapi::dal::knn::model::model (c++ function)": [[25, "_CPPv4N6oneapi3dal3knn5model5modelEv"]], "oneapi::dal::knn::task::by_default (c++ type)": [[25, "_CPPv4N6oneapi3dal3knn4task10by_defaultE"]], "oneapi::dal::knn::task::classification (c++ struct)": [[25, "_CPPv4N6oneapi3dal3knn4task14classificationE"]], "oneapi::dal::knn::train (c++ function)": [[25, "_CPPv4I000EN6oneapi3dal3knn5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE"]], "oneapi::dal::knn::train_input (c++ class)": [[25, "_CPPv4I0EN6oneapi3dal3knn11train_inputE"]], "oneapi::dal::knn::train_input::data (c++ member)": [[25, "_CPPv4N6oneapi3dal3knn11train_input4dataE"]], "oneapi::dal::knn::train_input::labels (c++ member)": [[25, "_CPPv4N6oneapi3dal3knn11train_input6labelsE"]], "oneapi::dal::knn::train_input::train_input (c++ function)": [[25, "_CPPv4N6oneapi3dal3knn11train_input11train_inputERK5tableRK5table"]], "oneapi::dal::knn::train_result (c++ class)": [[25, "_CPPv4I0EN6oneapi3dal3knn12train_resultE"]], "oneapi::dal::knn::train_result::get_model (c++ function)": [[25, "_CPPv4NK6oneapi3dal3knn12train_result9get_modelEv"]], "oneapi::dal::knn::train_result::train_result (c++ function)": [[25, "_CPPv4N6oneapi3dal3knn12train_result12train_resultEv"]], "oneapi::dal::data_type (c++ enum)": [[29, "_CPPv4N6oneapi3dal9data_typeE"]], "oneapi::dal::range (c++ struct)": [[29, "_CPPv4N6oneapi3dal5rangeE"]], "oneapi::dal::range::get_element_count (c++ function)": [[29, "_CPPv4NK6oneapi3dal5range17get_element_countENSt7int64_tE"]], "oneapi::dal::range::range (c++ function)": [[29, "_CPPv4N6oneapi3dal5range5rangeENSt7int64_tENSt7int64_tE"]], "oneapi::dal::column_accessor (c++ class)": [[34, "_CPPv4I0EN6oneapi3dal15column_accessorE"]], "oneapi::dal::column_accessor::column_accessor (c++ function)": [[34, "_CPPv4N6oneapi3dal15column_accessor15column_accessorERK5table"]], "oneapi::dal::column_accessor::pull (c++ function)": [[34, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueENSt7int64_tERK5rangeRKN4sycl3usm5allocE"], [34, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueER5arrayI6data_tENSt7int64_tERK5rangeRKN4sycl3usm5allocE"]], "oneapi::dal::row_accessor (c++ class)": [[35, "_CPPv4I0EN6oneapi3dal12row_accessorE"]], "oneapi::dal::row_accessor::pull (c++ function)": [[35, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueER5arrayI6data_tERK5rangeRKN4sycl3usm5allocE"], [35, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueERK5rangeRKN4sycl3usm5allocE"]], "oneapi::dal::row_accessor::row_accessor (c++ function)": [[35, "_CPPv4N6oneapi3dal12row_accessor12row_accessorERK5table"]], "oneapi::dal::array (c++ class)": [[37, "_CPPv4I0EN6oneapi3dal5arrayE"]], "oneapi::dal::array::array (c++ function)": [[37, "_CPPv4I00EN6oneapi3dal5array5arrayERK5arrayI7RefDataEP7ExtDataNSt7int64_tE"], [37, "_CPPv4I00EN6oneapi3dal5array5arrayERKN4sycl5queueEP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE"], [37, "_CPPv4N6oneapi3dal5array5arrayERK5arrayI4DataE"], [37, "_CPPv4N6oneapi3dal5array5arrayERR5arrayI4DataE"], [37, "_CPPv4N6oneapi3dal5array5arrayEv"]], "oneapi::dal::array::empty (c++ function)": [[37, "_CPPv4N6oneapi3dal5array5emptyERKN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE"]], "oneapi::dal::array::full (c++ function)": [[37, "_CPPv4I0EN6oneapi3dal5array4fullE5arrayI4DataERN4sycl5queueENSt7int64_tERR7ElementRKN4sycl3usm5allocE"]], "oneapi::dal::array::get_count (c++ function)": [[37, "_CPPv4NK6oneapi3dal5array9get_countEv"]], "oneapi::dal::array::get_data (c++ function)": [[37, "_CPPv4NK6oneapi3dal5array8get_dataEv"]], "oneapi::dal::array::get_mutable_data (c++ function)": [[37, "_CPPv4NK6oneapi3dal5array16get_mutable_dataEv"]], "oneapi::dal::array::get_size (c++ function)": [[37, "_CPPv4NK6oneapi3dal5array8get_sizeEv"]], "oneapi::dal::array::has_mutable_data (c++ function)": [[37, "_CPPv4NK6oneapi3dal5array16has_mutable_dataEv"]], "oneapi::dal::array::need_mutable_data (c++ function)": [[37, "_CPPv4N6oneapi3dal5array17need_mutable_dataERN4sycl5queueERKN4sycl3usm5allocE"]], "oneapi::dal::array::operator= (c++ function)": [[37, "_CPPv4N6oneapi3dal5arrayaSERK5arrayI4DataE"], [37, "_CPPv4N6oneapi3dal5arrayaSERR5arrayI4DataE"]], "oneapi::dal::array::operator[] (c++ function)": [[37, "_CPPv4NK6oneapi3dal5arrayixENSt7int64_tE"]], "oneapi::dal::array::reset (c++ function)": [[37, "_CPPv4I00EN6oneapi3dal5array5resetEvP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE"], [37, "_CPPv4I00EN6oneapi3dal5array5resetEvRK5arrayI7RefDataEP7ExtDataNSt7int64_tE"], [37, "_CPPv4N6oneapi3dal5array5resetERKN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE"], [37, "_CPPv4N6oneapi3dal5array5resetEv"]], "oneapi::dal::array::wrap (c++ function)": [[37, "_CPPv4I0EN6oneapi3dal5array4wrapE5arrayI4DataEP7ExtDataNSt7int64_tERKNSt6vectorIN4sycl5eventEEE"]], "oneapi::dal::array::zeros (c++ function)": [[37, "_CPPv4N6oneapi3dal5array5zerosERN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE"]], "oneapi::dal::csv::data_source (c++ class)": [[38, "_CPPv4N6oneapi3dal3csv11data_sourceE"]], "oneapi::dal::csv::data_source::data_source (c++ function)": [[38, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceEPKcc12read_options"], [38, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceERKNSt6stringEc12read_options"]], "oneapi::dal::csv::data_source::delimiter (c++ member)": [[38, "_CPPv4N6oneapi3dal3csv11data_source9delimiterE"]], "oneapi::dal::csv::data_source::file_name (c++ member)": [[38, "_CPPv4N6oneapi3dal3csv11data_source9file_nameE"]], "oneapi::dal::csv::data_source::options (c++ member)": [[38, "_CPPv4N6oneapi3dal3csv11data_source7optionsE"]], "oneapi::dal::csv::read_args (c++ class)": [[38, "_CPPv4I0EN6oneapi3dal3csv9read_argsE"]], "oneapi::dal::csv::read_args::read_args (c++ function)": [[38, "_CPPv4N6oneapi3dal3csv9read_args9read_argsEv"]], "oneapi::dal::read (c++ function)": [[38, "_CPPv4I00EN6oneapi3dal4readE6ObjectRK10DataSource"]], "oneapi::dal::homogen_table (c++ class)": [[41, "_CPPv4N6oneapi3dal13homogen_tableE"]], "oneapi::dal::homogen_table::get_data (c++ function)": [[41, "_CPPv4I0ENK6oneapi3dal13homogen_table8get_dataEPK4Datav"], [41, "_CPPv4NK6oneapi3dal13homogen_table8get_dataEv"]], "oneapi::dal::homogen_table::get_kind (c++ function)": [[41, "_CPPv4NK6oneapi3dal13homogen_table8get_kindEv"]], "oneapi::dal::homogen_table::homogen_table (c++ function)": [[41, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout"], [41, "_CPPv4N6oneapi3dal13homogen_table13homogen_tableEv"]], "oneapi::dal::homogen_table::kind (c++ function)": [[41, "_CPPv4N6oneapi3dal13homogen_table4kindEv"]], "oneapi::dal::homogen_table::wrap (c++ function)": [[41, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERKN4sycl12vector_classIN4sycl5eventEEE11data_layout"]], "oneapi::dal::data_layout (c++ enum)": [[42, "_CPPv4N6oneapi3dal11data_layoutE"]], "oneapi::dal::feature_type (c++ enum)": [[42, "_CPPv4N6oneapi3dal12feature_typeE"]], "oneapi::dal::table (c++ class)": [[42, "_CPPv4N6oneapi3dal5tableE"]], "oneapi::dal::table::get_column_count (c++ function)": [[42, "_CPPv4NK6oneapi3dal5table16get_column_countEv"]], "oneapi::dal::table::get_data_layout (c++ function)": [[42, "_CPPv4NK6oneapi3dal5table15get_data_layoutEv"]], "oneapi::dal::table::get_kind (c++ function)": [[42, "_CPPv4NK6oneapi3dal5table8get_kindEv"]], "oneapi::dal::table::get_metadata (c++ function)": [[42, "_CPPv4NK6oneapi3dal5table12get_metadataEv"]], "oneapi::dal::table::get_row_count (c++ function)": [[42, "_CPPv4NK6oneapi3dal5table13get_row_countEv"]], "oneapi::dal::table::has_data (c++ function)": [[42, "_CPPv4NK6oneapi3dal5table8has_dataEv"]], "oneapi::dal::table::operator= (c++ function)": [[42, "_CPPv4N6oneapi3dal5tableaSERK5table"], [42, "_CPPv4N6oneapi3dal5tableaSERR5table"]], "oneapi::dal::table::table (c++ function)": [[42, "_CPPv4N6oneapi3dal5table5tableERK5table"], [42, "_CPPv4N6oneapi3dal5table5tableERR5table"], [42, "_CPPv4N6oneapi3dal5table5tableEv"]], "oneapi::dal::table_metadata (c++ class)": [[42, "_CPPv4N6oneapi3dal14table_metadataE"]], "oneapi::dal::table_metadata::get_data_type (c++ function)": [[42, "_CPPv4NK6oneapi3dal14table_metadata13get_data_typeENSt7int64_tE"]], "oneapi::dal::table_metadata::get_feature_count (c++ function)": [[42, "_CPPv4NK6oneapi3dal14table_metadata17get_feature_countEv"]], "oneapi::dal::table_metadata::get_feature_type (c++ function)": [[42, "_CPPv4NK6oneapi3dal14table_metadata16get_feature_typeENSt7int64_tE"]], "oneapi::dal::table_metadata::table_metadata (c++ function)": [[42, "_CPPv4N6oneapi3dal14table_metadata14table_metadataERK5arrayI9data_typeERK5arrayI12feature_typeE"], [42, "_CPPv4N6oneapi3dal14table_metadata14table_metadataEv"]], "api": [[43, "term-API"]], "accessor": [[43, "term-Accessor"]], "batch mode": [[43, "term-Batch-mode"]], "builder": [[43, "term-Builder"]], "csv file": [[43, "term-CSV-file"]], "categorical feature": [[43, "term-Categorical-feature"]], "classification": [[43, "term-Classification"]], "clustering": [[43, "term-Clustering"]], "contiguous data": [[43, "term-Contiguous-data"]], "continuous feature": [[43, "term-Continuous-feature"]], "dpc++": [[43, "term-DPC"]], "data format": [[43, "term-Data-format"]], "data layout": [[43, "term-Data-layout"]], "data type": [[43, "term-Data-type"]], "dataset": [[43, "term-Dataset"]], "dimensionality reduction": [[43, "term-Dimensionality-reduction"]], "feature": [[43, "term-Feature"]], "feature vector": [[43, "term-Feature-vector"]], "flat data": [[43, "term-Flat-data"]], "getter": [[43, "term-Getter"]], "heterogeneous data": [[43, "term-Heterogeneous-data"]], "homogeneous data": [[43, "term-Homogeneous-data"]], "host/device": [[43, "term-Host-Device"]], "immutability": [[43, "term-Immutability"]], "inference": [[43, "term-Inference"]], "inference set": [[43, "term-Inference-set"]], "interval feature": [[43, "term-Interval-feature"]], "jit": [[43, "term-JIT"]], "kernel": [[43, "term-Kernel"]], "label": [[43, "term-Label"]], "metadata": [[43, "term-Metadata"]], "model": [[43, "term-Model"]], "nominal feature": [[43, "term-Nominal-feature"]], "observation": [[43, "term-Observation"]], "online mode": [[43, "term-Online-mode"]], "ordinal feature": [[43, "term-Ordinal-feature"]], "outlier": [[43, "term-Outlier"]], "ratio feature": [[43, "term-Ratio-feature"]], "reference-counted object": [[43, "term-Reference-counted-object"]], "regression": [[43, "term-Regression"]], "response": [[43, "term-Response"]], "spir-v": [[43, "term-SPIR-V"]], "sycl": [[43, "term-SYCL"]], "setter": [[43, "term-Setter"]], "supervised learning": [[43, "term-Supervised-learning"]], "table": [[43, "term-Table"]], "training": [[43, "term-Training"]], "training set": [[43, "term-Training-set"]], "unsupervised learning": [[43, "term-Unsupervised-learning"]], "workload": [[43, "term-Workload"]], "dnnl::memory::data_type (c++ enum)": [[55, "_CPPv4N4dnnl6memory9data_typeE"]], "dnnl::memory::data_type::bf16 (c++ enumerator)": [[55, "_CPPv4N4dnnl6memory9data_type4bf16E"]], "dnnl::memory::data_type::f16 (c++ enumerator)": [[55, "_CPPv4N4dnnl6memory9data_type3f16E"]], "dnnl::memory::data_type::f32 (c++ enumerator)": [[55, "_CPPv4N4dnnl6memory9data_type3f32E"]], "dnnl::memory::data_type::s32 (c++ enumerator)": [[55, "_CPPv4N4dnnl6memory9data_type3s32E"]], "dnnl::memory::data_type::s8 (c++ enumerator)": [[55, "_CPPv4N4dnnl6memory9data_type2s8E"]], "dnnl::memory::data_type::u8 (c++ enumerator)": [[55, "_CPPv4N4dnnl6memory9data_type2u8E"]], "dnnl::memory::data_type::undef (c++ enumerator)": [[55, "_CPPv4N4dnnl6memory9data_type5undefE"]], "dnnl::memory::format_tag (c++ enum)": [[58, "_CPPv4N4dnnl6memory10format_tagE"]], "dnnl::memory::format_tag::a (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag1aE"]], "dnnl::memory::format_tag::ab (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag2abE"]], "dnnl::memory::format_tag::abc (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag3abcE"]], "dnnl::memory::format_tag::abcd (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag4abcdE"]], "dnnl::memory::format_tag::abcde (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag5abcdeE"]], "dnnl::memory::format_tag::abcdef (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag6abcdefE"]], "dnnl::memory::format_tag::abdc (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag4abdcE"]], "dnnl::memory::format_tag::abdec (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag5abdecE"]], "dnnl::memory::format_tag::acb (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag3acbE"]], "dnnl::memory::format_tag::acbde (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag5acbdeE"]], "dnnl::memory::format_tag::acbdef (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag6acbdefE"]], "dnnl::memory::format_tag::acdb (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag4acdbE"]], "dnnl::memory::format_tag::acdeb (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag5acdebE"]], "dnnl::memory::format_tag::any (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag3anyE"]], "dnnl::memory::format_tag::ba (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag2baE"]], "dnnl::memory::format_tag::bac (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag3bacE"]], "dnnl::memory::format_tag::bacd (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag4bacdE"]], "dnnl::memory::format_tag::bacde (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag5bacdeE"]], "dnnl::memory::format_tag::bca (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag3bcaE"]], "dnnl::memory::format_tag::bcda (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag4bcdaE"]], "dnnl::memory::format_tag::bcdea (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag5bcdeaE"]], "dnnl::memory::format_tag::cba (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag3cbaE"]], "dnnl::memory::format_tag::cdba (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag4cdbaE"]], "dnnl::memory::format_tag::cdeba (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag5cdebaE"]], "dnnl::memory::format_tag::chwn (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag4chwnE"]], "dnnl::memory::format_tag::cn (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag2cnE"]], "dnnl::memory::format_tag::dcab (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag4dcabE"]], "dnnl::memory::format_tag::decab (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag5decabE"]], "dnnl::memory::format_tag::defcab (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag6defcabE"]], "dnnl::memory::format_tag::dhwigo (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag6dhwigoE"]], "dnnl::memory::format_tag::dhwio (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag5dhwioE"]], "dnnl::memory::format_tag::giodhw (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag6giodhwE"]], "dnnl::memory::format_tag::giohw (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag5giohwE"]], "dnnl::memory::format_tag::goidhw (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag6goidhwE"]], "dnnl::memory::format_tag::goihw (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag5goihwE"]], "dnnl::memory::format_tag::goiw (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag4goiwE"]], "dnnl::memory::format_tag::hwigo (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag5hwigoE"]], "dnnl::memory::format_tag::hwio (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag4hwioE"]], "dnnl::memory::format_tag::idhwo (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag5idhwoE"]], "dnnl::memory::format_tag::ihwo (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag4ihwoE"]], "dnnl::memory::format_tag::io (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag2ioE"]], "dnnl::memory::format_tag::iodhw (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag5iodhwE"]], "dnnl::memory::format_tag::iohw (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag4iohwE"]], "dnnl::memory::format_tag::iwo (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag3iwoE"]], "dnnl::memory::format_tag::ldgo (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag4ldgoE"]], "dnnl::memory::format_tag::ldgoi (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag5ldgoiE"]], "dnnl::memory::format_tag::ldigo (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag5ldigoE"]], "dnnl::memory::format_tag::ldio (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag4ldioE"]], "dnnl::memory::format_tag::ldnc (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag4ldncE"]], "dnnl::memory::format_tag::ldoi (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag4ldoiE"]], "dnnl::memory::format_tag::nc (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag2ncE"]], "dnnl::memory::format_tag::ncdhw (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag5ncdhwE"]], "dnnl::memory::format_tag::nchw (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag4nchwE"]], "dnnl::memory::format_tag::ncw (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag3ncwE"]], "dnnl::memory::format_tag::ndhwc (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag5ndhwcE"]], "dnnl::memory::format_tag::nhwc (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag4nhwcE"]], "dnnl::memory::format_tag::nt (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag2ntE"]], "dnnl::memory::format_tag::ntc (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag3ntcE"]], "dnnl::memory::format_tag::nwc (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag3nwcE"]], "dnnl::memory::format_tag::odhwi (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag5odhwiE"]], "dnnl::memory::format_tag::ohwi (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag4ohwiE"]], "dnnl::memory::format_tag::oi (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag2oiE"]], "dnnl::memory::format_tag::oidhw (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag5oidhwE"]], "dnnl::memory::format_tag::oihw (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag4oihwE"]], "dnnl::memory::format_tag::oiw (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag3oiwE"]], "dnnl::memory::format_tag::owi (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag3owiE"]], "dnnl::memory::format_tag::tn (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag2tnE"]], "dnnl::memory::format_tag::tnc (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag3tncE"]], "dnnl::memory::format_tag::undef (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag5undefE"]], "dnnl::memory::format_tag::wigo (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag4wigoE"]], "dnnl::memory::format_tag::wio (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag3wioE"]], "dnnl::memory::format_tag::x (c++ enumerator)": [[58, "_CPPv4N4dnnl6memory10format_tag1xE"]], "dnnl::memory::dim (c++ type)": [[59, "_CPPv4N4dnnl6memory3dimE"]], "dnnl::memory::dims (c++ type)": [[59, "_CPPv4N4dnnl6memory4dimsE"]], "dnnl_memory_allocate (c macro)": [[60, "c.DNNL_MEMORY_ALLOCATE"]], "dnnl_memory_none (c macro)": [[60, "c.DNNL_MEMORY_NONE"]], "dnnl::memory (c++ struct)": [[60, "_CPPv4N4dnnl6memoryE"]], "dnnl::memory::desc (c++ struct)": [[60, "_CPPv4N4dnnl6memory4descE"]], "dnnl::memory::desc::data_type (c++ function)": [[60, "_CPPv4NK4dnnl6memory4desc9data_typeEv"]], "dnnl::memory::desc::desc (c++ function)": [[60, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_type10format_tagb"], [60, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_typeRK4dimsb"], [60, "_CPPv4N4dnnl6memory4desc4descEv"]], "dnnl::memory::desc::dims (c++ function)": [[60, "_CPPv4NK4dnnl6memory4desc4dimsEv"]], "dnnl::memory::desc::get_size (c++ function)": [[60, "_CPPv4NK4dnnl6memory4desc8get_sizeEv"]], "dnnl::memory::desc::is_zero (c++ function)": [[60, "_CPPv4NK4dnnl6memory4desc7is_zeroEv"]], "dnnl::memory::desc::operator!= (c++ function)": [[60, "_CPPv4NK4dnnl6memory4descneERK4desc"]], "dnnl::memory::desc::operator== (c++ function)": [[60, "_CPPv4NK4dnnl6memory4desceqERK4desc"]], "dnnl::memory::desc::permute_axes (c++ function)": [[60, "_CPPv4NK4dnnl6memory4desc12permute_axesERKNSt6vectorIiEEb"]], "dnnl::memory::desc::reshape (c++ function)": [[60, "_CPPv4NK4dnnl6memory4desc7reshapeERK4dimsb"]], "dnnl::memory::desc::submemory_desc (c++ function)": [[60, "_CPPv4NK4dnnl6memory4desc14submemory_descERK4dimsRK4dimsb"]], "dnnl::memory::get_data_handle (c++ function)": [[60, "_CPPv4NK4dnnl6memory15get_data_handleEv"]], "dnnl::memory::get_desc (c++ function)": [[60, "_CPPv4NK4dnnl6memory8get_descEv"]], "dnnl::memory::get_engine (c++ function)": [[60, "_CPPv4NK4dnnl6memory10get_engineEv"]], "dnnl::memory::map_data (c++ function)": [[60, "_CPPv4I0ENK4dnnl6memory8map_dataEP1Tv"]], "dnnl::memory::memory (c++ function)": [[60, "_CPPv4N4dnnl6memory6memoryERK4descRK6engine"], [60, "_CPPv4N4dnnl6memory6memoryERK4descRK6enginePv"], [60, "_CPPv4N4dnnl6memory6memoryEv"]], "dnnl::memory::set_data_handle (c++ function)": [[60, "_CPPv4NK4dnnl6memory15set_data_handleEPv"], [60, "_CPPv4NK4dnnl6memory15set_data_handleEPvRK6stream"]], "dnnl::memory::unmap_data (c++ function)": [[60, "_CPPv4NK4dnnl6memory10unmap_dataEPv"]], "dnnl::sycl_interop::get_buffer (c++ function)": [[60, "_CPPv4I0_iEN4dnnl12sycl_interop10get_bufferEN2cl4sycl6bufferI1T5ndimsEERK6memory"]], "dnnl::sycl_interop::get_memory_kind (c++ function)": [[60, "_CPPv4N4dnnl12sycl_interop15get_memory_kindERK6memory"]], "dnnl::sycl_interop::make_memory (c++ function)": [[60, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6engineN2cl4sycl6bufferI1T5ndimsEE"], [60, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6streamN2cl4sycl6bufferI1T5ndimsEE"], [60, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6engine11memory_kindPv"], [60, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6stream11memory_kindPv"]], "dnnl::sycl_interop::memory_kind (c++ enum)": [[60, "_CPPv4N4dnnl12sycl_interop11memory_kindE"]], "dnnl::sycl_interop::memory_kind::buffer (c++ enumerator)": [[60, "_CPPv4N4dnnl12sycl_interop11memory_kind6bufferE"]], "dnnl::sycl_interop::memory_kind::usm (c++ enumerator)": [[60, "_CPPv4N4dnnl12sycl_interop11memory_kind3usmE"]], "dnnl::sycl_interop::set_buffer (c++ function)": [[60, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEE"], [60, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEER6stream"]], "dnnl::engine (c++ struct)": [[61, "_CPPv4N4dnnl6engineE"]], "dnnl::engine::engine (c++ function)": [[61, "_CPPv4N4dnnl6engine6engineE4kind6size_t"], [61, "_CPPv4N4dnnl6engine6engineEv"]], "dnnl::engine::get_count (c++ function)": [[61, "_CPPv4N4dnnl6engine9get_countE4kind"]], "dnnl::engine::get_kind (c++ function)": [[61, "_CPPv4NK4dnnl6engine8get_kindEv"]], "dnnl::engine::kind (c++ enum)": [[61, "_CPPv4N4dnnl6engine4kindE"]], "dnnl::engine::kind::any (c++ enumerator)": [[61, "_CPPv4N4dnnl6engine4kind3anyE"]], "dnnl::engine::kind::cpu (c++ enumerator)": [[61, "_CPPv4N4dnnl6engine4kind3cpuE"]], "dnnl::engine::kind::gpu (c++ enumerator)": [[61, "_CPPv4N4dnnl6engine4kind3gpuE"]], "dnnl::stream (c++ struct)": [[61, "_CPPv4N4dnnl6streamE"]], "dnnl::stream::flags (c++ enum)": [[61, "_CPPv4N4dnnl6stream5flagsE"]], "dnnl::stream::flags::default_flags (c++ enumerator)": [[61, "_CPPv4N4dnnl6stream5flags13default_flagsE"]], "dnnl::stream::flags::in_order (c++ enumerator)": [[61, "_CPPv4N4dnnl6stream5flags8in_orderE"]], "dnnl::stream::flags::out_of_order (c++ enumerator)": [[61, "_CPPv4N4dnnl6stream5flags12out_of_orderE"]], "dnnl::stream::get_engine (c++ function)": [[61, "_CPPv4NK4dnnl6stream10get_engineEv"]], "dnnl::stream::stream (c++ function)": [[61, "_CPPv4N4dnnl6stream6streamERK6engine5flags"], [61, "_CPPv4N4dnnl6stream6streamEv"]], "dnnl::stream::wait (c++ function)": [[61, "_CPPv4N4dnnl6stream4waitEv"]], "dnnl::sycl_interop::get_context (c++ function)": [[61, "_CPPv4N4dnnl12sycl_interop11get_contextERK6engine"]], "dnnl::sycl_interop::get_device (c++ function)": [[61, "_CPPv4N4dnnl12sycl_interop10get_deviceERK6engine"]], "dnnl::sycl_interop::get_queue (c++ function)": [[61, "_CPPv4N4dnnl12sycl_interop9get_queueERK6stream"]], "dnnl::sycl_interop::make_engine (c++ function)": [[61, "_CPPv4N4dnnl12sycl_interop11make_engineERKN2cl4sycl6deviceERKN2cl4sycl7contextE"]], "dnnl::sycl_interop::make_stream (c++ function)": [[61, "_CPPv4N4dnnl12sycl_interop11make_streamERK6engineRN2cl4sycl5queueE"]], "dnnl_graph_unknown_dim (c macro)": [[63, "c.DNNL_GRAPH_UNKNOWN_DIM"]], "dnnl_graph_unknown_ndims (c macro)": [[63, "c.DNNL_GRAPH_UNKNOWN_NDIMS"]], "dnnl::graph::graph (c++ struct)": [[63, "_CPPv4N4dnnl5graph5graphE"]], "dnnl::graph::graph::add_op (c++ function)": [[63, "_CPPv4N4dnnl5graph5graph6add_opERK2opb"]], "dnnl::graph::graph::finalize (c++ function)": [[63, "_CPPv4N4dnnl5graph5graph8finalizeEv"]], "dnnl::graph::graph::get_partitions (c++ function)": [[63, "_CPPv4N4dnnl5graph5graph14get_partitionsEN9partition6policyE"]], "dnnl::graph::graph::graph (c++ function)": [[63, "_CPPv4N4dnnl5graph5graph5graphEN4dnnl6engine4kindE"], [63, "_CPPv4N4dnnl5graph5graph5graphEN4dnnl6engine4kindEN4dnnl11fpmath_modeE"]], "dnnl::graph::graph::is_finalized (c++ function)": [[63, "_CPPv4NK4dnnl5graph5graph12is_finalizedEv"]], "dnnl::graph::logical_tensor (c++ struct)": [[63, "_CPPv4N4dnnl5graph14logical_tensorE"]], "dnnl::graph::logical_tensor::data_type (c++ enum)": [[63, "_CPPv4N4dnnl5graph14logical_tensor9data_typeE"]], "dnnl::graph::logical_tensor::data_type::bf16 (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph14logical_tensor9data_type4bf16E"]], "dnnl::graph::logical_tensor::data_type::boolean (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph14logical_tensor9data_type7booleanE"]], "dnnl::graph::logical_tensor::data_type::f16 (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph14logical_tensor9data_type3f16E"]], "dnnl::graph::logical_tensor::data_type::f32 (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph14logical_tensor9data_type3f32E"]], "dnnl::graph::logical_tensor::data_type::s32 (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph14logical_tensor9data_type3s32E"]], "dnnl::graph::logical_tensor::data_type::s8 (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph14logical_tensor9data_type2s8E"]], "dnnl::graph::logical_tensor::data_type::u8 (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph14logical_tensor9data_type2u8E"]], "dnnl::graph::logical_tensor::data_type::undef (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph14logical_tensor9data_type5undefE"]], "dnnl::graph::logical_tensor::dim (c++ type)": [[63, "_CPPv4N4dnnl5graph14logical_tensor3dimE"]], "dnnl::graph::logical_tensor::dims (c++ type)": [[63, "_CPPv4N4dnnl5graph14logical_tensor4dimsE"]], "dnnl::graph::logical_tensor::get_data_type (c++ function)": [[63, "_CPPv4N4dnnl5graph14logical_tensor13get_data_typeEv"]], "dnnl::graph::logical_tensor::get_dims (c++ function)": [[63, "_CPPv4NK4dnnl5graph14logical_tensor8get_dimsEv"]], "dnnl::graph::logical_tensor::get_id (c++ function)": [[63, "_CPPv4NK4dnnl5graph14logical_tensor6get_idEv"]], "dnnl::graph::logical_tensor::get_layout_id (c++ function)": [[63, "_CPPv4NK4dnnl5graph14logical_tensor13get_layout_idEv"]], "dnnl::graph::logical_tensor::get_layout_type (c++ function)": [[63, "_CPPv4NK4dnnl5graph14logical_tensor15get_layout_typeEv"]], "dnnl::graph::logical_tensor::get_mem_size (c++ function)": [[63, "_CPPv4NK4dnnl5graph14logical_tensor12get_mem_sizeEv"]], "dnnl::graph::logical_tensor::get_property_type (c++ function)": [[63, "_CPPv4NK4dnnl5graph14logical_tensor17get_property_typeEv"]], "dnnl::graph::logical_tensor::get_strides (c++ function)": [[63, "_CPPv4NK4dnnl5graph14logical_tensor11get_stridesEv"]], "dnnl::graph::logical_tensor::is_equal (c++ function)": [[63, "_CPPv4N4dnnl5graph14logical_tensor8is_equalERK14logical_tensor"]], "dnnl::graph::logical_tensor::layout_type (c++ enum)": [[63, "_CPPv4N4dnnl5graph14logical_tensor11layout_typeE"]], "dnnl::graph::logical_tensor::layout_type::any (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph14logical_tensor11layout_type3anyE"]], "dnnl::graph::logical_tensor::layout_type::opaque (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph14logical_tensor11layout_type6opaqueE"]], "dnnl::graph::logical_tensor::layout_type::strided (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph14logical_tensor11layout_type7stridedE"]], "dnnl::graph::logical_tensor::layout_type::undef (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph14logical_tensor11layout_type5undefE"]], "dnnl::graph::logical_tensor::logical_tensor (c++ function)": [[63, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type11layout_type"], [63, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type7int32_t11layout_type13property_type"], [63, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims11layout_type13property_type"], [63, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims6size_t13property_type"], [63, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dimsRK4dims13property_type"], [63, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorERK14logical_tensor"], [63, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorEv"]], "dnnl::graph::logical_tensor::operator= (c++ function)": [[63, "_CPPv4N4dnnl5graph14logical_tensoraSERK14logical_tensor"]], "dnnl::graph::logical_tensor::property_type (c++ enum)": [[63, "_CPPv4N4dnnl5graph14logical_tensor13property_typeE"]], "dnnl::graph::logical_tensor::property_type::constant (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph14logical_tensor13property_type8constantE"]], "dnnl::graph::logical_tensor::property_type::undef (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph14logical_tensor13property_type5undefE"]], "dnnl::graph::logical_tensor::property_type::variable (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph14logical_tensor13property_type8variableE"]], "dnnl::graph::op (c++ struct)": [[63, "_CPPv4N4dnnl5graph2opE"]], "dnnl::graph::op::add_input (c++ function)": [[63, "_CPPv4N4dnnl5graph2op9add_inputERK14logical_tensor"]], "dnnl::graph::op::add_inputs (c++ function)": [[63, "_CPPv4N4dnnl5graph2op10add_inputsERKNSt6vectorI14logical_tensorEE"]], "dnnl::graph::op::add_output (c++ function)": [[63, "_CPPv4N4dnnl5graph2op10add_outputERK14logical_tensor"]], "dnnl::graph::op::add_outputs (c++ function)": [[63, "_CPPv4N4dnnl5graph2op11add_outputsERKNSt6vectorI14logical_tensorEE"]], "dnnl::graph::op::attr (c++ enum)": [[63, "_CPPv4N4dnnl5graph2op4attrE"]], "dnnl::graph::op::attr::alpha (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr5alphaE"]], "dnnl::graph::op::attr::auto_broadcast (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr14auto_broadcastE"]], "dnnl::graph::op::attr::auto_pad (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr8auto_padE"]], "dnnl::graph::op::attr::axes (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr4axesE"]], "dnnl::graph::op::attr::axis (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr4axisE"]], "dnnl::graph::op::attr::begin_norm_axis (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr15begin_norm_axisE"]], "dnnl::graph::op::attr::beta (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr4betaE"]], "dnnl::graph::op::attr::coordinate_transformation_mode (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr30coordinate_transformation_modeE"]], "dnnl::graph::op::attr::data_format (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr11data_formatE"]], "dnnl::graph::op::attr::dilations (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr9dilationsE"]], "dnnl::graph::op::attr::dst_shape (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr9dst_shapeE"]], "dnnl::graph::op::attr::epsilon (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr7epsilonE"]], "dnnl::graph::op::attr::exclude_pad (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr11exclude_padE"]], "dnnl::graph::op::attr::groups (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr6groupsE"]], "dnnl::graph::op::attr::keep_dims (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr9keep_dimsE"]], "dnnl::graph::op::attr::keep_stats (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr10keep_statsE"]], "dnnl::graph::op::attr::kernel (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr6kernelE"]], "dnnl::graph::op::attr::max (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr3maxE"]], "dnnl::graph::op::attr::min (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr3minE"]], "dnnl::graph::op::attr::mode (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr4modeE"]], "dnnl::graph::op::attr::momentum (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr8momentumE"]], "dnnl::graph::op::attr::order (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr5orderE"]], "dnnl::graph::op::attr::output_padding (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr14output_paddingE"]], "dnnl::graph::op::attr::pads_begin (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr10pads_beginE"]], "dnnl::graph::op::attr::pads_end (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr8pads_endE"]], "dnnl::graph::op::attr::per_channel_broadcast (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr21per_channel_broadcastE"]], "dnnl::graph::op::attr::qtype (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr5qtypeE"]], "dnnl::graph::op::attr::rounding_type (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr13rounding_typeE"]], "dnnl::graph::op::attr::scales (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr6scalesE"]], "dnnl::graph::op::attr::shape (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr5shapeE"]], "dnnl::graph::op::attr::sizes (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr5sizesE"]], "dnnl::graph::op::attr::special_zero (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr12special_zeroE"]], "dnnl::graph::op::attr::src_shape (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr9src_shapeE"]], "dnnl::graph::op::attr::strides (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr7stridesE"]], "dnnl::graph::op::attr::transpose_a (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr11transpose_aE"]], "dnnl::graph::op::attr::transpose_b (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr11transpose_bE"]], "dnnl::graph::op::attr::undef (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr5undefE"]], "dnnl::graph::op::attr::use_affine (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr10use_affineE"]], "dnnl::graph::op::attr::use_dst (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr7use_dstE"]], "dnnl::graph::op::attr::weights_format (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr14weights_formatE"]], "dnnl::graph::op::attr::weights_shape (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr13weights_shapeE"]], "dnnl::graph::op::attr::zps (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4attr3zpsE"]], "dnnl::graph::op::kind (c++ enum)": [[63, "_CPPv4N4dnnl5graph2op4kindE"]], "dnnl::graph::op::kind::abs (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind3AbsE"]], "dnnl::graph::op::kind::absbackward (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind11AbsBackwardE"]], "dnnl::graph::op::kind::add (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind3AddE"]], "dnnl::graph::op::kind::avgpool (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind7AvgPoolE"]], "dnnl::graph::op::kind::avgpoolbackward (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind15AvgPoolBackwardE"]], "dnnl::graph::op::kind::batchnormforwardtraining (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind24BatchNormForwardTrainingE"]], "dnnl::graph::op::kind::batchnorminference (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind18BatchNormInferenceE"]], "dnnl::graph::op::kind::batchnormtrainingbackward (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind25BatchNormTrainingBackwardE"]], "dnnl::graph::op::kind::biasadd (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind7BiasAddE"]], "dnnl::graph::op::kind::biasaddbackward (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind15BiasAddBackwardE"]], "dnnl::graph::op::kind::clamp (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind5ClampE"]], "dnnl::graph::op::kind::clampbackward (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind13ClampBackwardE"]], "dnnl::graph::op::kind::concat (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind6ConcatE"]], "dnnl::graph::op::kind::convtranspose (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind13ConvTransposeE"]], "dnnl::graph::op::kind::convtransposebackwarddata (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind25ConvTransposeBackwardDataE"]], "dnnl::graph::op::kind::convtransposebackwardweights (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind28ConvTransposeBackwardWeightsE"]], "dnnl::graph::op::kind::convolution (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind11ConvolutionE"]], "dnnl::graph::op::kind::convolutionbackwarddata (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind23ConvolutionBackwardDataE"]], "dnnl::graph::op::kind::convolutionbackwardweights (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind26ConvolutionBackwardWeightsE"]], "dnnl::graph::op::kind::dequantize (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind10DequantizeE"]], "dnnl::graph::op::kind::divide (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind6DivideE"]], "dnnl::graph::op::kind::dynamicdequantize (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind17DynamicDequantizeE"]], "dnnl::graph::op::kind::dynamicquantize (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind15DynamicQuantizeE"]], "dnnl::graph::op::kind::elu (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind3EluE"]], "dnnl::graph::op::kind::elubackward (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind11EluBackwardE"]], "dnnl::graph::op::kind::end (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind3EndE"]], "dnnl::graph::op::kind::exp (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind3ExpE"]], "dnnl::graph::op::kind::gelu (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind4GELUE"]], "dnnl::graph::op::kind::gelubackward (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind12GELUBackwardE"]], "dnnl::graph::op::kind::hardsigmoid (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind11HardSigmoidE"]], "dnnl::graph::op::kind::hardsigmoidbackward (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind19HardSigmoidBackwardE"]], "dnnl::graph::op::kind::hardswish (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind9HardSwishE"]], "dnnl::graph::op::kind::hardswishbackward (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind17HardSwishBackwardE"]], "dnnl::graph::op::kind::interpolate (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind11InterpolateE"]], "dnnl::graph::op::kind::interpolatebackward (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind19InterpolateBackwardE"]], "dnnl::graph::op::kind::lastsymbol (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind10LastSymbolE"]], "dnnl::graph::op::kind::layernorm (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind9LayerNormE"]], "dnnl::graph::op::kind::layernormbackward (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind17LayerNormBackwardE"]], "dnnl::graph::op::kind::leakyrelu (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind9LeakyReLUE"]], "dnnl::graph::op::kind::log (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind3LogE"]], "dnnl::graph::op::kind::logsoftmax (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind10LogSoftmaxE"]], "dnnl::graph::op::kind::logsoftmaxbackward (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind18LogSoftmaxBackwardE"]], "dnnl::graph::op::kind::matmul (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind6MatMulE"]], "dnnl::graph::op::kind::maxpool (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind7MaxPoolE"]], "dnnl::graph::op::kind::maxpoolbackward (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind15MaxPoolBackwardE"]], "dnnl::graph::op::kind::maximum (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind7MaximumE"]], "dnnl::graph::op::kind::minimum (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind7MinimumE"]], "dnnl::graph::op::kind::mish (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind4MishE"]], "dnnl::graph::op::kind::mishbackward (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind12MishBackwardE"]], "dnnl::graph::op::kind::multiply (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind8MultiplyE"]], "dnnl::graph::op::kind::prelu (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind5PReLUE"]], "dnnl::graph::op::kind::prelubackward (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind13PReLUBackwardE"]], "dnnl::graph::op::kind::pow (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind3PowE"]], "dnnl::graph::op::kind::quantize (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind8QuantizeE"]], "dnnl::graph::op::kind::relu (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind4ReLUE"]], "dnnl::graph::op::kind::relubackward (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind12ReLUBackwardE"]], "dnnl::graph::op::kind::reciprocal (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind10ReciprocalE"]], "dnnl::graph::op::kind::reducel1 (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind8ReduceL1E"]], "dnnl::graph::op::kind::reducel2 (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind8ReduceL2E"]], "dnnl::graph::op::kind::reducemax (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind9ReduceMaxE"]], "dnnl::graph::op::kind::reducemean (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind10ReduceMeanE"]], "dnnl::graph::op::kind::reducemin (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind9ReduceMinE"]], "dnnl::graph::op::kind::reduceprod (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind10ReduceProdE"]], "dnnl::graph::op::kind::reducesum (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind9ReduceSumE"]], "dnnl::graph::op::kind::reorder (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind7ReorderE"]], "dnnl::graph::op::kind::round (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind5RoundE"]], "dnnl::graph::op::kind::select (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind6SelectE"]], "dnnl::graph::op::kind::sigmoid (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind7SigmoidE"]], "dnnl::graph::op::kind::sigmoidbackward (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind15SigmoidBackwardE"]], "dnnl::graph::op::kind::softmax (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind7SoftMaxE"]], "dnnl::graph::op::kind::softmaxbackward (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind15SoftMaxBackwardE"]], "dnnl::graph::op::kind::softplus (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind8SoftPlusE"]], "dnnl::graph::op::kind::softplusbackward (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind16SoftPlusBackwardE"]], "dnnl::graph::op::kind::sqrt (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind4SqrtE"]], "dnnl::graph::op::kind::sqrtbackward (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind12SqrtBackwardE"]], "dnnl::graph::op::kind::square (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind6SquareE"]], "dnnl::graph::op::kind::squareddifference (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind17SquaredDifferenceE"]], "dnnl::graph::op::kind::staticreshape (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind13StaticReshapeE"]], "dnnl::graph::op::kind::statictranspose (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind15StaticTransposeE"]], "dnnl::graph::op::kind::subtract (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind8SubtractE"]], "dnnl::graph::op::kind::tanh (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind4TanhE"]], "dnnl::graph::op::kind::tanhbackward (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind12TanhBackwardE"]], "dnnl::graph::op::kind::typecast (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind8TypeCastE"]], "dnnl::graph::op::kind::wildcard (c++ enumerator)": [[63, "_CPPv4N4dnnl5graph2op4kind8WildcardE"]], "dnnl::graph::op::op (c++ function)": [[63, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6stringE"], [63, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6vectorI14logical_tensorEERKNSt6vectorI14logical_tensorEERKNSt6stringE"]], "dnnl::graph::op::set_attr (c++ function)": [[63, "_CPPv4I0EN4dnnl5graph2op8set_attrER2op4attrRK4Type"]], "dnnl::error (c++ struct)": [[151, "_CPPv4N4dnnl5errorE"]], "dnnl::primitive_attr (c++ struct)": [[152, "_CPPv4N4dnnl14primitive_attrE"]], "dnnl::primitive_attr::get_fpmath_mode (c++ function)": [[152, "_CPPv4NK4dnnl14primitive_attr15get_fpmath_modeEv"]], "dnnl::primitive_attr::get_post_ops (c++ function)": [[152, "_CPPv4NK4dnnl14primitive_attr12get_post_opsEv"]], "dnnl::primitive_attr::get_scales_mask (c++ function)": [[152, "_CPPv4NK4dnnl14primitive_attr15get_scales_maskEi"]], "dnnl::primitive_attr::get_scratchpad_mode (c++ function)": [[152, "_CPPv4NK4dnnl14primitive_attr19get_scratchpad_modeEv"]], "dnnl::primitive_attr::primitive_attr (c++ function)": [[152, "_CPPv4N4dnnl14primitive_attr14primitive_attrEv"]], "dnnl::primitive_attr::set_fpmath_mode (c++ function)": [[152, "_CPPv4N4dnnl14primitive_attr15set_fpmath_modeE11fpmath_mode"]], "dnnl::primitive_attr::set_post_ops (c++ function)": [[152, "_CPPv4N4dnnl14primitive_attr12set_post_opsEK8post_ops"]], "dnnl::primitive_attr::set_rnn_data_qparams (c++ function)": [[152, "_CPPv4N4dnnl14primitive_attr20set_rnn_data_qparamsEff"]], "dnnl::primitive_attr::set_rnn_weights_qparams (c++ function)": [[152, "_CPPv4N4dnnl14primitive_attr23set_rnn_weights_qparamsEiRKNSt6vectorIfEE"]], "dnnl::primitive_attr::set_scales_mask (c++ function)": [[152, "_CPPv4N4dnnl14primitive_attr15set_scales_maskEii"]], "dnnl::primitive_attr::set_scratchpad_mode (c++ function)": [[152, "_CPPv4N4dnnl14primitive_attr19set_scratchpad_modeE15scratchpad_mode"]], "dnnl::primitive_attr::set_zero_points_mask (c++ function)": [[152, "_CPPv4N4dnnl14primitive_attr20set_zero_points_maskEii"]], "dnnl::scratchpad_mode (c++ enum)": [[152, "_CPPv4N4dnnl15scratchpad_modeE"]], "dnnl::scratchpad_mode::library (c++ enumerator)": [[152, "_CPPv4N4dnnl15scratchpad_mode7libraryE"]], "dnnl::scratchpad_mode::user (c++ enumerator)": [[152, "_CPPv4N4dnnl15scratchpad_mode4userE"]], "dnnl::post_ops (c++ struct)": [[153, "_CPPv4N4dnnl8post_opsE"]], "dnnl::post_ops::append_binary (c++ function)": [[153, "_CPPv4N4dnnl8post_ops13append_binaryE9algorithmRKN6memory4descE"]], "dnnl::post_ops::append_eltwise (c++ function)": [[153, "_CPPv4N4dnnl8post_ops14append_eltwiseE9algorithmff"]], "dnnl::post_ops::append_sum (c++ function)": [[153, "_CPPv4N4dnnl8post_ops10append_sumEN6memory9data_typeE"]], "dnnl::post_ops::get_params_binary (c++ function)": [[153, "_CPPv4NK4dnnl8post_ops17get_params_binaryEiR9algorithmRN6memory4descE"]], "dnnl::post_ops::get_params_eltwise (c++ function)": [[153, "_CPPv4NK4dnnl8post_ops18get_params_eltwiseEiR9algorithmRfRf"]], "dnnl::post_ops::get_params_sum (c++ function)": [[153, "_CPPv4NK4dnnl8post_ops14get_params_sumEiRf"], [153, "_CPPv4NK4dnnl8post_ops14get_params_sumEiRfRN6memory9data_typeE"]], "dnnl::post_ops::kind (c++ function)": [[153, "_CPPv4NK4dnnl8post_ops4kindEi"]], "dnnl::post_ops::len (c++ function)": [[153, "_CPPv4NK4dnnl8post_ops3lenEv"]], "dnnl::post_ops::post_ops (c++ function)": [[153, "_CPPv4N4dnnl8post_ops8post_opsEv"]], "dnnl::batch_normalization_backward (c++ struct)": [[154, "_CPPv4N4dnnl28batch_normalization_backwardE"]], "dnnl::batch_normalization_backward::batch_normalization_backward (c++ function)": [[154, "_CPPv4N4dnnl28batch_normalization_backward28batch_normalization_backwardERK14primitive_desc"], [154, "_CPPv4N4dnnl28batch_normalization_backward28batch_normalization_backwardEv"]], "dnnl::batch_normalization_backward::primitive_desc (c++ struct)": [[154, "_CPPv4N4dnnl28batch_normalization_backward14primitive_descE"]], "dnnl::batch_normalization_backward::primitive_desc::diff_dst_desc (c++ function)": [[154, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc13diff_dst_descEv"]], "dnnl::batch_normalization_backward::primitive_desc::diff_src_desc (c++ function)": [[154, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc13diff_src_descEv"]], "dnnl::batch_normalization_backward::primitive_desc::diff_weights_desc (c++ function)": [[154, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc17diff_weights_descEv"]], "dnnl::batch_normalization_backward::primitive_desc::dst_desc (c++ function)": [[154, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc8dst_descEv"]], "dnnl::batch_normalization_backward::primitive_desc::get_epsilon (c++ function)": [[154, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc11get_epsilonEv"]], "dnnl::batch_normalization_backward::primitive_desc::get_flags (c++ function)": [[154, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc9get_flagsEv"]], "dnnl::batch_normalization_backward::primitive_desc::get_prop_kind (c++ function)": [[154, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc13get_prop_kindEv"]], "dnnl::batch_normalization_backward::primitive_desc::mean_desc (c++ function)": [[154, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc9mean_descEv"]], "dnnl::batch_normalization_backward::primitive_desc::primitive_desc (c++ function)": [[154, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb"], [154, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descEv"]], "dnnl::batch_normalization_backward::primitive_desc::src_desc (c++ function)": [[154, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc8src_descEv"]], "dnnl::batch_normalization_backward::primitive_desc::variance_desc (c++ function)": [[154, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc13variance_descEv"]], "dnnl::batch_normalization_backward::primitive_desc::weights_desc (c++ function)": [[154, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc12weights_descEv"]], "dnnl::batch_normalization_backward::primitive_desc::workspace_desc (c++ function)": [[154, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc14workspace_descEv"]], "dnnl::batch_normalization_forward (c++ struct)": [[154, "_CPPv4N4dnnl27batch_normalization_forwardE"]], "dnnl::batch_normalization_forward::batch_normalization_forward (c++ function)": [[154, "_CPPv4N4dnnl27batch_normalization_forward27batch_normalization_forwardERK14primitive_desc"], [154, "_CPPv4N4dnnl27batch_normalization_forward27batch_normalization_forwardEv"]], "dnnl::batch_normalization_forward::primitive_desc (c++ struct)": [[154, "_CPPv4N4dnnl27batch_normalization_forward14primitive_descE"]], "dnnl::batch_normalization_forward::primitive_desc::dst_desc (c++ function)": [[154, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc8dst_descEv"]], "dnnl::batch_normalization_forward::primitive_desc::get_epsilon (c++ function)": [[154, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc11get_epsilonEv"]], "dnnl::batch_normalization_forward::primitive_desc::get_flags (c++ function)": [[154, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc9get_flagsEv"]], "dnnl::batch_normalization_forward::primitive_desc::get_prop_kind (c++ function)": [[154, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc13get_prop_kindEv"]], "dnnl::batch_normalization_forward::primitive_desc::mean_desc (c++ function)": [[154, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc9mean_descEv"]], "dnnl::batch_normalization_forward::primitive_desc::primitive_desc (c++ function)": [[154, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb"], [154, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descEv"]], "dnnl::batch_normalization_forward::primitive_desc::src_desc (c++ function)": [[154, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc8src_descEv"]], "dnnl::batch_normalization_forward::primitive_desc::variance_desc (c++ function)": [[154, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc13variance_descEv"]], "dnnl::batch_normalization_forward::primitive_desc::weights_desc (c++ function)": [[154, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc12weights_descEv"]], "dnnl::batch_normalization_forward::primitive_desc::workspace_desc (c++ function)": [[154, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc14workspace_descEv"]], "dnnl::binary (c++ struct)": [[155, "_CPPv4N4dnnl6binaryE"]], "dnnl::binary::binary (c++ function)": [[155, "_CPPv4N4dnnl6binary6binaryERK14primitive_desc"], [155, "_CPPv4N4dnnl6binary6binaryEv"]], "dnnl::binary::primitive_desc (c++ struct)": [[155, "_CPPv4N4dnnl6binary14primitive_descE"]], "dnnl::binary::primitive_desc::dst_desc (c++ function)": [[155, "_CPPv4NK4dnnl6binary14primitive_desc8dst_descEv"]], "dnnl::binary::primitive_desc::get_algorithm (c++ function)": [[155, "_CPPv4NK4dnnl6binary14primitive_desc13get_algorithmEv"]], "dnnl::binary::primitive_desc::primitive_desc (c++ function)": [[155, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [155, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descEv"]], "dnnl::binary::primitive_desc::src0_desc (c++ function)": [[155, "_CPPv4NK4dnnl6binary14primitive_desc9src0_descEv"]], "dnnl::binary::primitive_desc::src1_desc (c++ function)": [[155, "_CPPv4NK4dnnl6binary14primitive_desc9src1_descEv"]], "dnnl::binary::primitive_desc::src_desc (c++ function)": [[155, "_CPPv4NK4dnnl6binary14primitive_desc8src_descEi"]], "dnnl::concat (c++ struct)": [[156, "_CPPv4N4dnnl6concatE"]], "dnnl::concat::concat (c++ function)": [[156, "_CPPv4N4dnnl6concat6concatERK14primitive_desc"], [156, "_CPPv4N4dnnl6concat6concatEv"]], "dnnl::concat::primitive_desc (c++ struct)": [[156, "_CPPv4N4dnnl6concat14primitive_descE"]], "dnnl::concat::primitive_desc::dst_desc (c++ function)": [[156, "_CPPv4NK4dnnl6concat14primitive_desc8dst_descEv"]], "dnnl::concat::primitive_desc::primitive_desc (c++ function)": [[156, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descERKN6memory4descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr"], [156, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr"], [156, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descEv"]], "dnnl::concat::primitive_desc::src_desc (c++ function)": [[156, "_CPPv4NK4dnnl6concat14primitive_desc8src_descEi"]], "dnnl::convolution_backward_data (c++ struct)": [[157, "_CPPv4N4dnnl25convolution_backward_dataE"]], "dnnl::convolution_backward_data::convolution_backward_data (c++ function)": [[157, "_CPPv4N4dnnl25convolution_backward_data25convolution_backward_dataERK14primitive_desc"], [157, "_CPPv4N4dnnl25convolution_backward_data25convolution_backward_dataEv"]], "dnnl::convolution_backward_data::primitive_desc (c++ struct)": [[157, "_CPPv4N4dnnl25convolution_backward_data14primitive_descE"]], "dnnl::convolution_backward_data::primitive_desc::diff_dst_desc (c++ function)": [[157, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13diff_dst_descEv"]], "dnnl::convolution_backward_data::primitive_desc::diff_src_desc (c++ function)": [[157, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13diff_src_descEv"]], "dnnl::convolution_backward_data::primitive_desc::get_algorithm (c++ function)": [[157, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13get_algorithmEv"]], "dnnl::convolution_backward_data::primitive_desc::get_dilations (c++ function)": [[157, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13get_dilationsEv"]], "dnnl::convolution_backward_data::primitive_desc::get_padding_l (c++ function)": [[157, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13get_padding_lEv"]], "dnnl::convolution_backward_data::primitive_desc::get_padding_r (c++ function)": [[157, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13get_padding_rEv"]], "dnnl::convolution_backward_data::primitive_desc::get_prop_kind (c++ function)": [[157, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13get_prop_kindEv"]], "dnnl::convolution_backward_data::primitive_desc::get_strides (c++ function)": [[157, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc11get_stridesEv"]], "dnnl::convolution_backward_data::primitive_desc::primitive_desc (c++ function)": [[157, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb"], [157, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb"], [157, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descEv"]], "dnnl::convolution_backward_data::primitive_desc::weights_desc (c++ function)": [[157, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc12weights_descEv"]], "dnnl::convolution_backward_weights (c++ struct)": [[157, "_CPPv4N4dnnl28convolution_backward_weightsE"]], "dnnl::convolution_backward_weights::convolution_backward_weights (c++ function)": [[157, "_CPPv4N4dnnl28convolution_backward_weights28convolution_backward_weightsERK14primitive_desc"], [157, "_CPPv4N4dnnl28convolution_backward_weights28convolution_backward_weightsEv"]], "dnnl::convolution_backward_weights::primitive_desc (c++ struct)": [[157, "_CPPv4N4dnnl28convolution_backward_weights14primitive_descE"]], "dnnl::convolution_backward_weights::primitive_desc::diff_bias_desc (c++ function)": [[157, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc14diff_bias_descEv"]], "dnnl::convolution_backward_weights::primitive_desc::diff_dst_desc (c++ function)": [[157, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13diff_dst_descEv"]], "dnnl::convolution_backward_weights::primitive_desc::diff_weights_desc (c++ function)": [[157, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc17diff_weights_descEv"]], "dnnl::convolution_backward_weights::primitive_desc::get_algorithm (c++ function)": [[157, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13get_algorithmEv"]], "dnnl::convolution_backward_weights::primitive_desc::get_dilations (c++ function)": [[157, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13get_dilationsEv"]], "dnnl::convolution_backward_weights::primitive_desc::get_padding_l (c++ function)": [[157, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13get_padding_lEv"]], "dnnl::convolution_backward_weights::primitive_desc::get_padding_r (c++ function)": [[157, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13get_padding_rEv"]], "dnnl::convolution_backward_weights::primitive_desc::get_prop_kind (c++ function)": [[157, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13get_prop_kindEv"]], "dnnl::convolution_backward_weights::primitive_desc::get_strides (c++ function)": [[157, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc11get_stridesEv"]], "dnnl::convolution_backward_weights::primitive_desc::primitive_desc (c++ function)": [[157, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb"], [157, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb"], [157, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb"], [157, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb"], [157, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descEv"]], "dnnl::convolution_backward_weights::primitive_desc::src_desc (c++ function)": [[157, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc8src_descEv"]], "dnnl::convolution_forward (c++ struct)": [[157, "_CPPv4N4dnnl19convolution_forwardE"]], "dnnl::convolution_forward::convolution_forward (c++ function)": [[157, "_CPPv4N4dnnl19convolution_forward19convolution_forwardERK14primitive_desc"], [157, "_CPPv4N4dnnl19convolution_forward19convolution_forwardEv"]], "dnnl::convolution_forward::primitive_desc (c++ struct)": [[157, "_CPPv4N4dnnl19convolution_forward14primitive_descE"]], "dnnl::convolution_forward::primitive_desc::bias_desc (c++ function)": [[157, "_CPPv4NK4dnnl19convolution_forward14primitive_desc9bias_descEv"]], "dnnl::convolution_forward::primitive_desc::dst_desc (c++ function)": [[157, "_CPPv4NK4dnnl19convolution_forward14primitive_desc8dst_descEv"]], "dnnl::convolution_forward::primitive_desc::get_algorithm (c++ function)": [[157, "_CPPv4NK4dnnl19convolution_forward14primitive_desc13get_algorithmEv"]], "dnnl::convolution_forward::primitive_desc::get_dilations (c++ function)": [[157, "_CPPv4NK4dnnl19convolution_forward14primitive_desc13get_dilationsEv"]], "dnnl::convolution_forward::primitive_desc::get_padding_l (c++ function)": [[157, "_CPPv4NK4dnnl19convolution_forward14primitive_desc13get_padding_lEv"]], "dnnl::convolution_forward::primitive_desc::get_padding_r (c++ function)": [[157, "_CPPv4NK4dnnl19convolution_forward14primitive_desc13get_padding_rEv"]], "dnnl::convolution_forward::primitive_desc::get_prop_kind (c++ function)": [[157, "_CPPv4NK4dnnl19convolution_forward14primitive_desc13get_prop_kindEv"]], "dnnl::convolution_forward::primitive_desc::get_strides (c++ function)": [[157, "_CPPv4NK4dnnl19convolution_forward14primitive_desc11get_stridesEv"]], "dnnl::convolution_forward::primitive_desc::primitive_desc (c++ function)": [[157, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb"], [157, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb"], [157, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb"], [157, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb"], [157, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descEv"]], "dnnl::convolution_forward::primitive_desc::src_desc (c++ function)": [[157, "_CPPv4NK4dnnl19convolution_forward14primitive_desc8src_descEv"]], "dnnl::convolution_forward::primitive_desc::weights_desc (c++ function)": [[157, "_CPPv4NK4dnnl19convolution_forward14primitive_desc12weights_descEv"]], "dnnl::deconvolution_backward_data (c++ struct)": [[157, "_CPPv4N4dnnl27deconvolution_backward_dataE"]], "dnnl::deconvolution_backward_data::deconvolution_backward_data (c++ function)": [[157, "_CPPv4N4dnnl27deconvolution_backward_data27deconvolution_backward_dataERK14primitive_desc"], [157, "_CPPv4N4dnnl27deconvolution_backward_data27deconvolution_backward_dataEv"]], "dnnl::deconvolution_backward_data::primitive_desc (c++ struct)": [[157, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_descE"]], "dnnl::deconvolution_backward_data::primitive_desc::diff_dst_desc (c++ function)": [[157, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13diff_dst_descEv"]], "dnnl::deconvolution_backward_data::primitive_desc::diff_src_desc (c++ function)": [[157, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13diff_src_descEv"]], "dnnl::deconvolution_backward_data::primitive_desc::get_algorithm (c++ function)": [[157, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13get_algorithmEv"]], "dnnl::deconvolution_backward_data::primitive_desc::get_dilations (c++ function)": [[157, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13get_dilationsEv"]], "dnnl::deconvolution_backward_data::primitive_desc::get_padding_l (c++ function)": [[157, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13get_padding_lEv"]], "dnnl::deconvolution_backward_data::primitive_desc::get_padding_r (c++ function)": [[157, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13get_padding_rEv"]], "dnnl::deconvolution_backward_data::primitive_desc::get_prop_kind (c++ function)": [[157, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13get_prop_kindEv"]], "dnnl::deconvolution_backward_data::primitive_desc::get_strides (c++ function)": [[157, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc11get_stridesEv"]], "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc (c++ function)": [[157, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb"], [157, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb"], [157, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descEv"]], "dnnl::deconvolution_backward_data::primitive_desc::weights_desc (c++ function)": [[157, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc12weights_descEv"]], "dnnl::deconvolution_backward_weights (c++ struct)": [[157, "_CPPv4N4dnnl30deconvolution_backward_weightsE"]], "dnnl::deconvolution_backward_weights::deconvolution_backward_weights (c++ function)": [[157, "_CPPv4N4dnnl30deconvolution_backward_weights30deconvolution_backward_weightsERK14primitive_desc"], [157, "_CPPv4N4dnnl30deconvolution_backward_weights30deconvolution_backward_weightsEv"]], "dnnl::deconvolution_backward_weights::primitive_desc (c++ struct)": [[157, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_descE"]], "dnnl::deconvolution_backward_weights::primitive_desc::diff_bias_desc (c++ function)": [[157, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc14diff_bias_descEv"]], "dnnl::deconvolution_backward_weights::primitive_desc::diff_dst_desc (c++ function)": [[157, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13diff_dst_descEv"]], "dnnl::deconvolution_backward_weights::primitive_desc::diff_weights_desc (c++ function)": [[157, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc17diff_weights_descEv"]], "dnnl::deconvolution_backward_weights::primitive_desc::get_algorithm (c++ function)": [[157, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13get_algorithmEv"]], "dnnl::deconvolution_backward_weights::primitive_desc::get_dilations (c++ function)": [[157, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13get_dilationsEv"]], "dnnl::deconvolution_backward_weights::primitive_desc::get_padding_l (c++ function)": [[157, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13get_padding_lEv"]], "dnnl::deconvolution_backward_weights::primitive_desc::get_padding_r (c++ function)": [[157, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13get_padding_rEv"]], "dnnl::deconvolution_backward_weights::primitive_desc::get_prop_kind (c++ function)": [[157, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13get_prop_kindEv"]], "dnnl::deconvolution_backward_weights::primitive_desc::get_strides (c++ function)": [[157, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc11get_stridesEv"]], "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc (c++ function)": [[157, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb"], [157, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb"], [157, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb"], [157, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb"], [157, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descEv"]], "dnnl::deconvolution_backward_weights::primitive_desc::src_desc (c++ function)": [[157, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc8src_descEv"]], "dnnl::deconvolution_forward (c++ struct)": [[157, "_CPPv4N4dnnl21deconvolution_forwardE"]], "dnnl::deconvolution_forward::deconvolution_forward (c++ function)": [[157, "_CPPv4N4dnnl21deconvolution_forward21deconvolution_forwardERK14primitive_desc"], [157, "_CPPv4N4dnnl21deconvolution_forward21deconvolution_forwardEv"]], "dnnl::deconvolution_forward::primitive_desc (c++ struct)": [[157, "_CPPv4N4dnnl21deconvolution_forward14primitive_descE"]], "dnnl::deconvolution_forward::primitive_desc::bias_desc (c++ function)": [[157, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc9bias_descEv"]], "dnnl::deconvolution_forward::primitive_desc::dst_desc (c++ function)": [[157, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc8dst_descEv"]], "dnnl::deconvolution_forward::primitive_desc::get_algorithm (c++ function)": [[157, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc13get_algorithmEv"]], "dnnl::deconvolution_forward::primitive_desc::get_dilations (c++ function)": [[157, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc13get_dilationsEv"]], "dnnl::deconvolution_forward::primitive_desc::get_padding_l (c++ function)": [[157, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc13get_padding_lEv"]], "dnnl::deconvolution_forward::primitive_desc::get_padding_r (c++ function)": [[157, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc13get_padding_rEv"]], "dnnl::deconvolution_forward::primitive_desc::get_prop_kind (c++ function)": [[157, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc13get_prop_kindEv"]], "dnnl::deconvolution_forward::primitive_desc::get_strides (c++ function)": [[157, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc11get_stridesEv"]], "dnnl::deconvolution_forward::primitive_desc::primitive_desc (c++ function)": [[157, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb"], [157, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb"], [157, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb"], [157, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb"], [157, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descEv"]], "dnnl::deconvolution_forward::primitive_desc::src_desc (c++ function)": [[157, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc8src_descEv"]], "dnnl::deconvolution_forward::primitive_desc::weights_desc (c++ function)": [[157, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc12weights_descEv"]], "dnnl::eltwise_backward (c++ struct)": [[158, "_CPPv4N4dnnl16eltwise_backwardE"]], "dnnl::eltwise_backward::eltwise_backward (c++ function)": [[158, "_CPPv4N4dnnl16eltwise_backward16eltwise_backwardERK14primitive_desc"], [158, "_CPPv4N4dnnl16eltwise_backward16eltwise_backwardEv"]], "dnnl::eltwise_backward::primitive_desc (c++ struct)": [[158, "_CPPv4N4dnnl16eltwise_backward14primitive_descE"]], "dnnl::eltwise_backward::primitive_desc::diff_dst_desc (c++ function)": [[158, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc13diff_dst_descEv"]], "dnnl::eltwise_backward::primitive_desc::diff_src_desc (c++ function)": [[158, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc13diff_src_descEv"]], "dnnl::eltwise_backward::primitive_desc::get_algorithm (c++ function)": [[158, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc13get_algorithmEv"]], "dnnl::eltwise_backward::primitive_desc::get_alpha (c++ function)": [[158, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc9get_alphaEv"]], "dnnl::eltwise_backward::primitive_desc::get_beta (c++ function)": [[158, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc8get_betaEv"]], "dnnl::eltwise_backward::primitive_desc::get_prop_kind (c++ function)": [[158, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc13get_prop_kindEv"]], "dnnl::eltwise_backward::primitive_desc::primitive_desc (c++ function)": [[158, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN15eltwise_forward14primitive_descERK14primitive_attrb"], [158, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb"], [158, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb"], [158, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descEv"]], "dnnl::eltwise_backward::primitive_desc::src_desc (c++ function)": [[158, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc8src_descEv"]], "dnnl::eltwise_forward (c++ struct)": [[158, "_CPPv4N4dnnl15eltwise_forwardE"]], "dnnl::eltwise_forward::eltwise_forward (c++ function)": [[158, "_CPPv4N4dnnl15eltwise_forward15eltwise_forwardERK14primitive_desc"], [158, "_CPPv4N4dnnl15eltwise_forward15eltwise_forwardEv"]], "dnnl::eltwise_forward::primitive_desc (c++ struct)": [[158, "_CPPv4N4dnnl15eltwise_forward14primitive_descE"]], "dnnl::eltwise_forward::primitive_desc::dst_desc (c++ function)": [[158, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc8dst_descEv"]], "dnnl::eltwise_forward::primitive_desc::get_algorithm (c++ function)": [[158, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc13get_algorithmEv"]], "dnnl::eltwise_forward::primitive_desc::get_alpha (c++ function)": [[158, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc9get_alphaEv"]], "dnnl::eltwise_forward::primitive_desc::get_beta (c++ function)": [[158, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc8get_betaEv"]], "dnnl::eltwise_forward::primitive_desc::get_prop_kind (c++ function)": [[158, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc13get_prop_kindEv"]], "dnnl::eltwise_forward::primitive_desc::primitive_desc (c++ function)": [[158, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb"], [158, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEfRK14primitive_attrb"], [158, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb"], [158, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descEv"]], "dnnl::eltwise_forward::primitive_desc::src_desc (c++ function)": [[158, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc8src_descEv"]], "dnnl_arg_attr_scales (c macro)": [[159, "c.DNNL_ARG_ATTR_SCALES"]], "dnnl_arg_attr_zero_points (c macro)": [[159, "c.DNNL_ARG_ATTR_ZERO_POINTS"]], "dnnl_arg_bias (c macro)": [[159, "c.DNNL_ARG_BIAS"]], "dnnl_arg_diff_bias (c macro)": [[159, "c.DNNL_ARG_DIFF_BIAS"]], "dnnl_arg_diff_dst (c macro)": [[159, "c.DNNL_ARG_DIFF_DST"]], "dnnl_arg_diff_dst_0 (c macro)": [[159, "c.DNNL_ARG_DIFF_DST_0"]], "dnnl_arg_diff_dst_1 (c macro)": [[159, "c.DNNL_ARG_DIFF_DST_1"]], "dnnl_arg_diff_dst_2 (c macro)": [[159, "c.DNNL_ARG_DIFF_DST_2"]], "dnnl_arg_diff_dst_iter (c macro)": [[159, "c.DNNL_ARG_DIFF_DST_ITER"]], "dnnl_arg_diff_dst_iter_c (c macro)": [[159, "c.DNNL_ARG_DIFF_DST_ITER_C"]], "dnnl_arg_diff_dst_layer (c macro)": [[159, "c.DNNL_ARG_DIFF_DST_LAYER"]], "dnnl_arg_diff_scale (c macro)": [[159, "c.DNNL_ARG_DIFF_SCALE"]], "dnnl_arg_diff_shift (c macro)": [[159, "c.DNNL_ARG_DIFF_SHIFT"]], "dnnl_arg_diff_src (c macro)": [[159, "c.DNNL_ARG_DIFF_SRC"]], "dnnl_arg_diff_src_0 (c macro)": [[159, "c.DNNL_ARG_DIFF_SRC_0"]], "dnnl_arg_diff_src_1 (c macro)": [[159, "c.DNNL_ARG_DIFF_SRC_1"]], "dnnl_arg_diff_src_2 (c macro)": [[159, "c.DNNL_ARG_DIFF_SRC_2"]], "dnnl_arg_diff_src_iter (c macro)": [[159, "c.DNNL_ARG_DIFF_SRC_ITER"]], "dnnl_arg_diff_src_iter_c (c macro)": [[159, "c.DNNL_ARG_DIFF_SRC_ITER_C"]], "dnnl_arg_diff_src_layer (c macro)": [[159, "c.DNNL_ARG_DIFF_SRC_LAYER"]], "dnnl_arg_diff_weights (c macro)": [[159, "c.DNNL_ARG_DIFF_WEIGHTS"]], "dnnl_arg_diff_weights_0 (c macro)": [[159, "c.DNNL_ARG_DIFF_WEIGHTS_0"]], "dnnl_arg_diff_weights_1 (c macro)": [[159, "c.DNNL_ARG_DIFF_WEIGHTS_1"]], "dnnl_arg_diff_weights_iter (c macro)": [[159, "c.DNNL_ARG_DIFF_WEIGHTS_ITER"]], "dnnl_arg_diff_weights_layer (c macro)": [[159, "c.DNNL_ARG_DIFF_WEIGHTS_LAYER"]], "dnnl_arg_dst (c macro)": [[159, "c.DNNL_ARG_DST"]], "dnnl_arg_dst_0 (c macro)": [[159, "c.DNNL_ARG_DST_0"]], "dnnl_arg_dst_1 (c macro)": [[159, "c.DNNL_ARG_DST_1"]], "dnnl_arg_dst_2 (c macro)": [[159, "c.DNNL_ARG_DST_2"]], "dnnl_arg_dst_iter (c macro)": [[159, "c.DNNL_ARG_DST_ITER"]], "dnnl_arg_dst_iter_c (c macro)": [[159, "c.DNNL_ARG_DST_ITER_C"]], "dnnl_arg_dst_layer (c macro)": [[159, "c.DNNL_ARG_DST_LAYER"]], "dnnl_arg_from (c macro)": [[159, "c.DNNL_ARG_FROM"]], "dnnl_arg_mean (c macro)": [[159, "c.DNNL_ARG_MEAN"]], "dnnl_arg_multiple_dst (c macro)": [[159, "c.DNNL_ARG_MULTIPLE_DST"]], "dnnl_arg_multiple_src (c macro)": [[159, "c.DNNL_ARG_MULTIPLE_SRC"]], "dnnl_arg_scale (c macro)": [[159, "c.DNNL_ARG_SCALE"]], "dnnl_arg_scratchpad (c macro)": [[159, "c.DNNL_ARG_SCRATCHPAD"]], "dnnl_arg_shift (c macro)": [[159, "c.DNNL_ARG_SHIFT"]], "dnnl_arg_src (c macro)": [[159, "c.DNNL_ARG_SRC"]], "dnnl_arg_src_0 (c macro)": [[159, "c.DNNL_ARG_SRC_0"]], "dnnl_arg_src_1 (c macro)": [[159, "c.DNNL_ARG_SRC_1"]], "dnnl_arg_src_2 (c macro)": [[159, "c.DNNL_ARG_SRC_2"]], "dnnl_arg_src_iter (c macro)": [[159, "c.DNNL_ARG_SRC_ITER"]], "dnnl_arg_src_iter_c (c macro)": [[159, "c.DNNL_ARG_SRC_ITER_C"]], "dnnl_arg_src_layer (c macro)": [[159, "c.DNNL_ARG_SRC_LAYER"]], "dnnl_arg_to (c macro)": [[159, "c.DNNL_ARG_TO"]], "dnnl_arg_variance (c macro)": [[159, "c.DNNL_ARG_VARIANCE"]], "dnnl_arg_weights (c macro)": [[159, "c.DNNL_ARG_WEIGHTS"]], "dnnl_arg_weights_0 (c macro)": [[159, "c.DNNL_ARG_WEIGHTS_0"]], "dnnl_arg_weights_1 (c macro)": [[159, "c.DNNL_ARG_WEIGHTS_1"]], "dnnl_arg_weights_iter (c macro)": [[159, "c.DNNL_ARG_WEIGHTS_ITER"]], "dnnl_arg_weights_layer (c macro)": [[159, "c.DNNL_ARG_WEIGHTS_LAYER"]], "dnnl_arg_workspace (c macro)": [[159, "c.DNNL_ARG_WORKSPACE"]], "dnnl_runtime_dim_val (c macro)": [[159, "c.DNNL_RUNTIME_DIM_VAL"]], "dnnl_runtime_f32_val (c macro)": [[159, "c.DNNL_RUNTIME_F32_VAL"]], "dnnl_runtime_s32_val (c macro)": [[159, "c.DNNL_RUNTIME_S32_VAL"]], "dnnl_runtime_size_val (c macro)": [[159, "c.DNNL_RUNTIME_SIZE_VAL"]], "dnnl::algorithm (c++ enum)": [[159, "_CPPv4N4dnnl9algorithmE"]], "dnnl::algorithm::binary_add (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm10binary_addE"]], "dnnl::algorithm::binary_div (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm10binary_divE"]], "dnnl::algorithm::binary_eq (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm9binary_eqE"]], "dnnl::algorithm::binary_ge (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm9binary_geE"]], "dnnl::algorithm::binary_gt (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm9binary_gtE"]], "dnnl::algorithm::binary_le (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm9binary_leE"]], "dnnl::algorithm::binary_lt (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm9binary_ltE"]], "dnnl::algorithm::binary_max (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm10binary_maxE"]], "dnnl::algorithm::binary_min (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm10binary_minE"]], "dnnl::algorithm::binary_mul (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm10binary_mulE"]], "dnnl::algorithm::binary_ne (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm9binary_neE"]], "dnnl::algorithm::binary_sub (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm10binary_subE"]], "dnnl::algorithm::convolution_auto (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm16convolution_autoE"]], "dnnl::algorithm::convolution_direct (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm18convolution_directE"]], "dnnl::algorithm::convolution_winograd (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm20convolution_winogradE"]], "dnnl::algorithm::deconvolution_direct (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm20deconvolution_directE"]], "dnnl::algorithm::deconvolution_winograd (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm22deconvolution_winogradE"]], "dnnl::algorithm::eltwise_abs (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm11eltwise_absE"]], "dnnl::algorithm::eltwise_bounded_relu (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm20eltwise_bounded_reluE"]], "dnnl::algorithm::eltwise_clip (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm12eltwise_clipE"]], "dnnl::algorithm::eltwise_clip_use_dst_for_bwd (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm28eltwise_clip_use_dst_for_bwdE"]], "dnnl::algorithm::eltwise_elu (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm11eltwise_eluE"]], "dnnl::algorithm::eltwise_elu_use_dst_for_bwd (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm27eltwise_elu_use_dst_for_bwdE"]], "dnnl::algorithm::eltwise_exp (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm11eltwise_expE"]], "dnnl::algorithm::eltwise_exp_use_dst_for_bwd (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm27eltwise_exp_use_dst_for_bwdE"]], "dnnl::algorithm::eltwise_gelu (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm12eltwise_geluE"]], "dnnl::algorithm::eltwise_gelu_erf (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm16eltwise_gelu_erfE"]], "dnnl::algorithm::eltwise_gelu_tanh (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm17eltwise_gelu_tanhE"]], "dnnl::algorithm::eltwise_hardsigmoid (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm19eltwise_hardsigmoidE"]], "dnnl::algorithm::eltwise_hardswish (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm17eltwise_hardswishE"]], "dnnl::algorithm::eltwise_linear (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm14eltwise_linearE"]], "dnnl::algorithm::eltwise_log (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm11eltwise_logE"]], "dnnl::algorithm::eltwise_logistic (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm16eltwise_logisticE"]], "dnnl::algorithm::eltwise_logistic_use_dst_for_bwd (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm32eltwise_logistic_use_dst_for_bwdE"]], "dnnl::algorithm::eltwise_mish (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm12eltwise_mishE"]], "dnnl::algorithm::eltwise_pow (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm11eltwise_powE"]], "dnnl::algorithm::eltwise_relu (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm12eltwise_reluE"]], "dnnl::algorithm::eltwise_relu_use_dst_for_bwd (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm28eltwise_relu_use_dst_for_bwdE"]], "dnnl::algorithm::eltwise_round (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm13eltwise_roundE"]], "dnnl::algorithm::eltwise_soft_relu (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm17eltwise_soft_reluE"]], "dnnl::algorithm::eltwise_sqrt (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm12eltwise_sqrtE"]], "dnnl::algorithm::eltwise_sqrt_use_dst_for_bwd (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm28eltwise_sqrt_use_dst_for_bwdE"]], "dnnl::algorithm::eltwise_square (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm14eltwise_squareE"]], "dnnl::algorithm::eltwise_swish (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm13eltwise_swishE"]], "dnnl::algorithm::eltwise_tanh (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm12eltwise_tanhE"]], "dnnl::algorithm::eltwise_tanh_use_dst_for_bwd (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm28eltwise_tanh_use_dst_for_bwdE"]], "dnnl::algorithm::lbr_gru (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm7lbr_gruE"]], "dnnl::algorithm::lrn_across_channels (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm19lrn_across_channelsE"]], "dnnl::algorithm::lrn_within_channel (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm18lrn_within_channelE"]], "dnnl::algorithm::pooling_avg (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm11pooling_avgE"]], "dnnl::algorithm::pooling_avg_exclude_padding (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm27pooling_avg_exclude_paddingE"]], "dnnl::algorithm::pooling_avg_include_padding (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm27pooling_avg_include_paddingE"]], "dnnl::algorithm::pooling_max (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm11pooling_maxE"]], "dnnl::algorithm::reduction_max (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm13reduction_maxE"]], "dnnl::algorithm::reduction_mean (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm14reduction_meanE"]], "dnnl::algorithm::reduction_min (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm13reduction_minE"]], "dnnl::algorithm::reduction_mul (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm13reduction_mulE"]], "dnnl::algorithm::reduction_norm_lp_max (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm21reduction_norm_lp_maxE"]], "dnnl::algorithm::reduction_norm_lp_power_p_max (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm29reduction_norm_lp_power_p_maxE"]], "dnnl::algorithm::reduction_norm_lp_power_p_sum (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm29reduction_norm_lp_power_p_sumE"]], "dnnl::algorithm::reduction_norm_lp_sum (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm21reduction_norm_lp_sumE"]], "dnnl::algorithm::reduction_sum (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm13reduction_sumE"]], "dnnl::algorithm::resampling_linear (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm17resampling_linearE"]], "dnnl::algorithm::resampling_nearest (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm18resampling_nearestE"]], "dnnl::algorithm::softmax_accurate (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm16softmax_accurateE"]], "dnnl::algorithm::softmax_log (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm11softmax_logE"]], "dnnl::algorithm::undef (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm5undefE"]], "dnnl::algorithm::vanilla_gru (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm11vanilla_gruE"]], "dnnl::algorithm::vanilla_lstm (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm12vanilla_lstmE"]], "dnnl::algorithm::vanilla_rnn (c++ enumerator)": [[159, "_CPPv4N4dnnl9algorithm11vanilla_rnnE"]], "dnnl::normalization_flags (c++ enum)": [[159, "_CPPv4N4dnnl19normalization_flagsE"]], "dnnl::normalization_flags::fuse_norm_relu (c++ enumerator)": [[159, "_CPPv4N4dnnl19normalization_flags14fuse_norm_reluE"]], "dnnl::normalization_flags::none (c++ enumerator)": [[159, "_CPPv4N4dnnl19normalization_flags4noneE"]], "dnnl::normalization_flags::use_global_stats (c++ enumerator)": [[159, "_CPPv4N4dnnl19normalization_flags16use_global_statsE"]], "dnnl::normalization_flags::use_scale (c++ enumerator)": [[159, "_CPPv4N4dnnl19normalization_flags9use_scaleE"]], "dnnl::normalization_flags::use_shift (c++ enumerator)": [[159, "_CPPv4N4dnnl19normalization_flags9use_shiftE"]], "dnnl::primitive (c++ struct)": [[159, "_CPPv4N4dnnl9primitiveE"]], "dnnl::primitive::execute (c++ function)": [[159, "_CPPv4NK4dnnl9primitive7executeERK6streamRKNSt13unordered_mapIi6memoryEE"]], "dnnl::primitive::get_kind (c++ function)": [[159, "_CPPv4NK4dnnl9primitive8get_kindEv"]], "dnnl::primitive::kind (c++ enum)": [[159, "_CPPv4N4dnnl9primitive4kindE"]], "dnnl::primitive::kind::batch_normalization (c++ enumerator)": [[159, "_CPPv4N4dnnl9primitive4kind19batch_normalizationE"]], "dnnl::primitive::kind::binary (c++ enumerator)": [[159, "_CPPv4N4dnnl9primitive4kind6binaryE"]], "dnnl::primitive::kind::concat (c++ enumerator)": [[159, "_CPPv4N4dnnl9primitive4kind6concatE"]], "dnnl::primitive::kind::convolution (c++ enumerator)": [[159, "_CPPv4N4dnnl9primitive4kind11convolutionE"]], "dnnl::primitive::kind::deconvolution (c++ enumerator)": [[159, "_CPPv4N4dnnl9primitive4kind13deconvolutionE"]], "dnnl::primitive::kind::eltwise (c++ enumerator)": [[159, "_CPPv4N4dnnl9primitive4kind7eltwiseE"]], "dnnl::primitive::kind::inner_product (c++ enumerator)": [[159, "_CPPv4N4dnnl9primitive4kind13inner_productE"]], "dnnl::primitive::kind::layer_normalization (c++ enumerator)": [[159, "_CPPv4N4dnnl9primitive4kind19layer_normalizationE"]], "dnnl::primitive::kind::lrn (c++ enumerator)": [[159, "_CPPv4N4dnnl9primitive4kind3lrnE"]], "dnnl::primitive::kind::matmul (c++ enumerator)": [[159, "_CPPv4N4dnnl9primitive4kind6matmulE"]], "dnnl::primitive::kind::pooling (c++ enumerator)": [[159, "_CPPv4N4dnnl9primitive4kind7poolingE"]], "dnnl::primitive::kind::prelu (c++ enumerator)": [[159, "_CPPv4N4dnnl9primitive4kind5preluE"]], "dnnl::primitive::kind::reorder (c++ enumerator)": [[159, "_CPPv4N4dnnl9primitive4kind7reorderE"]], "dnnl::primitive::kind::resampling (c++ enumerator)": [[159, "_CPPv4N4dnnl9primitive4kind10resamplingE"]], "dnnl::primitive::kind::rnn (c++ enumerator)": [[159, "_CPPv4N4dnnl9primitive4kind3rnnE"]], "dnnl::primitive::kind::shuffle (c++ enumerator)": [[159, "_CPPv4N4dnnl9primitive4kind7shuffleE"]], "dnnl::primitive::kind::softmax (c++ enumerator)": [[159, "_CPPv4N4dnnl9primitive4kind7softmaxE"]], "dnnl::primitive::kind::sum (c++ enumerator)": [[159, "_CPPv4N4dnnl9primitive4kind3sumE"]], "dnnl::primitive::kind::undef (c++ enumerator)": [[159, "_CPPv4N4dnnl9primitive4kind5undefE"]], "dnnl::primitive::operator= (c++ function)": [[159, "_CPPv4N4dnnl9primitiveaSERK9primitive"]], "dnnl::primitive::primitive (c++ function)": [[159, "_CPPv4N4dnnl9primitive9primitiveERK19primitive_desc_base"], [159, "_CPPv4N4dnnl9primitive9primitiveEv"]], "dnnl::primitive_desc (c++ struct)": [[159, "_CPPv4N4dnnl14primitive_descE"]], "dnnl::primitive_desc::next_impl (c++ function)": [[159, "_CPPv4N4dnnl14primitive_desc9next_implEv"]], "dnnl::primitive_desc::primitive_desc (c++ function)": [[159, "_CPPv4N4dnnl14primitive_desc14primitive_descEv"]], "dnnl::primitive_desc_base (c++ struct)": [[159, "_CPPv4N4dnnl19primitive_desc_baseE"]], "dnnl::primitive_desc_base::bias_desc (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base9bias_descEv"]], "dnnl::primitive_desc_base::diff_dst_desc (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base13diff_dst_descEi"], [159, "_CPPv4NK4dnnl19primitive_desc_base13diff_dst_descEv"]], "dnnl::primitive_desc_base::diff_src_desc (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base13diff_src_descEi"], [159, "_CPPv4NK4dnnl19primitive_desc_base13diff_src_descEv"]], "dnnl::primitive_desc_base::diff_weights_desc (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base17diff_weights_descEi"], [159, "_CPPv4NK4dnnl19primitive_desc_base17diff_weights_descEv"]], "dnnl::primitive_desc_base::dst_desc (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base8dst_descEi"], [159, "_CPPv4NK4dnnl19primitive_desc_base8dst_descEv"]], "dnnl::primitive_desc_base::get_activation_kind (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base19get_activation_kindEv"]], "dnnl::primitive_desc_base::get_algorithm (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base13get_algorithmEv"]], "dnnl::primitive_desc_base::get_alpha (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base9get_alphaEv"]], "dnnl::primitive_desc_base::get_axis (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base8get_axisEv"]], "dnnl::primitive_desc_base::get_beta (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base8get_betaEv"]], "dnnl::primitive_desc_base::get_cell_kind (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base13get_cell_kindEv"]], "dnnl::primitive_desc_base::get_dilations (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base13get_dilationsEv"]], "dnnl::primitive_desc_base::get_direction (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base13get_directionEv"]], "dnnl::primitive_desc_base::get_engine (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base10get_engineEv"]], "dnnl::primitive_desc_base::get_epsilon (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base11get_epsilonEv"]], "dnnl::primitive_desc_base::get_factors (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base11get_factorsEv"]], "dnnl::primitive_desc_base::get_flags (c++ function)": [[159, "_CPPv4I0ENK4dnnl19primitive_desc_base9get_flagsE1Tv"]], "dnnl::primitive_desc_base::get_group_size (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base14get_group_sizeEv"]], "dnnl::primitive_desc_base::get_k (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base5get_kEv"]], "dnnl::primitive_desc_base::get_kernel (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base10get_kernelEv"]], "dnnl::primitive_desc_base::get_kind (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base8get_kindEv"]], "dnnl::primitive_desc_base::get_local_size (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base14get_local_sizeEv"]], "dnnl::primitive_desc_base::get_p (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base5get_pEv"]], "dnnl::primitive_desc_base::get_padding_l (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base13get_padding_lEv"]], "dnnl::primitive_desc_base::get_padding_r (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base13get_padding_rEv"]], "dnnl::primitive_desc_base::get_primitive_attr (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base18get_primitive_attrEv"]], "dnnl::primitive_desc_base::get_prop_kind (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base13get_prop_kindEv"]], "dnnl::primitive_desc_base::get_strides (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base11get_stridesEv"]], "dnnl::primitive_desc_base::impl_info_str (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base13impl_info_strEv"]], "dnnl::primitive_desc_base::primitive_desc_base (c++ function)": [[159, "_CPPv4N4dnnl19primitive_desc_base19primitive_desc_baseEv"]], "dnnl::primitive_desc_base::query_md (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base8query_mdE5queryi"]], "dnnl::primitive_desc_base::query_s64 (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base9query_s64E5query"]], "dnnl::primitive_desc_base::scratchpad_desc (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base15scratchpad_descEv"]], "dnnl::primitive_desc_base::scratchpad_engine (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base17scratchpad_engineEv"]], "dnnl::primitive_desc_base::src_desc (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base8src_descEi"], [159, "_CPPv4NK4dnnl19primitive_desc_base8src_descEv"]], "dnnl::primitive_desc_base::weights_desc (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base12weights_descEi"], [159, "_CPPv4NK4dnnl19primitive_desc_base12weights_descEv"]], "dnnl::primitive_desc_base::workspace_desc (c++ function)": [[159, "_CPPv4NK4dnnl19primitive_desc_base14workspace_descEv"]], "dnnl::prop_kind (c++ enum)": [[159, "_CPPv4N4dnnl9prop_kindE"]], "dnnl::prop_kind::backward (c++ enumerator)": [[159, "_CPPv4N4dnnl9prop_kind8backwardE"]], "dnnl::prop_kind::backward_bias (c++ enumerator)": [[159, "_CPPv4N4dnnl9prop_kind13backward_biasE"]], "dnnl::prop_kind::backward_data (c++ enumerator)": [[159, "_CPPv4N4dnnl9prop_kind13backward_dataE"]], "dnnl::prop_kind::backward_weights (c++ enumerator)": [[159, "_CPPv4N4dnnl9prop_kind16backward_weightsE"]], "dnnl::prop_kind::forward (c++ enumerator)": [[159, "_CPPv4N4dnnl9prop_kind7forwardE"]], "dnnl::prop_kind::forward_inference (c++ enumerator)": [[159, "_CPPv4N4dnnl9prop_kind17forward_inferenceE"]], "dnnl::prop_kind::forward_scoring (c++ enumerator)": [[159, "_CPPv4N4dnnl9prop_kind15forward_scoringE"]], "dnnl::prop_kind::forward_training (c++ enumerator)": [[159, "_CPPv4N4dnnl9prop_kind16forward_trainingE"]], "dnnl::prop_kind::undef (c++ enumerator)": [[159, "_CPPv4N4dnnl9prop_kind5undefE"]], "dnnl::rnn_primitive_desc_base (c++ struct)": [[159, "_CPPv4N4dnnl23rnn_primitive_desc_baseE"]], "dnnl::rnn_primitive_desc_base::augru_attention_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base20augru_attention_descEv"]], "dnnl::rnn_primitive_desc_base::bias_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base9bias_descEv"]], "dnnl::rnn_primitive_desc_base::diff_augru_attention_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base25diff_augru_attention_descEv"]], "dnnl::rnn_primitive_desc_base::diff_bias_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base14diff_bias_descEv"]], "dnnl::rnn_primitive_desc_base::diff_dst_iter_c_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base20diff_dst_iter_c_descEv"]], "dnnl::rnn_primitive_desc_base::diff_dst_iter_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base18diff_dst_iter_descEv"]], "dnnl::rnn_primitive_desc_base::diff_dst_layer_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base19diff_dst_layer_descEv"]], "dnnl::rnn_primitive_desc_base::diff_src_iter_c_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base20diff_src_iter_c_descEv"]], "dnnl::rnn_primitive_desc_base::diff_src_iter_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base18diff_src_iter_descEv"]], "dnnl::rnn_primitive_desc_base::diff_src_layer_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base19diff_src_layer_descEv"]], "dnnl::rnn_primitive_desc_base::diff_weights_iter_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base22diff_weights_iter_descEv"]], "dnnl::rnn_primitive_desc_base::diff_weights_layer_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base23diff_weights_layer_descEv"]], "dnnl::rnn_primitive_desc_base::diff_weights_peephole_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base26diff_weights_peephole_descEv"]], "dnnl::rnn_primitive_desc_base::diff_weights_projection_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base28diff_weights_projection_descEv"]], "dnnl::rnn_primitive_desc_base::dst_iter_c_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base15dst_iter_c_descEv"]], "dnnl::rnn_primitive_desc_base::dst_iter_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base13dst_iter_descEv"]], "dnnl::rnn_primitive_desc_base::dst_layer_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base14dst_layer_descEv"]], "dnnl::rnn_primitive_desc_base::rnn_primitive_desc_base (c++ function)": [[159, "_CPPv4N4dnnl23rnn_primitive_desc_base23rnn_primitive_desc_baseEv"]], "dnnl::rnn_primitive_desc_base::src_iter_c_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base15src_iter_c_descEv"]], "dnnl::rnn_primitive_desc_base::src_iter_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base13src_iter_descEv"]], "dnnl::rnn_primitive_desc_base::src_layer_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base14src_layer_descEv"]], "dnnl::rnn_primitive_desc_base::weights_iter_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base17weights_iter_descEv"]], "dnnl::rnn_primitive_desc_base::weights_layer_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base18weights_layer_descEv"]], "dnnl::rnn_primitive_desc_base::weights_peephole_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base21weights_peephole_descEv"]], "dnnl::rnn_primitive_desc_base::weights_projection_desc (c++ function)": [[159, "_CPPv4NK4dnnl23rnn_primitive_desc_base23weights_projection_descEv"]], "dnnl::sycl_interop::execute (c++ function)": [[159, "_CPPv4N4dnnl12sycl_interop7executeERK9primitiveRK6streamRKNSt13unordered_mapIi6memoryEERKNSt6vectorIN2cl4sycl5eventEEE"]], "dnnl::inner_product_backward_data (c++ struct)": [[161, "_CPPv4N4dnnl27inner_product_backward_dataE"]], "dnnl::inner_product_backward_data::inner_product_backward_data (c++ function)": [[161, "_CPPv4N4dnnl27inner_product_backward_data27inner_product_backward_dataERK14primitive_desc"], [161, "_CPPv4N4dnnl27inner_product_backward_data27inner_product_backward_dataEv"]], "dnnl::inner_product_backward_data::primitive_desc (c++ struct)": [[161, "_CPPv4N4dnnl27inner_product_backward_data14primitive_descE"]], "dnnl::inner_product_backward_data::primitive_desc::diff_dst_desc (c++ function)": [[161, "_CPPv4NK4dnnl27inner_product_backward_data14primitive_desc13diff_dst_descEv"]], "dnnl::inner_product_backward_data::primitive_desc::diff_src_desc (c++ function)": [[161, "_CPPv4NK4dnnl27inner_product_backward_data14primitive_desc13diff_src_descEv"]], "dnnl::inner_product_backward_data::primitive_desc::get_prop_kind (c++ function)": [[161, "_CPPv4NK4dnnl27inner_product_backward_data14primitive_desc13get_prop_kindEv"]], "dnnl::inner_product_backward_data::primitive_desc::primitive_desc (c++ function)": [[161, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb"], [161, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descEv"]], "dnnl::inner_product_backward_data::primitive_desc::weights_desc (c++ function)": [[161, "_CPPv4NK4dnnl27inner_product_backward_data14primitive_desc12weights_descEv"]], "dnnl::inner_product_backward_weights (c++ struct)": [[161, "_CPPv4N4dnnl30inner_product_backward_weightsE"]], "dnnl::inner_product_backward_weights::inner_product_backward_weights (c++ function)": [[161, "_CPPv4N4dnnl30inner_product_backward_weights30inner_product_backward_weightsERK14primitive_desc"], [161, "_CPPv4N4dnnl30inner_product_backward_weights30inner_product_backward_weightsEv"]], "dnnl::inner_product_backward_weights::primitive_desc (c++ struct)": [[161, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_descE"]], "dnnl::inner_product_backward_weights::primitive_desc::diff_bias_desc (c++ function)": [[161, "_CPPv4NK4dnnl30inner_product_backward_weights14primitive_desc14diff_bias_descEv"]], "dnnl::inner_product_backward_weights::primitive_desc::diff_dst_desc (c++ function)": [[161, "_CPPv4NK4dnnl30inner_product_backward_weights14primitive_desc13diff_dst_descEv"]], "dnnl::inner_product_backward_weights::primitive_desc::diff_weights_desc (c++ function)": [[161, "_CPPv4NK4dnnl30inner_product_backward_weights14primitive_desc17diff_weights_descEv"]], "dnnl::inner_product_backward_weights::primitive_desc::get_prop_kind (c++ function)": [[161, "_CPPv4NK4dnnl30inner_product_backward_weights14primitive_desc13get_prop_kindEv"]], "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc (c++ function)": [[161, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb"], [161, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb"], [161, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descEv"]], "dnnl::inner_product_backward_weights::primitive_desc::src_desc (c++ function)": [[161, "_CPPv4NK4dnnl30inner_product_backward_weights14primitive_desc8src_descEv"]], "dnnl::inner_product_forward (c++ struct)": [[161, "_CPPv4N4dnnl21inner_product_forwardE"]], "dnnl::inner_product_forward::inner_product_forward (c++ function)": [[161, "_CPPv4N4dnnl21inner_product_forward21inner_product_forwardERK14primitive_desc"], [161, "_CPPv4N4dnnl21inner_product_forward21inner_product_forwardEv"]], "dnnl::inner_product_forward::primitive_desc (c++ struct)": [[161, "_CPPv4N4dnnl21inner_product_forward14primitive_descE"]], "dnnl::inner_product_forward::primitive_desc::bias_desc (c++ function)": [[161, "_CPPv4NK4dnnl21inner_product_forward14primitive_desc9bias_descEv"]], "dnnl::inner_product_forward::primitive_desc::dst_desc (c++ function)": [[161, "_CPPv4NK4dnnl21inner_product_forward14primitive_desc8dst_descEv"]], "dnnl::inner_product_forward::primitive_desc::get_prop_kind (c++ function)": [[161, "_CPPv4NK4dnnl21inner_product_forward14primitive_desc13get_prop_kindEv"]], "dnnl::inner_product_forward::primitive_desc::primitive_desc (c++ function)": [[161, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [161, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [161, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descEv"]], "dnnl::inner_product_forward::primitive_desc::src_desc (c++ function)": [[161, "_CPPv4NK4dnnl21inner_product_forward14primitive_desc8src_descEv"]], "dnnl::inner_product_forward::primitive_desc::weights_desc (c++ function)": [[161, "_CPPv4NK4dnnl21inner_product_forward14primitive_desc12weights_descEv"]], "dnnl::layer_normalization_backward (c++ struct)": [[162, "_CPPv4N4dnnl28layer_normalization_backwardE"]], "dnnl::layer_normalization_backward::layer_normalization_backward (c++ function)": [[162, "_CPPv4N4dnnl28layer_normalization_backward28layer_normalization_backwardERK14primitive_desc"], [162, "_CPPv4N4dnnl28layer_normalization_backward28layer_normalization_backwardEv"]], "dnnl::layer_normalization_backward::primitive_desc (c++ struct)": [[162, "_CPPv4N4dnnl28layer_normalization_backward14primitive_descE"]], "dnnl::layer_normalization_backward::primitive_desc::diff_dst_desc (c++ function)": [[162, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc13diff_dst_descEv"]], "dnnl::layer_normalization_backward::primitive_desc::diff_src_desc (c++ function)": [[162, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc13diff_src_descEv"]], "dnnl::layer_normalization_backward::primitive_desc::diff_weights_desc (c++ function)": [[162, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc17diff_weights_descEv"]], "dnnl::layer_normalization_backward::primitive_desc::dst_desc (c++ function)": [[162, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc8dst_descEv"]], "dnnl::layer_normalization_backward::primitive_desc::get_epsilon (c++ function)": [[162, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc11get_epsilonEv"]], "dnnl::layer_normalization_backward::primitive_desc::get_flags (c++ function)": [[162, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc9get_flagsEv"]], "dnnl::layer_normalization_backward::primitive_desc::get_prop_kind (c++ function)": [[162, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc13get_prop_kindEv"]], "dnnl::layer_normalization_backward::primitive_desc::mean_desc (c++ function)": [[162, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc9mean_descEv"]], "dnnl::layer_normalization_backward::primitive_desc::primitive_desc (c++ function)": [[162, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb"], [162, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb"], [162, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descEv"]], "dnnl::layer_normalization_backward::primitive_desc::src_desc (c++ function)": [[162, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc8src_descEv"]], "dnnl::layer_normalization_backward::primitive_desc::variance_desc (c++ function)": [[162, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc13variance_descEv"]], "dnnl::layer_normalization_backward::primitive_desc::weights_desc (c++ function)": [[162, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc12weights_descEv"]], "dnnl::layer_normalization_backward::primitive_desc::workspace_desc (c++ function)": [[162, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc14workspace_descEv"]], "dnnl::layer_normalization_forward (c++ struct)": [[162, "_CPPv4N4dnnl27layer_normalization_forwardE"]], "dnnl::layer_normalization_forward::layer_normalization_forward (c++ function)": [[162, "_CPPv4N4dnnl27layer_normalization_forward27layer_normalization_forwardERK14primitive_desc"], [162, "_CPPv4N4dnnl27layer_normalization_forward27layer_normalization_forwardEv"]], "dnnl::layer_normalization_forward::primitive_desc (c++ struct)": [[162, "_CPPv4N4dnnl27layer_normalization_forward14primitive_descE"]], "dnnl::layer_normalization_forward::primitive_desc::dst_desc (c++ function)": [[162, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc8dst_descEv"]], "dnnl::layer_normalization_forward::primitive_desc::get_epsilon (c++ function)": [[162, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc11get_epsilonEv"]], "dnnl::layer_normalization_forward::primitive_desc::get_flags (c++ function)": [[162, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc9get_flagsEv"]], "dnnl::layer_normalization_forward::primitive_desc::get_prop_kind (c++ function)": [[162, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc13get_prop_kindEv"]], "dnnl::layer_normalization_forward::primitive_desc::mean_desc (c++ function)": [[162, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc9mean_descEv"]], "dnnl::layer_normalization_forward::primitive_desc::primitive_desc (c++ function)": [[162, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb"], [162, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb"], [162, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descEv"]], "dnnl::layer_normalization_forward::primitive_desc::src_desc (c++ function)": [[162, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc8src_descEv"]], "dnnl::layer_normalization_forward::primitive_desc::variance_desc (c++ function)": [[162, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc13variance_descEv"]], "dnnl::layer_normalization_forward::primitive_desc::weights_desc (c++ function)": [[162, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc12weights_descEv"]], "dnnl::layer_normalization_forward::primitive_desc::workspace_desc (c++ function)": [[162, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc14workspace_descEv"]], "dnnl::lrn_backward (c++ struct)": [[163, "_CPPv4N4dnnl12lrn_backwardE"]], "dnnl::lrn_backward::lrn_backward (c++ function)": [[163, "_CPPv4N4dnnl12lrn_backward12lrn_backwardERK14primitive_desc"], [163, "_CPPv4N4dnnl12lrn_backward12lrn_backwardEv"]], "dnnl::lrn_backward::primitive_desc (c++ struct)": [[163, "_CPPv4N4dnnl12lrn_backward14primitive_descE"]], "dnnl::lrn_backward::primitive_desc::diff_dst_desc (c++ function)": [[163, "_CPPv4NK4dnnl12lrn_backward14primitive_desc13diff_dst_descEv"]], "dnnl::lrn_backward::primitive_desc::diff_src_desc (c++ function)": [[163, "_CPPv4NK4dnnl12lrn_backward14primitive_desc13diff_src_descEv"]], "dnnl::lrn_backward::primitive_desc::get_algorithm (c++ function)": [[163, "_CPPv4NK4dnnl12lrn_backward14primitive_desc13get_algorithmEv"]], "dnnl::lrn_backward::primitive_desc::get_alpha (c++ function)": [[163, "_CPPv4NK4dnnl12lrn_backward14primitive_desc9get_alphaEv"]], "dnnl::lrn_backward::primitive_desc::get_beta (c++ function)": [[163, "_CPPv4NK4dnnl12lrn_backward14primitive_desc8get_betaEv"]], "dnnl::lrn_backward::primitive_desc::get_k (c++ function)": [[163, "_CPPv4NK4dnnl12lrn_backward14primitive_desc5get_kEv"]], "dnnl::lrn_backward::primitive_desc::get_local_size (c++ function)": [[163, "_CPPv4NK4dnnl12lrn_backward14primitive_desc14get_local_sizeEv"]], "dnnl::lrn_backward::primitive_desc::get_prop_kind (c++ function)": [[163, "_CPPv4NK4dnnl12lrn_backward14primitive_desc13get_prop_kindEv"]], "dnnl::lrn_backward::primitive_desc::primitive_desc (c++ function)": [[163, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb"], [163, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descEv"]], "dnnl::lrn_backward::primitive_desc::workspace_desc (c++ function)": [[163, "_CPPv4NK4dnnl12lrn_backward14primitive_desc14workspace_descEv"]], "dnnl::lrn_forward (c++ struct)": [[163, "_CPPv4N4dnnl11lrn_forwardE"]], "dnnl::lrn_forward::lrn_forward (c++ function)": [[163, "_CPPv4N4dnnl11lrn_forward11lrn_forwardERK14primitive_desc"], [163, "_CPPv4N4dnnl11lrn_forward11lrn_forwardEv"]], "dnnl::lrn_forward::primitive_desc (c++ struct)": [[163, "_CPPv4N4dnnl11lrn_forward14primitive_descE"]], "dnnl::lrn_forward::primitive_desc::dst_desc (c++ function)": [[163, "_CPPv4NK4dnnl11lrn_forward14primitive_desc8dst_descEv"]], "dnnl::lrn_forward::primitive_desc::get_algorithm (c++ function)": [[163, "_CPPv4NK4dnnl11lrn_forward14primitive_desc13get_algorithmEv"]], "dnnl::lrn_forward::primitive_desc::get_alpha (c++ function)": [[163, "_CPPv4NK4dnnl11lrn_forward14primitive_desc9get_alphaEv"]], "dnnl::lrn_forward::primitive_desc::get_beta (c++ function)": [[163, "_CPPv4NK4dnnl11lrn_forward14primitive_desc8get_betaEv"]], "dnnl::lrn_forward::primitive_desc::get_k (c++ function)": [[163, "_CPPv4NK4dnnl11lrn_forward14primitive_desc5get_kEv"]], "dnnl::lrn_forward::primitive_desc::get_local_size (c++ function)": [[163, "_CPPv4NK4dnnl11lrn_forward14primitive_desc14get_local_sizeEv"]], "dnnl::lrn_forward::primitive_desc::get_prop_kind (c++ function)": [[163, "_CPPv4NK4dnnl11lrn_forward14primitive_desc13get_prop_kindEv"]], "dnnl::lrn_forward::primitive_desc::primitive_desc (c++ function)": [[163, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb"], [163, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descEv"]], "dnnl::lrn_forward::primitive_desc::src_desc (c++ function)": [[163, "_CPPv4NK4dnnl11lrn_forward14primitive_desc8src_descEv"]], "dnnl::lrn_forward::primitive_desc::workspace_desc (c++ function)": [[163, "_CPPv4NK4dnnl11lrn_forward14primitive_desc14workspace_descEv"]], "dnnl::matmul (c++ struct)": [[164, "_CPPv4N4dnnl6matmulE"]], "dnnl::matmul::matmul (c++ function)": [[164, "_CPPv4N4dnnl6matmul6matmulERK14primitive_desc"], [164, "_CPPv4N4dnnl6matmul6matmulEv"]], "dnnl::matmul::primitive_desc (c++ struct)": [[164, "_CPPv4N4dnnl6matmul14primitive_descE"]], "dnnl::matmul::primitive_desc::bias_desc (c++ function)": [[164, "_CPPv4NK4dnnl6matmul14primitive_desc9bias_descEv"]], "dnnl::matmul::primitive_desc::dst_desc (c++ function)": [[164, "_CPPv4NK4dnnl6matmul14primitive_desc8dst_descEv"]], "dnnl::matmul::primitive_desc::primitive_desc (c++ function)": [[164, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [164, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [164, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descEv"]], "dnnl::matmul::primitive_desc::src_desc (c++ function)": [[164, "_CPPv4NK4dnnl6matmul14primitive_desc8src_descEv"]], "dnnl::matmul::primitive_desc::weights_desc (c++ function)": [[164, "_CPPv4NK4dnnl6matmul14primitive_desc12weights_descEv"]], "dnnl::pooling_backward (c++ struct)": [[165, "_CPPv4N4dnnl16pooling_backwardE"]], "dnnl::pooling_backward::pooling_backward (c++ function)": [[165, "_CPPv4N4dnnl16pooling_backward16pooling_backwardERK14primitive_desc"], [165, "_CPPv4N4dnnl16pooling_backward16pooling_backwardEv"]], "dnnl::pooling_backward::primitive_desc (c++ struct)": [[165, "_CPPv4N4dnnl16pooling_backward14primitive_descE"]], "dnnl::pooling_backward::primitive_desc::diff_dst_desc (c++ function)": [[165, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13diff_dst_descEv"]], "dnnl::pooling_backward::primitive_desc::diff_src_desc (c++ function)": [[165, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13diff_src_descEv"]], "dnnl::pooling_backward::primitive_desc::get_algorithm (c++ function)": [[165, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13get_algorithmEv"]], "dnnl::pooling_backward::primitive_desc::get_dilations (c++ function)": [[165, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13get_dilationsEv"]], "dnnl::pooling_backward::primitive_desc::get_kernel (c++ function)": [[165, "_CPPv4NK4dnnl16pooling_backward14primitive_desc10get_kernelEv"]], "dnnl::pooling_backward::primitive_desc::get_padding_l (c++ function)": [[165, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13get_padding_lEv"]], "dnnl::pooling_backward::primitive_desc::get_padding_r (c++ function)": [[165, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13get_padding_rEv"]], "dnnl::pooling_backward::primitive_desc::get_prop_kind (c++ function)": [[165, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13get_prop_kindEv"]], "dnnl::pooling_backward::primitive_desc::get_strides (c++ function)": [[165, "_CPPv4NK4dnnl16pooling_backward14primitive_desc11get_stridesEv"]], "dnnl::pooling_backward::primitive_desc::primitive_desc (c++ function)": [[165, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb"], [165, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descEv"]], "dnnl::pooling_backward::primitive_desc::workspace_desc (c++ function)": [[165, "_CPPv4NK4dnnl16pooling_backward14primitive_desc14workspace_descEv"]], "dnnl::pooling_forward (c++ struct)": [[165, "_CPPv4N4dnnl15pooling_forwardE"]], "dnnl::pooling_forward::pooling_forward (c++ function)": [[165, "_CPPv4N4dnnl15pooling_forward15pooling_forwardERK14primitive_desc"], [165, "_CPPv4N4dnnl15pooling_forward15pooling_forwardEv"]], "dnnl::pooling_forward::primitive_desc (c++ struct)": [[165, "_CPPv4N4dnnl15pooling_forward14primitive_descE"]], "dnnl::pooling_forward::primitive_desc::dst_desc (c++ function)": [[165, "_CPPv4NK4dnnl15pooling_forward14primitive_desc8dst_descEv"]], "dnnl::pooling_forward::primitive_desc::get_algorithm (c++ function)": [[165, "_CPPv4NK4dnnl15pooling_forward14primitive_desc13get_algorithmEv"]], "dnnl::pooling_forward::primitive_desc::get_dilations (c++ function)": [[165, "_CPPv4NK4dnnl15pooling_forward14primitive_desc13get_dilationsEv"]], "dnnl::pooling_forward::primitive_desc::get_kernel (c++ function)": [[165, "_CPPv4NK4dnnl15pooling_forward14primitive_desc10get_kernelEv"]], "dnnl::pooling_forward::primitive_desc::get_padding_l (c++ function)": [[165, "_CPPv4NK4dnnl15pooling_forward14primitive_desc13get_padding_lEv"]], "dnnl::pooling_forward::primitive_desc::get_padding_r (c++ function)": [[165, "_CPPv4NK4dnnl15pooling_forward14primitive_desc13get_padding_rEv"]], "dnnl::pooling_forward::primitive_desc::get_prop_kind (c++ function)": [[165, "_CPPv4NK4dnnl15pooling_forward14primitive_desc13get_prop_kindEv"]], "dnnl::pooling_forward::primitive_desc::get_strides (c++ function)": [[165, "_CPPv4NK4dnnl15pooling_forward14primitive_desc11get_stridesEv"]], "dnnl::pooling_forward::primitive_desc::primitive_desc (c++ function)": [[165, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb"], [165, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descEv"]], "dnnl::pooling_forward::primitive_desc::src_desc (c++ function)": [[165, "_CPPv4NK4dnnl15pooling_forward14primitive_desc8src_descEv"]], "dnnl::pooling_forward::primitive_desc::workspace_desc (c++ function)": [[165, "_CPPv4NK4dnnl15pooling_forward14primitive_desc14workspace_descEv"]], "dnnl::prelu_backward (c++ struct)": [[166, "_CPPv4N4dnnl14prelu_backwardE"]], "dnnl::prelu_backward::prelu_backward (c++ function)": [[166, "_CPPv4N4dnnl14prelu_backward14prelu_backwardERK14primitive_desc"], [166, "_CPPv4N4dnnl14prelu_backward14prelu_backwardEv"]], "dnnl::prelu_backward::primitive_desc (c++ struct)": [[166, "_CPPv4N4dnnl14prelu_backward14primitive_descE"]], "dnnl::prelu_backward::primitive_desc::diff_dst_desc (c++ function)": [[166, "_CPPv4NK4dnnl14prelu_backward14primitive_desc13diff_dst_descEv"]], "dnnl::prelu_backward::primitive_desc::diff_src_desc (c++ function)": [[166, "_CPPv4NK4dnnl14prelu_backward14primitive_desc13diff_src_descEv"]], "dnnl::prelu_backward::primitive_desc::get_prop_kind (c++ function)": [[166, "_CPPv4NK4dnnl14prelu_backward14primitive_desc13get_prop_kindEv"]], "dnnl::prelu_backward::primitive_desc::primitive_desc (c++ function)": [[166, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb"], [166, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descEv"]], "dnnl::prelu_backward::primitive_desc::src_desc (c++ function)": [[166, "_CPPv4NK4dnnl14prelu_backward14primitive_desc8src_descEv"]], "dnnl::prelu_forward (c++ struct)": [[166, "_CPPv4N4dnnl13prelu_forwardE"]], "dnnl::prelu_forward::prelu_forward (c++ function)": [[166, "_CPPv4N4dnnl13prelu_forward13prelu_forwardERK14primitive_desc"], [166, "_CPPv4N4dnnl13prelu_forward13prelu_forwardEv"]], "dnnl::prelu_forward::primitive_desc (c++ struct)": [[166, "_CPPv4N4dnnl13prelu_forward14primitive_descE"]], "dnnl::prelu_forward::primitive_desc::dst_desc (c++ function)": [[166, "_CPPv4NK4dnnl13prelu_forward14primitive_desc8dst_descEv"]], "dnnl::prelu_forward::primitive_desc::get_prop_kind (c++ function)": [[166, "_CPPv4NK4dnnl13prelu_forward14primitive_desc13get_prop_kindEv"]], "dnnl::prelu_forward::primitive_desc::primitive_desc (c++ function)": [[166, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [166, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descEv"]], "dnnl::prelu_forward::primitive_desc::src_desc (c++ function)": [[166, "_CPPv4NK4dnnl13prelu_forward14primitive_desc8src_descEv"]], "dnnl::reduction (c++ struct)": [[167, "_CPPv4N4dnnl9reductionE"]], "dnnl::reduction::primitive_desc (c++ struct)": [[167, "_CPPv4N4dnnl9reduction14primitive_descE"]], "dnnl::reduction::primitive_desc::dst_desc (c++ function)": [[167, "_CPPv4NK4dnnl9reduction14primitive_desc8dst_descEv"]], "dnnl::reduction::primitive_desc::get_algorithm (c++ function)": [[167, "_CPPv4NK4dnnl9reduction14primitive_desc13get_algorithmEv"]], "dnnl::reduction::primitive_desc::get_epsilon (c++ function)": [[167, "_CPPv4NK4dnnl9reduction14primitive_desc11get_epsilonEv"]], "dnnl::reduction::primitive_desc::get_p (c++ function)": [[167, "_CPPv4NK4dnnl9reduction14primitive_desc5get_pEv"]], "dnnl::reduction::primitive_desc::primitive_desc (c++ function)": [[167, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb"], [167, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descEv"]], "dnnl::reduction::primitive_desc::src_desc (c++ function)": [[167, "_CPPv4NK4dnnl9reduction14primitive_desc8src_descEv"]], "dnnl::reduction::reduction (c++ function)": [[167, "_CPPv4N4dnnl9reduction9reductionEv"]], "dnnl::reorder (c++ struct)": [[168, "_CPPv4N4dnnl7reorderE"]], "dnnl::reorder::execute (c++ function)": [[168, "_CPPv4NK4dnnl7reorder7executeERK6streamR6memoryR6memory"]], "dnnl::reorder::primitive_desc (c++ struct)": [[168, "_CPPv4N4dnnl7reorder14primitive_descE"]], "dnnl::reorder::primitive_desc::dst_desc (c++ function)": [[168, "_CPPv4NK4dnnl7reorder14primitive_desc8dst_descEv"]], "dnnl::reorder::primitive_desc::get_dst_engine (c++ function)": [[168, "_CPPv4NK4dnnl7reorder14primitive_desc14get_dst_engineEv"]], "dnnl::reorder::primitive_desc::get_src_engine (c++ function)": [[168, "_CPPv4NK4dnnl7reorder14primitive_desc14get_src_engineEv"]], "dnnl::reorder::primitive_desc::primitive_desc (c++ function)": [[168, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6engineRKN6memory4descERK6engineRKN6memory4descERK14primitive_attrb"], [168, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6memoryRK6memoryRK14primitive_attrb"], [168, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descEv"]], "dnnl::reorder::primitive_desc::src_desc (c++ function)": [[168, "_CPPv4NK4dnnl7reorder14primitive_desc8src_descEv"]], "dnnl::reorder::reorder (c++ function)": [[168, "_CPPv4N4dnnl7reorder7reorderERK14primitive_desc"], [168, "_CPPv4N4dnnl7reorder7reorderERK6memoryRK6memoryRK14primitive_attr"], [168, "_CPPv4N4dnnl7reorder7reorderEv"]], "dnnl::resampling_backward (c++ struct)": [[169, "_CPPv4N4dnnl19resampling_backwardE"]], "dnnl::resampling_backward::primitive_desc (c++ struct)": [[169, "_CPPv4N4dnnl19resampling_backward14primitive_descE"]], "dnnl::resampling_backward::primitive_desc::diff_dst_desc (c++ function)": [[169, "_CPPv4NK4dnnl19resampling_backward14primitive_desc13diff_dst_descEv"]], "dnnl::resampling_backward::primitive_desc::diff_src_desc (c++ function)": [[169, "_CPPv4NK4dnnl19resampling_backward14primitive_desc13diff_src_descEv"]], "dnnl::resampling_backward::primitive_desc::primitive_desc (c++ function)": [[169, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb"], [169, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb"], [169, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descEv"]], "dnnl::resampling_backward::resampling_backward (c++ function)": [[169, "_CPPv4N4dnnl19resampling_backward19resampling_backwardERK14primitive_desc"], [169, "_CPPv4N4dnnl19resampling_backward19resampling_backwardEv"]], "dnnl::resampling_forward (c++ struct)": [[169, "_CPPv4N4dnnl18resampling_forwardE"]], "dnnl::resampling_forward::primitive_desc (c++ struct)": [[169, "_CPPv4N4dnnl18resampling_forward14primitive_descE"]], "dnnl::resampling_forward::primitive_desc::dst_desc (c++ function)": [[169, "_CPPv4NK4dnnl18resampling_forward14primitive_desc8dst_descEv"]], "dnnl::resampling_forward::primitive_desc::primitive_desc (c++ function)": [[169, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb"], [169, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERK14primitive_attrb"], [169, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERK14primitive_attrb"], [169, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descEv"]], "dnnl::resampling_forward::primitive_desc::src_desc (c++ function)": [[169, "_CPPv4NK4dnnl18resampling_forward14primitive_desc8src_descEv"]], "dnnl::resampling_forward::resampling_forward (c++ function)": [[169, "_CPPv4N4dnnl18resampling_forward18resampling_forwardERK14primitive_desc"], [169, "_CPPv4N4dnnl18resampling_forward18resampling_forwardEv"]], "dnnl::gru_backward (c++ struct)": [[170, "_CPPv4N4dnnl12gru_backwardE"]], "dnnl::gru_backward::gru_backward (c++ function)": [[170, "_CPPv4N4dnnl12gru_backward12gru_backwardERK14primitive_desc"], [170, "_CPPv4N4dnnl12gru_backward12gru_backwardEv"]], "dnnl::gru_backward::primitive_desc (c++ struct)": [[170, "_CPPv4N4dnnl12gru_backward14primitive_descE"]], "dnnl::gru_backward::primitive_desc::bias_desc (c++ function)": [[170, "_CPPv4NK4dnnl12gru_backward14primitive_desc9bias_descEv"]], "dnnl::gru_backward::primitive_desc::diff_bias_desc (c++ function)": [[170, "_CPPv4NK4dnnl12gru_backward14primitive_desc14diff_bias_descEv"]], "dnnl::gru_backward::primitive_desc::diff_dst_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl12gru_backward14primitive_desc18diff_dst_iter_descEv"]], "dnnl::gru_backward::primitive_desc::diff_dst_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl12gru_backward14primitive_desc19diff_dst_layer_descEv"]], "dnnl::gru_backward::primitive_desc::diff_src_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl12gru_backward14primitive_desc18diff_src_iter_descEv"]], "dnnl::gru_backward::primitive_desc::diff_src_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl12gru_backward14primitive_desc19diff_src_layer_descEv"]], "dnnl::gru_backward::primitive_desc::diff_weights_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl12gru_backward14primitive_desc22diff_weights_iter_descEv"]], "dnnl::gru_backward::primitive_desc::diff_weights_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl12gru_backward14primitive_desc23diff_weights_layer_descEv"]], "dnnl::gru_backward::primitive_desc::dst_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl12gru_backward14primitive_desc13dst_iter_descEv"]], "dnnl::gru_backward::primitive_desc::dst_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl12gru_backward14primitive_desc14dst_layer_descEv"]], "dnnl::gru_backward::primitive_desc::get_cell_kind (c++ function)": [[170, "_CPPv4NK4dnnl12gru_backward14primitive_desc13get_cell_kindEv"]], "dnnl::gru_backward::primitive_desc::get_direction (c++ function)": [[170, "_CPPv4NK4dnnl12gru_backward14primitive_desc13get_directionEv"]], "dnnl::gru_backward::primitive_desc::get_prop_kind (c++ function)": [[170, "_CPPv4NK4dnnl12gru_backward14primitive_desc13get_prop_kindEv"]], "dnnl::gru_backward::primitive_desc::primitive_desc (c++ function)": [[170, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb"], [170, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descEv"]], "dnnl::gru_backward::primitive_desc::src_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl12gru_backward14primitive_desc13src_iter_descEv"]], "dnnl::gru_backward::primitive_desc::src_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl12gru_backward14primitive_desc14src_layer_descEv"]], "dnnl::gru_backward::primitive_desc::weights_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl12gru_backward14primitive_desc17weights_iter_descEv"]], "dnnl::gru_backward::primitive_desc::weights_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl12gru_backward14primitive_desc18weights_layer_descEv"]], "dnnl::gru_backward::primitive_desc::workspace_desc (c++ function)": [[170, "_CPPv4NK4dnnl12gru_backward14primitive_desc14workspace_descEv"]], "dnnl::gru_forward (c++ struct)": [[170, "_CPPv4N4dnnl11gru_forwardE"]], "dnnl::gru_forward::gru_forward (c++ function)": [[170, "_CPPv4N4dnnl11gru_forward11gru_forwardERK14primitive_desc"], [170, "_CPPv4N4dnnl11gru_forward11gru_forwardEv"]], "dnnl::gru_forward::primitive_desc (c++ struct)": [[170, "_CPPv4N4dnnl11gru_forward14primitive_descE"]], "dnnl::gru_forward::primitive_desc::bias_desc (c++ function)": [[170, "_CPPv4NK4dnnl11gru_forward14primitive_desc9bias_descEv"]], "dnnl::gru_forward::primitive_desc::dst_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl11gru_forward14primitive_desc13dst_iter_descEv"]], "dnnl::gru_forward::primitive_desc::dst_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl11gru_forward14primitive_desc14dst_layer_descEv"]], "dnnl::gru_forward::primitive_desc::get_cell_kind (c++ function)": [[170, "_CPPv4NK4dnnl11gru_forward14primitive_desc13get_cell_kindEv"]], "dnnl::gru_forward::primitive_desc::get_direction (c++ function)": [[170, "_CPPv4NK4dnnl11gru_forward14primitive_desc13get_directionEv"]], "dnnl::gru_forward::primitive_desc::get_prop_kind (c++ function)": [[170, "_CPPv4NK4dnnl11gru_forward14primitive_desc13get_prop_kindEv"]], "dnnl::gru_forward::primitive_desc::primitive_desc (c++ function)": [[170, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [170, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descEv"]], "dnnl::gru_forward::primitive_desc::src_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl11gru_forward14primitive_desc13src_iter_descEv"]], "dnnl::gru_forward::primitive_desc::src_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl11gru_forward14primitive_desc14src_layer_descEv"]], "dnnl::gru_forward::primitive_desc::weights_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl11gru_forward14primitive_desc17weights_iter_descEv"]], "dnnl::gru_forward::primitive_desc::weights_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl11gru_forward14primitive_desc18weights_layer_descEv"]], "dnnl::gru_forward::primitive_desc::workspace_desc (c++ function)": [[170, "_CPPv4NK4dnnl11gru_forward14primitive_desc14workspace_descEv"]], "dnnl::lbr_gru_backward (c++ struct)": [[170, "_CPPv4N4dnnl16lbr_gru_backwardE"]], "dnnl::lbr_gru_backward::lbr_gru_backward (c++ function)": [[170, "_CPPv4N4dnnl16lbr_gru_backward16lbr_gru_backwardERK14primitive_desc"], [170, "_CPPv4N4dnnl16lbr_gru_backward16lbr_gru_backwardEv"]], "dnnl::lbr_gru_backward::primitive_desc (c++ struct)": [[170, "_CPPv4N4dnnl16lbr_gru_backward14primitive_descE"]], "dnnl::lbr_gru_backward::primitive_desc::bias_desc (c++ function)": [[170, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc9bias_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::diff_bias_desc (c++ function)": [[170, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc14diff_bias_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::diff_dst_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc18diff_dst_iter_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::diff_dst_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc19diff_dst_layer_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::diff_src_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc18diff_src_iter_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::diff_src_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc19diff_src_layer_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::diff_weights_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc22diff_weights_iter_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::diff_weights_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc23diff_weights_layer_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::dst_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc13dst_iter_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::dst_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc14dst_layer_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::get_cell_kind (c++ function)": [[170, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc13get_cell_kindEv"]], "dnnl::lbr_gru_backward::primitive_desc::get_direction (c++ function)": [[170, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc13get_directionEv"]], "dnnl::lbr_gru_backward::primitive_desc::get_prop_kind (c++ function)": [[170, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc13get_prop_kindEv"]], "dnnl::lbr_gru_backward::primitive_desc::primitive_desc (c++ function)": [[170, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb"], [170, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::src_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc13src_iter_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::src_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc14src_layer_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::weights_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc17weights_iter_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::weights_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc18weights_layer_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::workspace_desc (c++ function)": [[170, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc14workspace_descEv"]], "dnnl::lbr_gru_forward (c++ struct)": [[170, "_CPPv4N4dnnl15lbr_gru_forwardE"]], "dnnl::lbr_gru_forward::lbr_gru_forward (c++ function)": [[170, "_CPPv4N4dnnl15lbr_gru_forward15lbr_gru_forwardERK14primitive_desc"], [170, "_CPPv4N4dnnl15lbr_gru_forward15lbr_gru_forwardEv"]], "dnnl::lbr_gru_forward::primitive_desc (c++ struct)": [[170, "_CPPv4N4dnnl15lbr_gru_forward14primitive_descE"]], "dnnl::lbr_gru_forward::primitive_desc::bias_desc (c++ function)": [[170, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc9bias_descEv"]], "dnnl::lbr_gru_forward::primitive_desc::dst_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc13dst_iter_descEv"]], "dnnl::lbr_gru_forward::primitive_desc::dst_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc14dst_layer_descEv"]], "dnnl::lbr_gru_forward::primitive_desc::get_cell_kind (c++ function)": [[170, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc13get_cell_kindEv"]], "dnnl::lbr_gru_forward::primitive_desc::get_direction (c++ function)": [[170, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc13get_directionEv"]], "dnnl::lbr_gru_forward::primitive_desc::get_prop_kind (c++ function)": [[170, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc13get_prop_kindEv"]], "dnnl::lbr_gru_forward::primitive_desc::primitive_desc (c++ function)": [[170, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [170, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descEv"]], "dnnl::lbr_gru_forward::primitive_desc::src_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc13src_iter_descEv"]], "dnnl::lbr_gru_forward::primitive_desc::src_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc14src_layer_descEv"]], "dnnl::lbr_gru_forward::primitive_desc::weights_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc17weights_iter_descEv"]], "dnnl::lbr_gru_forward::primitive_desc::weights_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc18weights_layer_descEv"]], "dnnl::lbr_gru_forward::primitive_desc::workspace_desc (c++ function)": [[170, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc14workspace_descEv"]], "dnnl::lstm_backward (c++ struct)": [[170, "_CPPv4N4dnnl13lstm_backwardE"]], "dnnl::lstm_backward::lstm_backward (c++ function)": [[170, "_CPPv4N4dnnl13lstm_backward13lstm_backwardERK14primitive_desc"], [170, "_CPPv4N4dnnl13lstm_backward13lstm_backwardEv"]], "dnnl::lstm_backward::primitive_desc (c++ struct)": [[170, "_CPPv4N4dnnl13lstm_backward14primitive_descE"]], "dnnl::lstm_backward::primitive_desc::bias_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc9bias_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_bias_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc14diff_bias_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_dst_iter_c_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc20diff_dst_iter_c_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_dst_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc18diff_dst_iter_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_dst_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc19diff_dst_layer_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_src_iter_c_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc20diff_src_iter_c_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_src_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc18diff_src_iter_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_src_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc19diff_src_layer_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_weights_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc22diff_weights_iter_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_weights_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc23diff_weights_layer_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_weights_peephole_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc26diff_weights_peephole_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_weights_projection_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc28diff_weights_projection_descEv"]], "dnnl::lstm_backward::primitive_desc::dst_iter_c_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc15dst_iter_c_descEv"]], "dnnl::lstm_backward::primitive_desc::dst_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc13dst_iter_descEv"]], "dnnl::lstm_backward::primitive_desc::dst_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc14dst_layer_descEv"]], "dnnl::lstm_backward::primitive_desc::get_cell_kind (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc13get_cell_kindEv"]], "dnnl::lstm_backward::primitive_desc::get_direction (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc13get_directionEv"]], "dnnl::lstm_backward::primitive_desc::get_prop_kind (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc13get_prop_kindEv"]], "dnnl::lstm_backward::primitive_desc::primitive_desc (c++ function)": [[170, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb"], [170, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb"], [170, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb"], [170, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descEv"]], "dnnl::lstm_backward::primitive_desc::src_iter_c_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc15src_iter_c_descEv"]], "dnnl::lstm_backward::primitive_desc::src_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc13src_iter_descEv"]], "dnnl::lstm_backward::primitive_desc::src_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc14src_layer_descEv"]], "dnnl::lstm_backward::primitive_desc::weights_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc17weights_iter_descEv"]], "dnnl::lstm_backward::primitive_desc::weights_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc18weights_layer_descEv"]], "dnnl::lstm_backward::primitive_desc::weights_peephole_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc21weights_peephole_descEv"]], "dnnl::lstm_backward::primitive_desc::weights_projection_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc23weights_projection_descEv"]], "dnnl::lstm_backward::primitive_desc::workspace_desc (c++ function)": [[170, "_CPPv4NK4dnnl13lstm_backward14primitive_desc14workspace_descEv"]], "dnnl::lstm_forward (c++ struct)": [[170, "_CPPv4N4dnnl12lstm_forwardE"]], "dnnl::lstm_forward::lstm_forward (c++ function)": [[170, "_CPPv4N4dnnl12lstm_forward12lstm_forwardERK14primitive_desc"], [170, "_CPPv4N4dnnl12lstm_forward12lstm_forwardEv"]], "dnnl::lstm_forward::primitive_desc (c++ struct)": [[170, "_CPPv4N4dnnl12lstm_forward14primitive_descE"]], "dnnl::lstm_forward::primitive_desc::bias_desc (c++ function)": [[170, "_CPPv4NK4dnnl12lstm_forward14primitive_desc9bias_descEv"]], "dnnl::lstm_forward::primitive_desc::dst_iter_c_desc (c++ function)": [[170, "_CPPv4NK4dnnl12lstm_forward14primitive_desc15dst_iter_c_descEv"]], "dnnl::lstm_forward::primitive_desc::dst_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl12lstm_forward14primitive_desc13dst_iter_descEv"]], "dnnl::lstm_forward::primitive_desc::dst_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl12lstm_forward14primitive_desc14dst_layer_descEv"]], "dnnl::lstm_forward::primitive_desc::get_cell_kind (c++ function)": [[170, "_CPPv4NK4dnnl12lstm_forward14primitive_desc13get_cell_kindEv"]], "dnnl::lstm_forward::primitive_desc::get_direction (c++ function)": [[170, "_CPPv4NK4dnnl12lstm_forward14primitive_desc13get_directionEv"]], "dnnl::lstm_forward::primitive_desc::get_prop_kind (c++ function)": [[170, "_CPPv4NK4dnnl12lstm_forward14primitive_desc13get_prop_kindEv"]], "dnnl::lstm_forward::primitive_desc::primitive_desc (c++ function)": [[170, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [170, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [170, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [170, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descEv"]], "dnnl::lstm_forward::primitive_desc::src_iter_c_desc (c++ function)": [[170, "_CPPv4NK4dnnl12lstm_forward14primitive_desc15src_iter_c_descEv"]], "dnnl::lstm_forward::primitive_desc::src_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl12lstm_forward14primitive_desc13src_iter_descEv"]], "dnnl::lstm_forward::primitive_desc::src_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl12lstm_forward14primitive_desc14src_layer_descEv"]], "dnnl::lstm_forward::primitive_desc::weights_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl12lstm_forward14primitive_desc17weights_iter_descEv"]], "dnnl::lstm_forward::primitive_desc::weights_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl12lstm_forward14primitive_desc18weights_layer_descEv"]], "dnnl::lstm_forward::primitive_desc::weights_peephole_desc (c++ function)": [[170, "_CPPv4NK4dnnl12lstm_forward14primitive_desc21weights_peephole_descEv"]], "dnnl::lstm_forward::primitive_desc::weights_projection_desc (c++ function)": [[170, "_CPPv4NK4dnnl12lstm_forward14primitive_desc23weights_projection_descEv"]], "dnnl::lstm_forward::primitive_desc::workspace_desc (c++ function)": [[170, "_CPPv4NK4dnnl12lstm_forward14primitive_desc14workspace_descEv"]], "dnnl::rnn_direction (c++ enum)": [[170, "_CPPv4N4dnnl13rnn_directionE"]], "dnnl::rnn_direction::bidirectional_concat (c++ enumerator)": [[170, "_CPPv4N4dnnl13rnn_direction20bidirectional_concatE"]], "dnnl::rnn_direction::bidirectional_sum (c++ enumerator)": [[170, "_CPPv4N4dnnl13rnn_direction17bidirectional_sumE"]], "dnnl::rnn_direction::undef (c++ enumerator)": [[170, "_CPPv4N4dnnl13rnn_direction5undefE"]], "dnnl::rnn_direction::unidirectional (c++ enumerator)": [[170, "_CPPv4N4dnnl13rnn_direction14unidirectionalE"]], "dnnl::rnn_direction::unidirectional_left2right (c++ enumerator)": [[170, "_CPPv4N4dnnl13rnn_direction25unidirectional_left2rightE"]], "dnnl::rnn_direction::unidirectional_right2left (c++ enumerator)": [[170, "_CPPv4N4dnnl13rnn_direction25unidirectional_right2leftE"]], "dnnl::rnn_flags (c++ enum)": [[170, "_CPPv4N4dnnl9rnn_flagsE"]], "dnnl::rnn_flags::undef (c++ enumerator)": [[170, "_CPPv4N4dnnl9rnn_flags5undefE"]], "dnnl::vanilla_rnn_backward (c++ struct)": [[170, "_CPPv4N4dnnl20vanilla_rnn_backwardE"]], "dnnl::vanilla_rnn_backward::primitive_desc (c++ struct)": [[170, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_descE"]], "dnnl::vanilla_rnn_backward::primitive_desc::bias_desc (c++ function)": [[170, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc9bias_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::diff_bias_desc (c++ function)": [[170, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc14diff_bias_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::diff_dst_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc18diff_dst_iter_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::diff_dst_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc19diff_dst_layer_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::diff_src_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc18diff_src_iter_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::diff_src_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc19diff_src_layer_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::diff_weights_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc22diff_weights_iter_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::diff_weights_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc23diff_weights_layer_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::dst_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc13dst_iter_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::dst_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc14dst_layer_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::get_activation_kind (c++ function)": [[170, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc19get_activation_kindEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::get_alpha (c++ function)": [[170, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc9get_alphaEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::get_beta (c++ function)": [[170, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc8get_betaEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::get_cell_kind (c++ function)": [[170, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc13get_cell_kindEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::get_direction (c++ function)": [[170, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc13get_directionEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::get_prop_kind (c++ function)": [[170, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc13get_prop_kindEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc (c++ function)": [[170, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb"], [170, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb"], [170, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::src_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc13src_iter_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::src_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc14src_layer_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::weights_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc17weights_iter_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::weights_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc18weights_layer_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::workspace_desc (c++ function)": [[170, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc14workspace_descEv"]], "dnnl::vanilla_rnn_backward::vanilla_rnn_backward (c++ function)": [[170, "_CPPv4N4dnnl20vanilla_rnn_backward20vanilla_rnn_backwardERK14primitive_desc"], [170, "_CPPv4N4dnnl20vanilla_rnn_backward20vanilla_rnn_backwardEv"]], "dnnl::vanilla_rnn_forward (c++ struct)": [[170, "_CPPv4N4dnnl19vanilla_rnn_forwardE"]], "dnnl::vanilla_rnn_forward::primitive_desc (c++ struct)": [[170, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_descE"]], "dnnl::vanilla_rnn_forward::primitive_desc::bias_desc (c++ function)": [[170, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc9bias_descEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::dst_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc13dst_iter_descEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::dst_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc14dst_layer_descEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::get_activation_kind (c++ function)": [[170, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc19get_activation_kindEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::get_alpha (c++ function)": [[170, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc9get_alphaEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::get_beta (c++ function)": [[170, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc8get_betaEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::get_cell_kind (c++ function)": [[170, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc13get_cell_kindEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::get_direction (c++ function)": [[170, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc13get_directionEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::get_prop_kind (c++ function)": [[170, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc13get_prop_kindEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc (c++ function)": [[170, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [170, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb"], [170, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::src_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc13src_iter_descEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::src_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc14src_layer_descEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::weights_iter_desc (c++ function)": [[170, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc17weights_iter_descEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::weights_layer_desc (c++ function)": [[170, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc18weights_layer_descEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::workspace_desc (c++ function)": [[170, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc14workspace_descEv"]], "dnnl::vanilla_rnn_forward::vanilla_rnn_forward (c++ function)": [[170, "_CPPv4N4dnnl19vanilla_rnn_forward19vanilla_rnn_forwardERK14primitive_desc"], [170, "_CPPv4N4dnnl19vanilla_rnn_forward19vanilla_rnn_forwardEv"]], "dnnl::shuffle_backward (c++ struct)": [[171, "_CPPv4N4dnnl16shuffle_backwardE"]], "dnnl::shuffle_backward::primitive_desc (c++ struct)": [[171, "_CPPv4N4dnnl16shuffle_backward14primitive_descE"]], "dnnl::shuffle_backward::primitive_desc::diff_dst_desc (c++ function)": [[171, "_CPPv4NK4dnnl16shuffle_backward14primitive_desc13diff_dst_descEv"]], "dnnl::shuffle_backward::primitive_desc::diff_src_desc (c++ function)": [[171, "_CPPv4NK4dnnl16shuffle_backward14primitive_desc13diff_src_descEv"]], "dnnl::shuffle_backward::primitive_desc::get_axis (c++ function)": [[171, "_CPPv4NK4dnnl16shuffle_backward14primitive_desc8get_axisEv"]], "dnnl::shuffle_backward::primitive_desc::get_group_size (c++ function)": [[171, "_CPPv4NK4dnnl16shuffle_backward14primitive_desc14get_group_sizeEv"]], "dnnl::shuffle_backward::primitive_desc::get_prop_kind (c++ function)": [[171, "_CPPv4NK4dnnl16shuffle_backward14primitive_desc13get_prop_kindEv"]], "dnnl::shuffle_backward::primitive_desc::primitive_desc (c++ function)": [[171, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descEiiRKN15shuffle_forward14primitive_descERK14primitive_attrb"], [171, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descEv"]], "dnnl::shuffle_backward::shuffle_backward (c++ function)": [[171, "_CPPv4N4dnnl16shuffle_backward16shuffle_backwardERK14primitive_desc"], [171, "_CPPv4N4dnnl16shuffle_backward16shuffle_backwardEv"]], "dnnl::shuffle_forward (c++ struct)": [[171, "_CPPv4N4dnnl15shuffle_forwardE"]], "dnnl::shuffle_forward::primitive_desc (c++ struct)": [[171, "_CPPv4N4dnnl15shuffle_forward14primitive_descE"]], "dnnl::shuffle_forward::primitive_desc::dst_desc (c++ function)": [[171, "_CPPv4NK4dnnl15shuffle_forward14primitive_desc8dst_descEv"]], "dnnl::shuffle_forward::primitive_desc::get_axis (c++ function)": [[171, "_CPPv4NK4dnnl15shuffle_forward14primitive_desc8get_axisEv"]], "dnnl::shuffle_forward::primitive_desc::get_group_size (c++ function)": [[171, "_CPPv4NK4dnnl15shuffle_forward14primitive_desc14get_group_sizeEv"]], "dnnl::shuffle_forward::primitive_desc::get_prop_kind (c++ function)": [[171, "_CPPv4NK4dnnl15shuffle_forward14primitive_desc13get_prop_kindEv"]], "dnnl::shuffle_forward::primitive_desc::primitive_desc (c++ function)": [[171, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEiiRK14primitive_attrb"], [171, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descEv"]], "dnnl::shuffle_forward::primitive_desc::src_desc (c++ function)": [[171, "_CPPv4NK4dnnl15shuffle_forward14primitive_desc8src_descEv"]], "dnnl::shuffle_forward::shuffle_forward (c++ function)": [[171, "_CPPv4N4dnnl15shuffle_forward15shuffle_forwardERK14primitive_desc"], [171, "_CPPv4N4dnnl15shuffle_forward15shuffle_forwardEv"]], "dnnl::softmax_backward (c++ struct)": [[172, "_CPPv4N4dnnl16softmax_backwardE"]], "dnnl::softmax_backward::primitive_desc (c++ struct)": [[172, "_CPPv4N4dnnl16softmax_backward14primitive_descE"]], "dnnl::softmax_backward::primitive_desc::diff_dst_desc (c++ function)": [[172, "_CPPv4NK4dnnl16softmax_backward14primitive_desc13diff_dst_descEv"]], "dnnl::softmax_backward::primitive_desc::diff_src_desc (c++ function)": [[172, "_CPPv4NK4dnnl16softmax_backward14primitive_desc13diff_src_descEv"]], "dnnl::softmax_backward::primitive_desc::dst_desc (c++ function)": [[172, "_CPPv4NK4dnnl16softmax_backward14primitive_desc8dst_descEv"]], "dnnl::softmax_backward::primitive_desc::get_algorithm (c++ function)": [[172, "_CPPv4NK4dnnl16softmax_backward14primitive_desc13get_algorithmEv"]], "dnnl::softmax_backward::primitive_desc::get_axis (c++ function)": [[172, "_CPPv4NK4dnnl16softmax_backward14primitive_desc8get_axisEv"]], "dnnl::softmax_backward::primitive_desc::get_prop_kind (c++ function)": [[172, "_CPPv4NK4dnnl16softmax_backward14primitive_desc13get_prop_kindEv"]], "dnnl::softmax_backward::primitive_desc::primitive_desc (c++ function)": [[172, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb"], [172, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descEv"]], "dnnl::softmax_backward::softmax_backward (c++ function)": [[172, "_CPPv4N4dnnl16softmax_backward16softmax_backwardERK14primitive_desc"], [172, "_CPPv4N4dnnl16softmax_backward16softmax_backwardEv"]], "dnnl::softmax_forward (c++ struct)": [[172, "_CPPv4N4dnnl15softmax_forwardE"]], "dnnl::softmax_forward::primitive_desc (c++ struct)": [[172, "_CPPv4N4dnnl15softmax_forward14primitive_descE"]], "dnnl::softmax_forward::primitive_desc::dst_desc (c++ function)": [[172, "_CPPv4NK4dnnl15softmax_forward14primitive_desc8dst_descEv"]], "dnnl::softmax_forward::primitive_desc::get_algorithm (c++ function)": [[172, "_CPPv4NK4dnnl15softmax_forward14primitive_desc13get_algorithmEv"]], "dnnl::softmax_forward::primitive_desc::get_axis (c++ function)": [[172, "_CPPv4NK4dnnl15softmax_forward14primitive_desc8get_axisEv"]], "dnnl::softmax_forward::primitive_desc::get_prop_kind (c++ function)": [[172, "_CPPv4NK4dnnl15softmax_forward14primitive_desc13get_prop_kindEv"]], "dnnl::softmax_forward::primitive_desc::primitive_desc (c++ function)": [[172, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEiRK14primitive_attrb"], [172, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descEv"]], "dnnl::softmax_forward::primitive_desc::src_desc (c++ function)": [[172, "_CPPv4NK4dnnl15softmax_forward14primitive_desc8src_descEv"]], "dnnl::softmax_forward::softmax_forward (c++ function)": [[172, "_CPPv4N4dnnl15softmax_forward15softmax_forwardERK14primitive_desc"], [172, "_CPPv4N4dnnl15softmax_forward15softmax_forwardEv"]], "dnnl::sum (c++ struct)": [[173, "_CPPv4N4dnnl3sumE"]], "dnnl::sum::primitive_desc (c++ struct)": [[173, "_CPPv4N4dnnl3sum14primitive_descE"]], "dnnl::sum::primitive_desc::dst_desc (c++ function)": [[173, "_CPPv4NK4dnnl3sum14primitive_desc8dst_descEv"]], "dnnl::sum::primitive_desc::primitive_desc (c++ function)": [[173, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKN6memory4descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr"], [173, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr"], [173, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descEv"]], "dnnl::sum::primitive_desc::src_desc (c++ function)": [[173, "_CPPv4NK4dnnl3sum14primitive_desc8src_descEi"]], "dnnl::sum::sum (c++ function)": [[173, "_CPPv4N4dnnl3sum3sumERK14primitive_desc"], [173, "_CPPv4N4dnnl3sum3sumEv"]], "begin (c++ function)": [[553, "_CPPv4NK5beginEv"]], "blocked_range (c++ function)": [[553, "_CPPv413blocked_range5Value5Value9size_type"], [553, "_CPPv413blocked_rangeR13blocked_range18proportional_split"], [553, "_CPPv413blocked_rangeR13blocked_range5split"]], "const_iterator (c++ type)": [[553, "_CPPv414const_iterator"]], "empty (c++ function)": [[553, "_CPPv4NK5emptyEv"]], "end (c++ function)": [[553, "_CPPv4NK3endEv"]], "grainsize (c++ function)": [[553, "_CPPv4NK9grainsizeEv"]], "is_divisible (c++ function)": [[553, "_CPPv4NK12is_divisibleEv"]], "size (c++ function)": [[553, "_CPPv4NK4sizeEv"]], "size_type (c++ type)": [[553, "_CPPv49size_type"]], "collaborative_once_flag (c++ function)": [[555, "_CPPv423collaborative_once_flagv"]], "add (c++ function)": [[556, "_CPPv43addRK4Item"], [556, "_CPPv43addRR4Item"]], "clear (c++ function)": [[562, "_CPPv45clearv"]], "filter (c++ function)": [[562, "_CPPv46filterv"], [562, "_CPPv4I0E6filter11filter_modeRK4Body"]], "make_filter (c++ function)": [[562, "_CPPv4I000E11make_filter6filterI1T1UEN6filter4modeERK4Func"]], "operator& (c++ function)": [[562, "_CPPv4I000Ean6filterI1T1UERK6filterI1T1VERK6filterI1V1UE"]], "stop (c++ function)": [[564, "_CPPv44stopv"]], "is_final_scan (c++ function)": [[568, "_CPPv413is_final_scanv"]], "operator bool (c++ function)": [[568, "_CPPv4cvbv"], [843, "_CPPv4NKcvbEv"]], "left (c++ function)": [[573, "_CPPv4NK4leftEv"]], "operator split (c++ function)": [[573, "_CPPv4NKcv5splitEv"]], "proportional_split (c++ function)": [[573, "_CPPv418proportional_splitNSt6size_tENSt6size_tE"]], "right (c++ function)": [[573, "_CPPv4NK5rightEv"]], "attach (c++ struct)": [[744, "_CPPv46attach"]], "initialize (c++ function)": [[744, "_CPPv410initializeN10task_arena6attachE"], [844, "_CPPv410initialize11constraintsj8priority"], [844, "_CPPv410initializeN6oneapi3tbb6attachE"], [844, "_CPPv410initializeij8priority"], [844, "_CPPv410initializev"]], "task_arena (c++ function)": [[744, "_CPPv410task_arenaN10task_arena6attachE"], [844, "_CPPv410task_arena11constraintsj8priority"], [844, "_CPPv410task_arenaN6oneapi3tbb6attachE"], [844, "_CPPv410task_arenaRK10task_arena"], [844, "_CPPv410task_arenaij8priority"]], "broadcast_node (c++ function)": [[747, "_CPPv414broadcast_nodeR5graph"], [747, "_CPPv414broadcast_nodeRK14broadcast_node"]], "try_get (c++ function)": [[747, "_CPPv47try_getR11output_type"], [748, "_CPPv47try_getR1T"], [760, "_CPPv47try_getR6Output"]], "try_put (c++ function)": [[747, "_CPPv47try_putRK10input_type"], [748, "_CPPv47try_putRK1T"]], "buffer_node (c++ function)": [[748, "_CPPv411buffer_nodeR5graph"], [748, "_CPPv411buffer_nodeRK11buffer_node"]], "composite_node (c++ function)": [[749, "_CPPv414composite_nodeR5graph"]], "input_ports (c++ function)": [[749, "_CPPv411input_portsv"]], "output_ports (c++ function)": [[749, "_CPPv412output_portsv"]], "set_external_ports (c++ function)": [[749, "_CPPv418set_external_portsRR16input_ports_typeRR17output_ports_type"]], "cancel (c++ function)": [[757, "_CPPv46cancelv"]], "exception_thrown (c++ function)": [[757, "_CPPv416exception_thrownv"]], "graph (c++ function)": [[757, "_CPPv45graphR18task_group_context"]], "is_cancelled (c++ function)": [[757, "_CPPv412is_cancelledv"]], "reset (c++ function)": [[757, "_CPPv45reset11reset_flags"], [842, "_CPPv45resetv"]], "wait_for_all (c++ function)": [[757, "_CPPv412wait_for_allv"]], "~graph (c++ function)": [[757, "_CPPv4D0v"]], "oneapi::tbb::flow::indexer_node::indexer_node (c++ function)": [[759, "_CPPv4N6oneapi3tbb4flow12indexer_node12indexer_nodeER5graph"], [759, "_CPPv4N6oneapi3tbb4flow12indexer_node12indexer_nodeERK12indexer_node"]], "oneapi::tbb::flow::indexer_node::input_ports (c++ function)": [[759, "_CPPv4N6oneapi3tbb4flow12indexer_node11input_portsEv"]], "oneapi::tbb::flow::indexer_node::try_get (c++ function)": [[759, "_CPPv4N6oneapi3tbb4flow12indexer_node7try_getER11output_type"]], "activate (c++ function)": [[760, "_CPPv48activatev"]], "input_node (c++ function)": [[760, "_CPPv410input_nodeRK10input_node"], [760, "_CPPv4I0E10input_nodeR5graph4Body"]], "oneapi::tbb::flow::limiter_node::decrementer (c++ function)": [[764, "_CPPv4N6oneapi3tbb4flow12limiter_node11decrementerEv"]], "oneapi::tbb::flow::limiter_node::limiter_node (c++ function)": [[764, "_CPPv4N6oneapi3tbb4flow12limiter_node12limiter_nodeER5graph6size_t"], [764, "_CPPv4N6oneapi3tbb4flow12limiter_node12limiter_nodeERK12limiter_node"]], "oneapi::tbb::flow::limiter_node::try_get (c++ function)": [[764, "_CPPv4N6oneapi3tbb4flow12limiter_node7try_getER1T"]], "oneapi::tbb::flow::limiter_node::try_put (c++ function)": [[764, "_CPPv4N6oneapi3tbb4flow12limiter_node7try_putERK1T"]], "oneapi::tbb::flow::overwrite_node::clear (c++ function)": [[770, "_CPPv4N6oneapi3tbb4flow14overwrite_node5clearEv"]], "oneapi::tbb::flow::overwrite_node::is_valid (c++ function)": [[770, "_CPPv4N6oneapi3tbb4flow14overwrite_node8is_validEv"]], "oneapi::tbb::flow::overwrite_node::overwrite_node (c++ function)": [[770, "_CPPv4N6oneapi3tbb4flow14overwrite_node14overwrite_nodeER5graph"], [770, "_CPPv4N6oneapi3tbb4flow14overwrite_node14overwrite_nodeERK14overwrite_node"]], "oneapi::tbb::flow::overwrite_node::try_get (c++ function)": [[770, "_CPPv4N6oneapi3tbb4flow14overwrite_node7try_getER1T"]], "oneapi::tbb::flow::overwrite_node::try_put (c++ function)": [[770, "_CPPv4N6oneapi3tbb4flow14overwrite_node7try_putERK1T"]], "oneapi::tbb::flow::overwrite_node::~overwrite_node (c++ function)": [[770, "_CPPv4N6oneapi3tbb4flow14overwrite_nodeD0Ev"]], "oneapi::tbb::flow::priority_node_queue::priority_queue_node (c++ function)": [[772, "_CPPv4N6oneapi3tbb4flow19priority_node_queue19priority_queue_nodeER5graph"], [772, "_CPPv4N6oneapi3tbb4flow19priority_node_queue19priority_queue_nodeERK19priority_queue_node"]], "oneapi::tbb::flow::priority_node_queue::try_get (c++ function)": [[772, "_CPPv4N6oneapi3tbb4flow19priority_node_queue7try_getER1T"]], "oneapi::tbb::flow::priority_node_queue::try_put (c++ function)": [[772, "_CPPv4N6oneapi3tbb4flow19priority_node_queue7try_putERK1T"]], "oneapi::tbb::flow::queue_node::queue_node (c++ function)": [[773, "_CPPv4N6oneapi3tbb4flow10queue_node10queue_nodeER5graph"], [773, "_CPPv4N6oneapi3tbb4flow10queue_node10queue_nodeERK10queue_node"]], "oneapi::tbb::flow::queue_node::try_get (c++ function)": [[773, "_CPPv4N6oneapi3tbb4flow10queue_node7try_getER1T"]], "oneapi::tbb::flow::queue_node::try_put (c++ function)": [[773, "_CPPv4N6oneapi3tbb4flow10queue_node7try_putERK1T"]], "oneapi::tbb::flow::sequencer_node::sequencer_node (c++ function)": [[778, "_CPPv4I0EN6oneapi3tbb4flow14sequencer_node14sequencer_nodeER5graphRK9Sequencer"], [778, "_CPPv4N6oneapi3tbb4flow14sequencer_node14sequencer_nodeERK14sequencer_node"]], "oneapi::tbb::flow::sequencer_node::try_get (c++ function)": [[778, "_CPPv4N6oneapi3tbb4flow14sequencer_node7try_getER1T"]], "oneapi::tbb::flow::sequencer_node::try_put (c++ function)": [[778, "_CPPv4N6oneapi3tbb4flow14sequencer_node7try_putERK1T"]], "oneapi::tbb::flow::split_node::output_ports (c++ function)": [[779, "_CPPv4N6oneapi3tbb4flow10split_node12output_portsEv"]], "oneapi::tbb::flow::split_node::split_node (c++ function)": [[779, "_CPPv4N6oneapi3tbb4flow10split_node10split_nodeER5graph"], [779, "_CPPv4N6oneapi3tbb4flow10split_node10split_nodeERK10split_node"]], "oneapi::tbb::flow::split_node::try_put (c++ function)": [[779, "_CPPv4N6oneapi3tbb4flow10split_node7try_putERK9TupleType"]], "oneapi::tbb::flow::split_node::~split_node (c++ function)": [[779, "_CPPv4N6oneapi3tbb4flow10split_nodeD0Ev"]], "cast_to (c++ function)": [[780, "_CPPv4I0ENK7cast_toERK1Vv"]], "is_a (c++ function)": [[780, "_CPPv4I0ENK4is_aEbv"]], "tag (c++ function)": [[780, "_CPPv4NK3tagEv"]], "tagged_msg (c++ function)": [[780, "_CPPv4I00E10tagged_msgRK1TRK1R"]], "oneapi::tbb::flow::write_once_mode::clear (c++ function)": [[781, "_CPPv4N6oneapi3tbb4flow15write_once_mode5clearEv"]], "oneapi::tbb::flow::write_once_mode::is_valid (c++ function)": [[781, "_CPPv4N6oneapi3tbb4flow15write_once_mode8is_validEv"]], "oneapi::tbb::flow::write_once_mode::try_get (c++ function)": [[781, "_CPPv4N6oneapi3tbb4flow15write_once_mode7try_getER1T"]], "oneapi::tbb::flow::write_once_mode::try_put (c++ function)": [[781, "_CPPv4N6oneapi3tbb4flow15write_once_mode7try_putERK1T"]], "oneapi::tbb::flow::write_once_mode::write_once_node (c++ function)": [[781, "_CPPv4N6oneapi3tbb4flow15write_once_mode15write_once_nodeER5graph"], [781, "_CPPv4N6oneapi3tbb4flow15write_once_mode15write_once_nodeERK15write_once_node"]], "oneapi::tbb::flow::write_once_mode::~write_once_node (c++ function)": [[781, "_CPPv4N6oneapi3tbb4flow15write_once_modeD0Ev"]], "core_types (c++ function)": [[783, "_CPPv410core_typesv"]], "default_concurrency (c++ function)": [[783, "_CPPv419default_concurrency12numa_node_id"], [783, "_CPPv419default_concurrencyN10task_arena11constraintsE"]], "numa_nodes (c++ function)": [[783, "_CPPv410numa_nodesv"]], "tbbmalloc_clean_all_buffers (c macro)": [[786, "c.TBBMALLOC_CLEAN_ALL_BUFFERS"]], "tbbmalloc_clean_thread_buffers (c macro)": [[786, "c.TBBMALLOC_CLEAN_THREAD_BUFFERS"]], "tbbmalloc_set_huge_size_threshold (c macro)": [[786, "c.TBBMALLOC_SET_HUGE_SIZE_THRESHOLD"]], "tbbmalloc_set_soft_heap_limit (c macro)": [[786, "c.TBBMALLOC_SET_SOFT_HEAP_LIMIT"]], "tbbmalloc_use_huge_pages (c macro)": [[786, "c.TBBMALLOC_USE_HUGE_PAGES"]], "scalable_allocation_command (c function)": [[786, "c.scalable_allocation_command"]], "scalable_allocation_mode (c++ function)": [[786, "_CPPv424scalable_allocation_modei8intptr_t"]], "scalable_msize (c++ function)": [[786, "_CPPv414scalable_msizePv"]], "allocate (c++ function)": [[787, "_CPPv48allocate9size_type"]], "deallocate (c++ function)": [[787, "_CPPv410deallocateP1T9size_type"]], "max_size (c++ function)": [[787, "_CPPv4NK8max_sizeEv"]], "operator!= (c++ function)": [[787, "_CPPv4I00EnebRK23cache_aligned_allocatorI1TERK23cache_aligned_allocatorI1UE"]], "operator== (c++ function)": [[787, "_CPPv4I00EeqbRK23cache_aligned_allocatorI1TERK23cache_aligned_allocatorI1UE"]], "cache_aligned_resource (c++ function)": [[788, "_CPPv422cache_aligned_resourcePNSt3pmr15memory_resourceE"], [788, "_CPPv422cache_aligned_resourcev"]], "do_allocate (c++ function)": [[788, "_CPPv411do_allocate6size_t6size_t"]], "do_deallocate (c++ function)": [[788, "_CPPv413do_deallocatePv6size_t6size_t"]], "do_is_equal (c++ function)": [[788, "_CPPv4NK11do_is_equalERKNSt3pmr15memory_resourceE"]], "upstream_resource (c++ function)": [[788, "_CPPv4NK17upstream_resourceEv"]], "oneapi::tbb::scalable_allocator::allocate (c++ function)": [[789, "_CPPv4N6oneapi3tbb18scalable_allocator8allocateE9size_type"]], "oneapi::tbb::scalable_allocator::deallocate (c++ function)": [[789, "_CPPv4N6oneapi3tbb18scalable_allocator10deallocateEP10value_type9size_type"]], "oneapi::tbb::scalable_allocator::operator!= (c++ function)": [[789, "_CPPv4I00EN6oneapi3tbb18scalable_allocatorneEbRK18scalable_allocatorI1TERK18scalable_allocatorI1UE"]], "oneapi::tbb::scalable_allocator::operator== (c++ function)": [[789, "_CPPv4I00EN6oneapi3tbb18scalable_allocatoreqEbRK18scalable_allocatorI1TERK18scalable_allocatorI1UE"]], "oneapi::tbb::tbb_allocator::allocate (c++ function)": [[791, "_CPPv4N6oneapi3tbb13tbb_allocator8allocateE9size_type"]], "oneapi::tbb::tbb_allocator::allocator_type (c++ function)": [[791, "_CPPv4N6oneapi3tbb13tbb_allocator14allocator_typeEv"]], "oneapi::tbb::tbb_allocator::deallocate (c++ function)": [[791, "_CPPv4N6oneapi3tbb13tbb_allocator10deallocateEP1T9size_type"]], "oneapi::tbb::tbb_allocator::operator!= (c++ function)": [[791, "_CPPv4I00EN6oneapi3tbb13tbb_allocatorneEbRK13tbb_allocatorI1TERK13tbb_allocatorI1UE"]], "oneapi::tbb::tbb_allocator::operator== (c++ function)": [[791, "_CPPv4I00EN6oneapi3tbb13tbb_allocatoreqEbRK13tbb_allocatorI1TERK13tbb_allocatorI1UE"]], "oneapi::tbb::mutex::lock (c++ function)": [[793, "_CPPv4N6oneapi3tbb5mutex4lockEv"]], "oneapi::tbb::mutex::mutex (c++ function)": [[793, "_CPPv4N6oneapi3tbb5mutex5mutexEv"]], "oneapi::tbb::mutex::scoped_lock (c++ class)": [[793, "_CPPv4N6oneapi3tbb5mutex11scoped_lockE"]], "oneapi::tbb::mutex::try_lock (c++ function)": [[793, "_CPPv4N6oneapi3tbb5mutex8try_lockEv"]], "oneapi::tbb::mutex::unlock (c++ function)": [[793, "_CPPv4N6oneapi3tbb5mutex6unlockEv"]], "oneapi::tbb::mutex::~mutex (c++ function)": [[793, "_CPPv4N6oneapi3tbb5mutexD0Ev"]], "lock (c++ function)": [[794, "_CPPv44lockv"]], "null_mutex (c++ function)": [[794, "_CPPv410null_mutexv"]], "scoped_lock (c++ class)": [[794, "_CPPv411scoped_lock"]], "try_lock (c++ function)": [[794, "_CPPv48try_lockv"]], "unlock (c++ function)": [[794, "_CPPv46unlockv"]], "~null_mutex (c++ function)": [[794, "_CPPv4D0v"]], "oneapi::tbb::null_rw_mutex::lock (c++ function)": [[795, "_CPPv4N6oneapi3tbb13null_rw_mutex4lockEv"]], "oneapi::tbb::null_rw_mutex::lock_shared (c++ function)": [[795, "_CPPv4N6oneapi3tbb13null_rw_mutex11lock_sharedEv"]], "oneapi::tbb::null_rw_mutex::null_rw_mutex (c++ function)": [[795, "_CPPv4N6oneapi3tbb13null_rw_mutex13null_rw_mutexEv"]], "oneapi::tbb::null_rw_mutex::scoped_lock (c++ class)": [[795, "_CPPv4N6oneapi3tbb13null_rw_mutex11scoped_lockE"]], "oneapi::tbb::null_rw_mutex::try_lock (c++ function)": [[795, "_CPPv4N6oneapi3tbb13null_rw_mutex8try_lockEv"]], "oneapi::tbb::null_rw_mutex::try_lock_shared (c++ function)": [[795, "_CPPv4N6oneapi3tbb13null_rw_mutex15try_lock_sharedEv"]], "oneapi::tbb::null_rw_mutex::unlock (c++ function)": [[795, "_CPPv4N6oneapi3tbb13null_rw_mutex6unlockEv"]], "oneapi::tbb::null_rw_mutex::unlock_shared (c++ function)": [[795, "_CPPv4N6oneapi3tbb13null_rw_mutex13unlock_sharedEv"]], "oneapi::tbb::null_rw_mutex::~null_rw_mutex (c++ function)": [[795, "_CPPv4N6oneapi3tbb13null_rw_mutexD0Ev"]], "oneapi::tbb::queueing_mutex::queuing_mutex (c++ function)": [[796, "_CPPv4N6oneapi3tbb14queueing_mutex13queuing_mutexEv"]], "oneapi::tbb::queueing_mutex::scoped_lock (c++ class)": [[796, "_CPPv4N6oneapi3tbb14queueing_mutex11scoped_lockE"]], "oneapi::tbb::queueing_mutex::~queuing_mutex (c++ function)": [[796, "_CPPv4N6oneapi3tbb14queueing_mutexD0Ev"]], "oneapi::tbb::queueing_rw_mutex::queuing_rw_mutex (c++ function)": [[797, "_CPPv4N6oneapi3tbb17queueing_rw_mutex16queuing_rw_mutexEv"]], "oneapi::tbb::queueing_rw_mutex::scoped_lock (c++ class)": [[797, "_CPPv4N6oneapi3tbb17queueing_rw_mutex11scoped_lockE"]], "oneapi::tbb::queueing_rw_mutex::~queuing_rw_mutex (c++ function)": [[797, "_CPPv4N6oneapi3tbb17queueing_rw_mutexD0Ev"]], "oneapi::tbb::rw_mutex::lock (c++ function)": [[798, "_CPPv4N6oneapi3tbb8rw_mutex4lockEv"]], "oneapi::tbb::rw_mutex::lock_shared (c++ function)": [[798, "_CPPv4N6oneapi3tbb8rw_mutex11lock_sharedEv"]], "oneapi::tbb::rw_mutex::rw_mutex (c++ function)": [[798, "_CPPv4N6oneapi3tbb8rw_mutex8rw_mutexEv"]], "oneapi::tbb::rw_mutex::scoped_lock (c++ class)": [[798, "_CPPv4N6oneapi3tbb8rw_mutex11scoped_lockE"]], "oneapi::tbb::rw_mutex::try_lock (c++ function)": [[798, "_CPPv4N6oneapi3tbb8rw_mutex8try_lockEv"]], "oneapi::tbb::rw_mutex::try_lock_shared (c++ function)": [[798, "_CPPv4N6oneapi3tbb8rw_mutex15try_lock_sharedEv"]], "oneapi::tbb::rw_mutex::unlock (c++ function)": [[798, "_CPPv4N6oneapi3tbb8rw_mutex6unlockEv"]], "oneapi::tbb::rw_mutex::unlock_shared (c++ function)": [[798, "_CPPv4N6oneapi3tbb8rw_mutex13unlock_sharedEv"]], "oneapi::tbb::rw_mutex::~rw_mutex (c++ function)": [[798, "_CPPv4N6oneapi3tbb8rw_mutexD0Ev"]], "oneapi::tbb::speculative_spin_mutex::scoped_lock (c++ class)": [[799, "_CPPv4N6oneapi3tbb22speculative_spin_mutex11scoped_lockE"]], "oneapi::tbb::speculative_spin_mutex::speculative_spin_mutex (c++ function)": [[799, "_CPPv4N6oneapi3tbb22speculative_spin_mutex22speculative_spin_mutexEv"]], "oneapi::tbb::speculative_spin_mutex::~speculative_spin_mutex (c++ function)": [[799, "_CPPv4N6oneapi3tbb22speculative_spin_mutexD0Ev"]], "oneapi::tbb::speculative_spin_rw_mutex::scoped_lock (c++ class)": [[800, "_CPPv4N6oneapi3tbb25speculative_spin_rw_mutex11scoped_lockE"]], "oneapi::tbb::speculative_spin_rw_mutex::speculative_spin_rw_mutex (c++ function)": [[800, "_CPPv4N6oneapi3tbb25speculative_spin_rw_mutex25speculative_spin_rw_mutexEv"]], "oneapi::tbb::speculative_spin_rw_mutex::~speculative_spin_rw_mutex (c++ function)": [[800, "_CPPv4N6oneapi3tbb25speculative_spin_rw_mutexD0Ev"]], "oneapi::tbb::spin_mutex::lock (c++ function)": [[801, "_CPPv4N6oneapi3tbb10spin_mutex4lockEv"]], "oneapi::tbb::spin_mutex::scoped_lock (c++ class)": [[801, "_CPPv4N6oneapi3tbb10spin_mutex11scoped_lockE"]], "oneapi::tbb::spin_mutex::spin_mutex (c++ function)": [[801, "_CPPv4N6oneapi3tbb10spin_mutex10spin_mutexEv"]], "oneapi::tbb::spin_mutex::try_lock (c++ function)": [[801, "_CPPv4N6oneapi3tbb10spin_mutex8try_lockEv"]], "oneapi::tbb::spin_mutex::unlock (c++ function)": [[801, "_CPPv4N6oneapi3tbb10spin_mutex6unlockEv"]], "oneapi::tbb::spin_mutex::~spin_mutex (c++ function)": [[801, "_CPPv4N6oneapi3tbb10spin_mutexD0Ev"]], "oneapi::tbb::spin_rw_mutex::lock (c++ function)": [[802, "_CPPv4N6oneapi3tbb13spin_rw_mutex4lockEv"]], "oneapi::tbb::spin_rw_mutex::lock_shared (c++ function)": [[802, "_CPPv4N6oneapi3tbb13spin_rw_mutex11lock_sharedEv"]], "oneapi::tbb::spin_rw_mutex::scoped_lock (c++ class)": [[802, "_CPPv4N6oneapi3tbb13spin_rw_mutex11scoped_lockE"]], "oneapi::tbb::spin_rw_mutex::spin_rw_mutex (c++ function)": [[802, "_CPPv4N6oneapi3tbb13spin_rw_mutex13spin_rw_mutexEv"]], "oneapi::tbb::spin_rw_mutex::try_lock (c++ function)": [[802, "_CPPv4N6oneapi3tbb13spin_rw_mutex8try_lockEv"]], "oneapi::tbb::spin_rw_mutex::try_lock_shared (c++ function)": [[802, "_CPPv4N6oneapi3tbb13spin_rw_mutex15try_lock_sharedEv"]], "oneapi::tbb::spin_rw_mutex::unlock (c++ function)": [[802, "_CPPv4N6oneapi3tbb13spin_rw_mutex6unlockEv"]], "oneapi::tbb::spin_rw_mutex::unlock_shared (c++ function)": [[802, "_CPPv4N6oneapi3tbb13spin_rw_mutex13unlock_sharedEv"]], "oneapi::tbb::spin_rw_mutex::~spin_rw_mutex (c++ function)": [[802, "_CPPv4N6oneapi3tbb13spin_rw_mutexD0Ev"]], "operator< (c++ function)": [[803, "_CPPv4ltRK1TRK1T"], [804, "_CPPv4ltRK5ValueRK5Value"], [810, "_CPPv4ltRK5IndexRK5Index"]], "swap (c++ function)": [[803, "_CPPv44swapR1TR1T"]], "value::value (c++ function)": [[804, "_CPPv4N5Value5ValueERK5Value"]], "value::~value (c++ function)": [[804, "_CPPv4N5ValueD0Ev"]], "operator+ (c++ function)": [[804, "_CPPv4plRK5Value1D"], [810, "_CPPv4plRK5Index1D"], [810, "_CPPv4plRK5IndexRK5Index"]], "operator- (c++ function)": [[804, "_CPPv4miRK5ValueRK5Value"], [810, "_CPPv4miRK5IndexRK5Index"]], "operator= (c++ function)": [[804, "_CPPv4aSRK5Value"], [810, "_CPPv4aSRK5Index"], [843, "_CPPv4aSRR21task_scheduler_handle"]], "std::begin (c++ function)": [[805, "_CPPv4NSt5beginE1c"]], "std::end (c++ function)": [[805, "_CPPv4NSt3endE1c"]], "firstfilterbody::body::operator() (c++ function)": [[806, "_CPPv4NK15FirstFilterBody4BodyclERN6oneapi3tbb12flow_controlE"]], "lastfilterbody::body::operator() (c++ function)": [[806, "_CPPv4NK14LastFilterBody4BodyclE9InputType"]], "middlefilterbody::body::operator() (c++ function)": [[806, "_CPPv4NK16MiddleFilterBody4BodyclE9InputType"]], "singlefilterbody::body::operator() (c++ function)": [[806, "_CPPv4NK16SingleFilterBody4BodyclERN6oneapi3tbb12flow_controlE"]], "body::body (c++ function)": [[807, "_CPPv4N4Body4BodyERK4Body"], [814, "_CPPv4N4Body4BodyER4Body5split"]], "body::operator() (c++ function)": [[807, "_CPPv4NK4BodyclER5Range"], [808, "_CPPv4NK4BodyclE8ItemType"], [808, "_CPPv4NK4BodyclE8ItemTypeRN6oneapi3tbb6feederI8ItemTypeEE"], [814, "_CPPv4N4BodyclERK5Range12pre_scan_tag"], [814, "_CPPv4N4BodyclERK5Range14final_scan_tag"]], "body::~body (c++ function)": [[807, "_CPPv4N4BodyD0Ev"]], "f::operator() (c++ function)": [[809, "_CPPv4NK1FclE5Index"]], "index::index (c++ function)": [[810, "_CPPv4N5Index5IndexERK5Index"], [810, "_CPPv4N5Index5IndexEi"]], "index::~index (c++ function)": [[810, "_CPPv4N5IndexD0Ev"]], "operator* (c++ function)": [[810, "_CPPv4mlRK5IndexRK5Index"]], "operator++ (c++ function)": [[810, "_CPPv4ppv"]], "operator/ (c++ function)": [[810, "_CPPv4dvRK5IndexRK5Index"]], "operator<= (c++ function)": [[810, "_CPPv4leRK5IndexRK5Index"]], "parallelreducebody::body::body (c++ function)": [[811, "_CPPv4N18ParallelReduceBody4Body4BodyER4Body5split"]], "parallelreducebody::body::join (c++ function)": [[811, "_CPPv4N18ParallelReduceBody4Body4joinER4Body"]], "parallelreducebody::body::operator() (c++ function)": [[811, "_CPPv4N18ParallelReduceBody4BodyclERK5Range"]], "parallelreducebody::body::~body (c++ function)": [[811, "_CPPv4N18ParallelReduceBody4BodyD0Ev"]], "func::operator() (c++ function)": [[812, "_CPPv4NK4FuncclERK5RangeRK5Value"], [826, "_CPPv4N4FuncclERK5Input"]], "reduction::operator() (c++ function)": [[813, "_CPPv4NK9ReductionclERK5ValueRK5Value"]], "body::assign (c++ function)": [[814, "_CPPv4N4Body6assignER4Body"]], "body::reverse_join (c++ function)": [[814, "_CPPv4N4Body12reverse_joinER4Body"]], "combine::operator() (c++ function)": [[815, "_CPPv4NK7CombineclERK5ValueRK5Value"]], "scan::operator() (c++ function)": [[816, "_CPPv4NK4ScanclERK5RangeRK5Valueb"]], "r::r (c++ function)": [[817, "_CPPv4N1R1RER1R18proportional_split"], [817, "_CPPv4N1R1RER1R5split"], [817, "_CPPv4N1R1RERK1R"]], "r::empty (c++ function)": [[817, "_CPPv4NK1R5emptyEv"]], "r::is_divisible (c++ function)": [[817, "_CPPv4NK1R12is_divisibleEv"]], "r::~r (c++ function)": [[817, "_CPPv4N1RD0Ev"]], "x::x (c++ function)": [[818, "_CPPv4N1X1XER1X5split"]], "cr::begin (c++ function)": [[819, "_CPPv4N2CR5beginEv"]], "cr::const_reference (c++ type)": [[819, "_CPPv4N2CR15const_referenceE"]], "cr::difference_type (c++ type)": [[819, "_CPPv4N2CR15difference_typeE"]], "cr::end (c++ function)": [[819, "_CPPv4N2CR3endEv"]], "cr::grainsize (c++ function)": [[819, "_CPPv4NK2CR9grainsizeEv"]], "cr::iterator (c++ type)": [[819, "_CPPv4N2CR8iteratorE"]], "cr::reference (c++ type)": [[819, "_CPPv4N2CR9referenceE"]], "cr::size_type (c++ type)": [[819, "_CPPv4N2CR9size_typeE"]], "cr::value_type (c++ type)": [[819, "_CPPv4N2CR10value_typeE"]], "h::h (c++ function)": [[820, "_CPPv4N1H1HERK1H"]], "h::equal (c++ function)": [[820, "_CPPv4NK1H5equalERK7KeyTypeRK7KeyType"]], "h::hash (c++ function)": [[820, "_CPPv4NK1H4hashERK7KeyType"]], "h::~h (c++ function)": [[820, "_CPPv4N1HD0Ev"]], "asyncnodebody::body::body (c++ function)": [[821, "_CPPv4N13AsyncNodeBody4Body4BodyERK4Body"]], "asyncnodebody::body::operator() (c++ function)": [[821, "_CPPv4N13AsyncNodeBody4BodyclERK5InputR11GatewayType"]], "asyncnodebody::body::~body (c++ function)": [[821, "_CPPv4N13AsyncNodeBody4BodyD0Ev"]], "continuenodebody::body::body (c++ function)": [[822, "_CPPv4N16ContinueNodeBody4Body4BodyERK4Body"]], "continuenodebody::body::operator() (c++ function)": [[822, "_CPPv4N16ContinueNodeBody4BodyclERK12continue_msg"]], "continuenodebody::body::~body (c++ function)": [[822, "_CPPv4N16ContinueNodeBody4BodyD0Ev"]], "functionnodebody::body::body (c++ function)": [[823, "_CPPv4N16FunctionNodeBody4Body4BodyERK4Body"]], "functionnodebody::body::operator() (c++ function)": [[823, "_CPPv4N16FunctionNodeBody4BodyclERK5Input"]], "functionnodebody::body::~body (c++ function)": [[823, "_CPPv4N16FunctionNodeBody4BodyD0Ev"]], "t::release_wait (c++ function)": [[824, "_CPPv4N1T12release_waitEv"]], "t::reserve_wait (c++ function)": [[824, "_CPPv4N1T12reserve_waitEv"]], "t::try_put (c++ function)": [[824, "_CPPv4N1T7try_putERK6Output"]], "inputnodebody::body::body (c++ function)": [[825, "_CPPv4N13InputNodeBody4Body4BodyERK4Body"]], "inputnodebody::body::operator() (c++ function)": [[825, "_CPPv4N13InputNodeBody4BodyclERN6oneapi3tbb12flow_controlE"]], "inputnodebody::body::~body (c++ function)": [[825, "_CPPv4N13InputNodeBody4BodyD0Ev"]], "func::func (c++ function)": [[826, "_CPPv4N4Func4FuncERK4Func"]], "func::~func (c++ function)": [[826, "_CPPv4N4FuncD0Ev"]], "multifunctionnodebody::body::body (c++ function)": [[827, "_CPPv4N21MultifunctionNodeBody4Body4BodyERK4Body"]], "multifunctionnodebody::body::operator() (c++ function)": [[827, "_CPPv4N21MultifunctionNodeBody4BodyclERK5InputR15OutputPortsType"]], "multifunctionnodebody::body::~body (c++ function)": [[827, "_CPPv4N21MultifunctionNodeBody4BodyD0Ev"]], "s::s (c++ function)": [[828, "_CPPv4N1S1SERK1S"]], "s::operator() (c++ function)": [[828, "_CPPv4N1SclERK1T"]], "s::~s (c++ function)": [[828, "_CPPv4N1SD0Ev"]], "mutex_func::m::is_fair_mutex (c++ member)": [[829, "_CPPv4N10mutex_func1M13is_fair_mutexE"]], "mutex_func::m::is_recursive_mutex (c++ member)": [[829, "_CPPv4N10mutex_func1M18is_recursive_mutexE"]], "mutex_func::m::is_rw_mutex (c++ member)": [[829, "_CPPv4N10mutex_func1M11is_rw_mutexE"]], "mutex_func::m::scoped_lock (c++ function)": [[829, "_CPPv4N10mutex_func1M11scoped_lockER1M"], [829, "_CPPv4N10mutex_func1M11scoped_lockEv"]], "mutex_func::m::scoped_lock::acquire (c++ function)": [[829, "_CPPv4N10mutex_func1M11scoped_lock7acquireER1M"]], "mutex_func::m::scoped_lock::release (c++ function)": [[829, "_CPPv4N10mutex_func1M11scoped_lock7releaseEv"]], "mutex_func::m::scoped_lock::try_acquire (c++ function)": [[829, "_CPPv4N10mutex_func1M11scoped_lock11try_acquireER1M"]], "mutex_func::m::~scoped_lock (c++ function)": [[829, "_CPPv4N10mutex_func1MD0Ev"]], "mutex_type::m::scoped_lock (c++ type)": [[829, "_CPPv4N10mutex_type1M11scoped_lockE"]], "rwm::scoped_lock (c++ type)": [[830, "_CPPv4N3RWM11scoped_lockE"]], "rwm::scoped_lock::m::is_fair_mutex (c++ member)": [[830, "_CPPv4N3RWM11scoped_lock1M13is_fair_mutexE"]], "rwm::scoped_lock::m::is_recursive_mutex (c++ member)": [[830, "_CPPv4N3RWM11scoped_lock1M18is_recursive_mutexE"]], "rwm::scoped_lock::m::is_rw_mutex (c++ member)": [[830, "_CPPv4N3RWM11scoped_lock1M11is_rw_mutexE"]], "rwm::scoped_lock::rwm::scoped_lock (c++ function)": [[830, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lockER3RWMb"], [830, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lockEv"]], "rwm::scoped_lock::rwm::scoped_lock::acquire (c++ function)": [[830, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock7acquireER3RWMb"]], "rwm::scoped_lock::rwm::scoped_lock::downgrade_to_reader (c++ function)": [[830, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock19downgrade_to_readerEv"]], "rwm::scoped_lock::rwm::scoped_lock::release (c++ function)": [[830, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock7releaseEv"]], "rwm::scoped_lock::rwm::scoped_lock::try_acquire (c++ function)": [[830, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock11try_acquireER3RWMb"]], "rwm::scoped_lock::rwm::scoped_lock::upgrade_to_writer (c++ function)": [[830, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock17upgrade_to_writerEv"]], "rwm::scoped_lock::rwm::~scoped_lock (c++ function)": [[830, "_CPPv4N3RWM11scoped_lock3RWMD0Ev"]], "suspendfunc::func::func (c++ function)": [[831, "_CPPv4N11SuspendFunc4Func4FuncERK4Func"]], "suspendfunc::func::operator() (c++ function)": [[831, "_CPPv4N11SuspendFunc4FuncclEN6oneapi3tbb4task13suspend_pointE"]], "active_value (c++ function)": [[840, "_CPPv412active_value9parameter"]], "global_control (c++ function)": [[840, "_CPPv414global_control9parameter6size_t"]], "parameter::max_allowed_parallelism (c++ enum)": [[840, "_CPPv4N9parameter23max_allowed_parallelismE"]], "parameter::terminate_on_exception (c++ enum)": [[840, "_CPPv4N9parameter22terminate_on_exceptionE"]], "parameter::thread_stack_size (c++ enum)": [[840, "_CPPv4N9parameter17thread_stack_sizeE"]], "~global_control (c++ function)": [[840, "_CPPv4D0v"]], "cancel_group_execution (c++ function)": [[842, "_CPPv422cancel_group_executionv"]], "capture_fp_settings (c++ function)": [[842, "_CPPv419capture_fp_settingsv"]], "is_group_execution_cancelled (c++ function)": [[842, "_CPPv4NK28is_group_execution_cancelledEv"]], "kind_t::bound (c++ enum)": [[842, "_CPPv4N6kind_t5boundE"]], "kind_t::isolated (c++ enum)": [[842, "_CPPv4N6kind_t8isolatedE"]], "task_group_context (c++ function)": [[842, "_CPPv418task_group_context6kind_t9uintptr_t"]], "traits (c++ function)": [[842, "_CPPv4NK6traitsEv"]], "traits_type::fp_settings (c++ enum)": [[842, "_CPPv4N11traits_type11fp_settingsE"]], "~task_group_context (c++ function)": [[842, "_CPPv4D0v"]], "finalize (c++ function)": [[843, "_CPPv48finalizeR21task_scheduler_handle"], [843, "_CPPv48finalizeR21task_scheduler_handleRKNSt9nothrow_tE"]], "release (c++ function)": [[843, "_CPPv47releasev"]], "task_scheduler_handle (c++ function)": [[843, "_CPPv421task_scheduler_handleN6oneapi3tbb6attachE"], [843, "_CPPv421task_scheduler_handleRR21task_scheduler_handle"], [843, "_CPPv421task_scheduler_handlev"]], "~task_scheduler_handle (c++ function)": [[843, "_CPPv4D0v"]], "automatic (c++ member)": [[844, "_CPPv49automatic"]], "constraints (c++ struct)": [[844, "_CPPv411constraints"]], "constraints::constraints (c++ function)": [[844, "_CPPv4N11constraints11constraintsE12numa_node_idi"]], "constraints::core_type (c++ member)": [[844, "_CPPv4N11constraints9core_typeE"]], "constraints::max_concurrency (c++ member)": [[844, "_CPPv4N11constraints15max_concurrencyE"]], "constraints::max_threads_per_core (c++ member)": [[844, "_CPPv4N11constraints20max_threads_per_coreE"]], "constraints::numa_id (c++ member)": [[844, "_CPPv4N11constraints7numa_idE"]], "constraints::set_core_type (c++ function)": [[844, "_CPPv4N11constraints13set_core_typeE12core_type_id"]], "constraints::set_max_concurrency (c++ function)": [[844, "_CPPv4N11constraints19set_max_concurrencyEi"]], "constraints::set_max_threads_per_core (c++ function)": [[844, "_CPPv4N11constraints24set_max_threads_per_coreEi"]], "constraints::set_numa_id (c++ function)": [[844, "_CPPv4N11constraints11set_numa_idE12numa_node_id"]], "enqueue (c++ function)": [[844, "_CPPv47enqueueRR11task_handle"], [844, "_CPPv4I_1FE7enqueuevRR1F"]], "execute (c++ function)": [[844, "_CPPv4I_1FE7executeDTcl1fEERR1F"]], "is_active (c++ function)": [[844, "_CPPv4NK9is_activeEv"]], "max_concurrency (c++ function)": [[844, "_CPPv4NK15max_concurrencyEv"]], "not_initialized (c++ member)": [[844, "_CPPv415not_initialized"]], "priority::high (c++ enum)": [[844, "_CPPv4N8priority4highE"]], "priority::low (c++ enum)": [[844, "_CPPv4N8priority3lowE"]], "priority::normal (c++ enum)": [[844, "_CPPv4N8priority6normalE"]], "terminate (c++ function)": [[844, "_CPPv49terminatev"]], "~task_arena (c++ function)": [[844, "_CPPv4D0v"]], "is_observing (c++ function)": [[845, "_CPPv4NK12is_observingEv"]], "observe (c++ function)": [[845, "_CPPv47observeb"]], "on_scheduler_entry (c++ function)": [[845, "_CPPv418on_scheduler_entryb"]], "on_scheduler_exit (c++ function)": [[845, "_CPPv417on_scheduler_exitb"]], "task_scheduler_observer (c++ function)": [[845, "_CPPv423task_scheduler_observerR10task_arena"], [845, "_CPPv423task_scheduler_observerv"]], "~task_scheduler_observer (c++ function)": [[845, "_CPPv4D0v"]], "tbb::this_task_arena::current_thread_index (c++ function)": [[846, "_CPPv4N3tbb15this_task_arena20current_thread_indexEv"]], "tbb::this_task_arena::enqueue (c++ function)": [[846, "_CPPv4I0EN3tbb15this_task_arena7enqueueEvRR1F"], [846, "_CPPv4N3tbb15this_task_arena7enqueueERR11task_handle"]], "tbb::this_task_arena::isolate (c++ function)": [[846, "_CPPv4I_1FEN3tbb15this_task_arena7isolateEDTcl1fEERR1F"]], "tbb::this_task_arena::max_concurrency (c++ function)": [[846, "_CPPv4N3tbb15this_task_arena15max_concurrencyEv"]], "oneapi::tbb::task_group::cancel (c++ function)": [[847, "_CPPv4N6oneapi3tbb10task_group6cancelEv"]], "oneapi::tbb::task_group::defer (c++ function)": [[847, "_CPPv4I0EN6oneapi3tbb10task_group5deferE11task_handleRR1F"]], "oneapi::tbb::task_group::is_current_task_group_canceling (c++ function)": [[847, "_CPPv4N6oneapi3tbb10task_group31is_current_task_group_cancelingEv"]], "oneapi::tbb::task_group::run (c++ function)": [[847, "_CPPv4I0EN6oneapi3tbb10task_group3runEvRR4Func"], [847, "_CPPv4N6oneapi3tbb10task_group3runERR11task_handle"]], "oneapi::tbb::task_group::run_and_wait (c++ function)": [[847, "_CPPv4I0EN6oneapi3tbb10task_group12run_and_waitE17task_group_statusRK4Func"]], "oneapi::tbb::task_group::task_group (c++ function)": [[847, "_CPPv4N6oneapi3tbb10task_group10task_groupER18task_group_context"], [847, "_CPPv4N6oneapi3tbb10task_group10task_groupEv"]], "oneapi::tbb::task_group::wait (c++ function)": [[847, "_CPPv4N6oneapi3tbb10task_group4waitEv"]], "oneapi::tbb::task_group::~task_group (c++ function)": [[847, "_CPPv4N6oneapi3tbb10task_groupD0Ev"]], "canceled (c macro)": [[848, "c.canceled"]], "complete (c macro)": [[848, "c.complete"]], "not_complete (c macro)": [[848, "c.not_complete"]], "tbb::task_handle::operator bool (c++ function)": [[849, "_CPPv4NK3tbb11task_handlecvbEv"]], "tbb::task_handle::operator= (c++ function)": [[849, "_CPPv4N3tbb11task_handleaSERR11task_handle"]], "tbb::task_handle::task_handle (c++ function)": [[849, "_CPPv4N3tbb11task_handle11task_handleERR11task_handle"], [849, "_CPPv4N3tbb11task_handle11task_handleEv"]], "tbb::task_handle::~task_handle (c++ function)": [[849, "_CPPv4N3tbb11task_handleD0Ev"]], "oneapi::tbb::combinable::clear (c++ function)": [[851, "_CPPv4N6oneapi3tbb10combinable5clearEv"]], "oneapi::tbb::combinable::combinable (c++ function)": [[851, "_CPPv4I0EN6oneapi3tbb10combinable10combinableE5FInit"], [851, "_CPPv4N6oneapi3tbb10combinable10combinableERK10combinable"], [851, "_CPPv4N6oneapi3tbb10combinable10combinableERR10combinable"], [851, "_CPPv4N6oneapi3tbb10combinable10combinableEv"]], "oneapi::tbb::combinable::combine (c++ function)": [[851, "_CPPv4I0EN6oneapi3tbb10combinable7combineE1T10BinaryFunc"]], "oneapi::tbb::combinable::combine_each (c++ function)": [[851, "_CPPv4I0EN6oneapi3tbb10combinable12combine_eachEv9UnaryFunc"]], "oneapi::tbb::combinable::local (c++ function)": [[851, "_CPPv4N6oneapi3tbb10combinable5localERb"], [851, "_CPPv4N6oneapi3tbb10combinable5localEv"]], "oneapi::tbb::combinable::operator= (c++ function)": [[851, "_CPPv4N6oneapi3tbb10combinableaSERK10combinable"], [851, "_CPPv4N6oneapi3tbb10combinableaSERR10combinable"]], "oneapi::tbb::combinable::~combinable (c++ function)": [[851, "_CPPv4N6oneapi3tbb10combinableD0Ev"]], "ets_key_usage_type::ets_key_per_instance (c++ enum)": [[852, "_CPPv4N18ets_key_usage_type20ets_key_per_instanceE"]], "ets_key_usage_type::ets_no_key (c++ enum)": [[852, "_CPPv4N18ets_key_usage_type10ets_no_keyE"]], "ets_key_usage_type::ets_suspend_aware (c++ enum)": [[852, "_CPPv4N18ets_key_usage_type17ets_suspend_awareE"]], "oneapi::tbb::enumerable_thread_specific::combine (c++ function)": [[853, "_CPPv4I0EN6oneapi3tbb26enumerable_thread_specific7combineE1T10BinaryFunc"]], "oneapi::tbb::enumerable_thread_specific::combine_each (c++ function)": [[853, "_CPPv4I0EN6oneapi3tbb26enumerable_thread_specific12combine_eachEv9UnaryFunc"]], "oneapi::tbb::enumerable_thread_specific::begin (c++ function)": [[855, "_CPPv4N6oneapi3tbb26enumerable_thread_specific5beginEv"], [855, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific5beginEv"]], "oneapi::tbb::enumerable_thread_specific::end (c++ function)": [[855, "_CPPv4N6oneapi3tbb26enumerable_thread_specific3endEv"], [855, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific3endEv"]], "oneapi::tbb::enumerable_thread_specific::range (c++ function)": [[855, "_CPPv4N6oneapi3tbb26enumerable_thread_specific5rangeE6size_t"], [855, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific5rangeE6size_t"]], "oneapi::tbb::enumerable_thread_specific::local (c++ function)": [[856, "_CPPv4N6oneapi3tbb26enumerable_thread_specific5localERb"], [856, "_CPPv4N6oneapi3tbb26enumerable_thread_specific5localEv"]], "oneapi::tbb::enumerable_thread_specific::empty (c++ function)": [[857, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific5emptyEv"]], "oneapi::tbb::enumerable_thread_specific::size (c++ function)": [[857, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific4sizeEv"]], "oneapi::tbb::flatten2d::begin (c++ function)": [[859, "_CPPv4N6oneapi3tbb9flatten2d5beginEv"], [859, "_CPPv4NK6oneapi3tbb9flatten2d5beginEv"]], "oneapi::tbb::flatten2d::end (c++ function)": [[859, "_CPPv4N6oneapi3tbb9flatten2d3endEv"], [859, "_CPPv4NK6oneapi3tbb9flatten2d3endEv"]], "oneapi::tbb::flatten2d::flatten2d (c++ function)": [[859, "_CPPv4I0EN6oneapi3tbb9flatten2d9flatten2dE11flattened2dI9ContainerERK9ContainerKN9Container14const_iteratorEKN9Container14const_iteratorE"]], "oneapi::tbb::flatten2d::flattened2d (c++ function)": [[859, "_CPPv4I0EN6oneapi3tbb9flatten2d11flattened2dERK9Container"], [859, "_CPPv4N6oneapi3tbb9flatten2d11flattened2dERK9Container"], [859, "_CPPv4N6oneapi3tbb9flatten2d11flattened2dERK9ContainerN9Container14const_iteratorEN9Container14const_iteratorE"]], "oneapi::tbb::flatten2d::size (c++ function)": [[859, "_CPPv4NK6oneapi3tbb9flatten2d4sizeEv"]]}})